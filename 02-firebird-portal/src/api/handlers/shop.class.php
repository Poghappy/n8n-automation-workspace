<?php if (!defined('HUONIAOINC')) exit('Request Error!');

/**
 * 商城模块API接口
 *
 * @version        $Id: shop.class.php 2014-3-23 上午09:25:10 $
 * @package        HuoNiao.Handlers
 * @copyright      Copyright (c) 2013 - 2018, HuoNiao, Inc.
 * @link           https://www.ihuoniao.cn/
 */
class shop
{
    private $param;  //参数

    /**
     * 构造函数
     *
     * @param string $action 动作名
     */
    public function __construct($param = array())
    {
        $this->param = $param;
    }

    /**
     * 商城基本参数
     * @return array
     */
    public function config()
    {

        require(HUONIAOINC . "/config/shop.inc.php");

        global $cfg_fileUrl;              //系统附件默认地址
        global $cfg_uploadDir;            //系统附件默认上传目录
        // global $customFtp;                //是否自定义FTP
        // global $custom_ftpState;          //FTP是否开启
        // global $custom_ftpUrl;            //远程附件地址
        // global $custom_ftpDir;            //FTP上传目录
        // global $custom_uploadDir;         //默认上传目录
        global $cfg_basehost;             //系统主域名
        global $cfg_hotline;              //系统默认咨询热线

        // global $customChannelName;        //模块名称
        // global $customLogo;               //logo使用方式
        global $cfg_weblogo;              //系统默认logo地址
        // global $customLogoUrl;            //logo地址
        // global $customSubDomain;          //访问方式
        // global $customChannelSwitch;      //模块状态
        // global $customCloseCause;         //模块禁用说明
        // global $customSeoTitle;           //seo标题
        // global $customSeoKeyword;         //seo关键字
        // global $customSeoDescription;     //seo描述
        // global $hotline_config;           //咨询热线配置
        // global $customHotline;            //咨询热线
        // global $customAtlasMax;           //图集数量限制
        // global $customTemplate;           //模板风格

        // global $customUpload;             //上传配置是否自定义
        global $cfg_softSize;             //系统附件上传限制大小
        global $cfg_softType;             //系统附件上传类型限制
        global $cfg_thumbSize;            //系统缩略图上传限制大小
        global $cfg_thumbType;            //系统缩略图上传类型限制
        global $cfg_atlasSize;            //系统图集上传限制大小
        global $cfg_atlasType;            //系统图集上传类型限制

        // global $custom_softSize;          //附件上传限制大小
        // global $custom_softType;          //附件上传类型限制
        // global $custom_thumbSize;         //缩略图上传限制大小
        // global $custom_thumbType;         //缩略图上传类型限制
        // global $custom_atlasSize;         //图集上传限制大小
        // global $custom_atlasType;         //图集上传类型限制

        //获取当前城市名
        global $siteCityInfo;
        if (is_array($siteCityInfo)) {
            $cityName = $siteCityInfo['name'];
        }

        //如果上传设置为系统默认，则以下参数使用系统默认
        if ($customUpload == 0) {
            $custom_softSize  = $cfg_softSize;
            $custom_softType  = $cfg_softType;
            $custom_thumbSize = $cfg_thumbSize;
            $custom_thumbType = $cfg_thumbType;
            $custom_atlasSize = $cfg_atlasSize;
            $custom_atlasType = $cfg_atlasType;
        }

        $hotline = $hotline_config == 0 ? $cfg_hotline : $customHotline;

        $params = !empty($this->param) && !is_array($this->param) ? explode(',', $this->param) : "";

        // $domainInfo = getDomain('shop', 'config');
        // $customChannelDomain = $domainInfo['domain'];
        // if($customSubDomain == 0){
        // 	$customChannelDomain = "http://".$customChannelDomain;
        // }elseif($customSubDomain == 1){
        // 	$customChannelDomain = "http://".$customChannelDomain.".".$cfg_basehost;
        // }elseif($customSubDomain == 2){
        // 	$customChannelDomain = "http://".$cfg_basehost."/".$customChannelDomain;
        // }

        // include HUONIAOINC.'/siteModuleDomain.inc.php';
        $customChannelDomain = getDomainFullUrl('shop', $customSubDomain);

        //分站自定义配置
        $ser = 'shop';
        global $siteCityAdvancedConfig;
        if ($siteCityAdvancedConfig && $siteCityAdvancedConfig[$ser]) {
            if ($siteCityAdvancedConfig[$ser]['title']) {
                $customSeoTitle = $siteCityAdvancedConfig[$ser]['title'];
            }
            if ($siteCityAdvancedConfig[$ser]['keywords']) {
                $customSeoKeyword = $siteCityAdvancedConfig[$ser]['keywords'];
            }
            if ($siteCityAdvancedConfig[$ser]['description']) {
                $customSeoDescription = $siteCityAdvancedConfig[$ser]['description'];
            }
            if ($siteCityAdvancedConfig[$ser]['logo']) {
                $customLogoUrl = $siteCityAdvancedConfig[$ser]['logo'];
            }
            if ($siteCityAdvancedConfig[$ser]['hotline']) {
                $hotline = $siteCityAdvancedConfig[$ser]['hotline'];
            }
        }

        $customSeoDescription = trim($customSeoDescription);

        $return = array();
        if (!empty($params) > 0) {

            foreach ($params as $key => $param) {
                if ($param == "channelName") {
                    $return['channelName'] = str_replace('$city', $cityName, $customChannelName);
                } elseif ($param == "logoUrl") {

                    //自定义LOGO
                    if ($customLogo == 1) {
                        $customLogo = getAttachemntFile($customLogoUrl);
                    } else {
                        $customLogo = getAttachemntFile($cfg_weblogo);
                    }

                    $return['logoUrl'] = $customLogo;
                } elseif ($param == "subDomain") {
                    $return['subDomain'] = $customSubDomain;
                } elseif ($param == "channelDomain") {
                    $return['channelDomain'] = $customChannelDomain;
                } elseif ($param == "channelSwitch") {
                    $return['channelSwitch'] = $customChannelSwitch;
                } elseif ($param == "closeCause") {
                    $return['closeCause'] = $customCloseCause;
                } elseif ($param == "title") {
                    $return['title'] = str_replace('$city', $cityName, $customSeoTitle);
                } elseif ($param == "keywords") {
                    $return['keywords'] = str_replace('$city', $cityName, $customSeoKeyword);
                } elseif ($param == "description") {
                    $return['description'] = str_replace('$city', $cityName, $customSeoDescription);
                } elseif ($param == "hotline") {
                    $return['hotline'] = $hotline;
                } elseif ($param == "atlasMax") {
                    $return['atlasMax'] = $customAtlasMax;
                } elseif ($param == "template") {
                    $return['template'] = $customTemplate;
                } elseif ($param == "touchTemplate") {
                    $return['touchTemplate'] = $customTouchTemplate;
                } elseif ($param == "softSize") {
                    $return['softSize'] = $custom_softSize;
                } elseif ($param == "softType") {
                    $return['softType'] = $custom_softType;
                } elseif ($param == "thumbSize") {
                    $return['thumbSize'] = $custom_thumbSize;
                } elseif ($param == "thumbType") {
                    $return['thumbType'] = $custom_thumbType;
                } elseif ($param == "atlasSize") {
                    $return['atlasSize'] = $custom_atlasSize;
                } elseif ($param == "atlasType") {
                    $return['atlasType'] = $custom_atlasType;
                }
            }
        } else {

            //自定义LOGO
            if ($customLogo == 1) {
                $customLogo = getAttachemntFile($customLogoUrl);
            } else {
                $customLogo = getAttachemntFile($cfg_weblogo);
            }

            $return['channelName']   = str_replace('$city', $cityName, $customChannelName);
            $return['logoUrl']       = $customLogo;
            $return['sharePic']      = getAttachemntFile($customSharePic ? $customSharePic : $cfg_sharePic);
            $return['subDomain']     = $customSubDomain;
            $return['channelDomain'] = $customChannelDomain;
            $return['channelSwitch'] = $customChannelSwitch;
            $return['closeCause']    = $customCloseCause;
            $return['title']         = str_replace('$city', $cityName, $customSeoTitle);
            $return['keywords']      = str_replace('$city', $cityName, $customSeoKeyword);
            $return['description']   = str_replace('$city', $cityName, $customSeoDescription);
            $return['hotline']       = $hotline;
            $return['atlasMax']      = $customAtlasMax;
            $return['template']      = $customTemplate;
            $return['touchTemplate'] = $customTouchTemplate;
            $return['softSize']      = $custom_softSize;
            $return['softType']      = $custom_softType;
            $return['thumbSize']     = $custom_thumbSize;
            $return['thumbType']     = $custom_thumbType;
            $return['atlasSize']     = $custom_atlasSize;
            $return['atlasType']     = $custom_atlasType;
            
            $huodongshoptypeopen = (int)$custom_huodongshoptypeopen;
            $return['pagetype']      = (int)$huodongshoptypeopen;   //展示商品类型 1团购 2 电商 0混合
            $return['huodongopen']   = $custom_huodongopen;               // 1准点抢购 2特价秒杀 3砍价 5拼团特惠
            $return['shopopen']      = $custom_shopopen;                 // 4热门商品
            $return['shopCheck']     = $customshopCheck;                // 1团购 2电商
            $return['tagarr']        = explode("|", $customtuanTag);
            $return['shopKanjiaGuize'] = $custom_shopKanjiaGuize;  //砍价规则
            $return['shopbargainingnomoney'] = (int)$customshopbargainingnomoney;  //未到低价  0可以下单  1不可以下单
            $return['peerpayState'] = (int)$custompeerpay;  //代付功能状态  0禁用  1启用
            $return['huodongygtime'] = (float)$customhuodongygtime;  //活动预告时限  单位：小时

            //页面显示配置
            $pageTypeConfig = array();
            $_pageTypeConfig = $custom_pageTypeConfig ? json_decode($custom_pageTypeConfig, true) : array();
            if(!$_pageTypeConfig || !is_array($_pageTypeConfig)){
                //兼容老数据
                
                $pageTypeConfigNames = array('到店优惠', '送到家', '商家');
                $pageTypeConfig = array(
                    array('id' => 1, 'name' => $pageTypeConfigNames[0], 'title' => $pageTypeConfigNames[0], 'show' => 1),
                    array('id' => 2, 'name' => $pageTypeConfigNames[1], 'title' => $pageTypeConfigNames[1], 'show' => 1),
                    array('id' => 3, 'name' => $pageTypeConfigNames[2], 'title' => $pageTypeConfigNames[2], 'show' => 1),
                );
        
                //团购
                if($huodongshoptypeopen == 1){
                    $pageTypeConfig[1]['show'] = 0;
                }
                //电商
                elseif($huodongshoptypeopen == 2){
                    $pageTypeConfig[0]['show'] = 0;
                }
            }else{
                $pageTypeConfig = $_pageTypeConfig;
            }
            $return['pageTypeConfig'] = $pageTypeConfig;
        }

        return $return;
    }


    /**
     * 商城地区
     * @return array
     */
    public function addr()
    {
        global $dsql;
        $type = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $type     = (int)$this->param['type'];
                $page     = (int)$this->param['page'];
                $pageSize = (int)$this->param['pageSize'];
                $son      = $this->param['son'] == 0 ? false : true;
            }
        }

        global $template;
        if ($template && $template != 'page' && empty($type)) {

            //数据共享
            require(HUONIAOINC . "/config/shop.inc.php");
            $dataShare = (int)$customDataShare;

            if (!$dataShare) {
                $type = getCityId();
            }
        }

        //一级
        if (empty($type)) {
            //可操作的城市，多个以,分隔
            $userLogin    = new userLogin($dbo);
            $adminCityIds = $userLogin->getAdminCityIds();
            $adminCityIds = empty($adminCityIds) ? 0 : $adminCityIds;

            $cityArr = array();
            $sql     = $dsql->SetQuery("SELECT c.*, a.`id` cid, a.`typename`, a.`pinyin` FROM `#@__site_city` c LEFT JOIN `#@__site_area` a ON a.`id` = c.`cid` WHERE c.`cid` in ($adminCityIds) AND c.`state` = 1 ORDER BY c.`id`");
            $result  = $dsql->dsqlOper($sql, "results");
            if ($result) {
                foreach ($result as $key => $value) {

                    $lowerCount = array();
                    $sql   = $dsql->SetQuery("SELECT count(*) totalCount FROM `#@__site_area` WHERE `parentid` = " . $value['cid'] . " ORDER BY `weight`");
                    $ret   = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $lowerCount = $ret[0]['totalCount'];
                    }

                    array_push($cityArr, array(
                        "id"       => $value['cid'],
                        "typename" => $value['typename'],
                        "pinyin"   => $value['pinyin'],
                        "hot"      => $value['hot'],
                        "lower"    => $lowerCount
                    ));
                }
            }
            return $cityArr;
        } else {
            $results = $dsql->getTypeList($type, "site_area", $son, $page, $pageSize, '', '', true);
            if ($results) {
                return $results;
            }
        }
    }


    /**
     * 热门关键词
     * @reseturn array
     */
    public function hotKeywords()
    {
        global $dsql;

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_hotkeyword` WHERE `state` = 0 ORDER BY `weight` DESC, `id` DESC");
        $results  = $dsql->dsqlOper($archives, "results");

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']      = $val['id'];
                $list[$key]['keyword'] = $val['keyword'];
                $list[$key]['href']    = $val['href'];
                $list[$key]['color']   = $val['color'];
                $list[$key]['target']  = $val['target'] == 0 ? "_blank" : "_self";
                $list[$key]['blod']    = $val['blod'];
            }
        }


        return $list;
    }


    /**
     * 商城公告
     * @return array
     */
    public function notice()
    {
        global $dsql;
        $pageinfo = $list = array();
        $page     = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        //数据共享
        require(HUONIAOINC . "/config/shop.inc.php");
        $dataShare = (int)$customDataShare;

        if (!$dataShare) {
            $cityid = getCityId($this->param['cityid']);
            if ($cityid) {
                $where .= " AND `cityid` = " . $cityid;
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id`, `title`, `color`, `redirecturl`, `litpic`, `body` FROM `#@__shop_noticelist` WHERE `arcrank` = 0 $where ORDER BY `weight` DESC, `id` DESC");
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => '暂无数据！');

        $pageInfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $where, "results");
        $list    = array();

        if(isMobile()){
            $param = array(
                "service"  => "shop",
                "template" => "announcement-detail",
                "param"    => "id=%id%"
            );
        }else{
            $param = array(
                "service"  => "shop",
                "template" => "announcement-detail",
                "id"       => "%id%"
            );
        }
        $urlParam = getUrlPath($param);
        foreach ($results as $key => $val) {
            $list[$key]['id']          = $val['id'];
            $list[$key]['title']       = $val['title'];
            $list[$key]['color']       = $val['color'];
            $list[$key]['redirecturl'] = $val['redirecturl'];
            $list[$key]['litpic']      = getFilePath($val['litpic']);
            $list[$key]['url']         = str_replace("%id%", $val['id'], $urlParam);
            $list[$key]['note']    = mb_substr(strip_tags($val['body']), 0, 100);
        }
        return array("pageInfo" => $pageInfo, "list" => $list);
    }


    /**
     * 公告内容
     * @return array
     */
    public function noticeDetail()
    {
        global $dsql;
        $noticeDetail = array();

        $id = $this->param;
        $id = is_numeric($id) ? $id : $id['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        $archives = $dsql->SetQuery("SELECT `title`, `color`, `redirecturl`, `litpic`, `body`, `pubdate` FROM `#@__shop_noticelist` WHERE `arcrank` = 0 AND `id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $noticeDetail["title"]       = $results[0]['title'];
            $noticeDetail["color"]       = $results[0]['color'];
            $noticeDetail["redirecturl"] = $results[0]['redirecturl'];
            $noticeDetail["litpic"]      = getFilePath($results[0]['litpic']);
            $noticeDetail["body"]        = $results[0]['body'];
            $noticeDetail["pubdate"]     = $results[0]['pubdate'];
        }
        return $noticeDetail;
    }


    /**
     * 商城资讯
     * @return array
     */
    public function news()
    {
        global $dsql;
        global $langData;
        $pageinfo = $list = array();
        $typeid   = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $typeid   = $this->param['typeid'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $cityid = 0;

        //数据共享
        require(HUONIAOINC . "/config/shop.inc.php");
        $dataShare = (int)$customDataShare;

        if (!$dataShare) {
            $cityid = getCityId($this->param['cityid']);
        }

        //全国情况，不进行区域筛选
        global $siteCityInfo;
        $siteCityInfoName = $siteCityInfo['name'];
        if ($cityid && $siteCityInfoName != '全国') {
            // $addrList = $dsql->getTypeList($cityid, "site_area");
            // if ($addrList) {
            //     global $arr_data;
            //     $arr_data = array();
            //     $lower    = arr_foreach($addrList);
            //     $lower    = $cityid . "," . join(',', $lower);
            // } else {
            //     $lower = $cityid;
            // }
            // $where .= " AND `cityid` in ($lower)";
            $where .= " AND `cityid` = $cityid";
        }

        //遍历分类
        if (!empty($typeid)) {
            if ($dsql->getTypeList($typeid, "shop_news_type")) {
                $lower = arr_foreach($dsql->getTypeList($typeid, "shop_news_type"));
                $lower = $typeid . "," . join(',', $lower);
            } else {
                $lower = $typeid;
            }
            $where .= " AND `typeid` in ($lower)";
        }

        $archives = $dsql->SetQuery("SELECT `id`, `title`, `litpic`, `body`, `typeid`, `pubdate`,`click` FROM `#@__shop_news` WHERE `arcrank` = 0" . $where . " ORDER BY `weight` DESC, `id` DESC");
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);
        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $where, "results");
        $list    = array();

        $param    = array(
            "service"  => "shop",
            "template" => "news-detail",
            "id"       => "%id%"
        );
        $urlParam = getUrlPath($param);

        foreach ($results as $key => $val) {
            $list[$key]['id']      = $val['id'];
            $list[$key]['title']   = $val['title'];
            $list[$key]['click']   = $val['click'];
            $list[$key]['litpic']  = getFilePath($val['litpic']);
            $list[$key]['pubdate'] = $val['pubdate'];
            $list[$key]['url']     = str_replace("%id%", $val['id'], $urlParam);
            $list[$key]['note']    = mb_substr(strip_tags($val['body']), 0, 100);

            $archives = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_news_type` WHERE `id` = " . $val['typeid']);
            $typename = $dsql->dsqlOper($archives, "results");
            if ($typename) {
                $list[$key]['typename'] = $typename[0]['typename'];
            } else {
                $list[$key]['typename'] = "";
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 资讯详细信息
     * @return array
     */
    public function newsDetail()
    {
        global $dsql;
        $detail = array();

        $id = $this->param;
        $id = is_numeric($id) ? $id : $id['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        $archives = $dsql->SetQuery("SELECT `id`, `cityid`, `title`, `typeid`, `litpic`, `body`, `pubdate`,`click` FROM `#@__shop_news` WHERE `arcrank` = 0 AND `id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $detail["id"]     = $results[0]['id'];
            $detail["title"]  = $results[0]['title'];
            $detail["typeid"] = $results[0]['typeid'];
            $detail["cityid"] = $results[0]['cityid'];
            $detail["click"]  = $results[0]['click'];

            $typename = "";
            $sql      = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_news_type` WHERE `id` = " . $results[0]['typeid']);
            $ret      = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $typename = $ret[0]['typename'];
            }
            $detail['typename'] = $typename;

            $detail["litpic"]  = getFilePath($results[0]['litpic']);
            $detail["body"]    = $results[0]['body'];
            $detail["pubdate"] = $results[0]['pubdate'];
        }
        return $detail;
    }


    /**
     * 资讯分类
     * @return array
     */
    public function newsType()
    {
        global $dsql;
        $type = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $type     = (int)$this->param['type'];
                $page     = (int)$this->param['page'];
                $pageSize = (int)$this->param['pageSize'];
                $son      = $this->param['son'] == 0 ? false : true;
            }
        }

        $results = $dsql->getTypeList($type, "shop_news_type", $son, $page, $pageSize);
        if ($results) {
            return $results;
        }
    }


    /**
     * 商城分类
     * @return array
     */
    public function type()
    {
        global $dsql;
        global $cfg_basedomain;
        $type = $page = $pageSize = $where = $gettype = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $type     = (int)$this->param['type'];
                $page     = (int)$this->param['page'];
                $gettype  = $this->param['gettype'];
                $nav      = (int)$this->param['nav'];  //首页导航处使用，需要将每日签到/限时抢/砍价狂欢/拼团特惠/特价秒杀/积分商城等6个入口返回
                $pageSize = (int)$this->param['pageSize'];
                $son      = $this->param['son'] == 0 ? false : true;
            }
        }

        $results = $dsql->getTypeList($type, "shop_type", $son, $page, $pageSize);
        if ($gettype == "all") {
            foreach ($results as $k => &$v) {
                $v['lowerarr'] = $dsql->getTypeList($v['id'], "shop_type", $son, $page, $pageSize);
                // var_dump($v['lowerarr']);
                if ($v['lowerarr']) {
                    foreach ($v['lowerarr'] as $a => &$b) {
                        if (isset($b['lower'])) {
                            $b['sublowerarr'] = $dsql->getTypeList($b['id'], "shop_type", $son, $page, $pageSize);
                        }
                    }
                }
            }
        }

        if($nav){
            $navList = array();

            //每日签到
            global $cfg_qiandao_state;
            $qiandao_state = (int)$cfg_qiandao_state;
            if($qiandao_state){
                $icon = $cfg_basedomain . '/static/images/shop/qiandao.png';
                array_push($navList, array(
                    'icon' => $icon,
                    'iconturl' => $icon,
                    'id' => -6,
                    'lower' => 0,
                    'parentid' => 0,
                    'title' => '每日签到',
                    'typename' => '每日签到',
                    'url' => getUrlPath(array('service' => 'member', 'type' => 'user', 'template' => 'qiandao'))
                ));
            }

            include(HUONIAOINC . '/config/shop.inc.php');
            $huodongopen = explode(',', $custom_huodongopen);

            //限时抢
            if(in_array(1, $huodongopen)){
                $icon = $cfg_basedomain . '/static/images/shop/qianggou.png';
                array_push($navList, array(
                    'icon' => $icon,
                    'iconturl' => $icon,
                    'id' => -5,
                    'lower' => 0,
                    'parentid' => 0,
                    'title' => '限时抢',
                    'typename' => '限时抢',
                    'url' => getUrlPath(array('service' => 'shop', 'template' => 'qianggou'))
                ));
            }

            //砍价狂欢
            if(in_array(3, $huodongopen)){
                $icon = $cfg_basedomain . '/static/images/shop/bargain.png';
                array_push($navList, array(
                    'icon' => $icon,
                    'iconturl' => $icon,
                    'id' => -4,
                    'lower' => 0,
                    'parentid' => 0,
                    'title' => '砍价狂欢',
                    'typename' => '砍价狂欢',
                    'url' => getUrlPath(array('service' => 'shop', 'template' => 'bargain_list'))
                ));
            }

            //拼团特惠
            if(in_array(4, $huodongopen)){
                $icon = $cfg_basedomain . '/static/images/shop/pintuan.png';
                array_push($navList, array(
                    'icon' => $icon,
                    'iconturl' => $icon,
                    'id' => -3,
                    'lower' => 0,
                    'parentid' => 0,
                    'title' => '拼团特惠',
                    'typename' => '拼团特惠',
                    'url' => getUrlPath(array('service' => 'shop', 'template' => 'pintuan'))
                ));
            }

            //特价秒杀
            if(in_array(2, $huodongopen)){
                $icon = $cfg_basedomain . '/static/images/shop/miaosha.png';
                array_push($navList, array(
                    'icon' => $icon,
                    'iconturl' => $icon,
                    'id' => -2,
                    'lower' => 0,
                    'parentid' => 0,
                    'title' => '特价秒杀',
                    'typename' => '特价秒杀',
                    'url' => getUrlPath(array('service' => 'shop', 'template' => 'secKill'))
                ));
            }

            //积分商城
            global $installModuleArr;
            if(in_array('integral', $installModuleArr)){
                $icon = $cfg_basedomain . '/static/images/shop/jifen.png';
                $_title = getModuleTitle(array('name' => 'integral'));
                array_push($navList, array(
                    'icon' => $icon,
                    'iconturl' => $icon,
                    'id' => -1,
                    'lower' => 0,
                    'parentid' => 0,
                    'title' => $_title,
                    'typename' => $_title,
                    'url' => getUrlPath(array('service' => 'integral'))
                ));
            }

            if($navList){
                $results = array_merge($navList, $results);
            }
        }

        if ($results) {
            return $results;
        }
    }


    /**
     * 商城分类-发布商品时使用
     * @return array
     */
    public function getTypeList()
    {
        global $dsql;
        $tid = (int)$this->param['tid'];

        $list = array();
        if ($tid == 0) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `parentid` = 0 ORDER BY `weight`");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $val) {
                    $list[$key] = array();
                    $list_1     = array();
                    $archives_1 = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `parentid` = " . $val['id'] . " ORDER BY `weight`");
                    $results_1  = $dsql->dsqlOper($archives_1, "results");
                    if ($results_1) {
                        foreach ($results_1 as $key_1 => $val_1) {
                            $list_1[$key_1]["id"]       = $val_1['id'];
                            $list_1[$key_1]["typename"] = $val_1['typename'];

                            $list_1[$key_1]["type"] = 0;
                            $archives_2             = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `parentid` = " . $val_1['id'] . " ORDER BY `weight`");
                            $results_2              = $dsql->dsqlOper($archives_2, "results");
                            if ($results_2) {
                                $list_1[$key_1]["type"] = 1;
                            }
                        }
                    }

                    $list[$key]["typeid"]   = $val['id'];
                    $list[$key]["typename"] = $val['typename'];
                    if (!empty($list_1)) {
                        $list[$key]["subnav"] = $list_1;
                    }
                }
            }
        } else {
            $list     = array();
            $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `parentid` = " . $tid . " ORDER BY `weight`");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $val) {
                    $list[$key]["id"]       = $val['id'];
                    $list[$key]["typename"] = $val['typename'];

                    $list[$key]["type"] = 0;
                    $archives_1         = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `parentid` = " . $val['id'] . " ORDER BY `weight`");
                    $results_1          = $dsql->dsqlOper($archives_1, "results");
                    if ($results_1) {
                        $list[$key]["type"] = 1;
                    }
                }
            }
        }
        if (!empty($list)) {
            return $list;
        } else {
            echo '{"state": 200, "info": "获取失败！"}';
        }
        die;
    }


    /**
     * 商城分类-发布商品时使用
     * @return array
     */
    public function typeParent()
    {
        $typeid = (int)$this->param['typeid'];

        global $data;
        $data        = '';
        $proTypeName = getParentArr("shop_type", $typeid);
        $proTypeName = array_reverse(parent_foreach($proTypeName, "typename"));

        //遍历所选分类ID
        $proId = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
        $proId = array_slice($proId, 0, count($proTypeName));
        if (!empty($proId)) {
            return $proId;
        }
        die;
    }


    /**
     * 分类字段
     * @return array
     */
    public function typeItem()
    {
        global $dsql;

        $typeid = $this->param['typeid'];
        if (!is_numeric($typeid)) return array("state" => 200, "info" => '格式错误！');

        //遍历所选分类ID
        global $data;
        $data      = "";
        $parentArr = getParentArr("shop_type", $typeid);
        if (empty($parentArr)) return;

        $proId = array_reverse(parent_foreach($parentArr, "id"));
        foreach ($proId as $key => $val) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `type` = " . $val);
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $typeid = $val;
            }
        }

        //获取分类属性
        $proItemList = array();
        if ($typeid != 0) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `type` = " . $typeid . " AND `parentid` = 0 ORDER BY `weight`");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $val) {

                    $id       = $val['id'];
                    $typeName = $val['typename'];
                    $w        = strstr($val['flag'], 'w');

                    $archives_ = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `parentid` = " . $val['id'] . " ORDER BY `weight`");
                    $results_  = $dsql->dsqlOper($archives_, "results");

                    if ($results_) {
                        $listItem = array();
                        foreach ($results_ as $key_ => $val_) {
                            if ($w) {
                                $listItem[$key_]['id'] = $val_['typename'];
                            } else {
                                $listItem[$key_]['id'] = $val_['id'];
                            }
                            $listItem[$key_]['val'] = $val_['typename'];
                        }
                    }

                    $proItemList[$key]['id']       = $id;
                    $proItemList[$key]['typeName'] = $typeName;
                    $proItemList[$key]['listItem'] = $listItem;
                }
            }
        }
        return $proItemList;
    }


    /**
     * 分类规格
     * @return array
     */
    public function typeSpecification()
    {
        global $dsql;

        $typeid = $this->param['typeid'];
        if (!is_numeric($typeid)) return array("state" => 200, "info" => '格式错误！');

        //遍历所选分类ID
        global $data;
        $data      = "";
        $parentArr = getParentArr("shop_type", $typeid);
        if (empty($parentArr)) return;

        $proId = array_reverse(parent_foreach($parentArr, "id"));
        foreach ($proId as $key => $val) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `type` = " . $val);
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $typeid = $val;
            }
        }

        //获取分类属性
        $specification = array();
        $archives      = $dsql->SetQuery("SELECT `spe` FROM `#@__shop_type` WHERE `id` = " . $typeid);
        $results       = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $spe = explode(",", $results[0]['spe']);
            foreach ($spe as $key => $val) {
                if (!empty($val)) {
                    $archives_1 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `id` = " . $val . " ORDER BY `weight` ASC");
                    $results_1  = $dsql->dsqlOper($archives_1, "results");
                    if ($results_1) {
                        $speItem = array();
                        foreach ($results_1 as $key_1 => $val_1) {
                            $archives_2 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `parentid` = " . $val_1['id'] . " ORDER BY `weight` ASC");
                            $results_2  = $dsql->dsqlOper($archives_2, "results");
                            if ($results_2) {
                                foreach ($results_2 as $key_2 => $val_2) {
                                    $speItem[$key_2]['id']  = $val_2['id'];
                                    $speItem[$key_2]['val'] = $val_2['typename'];
                                }
                            }
                        }
                        if ($speItem) {
                            $specification[$key]['id']       = $results_1[0]['id'];
                            $specification[$key]['typeName'] = $results_1[0]['typename'];
                            $specification[$key]['listItem'] = $speItem;
                        }
                    }
                }
            }
        }

        return $specification;
    }


    /**
     * 商城品牌
     * @return array
     */
    public function brand()
    {
        global $dsql;
        global $langData;
        $pageinfo = $list = array();
        $typeid   = $rec = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $typeid   = $this->param['typeid'];
                $category = $this->param['category'];
                $rec      = $this->param['rec'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        //数据共享
        // require(HUONIAOINC."/config/shop.inc.php");
        // $dataShare = (int)$customDataShare;
        //
        // if(!$dataShare){
        //     $cityid = getCityId($this->param['cityid']);
        //     if($cityid){
        //         $where .= " AND `cityid` = ".$cityid;
        //     }
        // }

        if (!empty($typeid)) {
            $where .= " AND `type` = " . $typeid;
        }

        //分类
        if (!empty($category)) {
            $reg   = "(^$category$|^$category,|,$category,|,$category)";
            $where .= " AND `category` REGEXP '" . $reg . "' ";
        }

        if (!empty($rec)) {
            $where .= " AND `rec` = 1";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id`, `title`, `logo` FROM `#@__shop_brand` WHERE 1 = 1" . $where . " ORDER BY `id` DESC");
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $where, "results");
        $list    = array();

        $param    = array(
            "service"  => "shop",
            "template" => "brand-detail",
            "id"       => "%id%"
        );
        $urlParam = getUrlPath($param);

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']    = $val['id'];
                $list[$key]['title'] = $val['title'];
                $list[$key]['logo']  = getFilePath($val['logo']);
                $list[$key]['url']   = str_replace("%id%", $val['id'], $urlParam);
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 品牌分类
     * @return array
     */
    public function brandType()
    {
        global $dsql;

        $gettype = (int)$this->param['gettype']; /*获取分类下的品牌*/

        $results = $dsql->getTypeList(0, "shop_brandtype");

        if ($results) {
            if ($gettype == 1) {
                $newarr = array();
                foreach ($results as $key => $value) {
                    $newarr[$key]['id']        = $value['id'];
                    $newarr[$key]['parentid']  = $value['parentid'];
                    $newarr[$key]['typename']  = $value['typename'];
                    $newarr[$key]['level']     = $value['level'];
                    $newarr[$key]['longitude'] = $value['longitude'];
                    $newarr[$key]['latitude']  = $value['latitude'];
                    $newarr[$key]['title']     = $value['title'];
                    $newarr[$key]['note']      = $value['note'];
                    $newarr[$key]['url']       = $value['url'];

                    $lower = array();

                    $archives_ = $dsql->SetQuery("SELECT * FROM `#@__shop_brand` WHERE `type` = " . $value['id'] . " ORDER BY `weight`");
                    $results_  = $dsql->dsqlOper($archives_, "results");

                    if ($results_) {
                        $lower = $results_;
                    }

                    $newarr[$key]['lower']       = $lower;
                }
                return $newarr;
            }
            return $results;
        }
    }


    /**
     * 店铺列表
     * @return array
     */
    public function store()
    {
        global $dsql;
        global $langData;
        $pageinfo = $list = array();
        $industry = $addrid = $rec = $certi = $orderby = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $industry = $this->param['industry'];
                $addrid   = $this->param['addrid'];
                $flag     = $this->param['flag'];
                $rec      = $this->param['rec'];
                $hp       = $this->param['hp'];
                $certi    = $this->param['certi'];
                $orderby  = $this->param['orderby'];
                $title    = $this->param['title'];
                $lng      = $this->param['lng'];
                $lat      = $this->param['lat'];
                $opentime = $this->param['opentime'];
                $discount = (int)$this->param['discount'];
                $cityid   = $this->param['cityid'];
                $userlng  = $this->param['userlng'];
                $userlat  = $this->param['userlat'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
                $pagetype = $this->param['pagetype'];
                $moduletype = $this->param['moduletype'];
                $tc         = $this->param['tc'];      //同城商家  只显示团购
                $protype    = $this->param['protype']; //如果传了这个字段，需要把发布过该分类的商品的商家也展示出来，显示优先级要高于指定行业的商家
            }
        }
        $where = " WHERE s.`state` = 1";

        //数据共享
        require(HUONIAOINC . "/config/shop.inc.php");
        $dataShare = (int)$customDataShare;
        if (!$dataShare || $pagetype == 2) {
            $cityid = getCityId($this->param['cityid']);
            if ($cityid) {
                $where .= " AND s.`cityid` = " . $cityid;
            }
        }

        if ($moduletype == 1 || $pagetype == 1) {
            $cityid = getCityId($this->param['cityid']);
            if ($cityid) {
                $where .= " AND s.`cityid` = " . $cityid;
            }
        }

        if ($pagetype == 1) {
            $where .= " AND s.`shoptype` = 1";
        }
        if ($pagetype == 2) {
            $where .= " AND (s.`shoptype` = 2 OR s.`shoptype` = 0)";
        }
        if (!empty($industry)) {

            if ($dsql->getTypeList($industry, "shop_type")) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($dsql->getTypeList($industry, "shop_type"));
                $lower    = $industry . "," . join(',', $lower);
            } else {
                $lower = $industry;
            }

            $where .= " AND (s.`industry` = " . $industry . " OR p.`type` in ($lower))";
        }

        if ($tc == 1) {
            $cityid = getCityId($this->param['cityid']);
            if ($cityid) {
                $where .= " AND s.`cityid` = " . $cityid . " AND  s.`shoptype` = 1";
            }
        }

        /*服务*/
        if (!empty($discount)) {
            switch ($discount) {
                case 1:
                    $where .= " AND s.`delivery` = 1";
                    break;
                case 2:
                    $where .= " AND s.`shoptype` = 1";
                    break;
                case 4:
                    $agentime = strtotime(date("Y-m-d H:i:s", strtotime("-3 month")));
                    $where .= " AND s.`pubdate` >= '$agentime'";
                    break;
                case 5:
                    $where .= " AND (s.`merchant_deliver` = 1 or s.`distribution` = 1)";
                    break;
                case 7:
                    $where .= " AND s.`certi` = 1";
                    break;
                default:
                    $where .= "";
                    break;
            }
        }

        //全国情况，不进行区域筛选
        global $siteCityInfo;
        $siteCityInfoName = $siteCityInfo['name'];
        if (!empty($addrid) && $siteCityInfoName != '全国') {
            $areaArr = $dsql->getTypeList($addrid, "site_area");
            if ($areaArr) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($areaArr);
                $lower    = $addrid . "," . join(',', $lower);
            } else {
                $lower = $addrid;
            }
            $where .= " AND s.`addrid` in ($lower)";
        }
        if (!empty($rec)) {
            $where .= " AND s.`rec` = 1";
        }

        if (!empty($certi)) {
            $where .= " AND s.`certi` = 1";
        }

        if (!empty($title)) {
            //搜索记录
            siteSearchLog("shop", $title);
            //            $where .= " AND `title` like '%" . $title . "%'";
            $userSql = $dsql->SetQuery("SELECT `store` FROM `#@__shop_product` WHERE `title` like '%$title%'");
            $results = $dsql->dsqlOper($userSql, "results");
            if ($results) {
                $sidArr = array();
                foreach ($results as $key => $value) {
                    $sidArr[$key] = $value['store'];
                }
                $where .= " AND (s.`title` like '%" . $title . "%' OR s.`id` in (" . join(",", $sidArr) . ") )";
            } else {

                $where .= " AND (s.`title` like '%" . $title . "%')";
            }
        }
        $bzjsql = $flahsql = $hpsql = "";
        if (!empty($flag)) {
            if ($flag == 1) {
                /*保证金*/
                $bzjsql = " LEFT JOIN `#@__business_list b`  ON `uid` = s.`userid`";
                $where  .= " AND FIND_IN_SET(" . $flag . ",s.`authattr`)";
            } else {
                $where .= " AND s.`delivery` = 1";
            }
        }

        if (!empty($opentime)) {

            $start = $end = $wheretime = '';
            if ($opentime == 1) {

                $start = date("H:i:s", GetMkTime(time()));
                $end   = date("H:i:s", GetMkTime(time()));

                $wheretime = "AND ((CONVERT(s.`start_time1`, TIME) < '$start' AND CONVERT(s.`end_time1`, TIME) > '$end') OR (CONVERT(s.`start_time2`, TIME) < '$start' AND CONVERT(s.`end_time2`, TIME) > '$end')OR (CONVERT(s.`start_time3`, TIME) < '$start' AND CONVERT(s.`end_time3`, TIME) > '$end'))";
            } elseif ($opentime == 2) {
                $start = '00:00:00';
                $end   = '23:59:59';
            } elseif ($opentime == 3) {
                $start = '00:00:00';
                $end   = '06:00:00';
            } elseif ($opentime == 4) {
                $start = '06:00:00';
                $end   = '12:00:00';
            } elseif ($opentime == 5) {
                $start = '12:00:00';
                $end   = '18:00:00';
            } elseif ($opentime == 6) {
                $start = '18:00:00';
                $end   = '24:00:00';
            }
            if ($opentime != 1) {

                $wheretime = "AND ((CONVERT(s.`start_time1`, TIME) < '$start' AND CONVERT(s.`end_time1`, TIME) <='$end') OR (CONVERT(s.`start_time2`, TIME) < '$start' AND CONVERT(s.`end_time2`, TIME) <= '$end')OR (CONVERT(s.`start_time3`, TIME) < '$start' AND CONVERT(s.`end_time3`, TIME) <= '$end'))";
            }
            $where .= " AND (FIND_IN_SET(DAYOFWEEK(now()) - 1, s.`businessday`) OR (DAYOFWEEK(now()) = 1 AND FIND_IN_SET(7, s.`businessday`)))";

            $where .= $wheretime;
        }

        //查询距离
        if ((!empty($lng)) && (!empty($lat))) {
            $select = "ROUND(
		        6378.138 * 2 * ASIN(
		            SQRT(POW(SIN(($lat * PI() / 180 - s.`lat` * PI() / 180) / 2), 2) + COS($lat * PI() / 180) * COS(s.`lat` * PI() / 180) * POW(SIN(($lng * PI() / 180 - s.`lng` * PI() / 180) / 2), 2))
		        ) * 1000
		    ) AS distance,";
            $select = "(2 * 6378.137* ASIN(SQRT(POW(SIN(3.1415926535898*(" . $lat . "-s.`lat`)/360),2)+COS(3.1415926535898*" . $lat . "/180)* COS(s.`lat` * 3.1415926535898/180)*POW(SIN(3.1415926535898*(" . $lng . "-s.`lng`)/360),2))))*1000 AS distance,";
        } else {
            $select = "";
        }

        $order = " ORDER BY s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";

        $BeginDate = date('Y-m-01', strtotime(date("Y-m-d"))); //本月第一天
        $overDate  = date('Y-m-d', strtotime("$BeginDate +1 month -1 day")); //本月最后一天
        $btime     = strtotime($BeginDate);
        $ovtime    = strtotime($overDate);

        //if ($orderby == 4 || $orderby == 5) {
        // 总销量
        $Subquery = ",(SELECT count(o.`id`) FROM `#@__shop_order` o WHERE `store` = s.`id` AND `orderstate` = 3) as totalSale ";

        //月销量
        $Subquery .= ",(SELECT count(`id`) countall FROM `#@__shop_order` WHERE `orderstate` = 3 AND `store` = s.`id` AND `okdate` BETWEEN " . $btime . " AND " . $ovtime . ") as sv ";
        //}
        //评价
        $hpsql = ",(SELECT(SELECT count(c.`id`) hpcount FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`rating` = 1 AND c.`type` = 'shop-order' AND o.`store` =  s.`id` AND c.`pid` = 0) / (SELECT count(c.`id`) ahpcount FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`type` = 'shop-order' AND o.`store` = s.`id` AND c.`pid` = 0)) as hp";
        //浏览量
        if ($orderby == "1") {
            $order = " ORDER BY s.`click` DESC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";
        } elseif ($orderby == "3") {
            $order = " ORDER BY distance ASC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";
        } elseif ($orderby == 4) {
            $order = " ORDER BY sv ASC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";
        } elseif ($orderby == 5) {
            $order = " ORDER BY sv DESC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";
        } elseif ($orderby == 6) {
            $order = " ORDER BY hp DESC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";
        } elseif ($orderby == 7) {
            $order = " ORDER BY totalSale DESC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";
        } elseif ($orderby == 8) {

            $order = " ORDER BY hp DESC, s.`rec` DESC, s.`pcount` DESC, s.`weight` DESC, s.`id` DESC";

            $hpsql = ",(SELECT(SELECT count(c.`id`) hpcount FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`rating` = 1 AND c.`type` = 'shop-order' AND o.`store` =  s.`id` AND c.`pid` = 0) / (SELECT count(c.`id`) ahpcount FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`type` = 'shop-order' AND o.`store` = s.`id` AND c.`pid` = 0)) as hp";
        }
        if (!empty($hp)) {
            $hp    = $hp / 100;
            $hps = "(SELECT(SELECT count(c.`id`) hpcount FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`rating` = 1 AND c.`type` = 'shop-order' AND o.`store` =  s.`id` AND c.`pid` = 0) / (SELECT count(c.`id`) ahpcount FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`type` = 'shop-order' AND o.`store` = s.`id` AND c.`pid` = 0))";

            $where .= " AND " . $hps . " >= $hp  ";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        //筛选行业的情况需要关联商品表
        if (!empty($industry)) {
            $archives_count = $dsql->SetQuery("SELECT count(*) totalCount FROM (SELECT DISTINCT s.`id` FROM `#@__shop_store` s LEFT JOIN `#@__shop_product` p ON p.`store` = s.`id`" . $where . " AND p.`state` = 1) aa");
            
            $archives = $dsql->SetQuery("SELECT s.`pcount`, s.`id`,s.`facility`,s.`shoptype`,s.`logo`, s.`title`, s.`domaintype`, s.`company`, s.`referred`, s.`addrid`, s.`address`, s.`industry`, s.`project`, s.`logo`, s.`userid`, s.`tel`, s.`qq`, s.`wechatcode`,s.`toshop`,s.`click`, s.`certi`,s.`express`,s.`merchant_deliver`, s.`rec`, " . $select . "s.`pubdate`" . $Subquery . " $hpsql FROM `#@__shop_store` s LEFT JOIN `#@__shop_product` p ON p.`store` = s.`id`" . $where . " AND p.`state` = 1 GROUP BY s.`id`" . $order);
        }else{
            $archives_count = $dsql->SetQuery("SELECT count(*) totalCount FROM (SELECT DISTINCT s.`id` FROM `#@__shop_store` s " . $where . ") aa");
            
            $archives = $dsql->SetQuery("SELECT s.`pcount`, s.`id`,s.`facility`,s.`shoptype`,s.`logo`, s.`title`, s.`domaintype`, s.`company`, s.`referred`, s.`addrid`, s.`address`, s.`industry`, s.`project`, s.`logo`, s.`userid`, s.`tel`, s.`qq`, s.`wechatcode`,s.`toshop`,s.`click`, s.`certi`,s.`express`,s.`merchant_deliver`, s.`rec`, " . $select . "s.`pubdate`" . $Subquery . " $hpsql FROM `#@__shop_store` s " . $where . $order);
        }
        //总条数
        $totalCount = $dsql->dsqlOper($archives_count, "results");
        $totalCount = $totalCount[0]['totalCount'];

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");
        $list    = array();

        $param    = array(
            "service"  => "shop",
            "template" => "store-detail",
            "id"       => "%id%"
        );
        $urlParam = getUrlPath($param);

        $now = GetMkTime(time());

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['cusShoptag']   = $val['facility'] ? explode(",", $val['facility']) : array();
                $list[$key]['id']         = $val['id'];
                $list[$key]['title']      = $val['title'];
                $list[$key]['shoptype']   = $val['shoptype'];
                $list[$key]['wechatcode'] = $val['wechatcode'];
                $list[$key]['dataType']   = "store";
                $list[$key]['express']    = $val['express'];
                $list[$key]['merchant_deliver'] = $val['merchant_deliver'];
                $list[$key]['toshop']     = $val['toshop'];
                $list[$key]["logo"]       = getFilePath($val["logo"]);
                //                $list[$key]['distance']   = $val['distance'] > 1000 ? sprintf("%.1f", $val['distance'] / 1000) . $langData['siteConfig'][13][23] : sprintf("%.1f", $val['distance']) . $langData['siteConfig'][13][22];  //距离   //千米  //米
                $list[$key]['distance']   = $val['distance'] > 1000 ? sprintf("%.1f", $val['distance'] / 1000) . 'km' : sprintf("%.1f", $val['distance']) . 'm';  //距离   //千米  //米

                //访问地址
                $url = "";
                if ($val['domaintype'] == 1) {
                    $domainInfo = getDomain('shop', 'shop_store', $val['id']);
                    $url        = "http://" . $domainInfo['domain'];
                } else {
                    $url = str_replace("%id%", $val['id'], $urlParam);
                }
                $list[$key]['url'] = $url;

                $list[$key]['referred'] = $val['referred'];
                $list[$key]['company']  = $val['company'];

                global $data;
                $data                  = "";
                $addrArr               = getParentArr("site_area", $val['addrid']);
                $addrArr               = array_reverse(parent_foreach($addrArr, "typename"));
                $list[$key]['addr']    = $addrArr;
                $list[$key]['address'] = $val['address'];

                $archives = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $val['industry']);
                $typename = $dsql->dsqlOper($archives, "results");
                if ($typename) {
                    $list[$key]['industry'] = $typename[0]['typename'];
                } else {
                    $list[$key]['industry'] = "";
                }

                $list[$key]['project'] = $val['project'];
                $list[$key]['logo']    = getFilePath($val['logo']);

                //会员信息
                $list[$key]['userinfo'] = getMemberDetail($val['userid']);

                $list[$key]['tel']     = $val['tel'];
                $list[$key]['qq']      = $val['qq'];
                $list[$key]['click']   = $val['click'];
                $list[$key]['certi']   = $val['certi'];
                $list[$key]['rec']     = $val['rec'];

                $pubdate = (int)$val['pubdate'];
                $list[$key]['pubdate'] = $pubdate;

                $date1 = new DateTime("@$pubdate");
                $date2 = new DateTime("@$now");
                
                //计算两个日期之间的差异
                $diff = date_diff($date1, $date2);
                
                //获取差异的年份部分
                $years = $diff->y;
                $list[$key]['joinYear'] = $years;


                $list[$key]['totalSale']    = (int)$val['totalSale'];  //总销售订单
                $list[$key]['thismonth']    = (int)$val['sv'];  //本月销售订单

                //商品总数
                // $sql                        = $dsql->SetQuery("SELECT `id` FROM `#@__shop_product` WHERE `store` = " . $val['id'] . " AND `state` = 1");
                // $pcount                     = $dsql->dsqlOper($sql, "totalCount");
                $list[$key]['productCount'] = (int)$val['pcount'];

                $xiaoliangarr = array();
                /*销量最高的*/

                if (!empty($title)) {
                    $Sql = $dsql->SetQuery("SELECT `id`,`title`,`mprice`,`price`,`litpic`,`typesales` FROM `#@__shop_product` WHERE `store` = " . $val['id'] . " AND `state` = 1  AND `title` like '%$title%'ORDER BY `sales` DESC limit 0,3");
                } else {
                    $Sql = $dsql->SetQuery("SELECT `id`,`title`,`mprice`,`price`,`litpic`,`typesales` FROM `#@__shop_product` WHERE `store` = " . $val['id'] . " AND `state` = 1   ORDER BY `sales` DESC limit 0,3");
                }
                $Res = $dsql->dsqlOper($Sql, "results");

                if ($Res) {
                    $list[$key]['xlid']            = $Res[0]['id'];
                    $list[$key]['xlprotitle']      = $Res[0]['title'];
                    $list[$key]['xlpromprice']     = $Res[0]['mprice'];
                    $list[$key]['xlproprice']      = $Res[0]['price'];
                    $list[$key]['xllitpic']        = $Res[0]['litpic'];
                    $list[$key]['xllitpicpath']    = getFilePath($Res[0]['litpic']);

                    $daodian   = 0;

                    foreach ($Res as $a => $b) {
                        $xiaoliangarr[$a]['id']         = $b['id'];
                        $xiaoliangarr[$a]['title']      = $b['title'];
                        $xiaoliangarr[$a]['mprice']     = $b['mprice'];
                        $xiaoliangarr[$a]['price']      = $b['price'];
                        $xiaoliangarr[$a]['litpic']     = $b['litpic'];
                        $xiaoliangarr[$a]['litpicpath'] = getFilePath($b['litpic']);

                        $typesales = $b['typesales'] != '' ? explode(',', $b['typesales']) : array();
                        if (in_array('1', $typesales)) {
                            $daodian = 1;
                        }

                        $xiaoliangarr[$a]['daodian']         = $daodian;
                    }
                }
                $list[$key]['xiaoliangarr'] = $xiaoliangarr;

                /*折扣力度最大*/
                $zkSql = $dsql->SetQuery("SELECT `id`,`title`,`mprice`,`price`,`litpic`,`typesales` ,(`mprice` - `price`) as newprice FROM `#@__shop_product` WHERE `store` = " . $val['id'] . " AND `state` = 1  ORDER BY `newprice` DESC limit 0,1");
                $zkRes = $dsql->dsqlOper($zkSql, "results");

                if ($Res) {
                    $list[$key]['zkid']            = $zkRes[0]['id'];
                    $list[$key]['zkprotitle']      = $zkRes[0]['title'];
                    $list[$key]['zkpromprice']     = $zkRes[0]['mprice'];
                    $list[$key]['zkproprice']      = $zkRes[0]['price'];
                    $list[$key]['zklitpic']        = $zkRes[0]['litpic'];
                    $list[$key]['zklitpicpath']    = getFilePath($Res[0]['litpic']);

                    $daodian   = 0;
                    $typesales = $Res[0]['typesales'] != '' ? explode(',', $Res[0]['typesales']) : array();

                    if (in_array('1', $typesales)) {
                        $daodian = 1;
                    }

                    $list[$key]['daodian']        = $daodian;
                }

                /*推荐商品*/
                $tuijianSql = $dsql->SetQuery("SELECT `id`,`title`,`mprice`,`price`,`litpic`,`typesales` FROM `#@__shop_product` WHERE 1=1 AND FIND_IN_SET('0',`flag`) ");
                $tuijianRes = $dsql->dsqlOper($tuijianSql, "results");

                if ($tuijianRes) {

                    $list[$key]['tjid']            = $tuijianRes[0]['id'];
                    $list[$key]['tjprotitle']      = $tuijianRes[0]['title'];
                    $list[$key]['tjpromprice']     = $tuijianRes[0]['mprice'];
                    $list[$key]['tjproprice']      = $tuijianRes[0]['price'];
                    $list[$key]['tjlitpic']        = $Res[0]['litpic'];
                    $list[$key]['tjlitpicpath']    = getFilePath($Res[0]['litpic']);

                    $daodian   = 0;
                    $typesales = $Res[0]['typesales'] != '' ? explode(',', $Res[0]['typesales']) : array();

                    if (in_array('1', $typesales)) {
                        $daodian = 1;
                    }

                    $list[$key]['daodian']        = $daodian;
                }

                //评论数量
                // $sql = $dsql->SetQuery("SELECT c.`id` FROM `#@__shop_common` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`aid` WHERE o.`store` = ".$val['id']." AND c.`ischeck` = 1");
                $sql                       = $dsql->SetQuery("SELECT c.`id` FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`type` = 'shop-order' AND o.`store` = " . $val['id'] . " AND c.`pid` = 0");
                $rcount                    = $dsql->dsqlOper($sql, "totalCount");
                $list[$key]['reviewCount'] = $rcount;

                //好评率
                // $sql = $dsql->SetQuery("SELECT c.`id` FROM `#@__shop_common` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`aid` WHERE o.`store` = ".$val['id']." AND c.`rating` = 1 AND c.`ischeck` = 1");
                $sql     = $dsql->SetQuery("SELECT c.`id` FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`rating` = 1 AND c.`type` = 'shop-order' AND o.`store` = " . $val['id'] . " AND c.`pid` = 0");
                $hpcount = $dsql->dsqlOper($sql, "totalCount");

                $rating                      = $hpcount > 0 ? ($hpcount / $rcount * 100) : 0;
                $list[$key]['rating']        = ($rating > 0 ? sprintf("%.2f", $rating) : 0) . "%";
                $list[$key]['ratingorderby'] = $rating > 0 ? sprintf("%.2f", $rating) : 0;

                $sql     = $dsql->SetQuery("SELECT count(c.`id`) hpcount ,avg(c.`sco1`) s1, avg(c.`sco2`) s2, avg(c.`sco3`) s3 FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`rating` = 1 AND c.`type` = 'shop-order' AND o.`store` = '" . $val['id'] . "'  AND c.`pid` = 0");
                $res    = $dsql->dsqlOper($sql, "results");
                $score1  = $res[0]['s1'] ? $res[0]['s1'] : 0;  //分项1
                $list[$key]['score1']        = $score1;

                $agentime = strtotime(date("Y-m-d H:i:s", strtotime("-7 days")));
                //七天内多少人下单
                $xiaofeisql = $dsql->SetQuery("SELECT `id`  FROM `#@__shop_order` WHERE  `store` = '" . $val['id'] . "' AND `orderdate` >= $agentime ");
                $feiresult = $dsql->dsqlOper($xiaofeisql, "totalCount");
                $list[$key]['dealShop']        = $feiresult;

                //关注收藏
                $collectsql = $dsql->SetQuery("SELECT `id` FROM `#@__member_collect` WHERE `module` = 'shop' AND `aid` = '" . $val['id'] . "' ");
                $collectnum = $dsql->dsqlOper($collectsql, "totalCount");
                $list[$key]['collectnum']        = (int)$collectnum;


                /*查看可用哪些券*/
                $shopquansql = $dsql->SetQuery("SELECT `promotiotype`,`promotio` FROM `#@__shop_quan` WHERE (`shopids` = '" . $val['store'] . "' or FIND_IN_SET('" . $val['id'] . "',`fid`)) AND `sent` >0 AND `state` = 0 AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime' ");
                $shopquanres = $dsql->dsqlOper($shopquansql, "results");
                $quanhave = $lijian = 0;
                if ($shopquanres && is_array($shopquanres)) {
                    $quanhave = 1;
                }
                $list[$key]["quanhave"] = $quanhave;
                $list[$key]["minlogistic"] = 0;
                $uns = array();
                //电商模板
                if ($val['shoptype'] == 0 || $val['shoptype'] == 2) {

                    if ($val['express'] == 1 && $val['merchant_deliver']  == 0) {          //快递
                        $logissql = $dsql->SetQuery("SELECT `devspecification`,`bearFreight` FROM `#@__shop_logistictemplate` WHERE  `sid` = '" . $val['id'] . "' AND `logistype` = 0");
                        //                            echo $logissql;die;
                        $logisres = $dsql->dsqlOper($logissql, "results");
                        if (is_array($logisres) && !empty($logisres)) {
                            foreach ($logisres as $kk => $yy) {
                                if ($yy['bearFreight'] == 0) {
                                    if (unserialize($yy['devspecification'])) {
                                        $deliver = unserialize($yy['devspecification']);
                                        foreach ($deliver['deliveryarea'] as $ko => $kp) {
                                            array_push($uns, $kp['express_postage']);
                                        }
                                    }
                                }
                            }
                        }
                        $list[$key]["minlogistic"] = 0;
                        if ($uns) {
                            if(array_product($uns) === 0){
                                $list[$key]["minlogistic"] = -1;  //如果所有运费都是0，返回-1，前端输出：全店包邮
                            }else{
                                $pos = array_search(min($uns), $uns);          // 数组最小值
                                $list[$key]["minlogistic"] = $uns[$pos] ? $uns[$pos] : 0;
                            }
                        }
                    }
                    if ($val['merchant_deliver'] == 1 && $val['express'] == 0) {   //商家自配
                        $logissql = $dsql->SetQuery("SELECT `express_postage`,`range_delivery_fee_value`,`openFree` FROM `#@__shop_logistictemplate` WHERE  `sid` = '" . $val['id'] . "' AND `logistype` = 1 ");
                        $logisres = $dsql->dsqlOper($logissql, "results");
                        if (is_array($logisres) && !empty($logisres)) {
                            foreach ($logisres as $kk => $yy) {
                                if ($yy['openFree'] == 0) {
                                    if (unserialize($yy['range_delivery_fee_value'])) {
                                        $deliver = unserialize($yy['range_delivery_fee_value']);
                                        array_push($uns, $deliver[0][3]);
                                    } else {
                                        array_push($uns, $yy['express_postage']);
                                    }
                                }
                            }
                        }
                        $list[$key]["minlogistic"] = 0;
                        if ($uns) {
                            if(array_product($uns) === 0){
                                $list[$key]["minlogistic"] = -1;  //如果所有运费都是0，返回-1，前端输出：全店包邮
                            }else{
                                $pos = array_search(min($uns), $uns);          // 数组最小值
                                $list[$key]["minlogistic"] = $uns[$pos] ? $uns[$pos] : 0;
                            }
                        }
                    }
                    if ($val['express'] == 1 && $val['merchant_deliver'] == 1) {
                        //快递
                        $logissql = $dsql->SetQuery("SELECT `devspecification`,`bearFreight` FROM `#@__shop_logistictemplate` WHERE  `sid` = '" . $val['id'] . "' AND `logistype` = 0");
                        $logisres = $dsql->dsqlOper($logissql, "results");
                        $uns = array();
                        if (is_array($logisres) && !empty($logisres)) {
                            foreach ($logisres as $kk => $yy) {
                                if ($yy['bearFreight'] == 0) {
                                    if (unserialize($yy['devspecification'])) {
                                        $deliver = unserialize($yy['devspecification']);
                                        foreach ($deliver['deliveryarea'] as $ko => $kp) {
                                            array_push($uns, $kp['express_postage']);
                                        }
                                    }
                                }
                            }
                        }
                        //商家自赔
                        $sjlogissql = $dsql->SetQuery("SELECT `express_postage`,`range_delivery_fee_value`,`openFree` FROM `#@__shop_logistictemplate` WHERE  `sid` = '" . $val['id'] . "' AND `logistype` = 1 ");
                        $sjlogisres = $dsql->dsqlOper($sjlogissql, "results");
                        if (is_array($sjlogisres) && !empty($sjlogisres)) {
                            foreach ($sjlogisres as $kk => $yy) {
                                if ($yy['openFree'] == 0) {
                                    if (unserialize($yy['range_delivery_fee_value'])) {
                                        $deliver = unserialize($yy['range_delivery_fee_value']);
                                        array_push($uns, $deliver[0][2]);
                                    } else {
                                        array_push($uns, $yy['express_postage']);
                                    }
                                }
                            }
                        }
                        $list[$key]["minlogistic"] = 0;
                        if ($uns) {
                            if(array_product($uns) === 0){
                                $list[$key]["minlogistic"] = -1;  //如果所有运费都是0，返回-1，前端输出：全店包邮
                            }else{
                                $pos = array_search(min($uns), $uns);          // 数组最小值
                                $list[$key]["minlogistic"] = $uns[$pos] ? $uns[$pos] : 0;
                            }
                        }
                    }
                }
            }
        }

        //好评排序
        if ($orderby == 6) {
            array_multisort(array_column($list, 'ratingorderby'), SORT_ASC, $list);
        } elseif ($orderby == 7) {

            array_multisort(array_column($list, 'ratingorderby'), SORT_DESC, $list);
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 店铺详细信息
     * @return array
     */
    public function storeDetail($oneself = 0)
    {
        global $dsql;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $langData;
        $listingDetail = array();
        $id            = $this->param;
        $uid           = $userLogin->getMemberID();

        $userinfo = $userLogin->getMemberInfo();

        $uid     = $userinfo['is_staff'] == 1 ? $userinfo['companyuid'] : $uid;
        $id      = is_numeric($id) ? $id : (is_array($id) ? $id['id'] : '');
        $gettype = is_numeric($this->param) ? 0 : $this->param['gettype'];
        if (!is_numeric($id) && $uid == -1) {
            return array("state" => 200, "info" => '格式错误！');
        }

        $where = '';
        if ((int)$gettype == 0) {

            $where = " AND `state` = 1";
        }
        if (!is_numeric($id)) {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $uid);
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $id    = $results[0]['id'];
                $where = "";
            } else {
                return array("state" => 200, "info" => $langData['shop'][4][0]);  //该会员暂未开通商铺！
            }
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_store` WHERE `id` = " . $id . $where);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            //取其中商品中的图片
            if(!$oneself){
                $sql = $dsql->SetQuery("SELECT `litpic` FROM `#@__shop_product` WHERE `litpic`!='' AND `store` = '$id' ORDER BY RAND() LIMIT 1");
                $res = $dsql->dsqlOper($sql, "results");
                if (!empty($res)) {
                    $results[0]["bgphoto"] = !empty($res[0]["litpic"]) ? getFilePath($res[0]["litpic"]) : '';
                }
            }

            if ($results[0]['lng'] && $results[0]['lat']) {
                $results[0]['lnglat'] = $results[0]['lng'] . ',' . $results[0]['lat'];
            }

            //获取快递模板价格最低
            if(!$oneself){
                $logissql = $dsql->SetQuery("SELECT e.`devspecification` FROM `#@__shop_product` t  LEFT JOIN `#@__shop_logistictemplate` e ON t.`logistic` = e.`id` WHERE t.`store` = '" . $results[0]['id'] . "'");
                $logisres = $dsql->dsqlOper($logissql, "results");
                $uns = array();
                foreach ($logisres as $kk => $yy) {
                    if (unserialize($yy['devspecification'])) {
                        $deliver = unserialize($yy['devspecification']);
                        foreach ($deliver['deliveryarea'] as $ko => $kp) {
                            array_push($uns, $kp['express_postage']);
                        }
                    }
                }
                $results[0]["minlogistic"] = 0;
                if ($uns) {
                    $pos = array_search(min($uns), $uns);          // 数组最小值
                    $results[0]["minlogistic"] = $uns[$pos] ? $uns[$pos] : 0;
                }
            }
            global $data;
            $data               = "";
            $addrName           = getParentArr("site_area", $results[0]['addrid']);
            $addrName           = array_reverse(parent_foreach($addrName, "typename"));
            $results[0]['addr'] = $addrName;

            $industry                 = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $results[0]['industry']);
            $industry                 = $dsql->dsqlOper($industry, "results");
            $results[0]['industryid'] = $results[0]['industry'];
            $results[0]['industry']   = $industry[0]['typename'];

            $results[0]["logoSource"] = $results[0]["logo"];
            $results[0]["logo"]       = getFilePath($results[0]["logo"]);

            $results[0]["litpicpath"] = getFilePath($results[0]["litpic"]);
            $results[0]["wechatqrSource"] = $results[0]["wechatqr"];
            $results[0]["wechatqr"]       = !empty($results[0]["wechatqr"]) ? getFilePath($results[0]["wechatqr"]) : '';
            $typesalesarr = array();
            if ($results[0]['toshop']  ==  1) {
                $typesalesarr[] = 1;
            }
            if ($results[0]['merchant_deliver'] == 1) {
                $typesalesarr[] = 3;
            }
            if ($results[0]['express'] ==  1) {
                $typesalesarr[] = 4;
            }
            if ($results[0]['distribution'] == 1) {
                $typesalesarr[] = 2;
            }
            $typesales = implode(",", $typesalesarr);
            $results[0]["typesalesarr"]  = $typesales;
            $this->param   = "";
            $channelDomain = $this->config();
            $domainInfo    = getDomain('shop', 'shop_store', $id);

            /**
             * 默认 || 模块配置为子目录并且信息配置为绑定子域名则访问方式转为默认
             * （因为子域名是随模块配置变化，如果模块配置为子目录地址为乱掉。）
             * 如：模块配置：http://menhu168.com/shop
             * 如果信息绑定子域名则会变成：http://demo.menhu168.com/shop
             * 这样会导致系统读取信息错误
             */
            if ($results[0]["domaintype"] == 0 || ($channelDomain['subDomain'] == 2 && $results[0]["domaintype"] == 2)) {

                $param                = array(
                    "service"  => "shop",
                    "template" => "store-detail",
                    "id"       => $id
                );
                $urlParam             = getUrlPath($param);
                $results[0]["domain"] = $urlParam;

                //绑定主域名
            } elseif ($results[0]["domaintype"] == 1) {

                $results[0]["domain"]    = $cfg_secureAccess . $domainInfo['domain'];
                $results[0]["domainexp"] = date("Y-m-d H:i:s", $domainInfo['expires']);
                $results[0]["domaintip"] = $domainInfo['note'];

                //绑定子域名
            } elseif ($results[0]["domaintype"] == 2) {

                $results[0]["domain"]    = str_replace("http://", "http://" . $domainInfo['domain'] . ".", $channelDomain['channelDomain']);
                $results[0]["domain"]    = str_replace("https://", "https://" . $domainInfo['domain'] . ".", $channelDomain['channelDomain']);
                $results[0]["domainexp"] = date("Y-m-d H:i:s", $domainInfo['expires']);
                $results[0]["domaintip"] = $domainInfo['note'];
            }

            /*优惠券*/

            $quanarr  = array();
            $nowtime = GetMkTime(time());
            if(!$oneself){
                $storesql = $dsql->SetQuery("SELECT `id`,`promotio`,`basic_price`,`promotiotype`,`ktime`,`etime`,`limitcount`,`id`,`bear` FROM `#@__shop_quan` WHERE (`shopids` = '$id' or `bear` = 1) AND `shoptype` ='0' AND `sent` >0 AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime'");

                $storeres = $dsql->dsqlOper($storesql, "results");

                if ($storeres && is_array($storeres)) {

                    foreach ($storeres as $k => $v) {

                        $quanarr[$k]['promotio']     = $v['promotio'];
                        $quanarr[$k]['basic_price']  = $v['basic_price'];
                        $quanarr[$k]['promotiotype'] = $v['promotiotype'];
                        $quanarr[$k]['ktime']        = $v['ktime'];
                        $quanarr[$k]['ymdktime']     = date('Y.m.d', $v['ktime']);
                        $quanarr[$k]['etime']        = $v['etime'];
                        $quanarr[$k]['ymdetime']     = date('Y.m.d', $v['etime']);
                        $quanarr[$k]['limit']        = $v['limitcount'];
                        $quanarr[$k]['id']           = $v['id'];
                        $quanarr[$k]['bear']           = $v['bear'];

                        /*自己有没有领券*/
                        $myquansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_quanlist` WHERE `state` = 0 AND `userid` = '$uid' AND `id` = '" . $v['id'] . "'");

                        $myquancount = $dsql->dsqlOper($myquansql, "totalCount");

                        $is_selflingqu = 0;
                        if ($myquancount >= $v['limitcount']) {
                            $is_selflingqu = 1;
                        }
                        $quanarr[$k]['is_selflingqu'] = $is_selflingqu;
                    }
                }
            }
            $results[0]['quanarr'] = $quanarr;


            //验证是否已经收藏
            $params = array(
                "module" => "shop",
                "temp"   => "store-detail",
                "type"   => "add",
                "id"     => $id,
                "check"  => 1
            );
            $collect               = checkIsCollect($params);
            $results[0]['collect'] = $collect == "has" ? 1 : 0;

            $collectsql = $dsql->SetQuery("SELECT `id` FROM `#@__member_collect` WHERE `module` = 'shop' AND `action` = 'store-detail' AND `aid` = '$id'");
            $collectnum = $dsql->dsqlOper($collectsql, "totalCount");
            $results[0]['collectnum'] = (int)$collectnum;

            //评论数量
            // $sql = $dsql->SetQuery("SELECT c.`id` FROM `#@__shop_common` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`aid` WHERE o.`store` = '$id' AND c.`ischeck` = 1");
            $sql    = $dsql->SetQuery("SELECT c.`id` FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`type` = 'shop-order' AND o.`store` = '$id' AND c.`pid` = 0");
            $rcount = $dsql->dsqlOper($sql, "totalCount");
            //好评率
            // $sql = $dsql->SetQuery("SELECT c.`id` FROM `#@__shop_common` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`aid` WHERE o.`store` = '$id' AND c.`rating` = 1 AND c.`ischeck` = 1");
            $sql     = $dsql->SetQuery("SELECT count(c.`id`) hpcount ,avg(c.`sco1`) s1, avg(c.`sco2`) s2, avg(c.`sco3`) s3 FROM `#@__public_comment_all` c LEFT JOIN `#@__shop_order` o ON o.`id` = c.`oid` WHERE o.`orderstate` = 3 AND c.`ischeck` = 1 AND c.`rating` = 1 AND c.`type` = 'shop-order' AND o.`store` = '$id' AND c.`pid` = 0");
            $res    = $dsql->dsqlOper($sql, "results");

            $score1  = $res[0]['s1'];  //分项1
            $score2  = $res[0]['s2'];  //分项2
            $score3  = $res[0]['s3'];  //分项3
            $hpcount = $res[0]['hpcount'];

            $results[0]['score1']      = number_format($score1, 1); /*描述相符*/
            $results[0]['score2']      = number_format($score2, 1); /*物流服务*/
            $results[0]['score3']      = number_format($score3, 1); /*服务态度*/

            $rating               = $hpcount > 0 ? ($hpcount / $rcount * 100) : 0;
            $results[0]['rating'] = ($rating > 0 ? sprintf("%.2f", $rating) : 0) . "%";

            //会员信息
            $userinfo = getMemberDetail($results[0]['userid'], 1);
            $results[0]['certifyState'] = $userinfo['certifyState'];
            $results[0]['promotion']    = $userinfo['promotion'];


            //图集
            $imglist = array();
            $pics    = str_replace('||', '', $results[0]['pic']);
            if (!empty($pics)) {
                $pics = explode("###", $pics); //print_R($pics);exit;
                foreach ($pics as $key => $value) {
                    if (!empty($value)) {
                        $imglist[$key]['path']       = getFilePath($value);
                        $imglist[$key]['pathSource'] = $value;
                    }
                }
            } else {
                //$imglist[$key]['path'] = '';
            }
            $results[0]['pics'] = $imglist;

            //分店数量
            if(!$oneself){
                $sql = $dsql->SetQuery("SELECT count(`id`) totalCount FROM `#@__shop_branch_store` WHERE `state` = 1 AND `branchid` = " . $id);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $results[0]['branchCount'] = $ret[0]['totalCount'];
                }
            }


            /*查询店铺活动*/
            $nowtime = time();
            $huodongarr = array();
            if(!$oneself){
                $huodongsql = $dsql->SetQuery("SELECT h.`id` hid, h.`huodongprice`,h.`huodongtype`,h.`ktime`,h.`etime`,p.`title`,p.`litpic`,p.`id`,p.`mprice` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` WHERE h.`sid` = '$id' AND h.`state` = 1 AND p.`state` = 1 ORDER BY h.`pubdate` DESC");
                $huodongres = $dsql->dsqlOper($huodongsql, "results");
                if ($huodongres && is_array($huodongres)) {

                    foreach ($huodongres as $index => $huodongre) {

                        if ($huodongre['ktime'] <= GetMkTime(time()) && $huodongre['etime'] <= GetMkTime(time())) {

                            $huodongarr[$index]['conduct'] = 3;
                        } elseif ($huodongre['ktime'] > GetMkTime(time())) {
                            $huodongarr[$index]['conduct'] = 2;
                        } else {
                            $huodongarr[$index]['conduct'] = 2;
                        }

                        $huodongarr[$index]['huodongprice'] = $huodongre['huodongprice'];
                        $huodongarr[$index]['huodongtype']  = $huodongre['huodongtype'];
                        $huodongarr[$index]['title']        = $huodongre['title'];
                        $huodongarr[$index]['ktime']        = $huodongre['ktime'];
                        $huodongarr[$index]['etime']        = $huodongre['etime'];
                        $huodongarr[$index]['hid']          = $huodongre['hid'];
                        $huodongarr[$index]['pid']          = $huodongre['id'];
                        $huodongarr[$index]['mprice']       = $huodongre['mprice'];
                        $huodongarr[$index]['litpic']       = $huodongre['litpic'] != '' ? getFilePath($huodongre['litpic']) : '';

                        $huodongjoinnum = 0;
                        $huodongjoinarr = array();
                        if ($huodongre['huodongtype'] == 4) {

                            $Sql            = $dsql->SetQuery("SELECT t.`id`,m.`photo` FROM `#@__shop_tuanpin` t LEFT JOIN `#@__member` m ON t.`userid` = m.`id` WHERE 1=1 AND t.`proid` = '" . $huodongre['id'] . "' AND t.`state` !=2 AND t.`state` !=4");
                            $huodongjoinnum = $dsql->dsqlOper($Sql, "totalCount");
                            $huodongjoinre  = $dsql->dsqlOper($Sql . " LIMIT 0,2", "results");
                            if ($huodongjoinre) {

                                foreach ($huodongjoinre  as $a => $b) {
                                    $huodongjoinarr[$a]['photo']        = $b['photo'];
                                    $huodongjoinarr[$a]['photopath']    = getFilepath($b['photo']);
                                }
                            }
                        }
                        $huodongarr[$index]['huodongjoinnum']          = (int)$huodongjoinnum;
                        $huodongarr[$index]['huodongjoinarr']          = $huodongjoinarr;
                        $param                     = array(
                            "service"  => "shop",
                            "template" => "detail",
                            "id"       => $huodongre['id']
                        );
                        $huodongarr[$index]['url'] = getUrlPath($param);
                    }
                }
                array_multisort(array_column($huodongarr, 'conduct'), SORT_DESC, $huodongarr);
            }
            $results[0]['huodongarr'] = $huodongarr;
            /*查询砍价活动*/

            /*商家资质*/
            $Sql = $dsql->SetQuery("SELECT `id`,`typename` FROM `#@__shop_authattr` ORDER BY `weight` ASC");
            $Res = $dsql->dsqlOper($Sql, "results");
            $authattrtypearr = array();

            $authattrparam   = $results[0]['authattrparam'] != '' ? json_decode($results[0]['authattrparam'], true) : array();
            foreach ($authattrparam as $c => $d) {
                $authattrparam[$c]['imagesource'] = getFilePath($d['image']);
            }

            $authattrparamid = array_column($authattrparam, null, 'id');

            if ($authattrparam) {
                foreach ($Res as $a => $b) {
                    $resarr = array();
                    if (!array_key_exists($b['id'], $authattrparamid)) {
                        $resarr['id']       = $b['id'];
                        $resarr['typename'] = $b['typename'];
                        array_push($authattrparam, $resarr);
                    }
                }
            }

            //以资质表为主
            $_authattrtypearr = array();
            if (is_array($Res)) {
                foreach ($Res as $key => $val) {
                    if ($authattrparam[$key]) {
                        array_push($_authattrtypearr, $authattrparam[$key]);
                    }
                }
            }

            $results[0]['authattrtypearr'] = $_authattrtypearr;
            /*营业日*/
            $day = array('1' => '周一', '2' => '周二', '3' => '周三', '4' => '周四', '5' => '周五', '6' => '周六', '7' => '周日',);

            $daystr = '';
            $businessday = $results[0]['businessday'] != '' ? explode(',', $results[0]['businessday']) : array();
            if ($businessday) {
                for ($i = 1; $i <= 7; $i++) {
                    if (in_array($i, $businessday)) {
                        $daystr .= $day[$i] . ' ';
                    }
                }
            }
            $results[0]['daystr']     = $daystr;
            $results[0]['daystrarr']  = $businessday;

            /*时间段*/
            $period =  $results[0]['period'] != '' ? unserialize($results[0]['period']) : array();

            $periodarr = array();
            if ($period) {
                foreach ($period as $item) {
                    array_push($periodarr, $item['start'] . '-' . $item['stop']);
                }
            }

            $results[0]['periodarr']     = $periodarr;
            $results[0]['periodstr']     = join(',', $periodarr);

            $start1 = (int)str_replace(":", "", $results[0]["start_time1"]);
            $end1   = (int)str_replace(":", "", $results[0]["end_time1"]);
            $start2 = (int)str_replace(":", "", $results[0]["start_time2"]);
            $end2   = (int)str_replace(":", "", $results[0]["end_time2"]);
            $start3 = (int)str_replace(":", "", $results[0]["start_time3"]);
            $end3   = (int)str_replace(":", "", $results[0]["end_time3"]);

            $s1 = GetMkTime(date("Y-m-d ", time()) . $results[0]["start_time1"]);
            $e1 = $start1 > $end1 ? GetMkTime(date(
                "Y-m-d ",
                strtotime("+1 day")
            ) . $results[0]["end_time1"]) : GetMkTime(date(
                "Y-m-d ",
                time()
            ) . $results[0]["end_time1"]);
            $s2 = GetMkTime(date("Y-m-d ", time()) . $results[0]["start_time2"]);
            $e2 = $start2 > $end2 ? GetMkTime(date(
                "Y-m-d ",
                strtotime("+1 day")
            ) . $results[0]["end_time2"]) : GetMkTime(date(
                "Y-m-d ",
                time()
            ) . $results[0]["end_time2"]);
            $s3 = GetMkTime(date("Y-m-d ", time()) . $results[0]["start_time3"]);
            $e3 = $start3 > $end3 ? GetMkTime(date(
                "Y-m-d ",
                strtotime("+1 day")
            ) . $results[0]["end_time3"]) : GetMkTime(date(
                "Y-m-d ",
                time()
            ) . $results[0]["end_time3"]);

            $weeks      = explode(",", $results[0]['businessday']);
            $dayweek    = date("w") == 0 ? 7 : date("w");
            $yingyeWeek = 0;
            $yingyeTime = 0;
            $state      = 0;
            $time = GetMkTime(time());
            if (in_array($dayweek, $weeks)) {
                $yingyeWeek = 1;
                if (($s1 < $time && $e1 > $time) or ($s2 < $time && $e2 > $time) or ($s3 < $time && $e3 > $time)) {
                    $yingyeTime = 1;
                    $state      = 1;
                } else {
                    $state = 0;
                }
            } else {
                $state = 0;
            }
            $results[0]["yingye"]     = $state;
            $results[0]["yingyeWeek"] = $yingyeWeek;
            $results[0]["yingyeTime"] = $yingyeTime;

            $facilityarr = $results[0]['facility'] != '' ? explode(",", $results[0]['facility']) : array();
            $results[0]['facilityarr']     = $facilityarr;
            $results[0]['videosource']     = $results[0]['video'];
            $results[0]['video']           = getFilePath($results[0]["video"]);

            $madvertisearr = $results[0]['madvertise'] != '' ? explode('||', $results[0]['madvertise']) : array();

            $newmadvertisearr = array();
            if ($madvertisearr) {
                foreach ($madvertisearr as $key => $value) {
                    $madver = explode("###", $value);
                    $newmadvertisearr[$key]['picpath']   = getFilePath($madver[0]);
                    $newmadvertisearr[$key]['picsource'] = $madver[0];
                    $newmadvertisearr[$key]['title']     = $madver[1];
                    $newmadvertisearr[$key]['link']      = $madver[2];
                }
            }

            $padvertisearr    = $results[0]['padvertise'] != '' ? explode('||', $results[0]['padvertise']) : array();

            $newpadvertisearr = array();
            if ($padvertisearr) {
                foreach ($padvertisearr as $key1 => $value1) {
                    $padver = explode("###", $value1);
                    $newpadvertisearr[$key1]['picpath']   = getFilePath($padver[0]);
                    $newpadvertisearr[$key1]['picsource'] = $padver[0];
                    $newpadvertisearr[$key1]['title']     = $padver[1];
                    $newpadvertisearr[$key1]['link']      = $padver[2];
                }
            }
            $results[0]['madvertisear']     = $newmadvertisearr;
            $results[0]['padvertisear']     = $newpadvertisearr;

            $explosionarr = $results[0]['explosion'] != '' ? explode(",", $results[0]['explosion']) : array();

            $results[0]['explosionidarr']     = $explosionarr;
            $newexplosionarr = $expkan =  array();

            /*目前用不到*/
            // if(!$oneself){
                foreach ($explosionarr as $key => $value) {

                    if(!$oneself){
                        $Sql = $dsql->SetQuery("SELECT p.`id`,p.`title`,p.`litpic`,p.`sales`,h.`huodongprice`,p.`mprice`,h.`huodongtype` FROM `#@__shop_product` p LEFT JOIN `#@__shop_huodongsign` h ON p.`id` = h.`proid` WHERE 1=1 AND p.`id` = '$value' AND h.`state` = 1 AND h.`etime` > '$time' ");
                    }else{
                        $Sql = $dsql->SetQuery("SELECT p.`id`,p.`title`,p.`litpic`,p.`sales`,h.`huodongprice`,p.`mprice`,h.`huodongtype` FROM `#@__shop_product` p LEFT JOIN `#@__shop_huodongsign` h ON p.`id` = h.`proid` WHERE 1=1 AND p.`id` = '$value' ");
                    }
                    $Res = $dsql->dsqlOper($Sql, "results");

                    if ($Res) {
                        if ($Res[0]['huodongtype'] != 3) {
                            $newexplosionarr[$key]['id']         = $Res[0]['id'];
                            $newexplosionarr[$key]['title']      = $Res[0]['title'];
                            $newexplosionarr[$key]['litpic']     = $Res[0]['litpic'];
                            $newexplosionarr[$key]['sales']      = $Res[0]['sales'];
                            $newexplosionarr[$key]['litpicpath'] = getFilePath($Res[0]['litpic']);
                        } else {
                            $newexplosionarr[$key]['id']         = $Res[0]['id'];
                            $newexplosionarr[$key]['title']      = $Res[0]['title'];
                            $newexplosionarr[$key]['litpic']     = $Res[0]['litpic'];
                            $newexplosionarr[$key]['litpicpath'] = getFilePath($Res[0]['litpic']);
                        }
                        $newexplosionarr[$key]['url'] = getUrlPath(array('service' => 'shop', 'template' => 'detail', 'id' => $Res[0]['id']));
                    }
                }
            // }
            $results[0]['explosionarr']     = $newexplosionarr;

            /*查询有多少商品*/
            if(!$oneself){
                $proSql = $dsql->SetQuery("SELECT count(CASE WHEN `typesales` = 1 THEN `id` ELSE null END) as daodian,
                                                    count(CASE WHEN `typesales` = 2 THEN `id` ELSE null END) as pt, 
                                                    count(CASE WHEN `typesales` = 3 THEN `id` ELSE null END) as shangjia, 
                                                    count(CASE WHEN `typesales` = 4 THEN `id` ELSE null END) as kuaidi
                                                    FROM `#@__shop_product` WHERE 1=1 AND  `store` = '$id'");
                $Res = $dsql->dsqlOper($proSql, "results");

                $results[0]['daodiancount']  = (int)$Res[0]['daodian'];
                $results[0]['ptcount']       = (int)$Res[0]['pt'];
                $results[0]['shangjiacount'] = (int)$Res[0]['shangjia'];
                $results[0]['kuaidicount']   = (int)$Res[0]['kuaidi'];
            }
            return $results[0];
        }
    }


    /**
     * 店铺商品分类
     * @return array
     */
    public function category()
    {
        global $dsql;
        $store = $type = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $store    = (int)$this->param['store'];
                $type     = (int)$this->param['type'];
                $page     = (int)$this->param['page'];
                $pageSize = (int)$this->param['pageSize'];
                $son      = $this->param['son'] == 0 ? false : true;
            }
        }

        if (empty($store)) {
            global $userLogin;
            $userid = $userLogin->getMemberID();
            $sql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
            $ret    = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $store = $ret[0]['id'];
            } else {
                return array("state" => 200, "info" => '格式错误！');
            }
        }

        $results = $dsql->getTypeList($type, "shop_category", $son, $page, $pageSize, " AND `type` = $store");
        if ($results) {
            return $results;
        }
    }


    /**
     * 商品列表
     * @return array
     */
    public function slist()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        include HUONIAOINC . "/config/shop.inc.php";
        $fenXiao = (int)$customfenXiao;

        global $cfg_returnPointState;
        global $cfg_returnPoint_shop;
        global $cfg_fenxiaoState;
        global $cfg_fenxiaoLevel;
        global $cfg_fenxiaoAmount;

        $userid = $userLogin->getMemberID();

        $pageinfo = $list = array();
        $typeid   = $title = $item = $specification = $brand = $store = $storetype = $price = $flag = $limited = $image = $orderby = $u = $state = $page = $pageSize = $where = $where1 = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $typeid        = (int)$this->param['typeid'];
                $shoptypeid        = $this->param['shoptypeid'];
                $title         = $this->param['title'] ? $this->param['title'] : $this->param['keywords'];
                $barcode       = $this->param['barcode'];
                $item          = $this->param['item'];
                $specification = $this->param['specification'];
                $brand         = $this->param['brand'];
                $store         = $this->param['store'];
                $storetype     = $this->param['storetype'];
                $price         = $this->param['price'];
                $flag          = $this->param['flag'];
                $storeFlag     = $this->param['storeFlag'];
                $limited       = $this->param['limited'];
                $image         = $this->param['image'];
                $orderby       = $this->param['orderby'];
                $u             = $this->param['u'];
                $state         = $this->param['state'];
                $time          = $this->param['time'];
                $hourly        = $this->param['hourly'];
                $page          = $this->param['page'];
                $pageSize      = (int)$this->param['pageSize'];
                $addrid        = $this->param['addrid'];
                $foodid        = $this->param['foodid'];
                $huodongtype   = $this->param['huodongtype'];
                $gettype       = $this->param['gettype'];
                $userlng       = $this->param['userlng'];
                $userlat       = $this->param['userlat'];
                $feature       = $this->param['feature'];
                $hottuan       = (int)$this->param['hottuan'];
                $cityid        = (int)$this->param['cityid'];
                $discount      = (int)$this->param['discount'];
                $moduletype    = (int)$this->param['moduletype'];
                $typesales     = (int)$this->param['typesales'];
                $circle        = $this->param['circle'];               //商圈
                $pagetype      = $this->param['pagetype'];               //1本地团购 2电商
                $tc            = $this->param['tc'];  //同城商家
                $id            = $this->param['id'];  //指定商品id，多个用,分隔
            }
        }

        //数据共享

        if ($u != 1) {
            $where = " AND s.`state` = 1 AND p.`state` = 1";

            require(HUONIAOINC . "/config/shop.inc.php");
            $dataShare = (int)$customDataShare;
            if (!$dataShare) {
                $cityid = getCityId($this->param['cityid']);
                if ($cityid) {
                    $where .= " AND s.`cityid` = " . $cityid;
                }
            }

            if (($moduletype == 1 || $moduletype == 3)  || $pagetype == 1) {
                $cityid = getCityId($this->param['cityid']);
                if ($cityid) {
                    $where .= " AND s.`cityid` = " . $cityid;
                }
            }
        }

        if ($tc == 1) {
            $cityid = getCityId($this->param['cityid']);
            if ($cityid) {
                $where .= " AND s.`cityid` = " . $cityid;
            }
        }

        //指定商品id
        if($id){
            $_id = array();
            $_idArr = explode(',', $id);
            foreach($_idArr as $v){
                $v = (int)$v;
                if($v){
                    array_push($_id, $v);
                }
            }
            $id = join(',', $_id);
            $where .= " AND p.`id` IN ($id)";
        }

        //商圈
        if (!empty($circle)) {
            $where .= " AND find_in_set($circle, `circle`)";
        }

        if ($pagetype == 1) {
            $where .= " AND s.`shoptype` = 1 AND p.`promotype` = 1";
        }
        if ($pagetype == 2) {
            $where .= " AND (s.`shoptype` = 2 OR s.`shoptype` = 0) AND p.`promotype` = 2";
        }

        //以图搜图
        if ($image) {
            $this->param = array('url' => $image);
            $ids         = $this->searchByImage();
            if ($ids['state']) {
                return $ids;
            }
            if ($ids) {
                $idArr = join(',', $ids);

                $where .= " AND p.`id` IN ($idArr)";
            } else {
                $where .= " AND 1 = 2";
            }
        }
        if (!empty($foodid)) {
            $where .= " AND p.`id` IN ($foodid)";
        }

        /*typesales 到店 1   商家配送2  平台配送3 快递4*/
        if ($moduletype == 2) {
            $where .= " AND (FIND_IN_SET('4',`typesales`) or FIND_IN_SET('3',`typesales`) or FIND_IN_SET('2',`typesales`) or `typesales` = '')";
            /*精选商品*/
        } elseif ($moduletype == 1) {
            $where .= " AND (FIND_IN_SET('1',`typesales`) or FIND_IN_SET('2',`typesales`) or FIND_IN_SET('3',`typesales`)) AND `shoptype` = 1";
            /*本地优惠*/
        } elseif ($moduletype == 3) {
            /*到店*/
            $where .= " AND FIND_IN_SET('1',`typesales`)";
        } elseif ($moduletype == 4) {
            /*送到家*/
            //            $where .= " AND (FIND_IN_SET('2',`typesales`) or FIND_IN_SET('4',`typesales`) or FIND_IN_SET('3',`typesales`))";
            $where .= " AND !FIND_IN_SET('1',`typesales`)";
        } elseif ($moduletype == 5) {
            /*同城配送*/
            $where .= " AND (FIND_IN_SET('2',`typesales`) or FIND_IN_SET('3',`typesales`))";
        }

        if($typesales){
            $where .= " AND FIND_IN_SET(".$typesales.",`typesales`)";
        }

        $juli = '';
        if ($orderby == 11 && $userlat && $userlng) {
            $juli = ", ROUND(
                6378.138 * 2 * ASIN(
                    SQRT(POW(SIN(($userlat * PI() / 180 - s.`lat` * PI() / 180) / 2), 2) + COS($userlat * PI() / 180) * COS(s.`lat` * PI() / 180) * POW(SIN(($userlng * PI() / 180 - s.`lng` * PI() / 180) / 2), 2))
                ) * 1000
            ) AS juli";
        }
        $hp = '';
        if ($orderby == 12) {

            $hp = " , (SELECT count(`id`) FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `rating` = 1 AND `type` = 'shop-order' AND `aid` = p.`id`) as hp";
        }
        //限时抢 准点秒
        //限时抢筛选
        $leftsql = $groupby = '';
        if (!empty($limited)) {
            $now = GetMkTime(time());

            //未开始
            $leftsql = " LEFT JOIN `#@__shop_huodongsign` h ON p.`id` =  h.`proid`";
            $groupby = " GROUP BY  h.`proid`";

            if ($limited == "1") {

                $where .= " AND (h.`huodongtype` = 1  OR h.`huodongtype` = 2) AND h.`ktime` > $now";

                //进行中
            } elseif ($limited == "2") {

                $where .= " AND (h.`huodongtype` = 1  OR h.`huodongtype` = 2) AND h.`ktime` <= $now AND h.`etime` > $now";

                //已结束
            } elseif ($limited == "3") {

                $where .= " AND (h.`huodongtype` = 1  OR h.`huodongtype` = 2) h.`etime` < $now";
            } elseif ($limited == "4") { //限时抢购
                // $start = $time - 3600;
                $where .= " AND h.`huodongtype` = 1 AND h.`ktime` <= $now AND h.`etime` >= $now";
            } elseif ($limited == "5") { //限时秒杀
                $start = time();
                //$where .= " AND FIND_IN_SET(4, p.`flag`) AND `ketime` >= '$start'";
                $where .= " AND h.`huodongtype` = 2 AND h.`ktime` <= $now AND h.`etime` >= $now";
            } elseif ($limited == "6") { //不包括限时抢购 限时秒杀
                $where .= " AND INSTR(p.`flag`,'3')=0 AND INSTR(p.`flag`,'4')=0";
            }

            //正常情况下不显示未开始和已结束的商品
        } else {

            //            if($u != 1){
            //                $now = GetMkTime(time());//OR (p.`kstime` <= $now AND p.`ketime` > $now) OR (p.`kstime` = 0 AND p.`ketime` = 0)
            //                $where .= " AND (
            //					(p.`kstime` <= $now AND p.`ketime` > $now) OR
            //					(p.`btime` <= $now AND p.`etime` > $now) OR
            //					(p.`btime` = 0 AND p.`etime` = 0 AND p.`kstime` = 0 AND p.`ketime` = 0)
            //				)";
            //            }

        }


        //遍历分类
        if (!empty($typeid)) {
            if ($dsql->getTypeList($typeid, "shop_type")) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($dsql->getTypeList($typeid, "shop_type"));
                $lower    = $typeid . "," . join(',', $lower);
            } else {
                $lower = $typeid;
            }
            $where .= " AND p.`type` in ($lower)";
        }

        //商家分类
        if (!empty($shoptypeid) && is_numeric($shoptypeid)) {
            if ($dsql->getTypeList($shoptypeid, "shop_category")) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($dsql->getTypeList($shoptypeid, "shop_category"));
                $lower    = $shoptypeid . "," . join(',', $lower);
            } else {
                $lower = $shoptypeid;
            }
            $where .= " AND p.`category` in ($lower)";
        }

        //移动端商家搜索
        if (!empty($shoptypeid) && !is_numeric($shoptypeid)) {
            $where .= " AND s.`shoptype` = 1";
        }

        if (!empty($feature)) {
            $where .= " AND FIND_IN_SET('$feature',s.`facility`)";
        }

        if (!empty($title)) {

            //搜索记录
            siteSearchLog("shop", $title);

            $where .= " AND p.`title` like '%" . $title . "%'";
        }

        if (!empty($barcode)) {
            $where .= " AND p.`barcode` = '$barcode'";
        }

        $huodongleftjoin = '';
        if (!empty($discount)) {
            if ($discount == 1) {
                /*随时退*/
                $where .= " AND p.`is_tuikuan` = '1'";
            } elseif ($discount == 2) {
                /*活动促销*/
                $now = GetMkTime(time());
                $huodongleftjoin = " LEFT JOIN `#@__shop_huodongsign` h ON p.`id` = h.`proid`";
                $where .= " AND h.`etime` > $now";
            } elseif ($discount == 3) {
                /*新店*/
                $agentime = strtotime(date("Y-m-d H:i:s", strtotime("-3 month")));
                $where .= " AND s.`pubdate` >= '$agentime'";
            } elseif ($discount == 4) {
                /*货到付款*/
                $where .= " AND s.`delivery` = 1";
            } elseif ($discount == 5) {
                /*特价*/
                $where .= " AND FIND_IN_SET('1',p.`flag`)";
            }
        }

        global $siteCityInfo;
        $siteCityInfoName = $siteCityInfo['name'];
        if (!empty($addrid) && $siteCityInfoName != '全国') {
            $areaArr = $dsql->getTypeList($addrid, "site_area");
            if ($areaArr) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($areaArr);
                $lower    = $addrid . "," . join(',', $lower);
            } else {
                $lower = $addrid;
            }
            $where .= " AND s.`addrid` in ($lower)";
        }
        //
        //        if (!empty($cityid)) {
        //            $where .= " AND s.`cityid` = $cityid";
        //        }

        //字段筛选
        if (!empty($item)) {
            $item_   = explode(";", $item);
            $itemArr = array();
            foreach ($item_ as $key => $value) {
                $val       = explode(":", $value);
                $itemArr[] = "p.`property` like '%" . $val[0] . "#" . $val[1] . "%'";
            }
            if (!empty($itemArr)) {
                $where .= " AND (" . join(" AND ", $itemArr) . ")";
            } else {
                $where .= " AND 1 = 2";
            }
        }

        if ($hottuan == 1) {
            $where .= " AND p.`promotype` = 1";
        }

        //规格筛选
        if (!empty($specification)) {
            $speList = array();
            $nspe    = array();
            $speArr  = explode(";", $specification);
            foreach ($speArr as $key => $value) {
                $v = explode(":", $value);
                array_push($nspe, $v[1]);
            }
            $specation = count($nspe) > 1 ? descartes($nspe) : $nspe;
            foreach ($specation as $key => $val) {
                if (is_array($val)) {
                    array_push($speList, join("-", $val));
                } else {
                    array_push($speList, $val);
                }
            }

            $speArr = array();
            foreach ($speList as $k => $v) {
                $speArr[] = "p.`specification` like '%" . $v . ",%' OR p.`specification` like '%" . $v . "-%'";
            }
            if (!empty($speArr)) {
                $where .= " AND (" . join(" AND ", $speArr) . ")";
            } else {
                $where .= " AND 1 = 2";
            }
        }


        //品牌
        if (!empty($brand)) {
            if (strstr($brand, ',')) {
                $where .= " AND p.`brand` in (" . $brand . ")";
            } else {
                $where .= " AND p.`brand` = " . (int)$brand;
            }
        }
        $endtime = GetMkTime(time());

        /*砍价商品*/
        if ($huodongtype != 0) {

            $leftsql = " LEFT JOIN `#@__shop_huodongsign` h ON p.`id` =  h.`proid`";
            $where   .= " AND h.`huodongtype` = " . $huodongtype;

            if ($huodongtype == 3) {

                $where .= " AND h.state =1 AND h.`etime` > '$endtime'";
            }

            $groupby = " GROUP BY  h.`proid`";
        }

        //商铺
        if ($store != "") {
            $store = is_array($store) && isset($store['sid']) ? $store['sid'] : $store;
            //分类
            if (!empty($storetype)) {

                $sids = array($storetype);

                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_category` WHERE `parentid` = $storetype AND `type` = $store");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    foreach ($ret as $key => $value) {
                        array_push($sids, $value['id']);
                    }
                }

                $st = array();
                foreach ($sids as $key => $value) {
                    array_push($st, "find_in_set(" . $value . ", p.`category`)");
                }
                $where .= " AND p.`store` = " . $store . " AND (" . join(" OR ", $st) . ")";
            } else {
                $where .= " AND p.`store` = " . $store;
            }
        }


        //价格区间
        if ($price != "" && $price != ",") {
            $price = explode(",", $price);
            if (empty($price[0])) {
                $where .= " AND p.`price` < " . $price[1];
            } elseif (empty($price[1])) {
                $where .= " AND p.`price` > " . $price[0];
            } else {
                $where .= " AND p.`price` BETWEEN " . $price[0] . " AND " . $price[1];
            }
        }


        //属性
        if ($flag || $flag == "0") {
            $flagArr = explode(",", $flag);
            if ($flagArr) {
                $flag = array();
                foreach ($flagArr as $key => $value) {
                    $flag[$key] = "FIND_IN_SET(" . $value . ", p.`flag`)";
                }
                $where .= " AND " . join(" AND ", $flag);
            }
        }


        //商家标签
        if ($storeFlag || $storeFlag == "0") {
            $storeFlagArr = explode(",", $storeFlag);
            if ($storeFlagArr) {
                $storeFlag = array();
                foreach ($storeFlagArr as $key => $value) {
                    $storeFlag[$key] = "FIND_IN_SET(" . $value . ", p.`storeFlag`)";
                }
                $where .= " AND " . join(" AND ", $storeFlag);
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;
        //排序
        switch ($orderby) {
                //默认
            case 0:
                $orderby = " ORDER BY p.`sort` DESC, p.`id` DESC";
                break;
                //销量降序
            case 1:
                $orderby = " ORDER BY p.`sales` DESC, p.`sort` DESC, p.`id` DESC";
                break;
                //销量升序
            case 2:
                $orderby = " ORDER BY p.`sales` ASC, p.`sort` DESC, p.`id` DESC";
                break;
                //价格升序
            case 3:
                $orderby = " ORDER BY p.`price` ASC, p.`sort` DESC, p.`id` DESC";
                break;
                //价格降序
            case 4:
                $orderby = " ORDER BY p.`price` DESC, p.`sort` DESC, p.`id` DESC";
                break;
                //时间降序
            case 5:
                $orderby = " ORDER BY p.`editdate` DESC, p.`sort` DESC, p.`id` DESC";
                break;
                //人气降序
            case 6:
                $orderby = " ORDER BY p.`click` DESC, p.`sort` DESC, p.`id` DESC";
                break;
            case 7:
                $orderby = " ORDER BY p.`upshelftime` ASC";
                break;
            case 8:
                $orderby = " ORDER BY p.`upshelftime` DESC";
                break;
            case 9:
                $orderby = " ORDER BY p.`inventory` DESC";
                break;
            case 10:
                $orderby = " ORDER BY p.`inventory` ASC";
                break;
            case 11:
                $orderby = " ORDER BY `juli` ASC";
                break;
            case 12:
                $orderby = " ORDER BY `hp` DESC";
                break;
            case 13:
                $orderby = " ORDER BY p.`pubdate` ASC";
                break;
            case 14:
                $orderby = " ORDER BY p.`pubdate` DESC";
                break;
            default:
                $orderby = " ORDER BY p.`sort` DESC, p.`id` DESC";
                break;
        }

        //如果需要收藏排序(子查询) 评论也一样 order by 就可以了
        //(SELECT COUNT(`id`)  collectall FROM `#@__member_collect` WHERE `aid` = p.`id` AND `module` = 'shop' AND `action` ='detail') collectall


        //是否输出当前登录会员的信息
        if ($u != 1) {
            //			$where .= " AND p.`state` = 1";
        } else {
            $uid = $userid;

            $userinfo = $userLogin->getMemberInfo();

            $uid = $userinfo['is_staff'] == 1 ? $userinfo['companyuid'] : $uid;

            if (!verifyModuleAuth(array("module" => "shop", "type" => '2'))) {
                return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
            }

            $sql      = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = $uid");
            $storeRes = $dsql->dsqlOper($sql, "results");
            if ($storeRes) {
                $where .= " AND p.`store` = " . $storeRes[0]['id'];
            } else {
                $where .= " AND 1 = 2";
            }

            if ($state != "") {
                $where1 = " AND p.`state` = " . $state;
            }
        }

        if ($gettype == 'kjhuodong') {
            $where .= " AND (p.`specification` = '' OR p.`specification` IS NULL) AND (p.`speCustom` = '' OR p.`speCustom` = 'a:0:{}' OR p.`speCustom` IS NULL) AND p.`state` = 1";
        } else {
            if ($state == '') {
                $where .= " AND p.`state` = 1";
            }
        }

        $archives = $dsql->SetQuery("SELECT " .
            "p.`id`, p.`type`,p.`smallCount`,p.`packingCount`,p.`kstime`,p.`ketime`,p.`title`,p.`subtitle`, p.`store`, p.`mprice`, p.`price`, p.`sales`, p.`click`, p.`inventory`, p.`litpic`, p.`flag`, p.`btime`, p.`etime`, p.`state`, p.`pubdate`, p.`upshelftime`,  p.`specification`,p.`logistic`,p.`spePics`,p.`promotype`,p.`editdate`,p.`speFiled`,p.`speCustom` ,p.`floorprice`,p.`shangjia`,p.`fx_reward`,p.`typesales`,p.`availableweek`,p.`availabletime`,s.`lng`,s.`lat` $juli $hp " .
            "FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` $huodongleftjoin $leftsql " .
            "WHERE " .
            "1 = 1" . $where . $groupby);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        //会员列表需要统计信息状态
        if ($u == 1 && $uid > -1) {
            //待审核
            $totalGray = $dsql->dsqlOper($archives . " AND p.`state` = 0", "totalCount");
            //已审核
            $totalAudit = $dsql->dsqlOper($archives . " AND p.`state` = 1", "totalCount");
            //拒绝审核
            $totalRefuse        = $dsql->dsqlOper($archives . " AND p.`state` = 2", "totalCount");
            $pageinfo['gray']   = $totalGray;
            $pageinfo['audit']  = $totalAudit;
            $pageinfo['refuse'] = $totalRefuse;
        }

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where1 . $orderby . $where, "results");

        // echo $archives.$where1.$orderby.$where;die;

        $param    = array(
            "service"  => "shop",
            "template" => "detail",
            "id"       => "%id%"
        );
        $urlParam = getUrlPath($param);


        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']           = $val['id'];
                $list[$key]['title']        = $val['title'];
                $list[$key]['store']        = $val['store'];
                $list[$key]['price']        = sprintf("%.2f", $val['price']);
                $list[$key]['sales']        = $val['sales'];
                $list[$key]['mprice']       = $val['mprice'];
                $list[$key]['litpic']       = getFilePath($val['litpic']);
                $list[$key]['subtitle']     = $val['subtitle'];
                $list[$key]['shangjia']     = $val['shangjia'];
                $list[$key]['logistic']     = $val['logistic'];
                $list[$key]['inventory']    = $val['inventory'];
                $list[$key]['floorprice']   = $val['floorprice'];
                $list[$key]['smallCount']   = $val['smallCount'];
                $list[$key]['packingCount'] = $val['packingCount'];
                $list[$key]['editdate'] = $val['editdate'] ? $val['editdate'] : $val['pubdate'];
                $list[$key]['promotype'] = $val['promotype'];
                $list[$key]['shopunit']     = $val['shopunit'];
                $list[$key]['typesales']    = $val['typesales'];
                $archives = $dsql->SetQuery("SELECT `openFree` FROM `#@__shop_logistictemplate` WHERE `id` = " . $val['logistic']);
                $lresults  = $dsql->dsqlOper($archives, "results");   //包邮
                $youhave = 0;
                if ($lresults[0]['openFree'] == 1) {
                    $youhave = 1;
                }
                $list[$key]["youhave"] = $youhave;

                /*营业日*/
                $day = array('1' => '周一', '2' => '周二', '3' => '周三', '4' => '周四', '5' => '周五', '6' => '周六', '7' => '周日',);

                $daystr = '';
                $availableweek = $val['availableweek'] != '' ? explode(',', $val['availableweek']) : array();
                if ($availableweek) {

                    for ($i = 1; $i <= 7; $i++) {
                        if (in_array($i, $availableweek)) {
                            $daystr .= $day[$i] . ' ';
                        }
                    }
                }
                $list[$key]['daystr']     = $daystr;
                $list[$key]['daystrarr']  = $availableweek;

                $typesalesarr = $val['typesales'] != '' ? explode(',', $val['typesales']) : array();

                $is_daodian = 0;
                if (in_array('1', $typesalesarr)) {
                    $is_daodian = 1;
                }
                $list[$key]['is_daodian']   = $is_daodian;
                //                $list[$key]['typesalesarr'] = $val['typesales']!='' ? unserialize($val['typesales']) : array() ;
                $list[$key]['typesalesarr'] = $typesalesarr;


                //销售类型
                $typesalesname = array();
                if($typesalesarr){
                    if(in_array(1, $typesalesarr)){
                        $typesalesname[] = '到店消费';
                    }
                    if(in_array(2, $typesalesarr)){
                        $typesalesname[] = '商家配送';
                    }
                    if(in_array(3, $typesalesarr)){
                        $typesalesname[] = '平台配送';
                    }
                    if(in_array(4, $typesalesarr)){
                        $typesalesname[] = '快递配送';
                    }
                }
                $typesalesname = implode('、', $typesalesname);
                $list[$key]['typesalesname'] = $typesalesname;
                

                $list[$key]['returnPoint'] = $cfg_returnPointState ? $cfg_returnPoint_shop / 100 : 0;  //返积分比例

                //分销佣金比列
                $cfg_fenxiaoFee_shop = 0;

                if ($userid > 0) {
                    //查询当前用户是否为分销商
                    $archives = $dsql->SetQuery("SELECT m.`id`, m.`mtype`, m.`username`, m.`nickname`, m.`from_uid`, m.`cityid`, m2.`username` recuser, m2.`nickname` recname, m2.`mtype` from_mtype, f.`state`, f.`pubdate` FROM `#@__member_fenxiao_user` f LEFT JOIN `#@__member` m  ON m.`id` = f.`uid` LEFT JOIN `#@__member` m2  ON m2.`id` = m.`from_uid` WHERE 1 = 1 AND m.`id` = $userid AND f.`state` = 1");
                    $results  = $dsql->dsqlOper($archives, "results");

                    $fx_reward = $val['fx_reward'];
                    if ($cfg_fenxiaoLevel && $fenXiao && $cfg_fenxiaoState && $results && $fx_reward != '0') {
                        $level = unserialize($cfg_fenxiaoLevel);
                        $levelProportion = $level[0]['fee'];
                        if ($fx_reward) {
                            if (strstr($fx_reward, '%')) {
                                $cfg_fenxiaoFee_shop = (float)$fx_reward / 100 * $levelProportion / 100;
                            } else {
                                $cfg_fenxiaoFee_intshop = $fx_reward * $levelProportion / 100;
                                $list[$key]['fenxiaoFee_intshop'] = $cfg_fenxiaoFee_intshop;  //返佣金比例
                            }
                        } else {
                            $cfg_fenxiaoFee_shop = $cfg_fenxiaoAmount / 100 * $levelProportion / 100;
                        }
                    }
                }
                $list[$key]['fenxiaoFee'] = $cfg_fenxiaoFee_shop;  //返佣金比例

                //图集
                $pics    = $val['pics'];
                $picsArr = array();
                if (!empty($pics)) {
                    $pics = explode(',', $pics);
                    foreach ($pics as $k => $v) {
                        array_push($picsArr, getFilePath($v));
                    }
                }
                $list[$key]['imgGroup'] = $picsArr;

                $rec   = 0;
                $tejia = 0;
                $hot   = 0;
                $panic = 0;
                $flag  = explode(",", $val['flag']);
                if (in_array(0, $flag)) {
                    $rec = 1;
                }
                if (in_array(1, $flag)) {
                    $tejia = 1;
                }
                if (in_array(2, $flag)) {
                    $hot = 1;
                }
                if (in_array(3, $flag)) {
                    $panic = 1;

                    $list[$key]['btime'] = $val['btime'];
                    $list[$key]['etime'] = $val['etime'];
                }
                if (in_array(4, $flag)) {
                    $panic = 2;

                    $list[$key]['kstime'] = $val['kstime'];
                    $list[$key]['ketime'] = $val['ketime'];
                }

                if ($limited == 4) { //限时抢购状态
                    if (time() < $time - 3600) { //大于现在的时间
                        $list[$key]['states'] = 1; //查看详情
                    } else {
                        $list[$key]['states'] = 2; //立即抢购
                    }
                    if (date('Ymd', $val['btime']) == date('Ymd')) {
                        $list[$key]['statestime'] = date('H:i', $val['btime']);
                        $list[$key]['statesname'] = '今天';
                    } else {
                        $list[$key]['statestime'] = date('H:i', $val['btime']);
                        $list[$key]['statesname'] = '明天';
                    }
                }

                $list[$key]['rec']   = $rec;
                $list[$key]['tejia'] = $tejia;
                $list[$key]['hot']   = $hot;
                $list[$key]['panic'] = $panic;

                // $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_common` WHERE `pid` = ".$val['id']);
                $sql                   = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `type` = 'shop-order' AND `aid` = " . $val['id'] . " AND `pid` = 0");
                $comment               = $dsql->dsqlOper($sql, "totalCount");
                $list[$key]['comment'] = $comment;

                if ($u == 1) {
                    $list[$key]['state']   = $val['state'];
                    $list[$key]['pubdate'] = $val['pubdate'];
                    $list[$key]['upshelftime'] = $val['upshelftime'];
                }

                $list[$key]['url'] = str_replace("%id%", $val['id'], $urlParam);


                //规格自定义图片
                $spePicPx = 0;
                $spePics  = $val['spePics'] ? unserialize($val['spePics']) : array();

                //已有规格自定义字段
                $speFiled = $val['speFiled'] ? unserialize($val['speFiled']) : array();

                //新建自定义规格
                $speCustom = $val['speCustom'] ? unserialize($val['speCustom']) : array();


                //规格值
                $speArr        = array();
                $guige         = array();
                $specifiList   = $val['specification'];
                if (!empty($specifiList)) {
                    $specifiArr = json_decode($specifiList, true) ?: array();
                    foreach ($specifiArr as $k_ => $v_) {
                        $ids   = is_string($v_['speids']) ? array($v_['speids']) : $v_['speids'];
                        $speArr[$k_]['spe']   = $v_['speids'];
                        $speArr[$k_]['price'] = $v_['price'];

                        array_push($guige, array($v_['mprice'], $v_['price']));
                    }
                }
                $guiPrice = array();        //现价
                $guiyuanPrice = array();           //原价
                foreach ($guige as $gkey => $gvalue) {
                    array_push($guiPrice, $gvalue[1]);
                    array_push($guiyuanPrice, $gvalue[0]);
                }
                if (!empty($guiPrice) && !empty($guiyuanPrice)) {
                    $list[$key]['guiPrice'] = min($guiPrice);               //xianjia
                    $list[$key]['guiPrice'] = min($guiyuanPrice);       //yuanjia
                    $list[$key]['mprice']   = min($guiyuanPrice);
                    $list[$key]['price']   = min($guiPrice);
                }
                $this->param = $val['id'];
                $product_detail = $this->detail(1);
                $list[$key]['specification'] = $product_detail['specification'];

                //遍历所选分类ID
                $typeid = $val['type'];

                //遍历所选分类ID
                global $data;
                $data    = "";
                $proType = getParentArr("shop_type", $typeid);

                global $data;
                $data  = "";
                $proId = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
                // $proId = array_slice($proId, 0, count($proType));

                //根据分类ID，获取分类属性值
                $itemid1 = 0;
                if (count($proId) > 0) {
                    foreach ($proId as $k => $v) {
                        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `spe` != '' AND `id` = " . $v);
                        $results  = $dsql->dsqlOper($archives, "results");
                        if ($results) {
                            $itemid1 = $v;
                        }
                    }
                }

                $typename    = '';
                $archives    = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $typeid);
                $typeResults = $dsql->dsqlOper($archives, "results");
                if ($typeResults) {
                    $typename = $typeResults[0]['typename'];
                }

                $list[$key]["typeid"]           = $typeid;
                $list[$key]["typename"]         = $typename;
                $list[$key]["specificationArr"] = $product_detail['specificationArr'];

                //商家信息
                $sql = $dsql->SetQuery("SELECT `id`, `title`, `domaintype`, `addrid`,`lng`,`lat` FROM `#@__shop_store` WHERE `id` = " . $val['store']);
                $res = $dsql->dsqlOper($sql, "results");
                if (!empty($res)) {
                    $list[$key]["storeTitle"] = $res[0]['title'];
                    $param                    = array(
                        "service"  => "shop",
                        "template" => "store-detail",
                        "id"       => "%id%"
                    );
                    $storeurlParam            = getUrlPath($param);
                    $url                      = "";
                    if ($res[0]['domaintype'] == 1) {
                        $domainInfo = getDomain('shop', 'shop_store', $res[0]['id']);
                        $url        = "http://" . $domainInfo['domain'];
                    } else {
                        $url = str_replace("%id%", $res[0]['id'], $storeurlParam);
                    }
                    $list[$key]['storeurl'] = $url;
                    global $data;
                    $data                  = "";
                    $addrName              = getParentArr("site_area", $res[0]['addrid']);
                    $addrName              = array_reverse(parent_foreach($addrName, "typename"));
                    $list[$key]['alladdr'] = $addrName;
                    $list[$key]['addr']    = $addrName[0] . $addrName[1];
                    $julishop = oldgetDistance($res[0]['lng'], $res[0]['lat'], $userlng, $userlat) / 1000;

                    $list[$key]['julishop'] = $julishop;
                }

                /*查看参加了哪些活动*/
                $endtime = GetMkTime(time());
                $huodongsql = $dsql->SetQuery("SELECT `huodongtype`,`ktime`,`etime`,`changci`,`huodongtype`,`huodongnumber`,`huodongprice` FROM `#@__shop_huodongsign` WHERE `proid` = '" . $val['id'] . "' AND `state` != 2 AND `etime` > '$endtime' GROUP BY `huodongtype`");
                $huodongres               = $dsql->dsqlOper($huodongsql, "results");

                if ($huodongres) {
                    $list[$key]['huodongarre']  = $huodongres;
                    $list[$key]['huodongktime']     = (int)$huodongres[0]['ktime'];
                    $list[$key]['huodongprice']     =  sprintf('%.2f', $huodongres[0]['huodongprice']);
                    $list[$key]['huodongetime']     = (int)$huodongres[0]['etime'];
                    $list[$key]['huodongechangci']  = (int)$huodongres[0]['changci'];
                    $list[$key]['changciname'] = '';
                    $changcisql = $dsql->SetQuery("SELECT `title` FROM `#@__shopsessionsite` WHERE `id` = '" . $huodongres[0]['changci'] . "'");
                    $changcires = $dsql->dsqlOper($changcisql, "results");
                    if ($changcires) {
                        $list[$key]['changciname']   = $changcires[0]['title'];
                    }
                    $huodongtype                    = (int)$huodongres[0]['huodongtype'];
                    $list[$key]['huodongnumber']    = (float)$huodongres[0]['huodongnumber'];

                    if ((int)$huodongres[0]['huodongtype'] == 1) {
                        $changcisql = $dsql->SetQuery("SELECT `title` FROM `#@__shopsessionsite` WHERE `id` = '" . $res[0]['changci'] . "'");

                        $changcires = $dsql->dsqlOper($changcisql, "results");

                        if ($changcires) {

                            $list[$key]['changcititle'] = date(
                                "Y-m-d",
                                $res[0]['ktime']
                            ) . ' ' . $changcires[0]['title'];
                            $list[$key]['changcinem']   = $changcires[0]['title'];
                        }
                    }
                }
                $list[$key]['huodongarr'] = $huodongres ? join(',', array_column($huodongres, "huodongtype")) : array();

                if ($huodongtype == 4) {
                    /*拼团活动*/
                    $pinSql = $dsql->SetQuery("SELECT `people` FROM `#@__shop_tuanpin` WHERE 1=1 AND `proid` = '" . $val['id'] . "' AND `state` = 0");
                    $pinRes = $dsql->dsqlOper($pinSql, "results");

                    $list[$key]['people']       = (int)$pinRes[0]['people'];
                }

                //验证是否已经收藏
                $params                = array(
                    "module" => "shop",
                    "temp"   => "detail",
                    "type"   => "add",
                    "id"     => $val['id'],
                    "check"  => 1
                );
                $collect               = checkIsCollect($params);
                $list[$key]['collect'] = $collect == "has" ? 1 : 0;


                /*查看可用哪些券*/
                $nowtime = GetMkTime(time());
                // $shopquansql = $dsql->SetQuery("SELECT `promotiotype`,`promotio` FROM `#@__shop_quan` WHERE (`shopids` = '" . $val['store'] . "' or FIND_IN_SET('" . $val['id'] . "',`fid`)) AND `sent` >0 AND `state` = 0 AND `basic_price` <= '" . $val['mprice'] . "'");
                $shopquansql = $dsql->SetQuery("SELECT `promotiotype`,`promotio` FROM `#@__shop_quan` WHERE (`shopids` = '" . $val['store'] . "' or FIND_IN_SET('" . $val['id'] . "',`fid`)) AND `sent` >0 AND `state` = 0 AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime' ");
                $shopquanres = $dsql->dsqlOper($shopquansql, "results");

                $quanhave = $lijian = 0;
                if ($shopquanres && is_array($shopquanres)) {
                    $quanhave = 1;
                    $lijian   = $shopquanres[0]['promotiotype'] == 0 ? ($shopquanres[0]['promotio']) : ($val['mprice'] * $shopquanres[0]['promotio'] / 10);
                }
                $list[$key]["quanhave"] = $quanhave;
                $list[$key]["lijian"]   = $lijian;
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }



    /**
     * 团购加商家
     */
    public function tuanSlist()
    {
        $params = $this->param;

        $_params = array();
        $_params['moduletype'] = $params['moduletype'];
        $_params['userlng'] = $params['userlng'];
        $_params['userlat'] = $params['userlat'];
        $_params['pagetype'] = $params['pagetype'];
        $_params['page'] = $params['page'] ? $params['page'] : 1;
        $_params['pageSize'] = $params['pageSize'] ? $params['pageSize'] : 15;
        $this->param = $_params;
        $tuan = $this->slist();
        $_params = array();
        $_params['rec'] = $params['rec'];
        $_params['moduletype'] = $params['moduletype'];
        $_params['page'] = $params['page'] ? $params['page'] : 1;
        $_params['pageSize'] = 5;
        $_params['lng'] = $params['userlng'];
        $_params['lat'] = $params['userlat'];
        $_params['pagetype'] = $params['pagetype'];
        $this->param = $_params;
        $store = $this->store();

        if ($tuan && !isset($tuan['state'])) {
            $returnData = array();
            $tlist = $tuan['list'];  //商品数据
            $slist = $store['list'];  //商家数据
            $ts = array(
                1 => 0,
                3 => 1,
                7 => 2,
                13 => 3,
                18 => 4
            );
            $m = 0;
            for ($i = 0; $i < count($tlist); $i++) {
                if ($i == 1 || $i == 2 || $i == 5 || $i == 9 || $i == 14) {
                    if ($slist[$m]) {
                        array_push($returnData, $slist[$m]);
                        $m = $m + 1;
                    }
                }
                array_push($returnData, $tlist[$i]);
            }
            $totalCount = $tuan['pageInfo']['totalCount'];
            $totalPage = $tuan['pageInfo']['totalPage'];
            if ($totalCount == 0) return array("state" => 200, "info" => '暂无数据!');  //暂无数据！
            $pageinfo = array(
                "page"       => $params['page'],
                "pageSize"   =>  $params['pageSize'],
                "totalPage"  => $totalPage,
                "totalCount" => $totalCount
            );
            return array("pageInfo" => $pageinfo, "list" => $returnData);
        } else {
            return array("state" => 200, "info" => '暂无数据!');
        }
    }



    /**
     * 商品详细信息
     * @return array
     */
    public function detail($oneself = 0)
    {
        global $dsql;
        global $oper;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $listingDetail = array();
        $param = $this->param;
        if (is_numeric($param)) {
            $id = (int)$param;
        } elseif(is_array($param)) {
            $id = $param['id'];
            $info = $param['info'];
        }
        // $gettype       = is_numeric($this->param) ? 0 : $this->param['gettype'];
        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');
        $where = '';
        if (!$info) {
            $where = " AND p.`state` = 1";
        }
        $userid = $userLogin->getMemberID();
        if ($oper == "user") {
            if ($userid < 0) {
                return array("state" => 200, "info" => '登录超时，请重新登录！');
            }
            $userinfo = $userLogin->getMemberInfo();
            //登录会员
            $userid = $userinfo['is_staff'] == 1 ? $userinfo['companyuid'] : $userid;
            $where  = " AND s.`userid` = " . $userid;
        }
        //查询基本信息
        $archives = $dsql->SetQuery("SELECT p.* ,s.`express`,s.`userid` FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1 = 1 AND p.`id` = " . $id . $where);
        $results = $dsql->dsqlOper($archives, "results");
        $datetime = GetMkTime(time());
        //数据不存在
        if (!$results) {
            return array();
        }
        //数据处理
        $results[0]['title']        = htmlentities($results[0]['title'], ENT_QUOTES, "utf-8");
        $results[0]['smallCount']   = $results[0]['smallCount'];                  //起订量
        $results[0]['packingCount'] = $results[0]['packingCount'];              //装箱数量
        $results[0]['shopunit']     = $results[0]['shopunit'];              //商品单位
        $results[0]['moduletype']   = $results[0]['promotype'];              //模板类型
        $results[0]['userid']       = $results[0]['userid'];
        $results[0]['userStatus']       = 0;
        if ($userid == $results[0]['userid']) {
            $results[0]['userStatus'] = 1;
        }

        $body = stripslashes($results[0]['body']);
        $mbody = stripslashes($results[0]['mbody']);

        $u = str_replace('//', '\/\/', $cfg_secureAccess) . $cfg_basehost . '\/include\/attachment.php';
        $body = preg_replace('/'.$u.'/', '/include/attachment.php', $body);

        //特殊情况兼容处理
        $u = str_replace('//', '\/\/', $cfg_secureAccess) . 'www.' . $cfg_basehost . '\/include\/attachment.php';
        $body = preg_replace('/'.$u.'/', '/include/attachment.php', $body);

// 			$body = preg_replace('/\/include\/attachment.php/', $cfg_secureAccess . $cfg_basehost . '/include/attachment.php', $body);

        //将附件地址转为真实地址
        global $cfg_attachment;
        $attachment = substr($cfg_attachment, 1, strlen($cfg_attachment));

        $attachment = substr("/include/attachment.php?f=", 1, strlen("/include/attachment.php?f="));

        global $cfg_basehost;
        $attachment = str_replace("http://" . $cfg_basehost, "", $cfg_attachment);
        $attachment = str_replace("https://" . $cfg_basehost, "", $attachment);
        $attachment = substr($attachment, 1, strlen($attachment));

        $attachment = str_replace("/", "\/", $attachment);
        $attachment = str_replace(".", "\.", $attachment);
        $attachment = str_replace("?", "\?", $attachment);
        $attachment = str_replace("=", "\=", $attachment);

        preg_match_all("/$attachment(.*)[\"|'| ]/isU", $body, $fileList);
        $fileList = array_unique($fileList[1]);

        //内容图片
        $fileArr = array();
        if (!empty($fileList)) {
            foreach ($fileList as $v_) {
                $filePath = getRealFilePath($v_, false);
                array_push($fileArr, array(
                    'source' => '/include/attachment.php?f=' . $v_,
                    'turl' => $filePath
                ));
            }
        }

        //替换内容中的文件地址
        if($fileArr){
            foreach ($fileArr as $key => $val){
                $file_source = $val['source'];
                $file_turl = $val['turl'];
                $body = str_replace($file_source, $file_turl, $body);
            }
        }

        $u = str_replace('//', '\/\/', $cfg_secureAccess) . $cfg_basehost . '\/include\/attachment.php';
        $mbody = preg_replace('/'.$u.'/', '/include/attachment.php', $mbody);

        //特殊情况兼容处理
        $u = str_replace('//', '\/\/', $cfg_secureAccess) . 'www.' . $cfg_basehost . '\/include\/attachment.php';
        $mbody = preg_replace('/'.$u.'/', '/include/attachment.php', $mbody);

        //$mbody = preg_replace('/\/include\/attachment.php/', $cfg_secureAccess . $cfg_basehost . '/include/attachment.php', $mbody);

        preg_match_all("/$attachment(.*)[\"|'| ]/isU", $mbody, $fileList);
        $fileList = array_unique($fileList[1]);

        //内容图片
        $fileArr = array();
        if (!empty($fileList)) {
            foreach ($fileList as $v_) {
                $filePath = getRealFilePath($v_, false);
                array_push($fileArr, array(
                    'source' => '/include/attachment.php?f=' . $v_,
                    'turl' => $filePath
                ));
            }
        }

        //替换内容中的文件地址
        if($fileArr){
            foreach ($fileArr as $key => $val){
                $file_source = $val['source'];
                $file_turl = $val['turl'];
                $mbody = str_replace($file_source, $file_turl, $mbody);
            }
        }

        $results[0]['body'] = $body;
        $results[0]['mbody'] = $mbody;

        if ($results[0]['typesales'] == '' && $results[0]['express'] == 1) {
            $results[0]['typesales'] = 4;
        }
        $confirmtype = 4;
        $typesales = explode(",", $results[0]['typesales']);
        if ($results[0]['typesales'] == '1') {
            $confirmtype = 0;
        }
        if (in_array('3', $typesales) || in_array('4', $typesales) || in_array('2', $typesales)) {
            $confirmtype = 1;
        }
        if (in_array('1', $typesales) && (in_array('3', $typesales) || in_array('4', $typesales) || in_array('2', $typesales))) {
            $confirmtype = 2;
        }
        $results[0]['confirmtype'] = $confirmtype;

        $store = $results[0]['store'];
        $fromPage = 2;
        if (in_array('1', $typesales)) {
            $fromPage = 1;
        }
        $results[0]['fromPage'] = $fromPage;
        $prostate = 0;
        if ($results[0]['state'] == 2) {         //已下架
            $prostate = 1;
        }
        if ($results[0]['state'] == 0) {         // 待审核
            $prostate = 2;
        }
        $results[0]['prostate'] = $prostate;              //商品状态
        /*
         * 默认地址id
         */

        $memberaddress = $dsql->SetQuery("SELECT `id` FROM `#@__member_address` WHERE `default` = 1 AND `uid` = '$userid'");
        $memres = $dsql->dsqlOper($memberaddress, "results");
        $results[0]['addressid']     = (int)$memres[0]['id'];              //模板类型
        /*优惠券*/
        $quanarr  = array();

        if(!$oneself){
            $nowtime = GetMkTime(time());
            $storesql = $dsql->SetQuery("SELECT `promotio`,`basic_price`,`promotiotype`,`ktime`,`etime`,`limitcount`,`id`,`shoptype`,`name`,`bear` FROM `#@__shop_quan` WHERE `state` = 0 AND (FIND_IN_SET('$id',`fid`)) or (`shopids` = '$store' AND `shoptype` = 0  or `bear` = 1) AND `sent` >0 AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime'");

            $storeres = $dsql->dsqlOper($storesql, "results");

            if ($storeres && is_array($storeres)) {

                foreach ($storeres as $k => $v) {

                    $quanarr[$k]['promotio']     = $v['promotio'];
                    $quanarr[$k]['basic_price']  = $v['basic_price'];
                    $quanarr[$k]['promotiotype'] = $v['promotiotype'];
                    $quanarr[$k]['ktime']        = $v['ktime'];
                    $quanarr[$k]['ymdktime']     = date('Y-m-d', $v['ktime']);
                    $quanarr[$k]['etime']        = $v['etime'];
                    $quanarr[$k]['ymdetime']     = date('Y-m-d', $v['etime']);
                    $quanarr[$k]['limit']        = $v['limitcount'];
                    $quanarr[$k]['id']           = $v['id'];
                    $quanarr[$k]['name']         = $v['name'];
                    $quanarr[$k]['shoptype']     = $v['shoptype'];
                    $quanarr[$k]['bear']         = $v['bear'];

                    /*自己有没有领券*/
                    $myquansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_quanlist` WHERE `state` = 0 AND `userid` = '$userid' AND `qid` = '" . $v['id'] . "'");

                    $myquancount   = $dsql->dsqlOper($myquansql, "totalCount");
                    $is_selflingqu = 0;
                    if ($myquancount >= $v['limitcount']) {
                        $is_selflingqu = 1;
                    }
                    $quanarr[$k]['is_selflingqu'] = $is_selflingqu;
                }
            }
        }
        $results[0]['quanarr'] = $quanarr;
        /*砍价*/
        $table = '#@__shop_bargaining';
        $wherez = " AND `state` = 0 AND `proid` = '" . $id . "'";
        /*进行中*/
        $handsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wherez);
        $handres = $dsql->dsqlOper($handsql, "totalCount");
        $results[0]['handres']  = $handres;
        $results[0]['states']  = 0;
        // $huodongsql = $dsql->SetQuery("SELECT `id`,`ktime`,`etime`,`huodonginventory`,`huodongprice`,`barruletype`,`barrule`,`huodongnumber`,`limitcount`,`pinspecification`,`pintime`,`huodongtype`,`state`,`huodongsales` FROM `#@__shop_huodongsign` WHERE `sid` = '$store' AND `proid` = '$id' AND `state` = 1 ORDER BY `ktime` ASC");
        $huodongsql = $dsql->SetQuery("SELECT `id`,`ktime`,`etime`,`huodonginventory`,`huodongprice`,`barruletype`,`barrule`,`huodongnumber`,`limitcount`,`pinspecification`,`pintime`,`huodongtype`,`state`,`huodongsales` FROM `#@__shop_huodongsign` WHERE `sid` = '$store' AND `proid` = '$id' AND `state` = 1 AND `etime` >= " . GetMkTime(time()) . "  ORDER BY `ktime` ASC LIMIT 1");

        $huodongres = $dsql->dsqlOper($huodongsql, "results");
        if ($huodongres && is_array($huodongres)) {
            $huodong = 0;
            foreach ($huodongres as $k => $v) {

                $v['huodongtype'] = (int)$v['huodongtype'];
                
                //活动中时
                if ($datetime >= $v['ktime'] && $datetime < $v['etime']) {

                    $huodong = 1;

                    $results[0]['huodonginventory'] = $v['huodonginventory'];

                    //规格值
                    $pinspecifiIds    = array();
                    $pinspeArr        = array();

                    $pinspecifiList = $huodongres[0]['pinspecification'];
                    if (!empty($pinspecifiList)) {
                        $pinspecifiArr = json_decode($pinspecifiList, true);
                        if($pinspecifiArr){
                            foreach ($pinspecifiArr as $key => $val) {
                                $pinspeArr[$key]['id']   = (int)$val['id'];
                                $pinspeArr[$key]['spe']   = $val['spe'];
                                $pinspeArr[$key]['name']   = $val['name'];
                                $pinspeArr[$key]['price'] = array((float)$val['mprice'], (float)$val['price'], (float)$val['stock']);
                            }
                        }
                    }

                    $results[0]['pinspecification'] = $pinspeArr;
                    $results[0]['pinspecifiList']   = $pinspecifiList;
                    $results[0]['states']           = (int)$v['huodongtype'];

                    $results[0]['ktime']         = (int)$v['ktime'];
                    $results[0]['etime']         = (int)$v['etime'];
                    $results[0]['huodongprice']  = (float)$v['huodongprice'];
                    //  $results[0]['price']         = $v['price'];

                    $results[0]['huodongsales']  = (int)$v['huodongsales'];
                    $results[0]['limit']         = (int)$v['limitcount'];
                    $results[0]['huodongnumber'] = (int)$v['huodongnumber'];
                    $results[0]['barruletype']   = (int)$v['barruletype'];
                    $results[0]['barrule']       = $v['barrule'] != '' ? unserialize($results[0]['barrule']) : array();
                    $results[0]['pintime']       = (int)$v['pintime'];
                    $results[0]['hid']           = (int)$v['id'];

                    //                        break;
                }


                if ($datetime >= $v['ktime'] && $v['huodongtype'] != 3 && $v['huodongtype'] != 4) {
                    $huodong = 1;

                    $results[0]['huodonginventory'] = $v['huodonginventory'];

                    //规格值
                    $pinspeArr        = array();

                    $pinspecifiList = $huodongres[0]['pinspecification'];

                    if (!empty($pinspecifiList)) {
                        $pinspecifiArr = json_decode($pinspecifiList, true);
                        if($pinspecifiArr){
                            foreach ($pinspecifiArr as $key => $val) {
                                $pinspeArr[$key]['id']   = (int)$val['id'];
                                $pinspeArr[$key]['spe']   = $val['spe'];
                                $pinspeArr[$key]['name']   = $val['name'];
                                $pinspeArr[$key]['price'] = array((float)$val['mprice'], (float)$val['price'], (int)$val['stock']);
                            }
                        }
                    }
                    $results[0]['pinspecification'] = $pinspeArr;
                    $results[0]['pinspecifiList']   = $pinspecifiList;
                    $results[0]['ygstates']         = $v['ktime'] > GetMkTime(time()) ? (int)$v['huodongtype'] : 0;
                    $results[0]['huodongsales']     = (int)$v['huodongsales'];
                    $results[0]['ktime']            = (int)$v['ktime'];
                    $results[0]['etime']            = (int)$v['etime'];
                    $results[0]['huodongprice']     = (float)$v['huodongprice'];
                    $results[0]['limit']            = (int)$v['limitcount'];
                    $results[0]['huodongnumber']    = (int)$v['huodongnumber'];
                    $results[0]['barruletype']      = (int)$v['barruletype'];
                    $results[0]['barrule']          = $v['barrule'] != '' ? unserialize($results[0]['barrule']) : array();
                    $results[0]['pintime']          = (int)$v['pintime'];
                    $results[0]['hid']              = (int)$v['id'];

                    //                        break;

                }

                //即将开始
                if ($v['huodongtype'] != 3 && $v['huodongtype'] != 4) {
                    $huodong = 1;

                    $results[0]['huodonginventory'] = $v['huodonginventory'];

                    //规格值
                    $pinspeArr        = array();

                    $pinspecifiList = $huodongres[0]['pinspecification'];

                    if (!empty($pinspecifiList)) {
                        $pinspecifiArr = json_decode($pinspecifiList, true);
                        if($pinspecifiArr){
                            foreach ($pinspecifiArr as $key => $val) {
                                $pinspeArr[$key]['id']   = (int)$val['id'];
                                $pinspeArr[$key]['spe']   = $val['spe'];
                                $pinspeArr[$key]['name']   = $val['name'];
                                $pinspeArr[$key]['price'] = array((float)$val['mprice'], (float)$val['price'], (int)$val['stock']);
                            }
                        }
                    }
                    $results[0]['pinspecification'] = $pinspeArr;
                    $results[0]['pinspecifiList']   = $pinspecifiList;
                    $results[0]['ygstates']         = $v['ktime'] > GetMkTime(time()) ? (int)$v['huodongtype'] : 0;
                    $results[0]['huodongsales']     = (int)$v['huodongsales'];
                    $results[0]['ktime']            = (int)$v['ktime'];
                    $results[0]['etime']            = (int)$v['etime'];
                    $results[0]['huodongprice']     = (float)$v['huodongprice'];
                    $results[0]['limit']            = (int)$v['limitcount'];
                    $results[0]['huodongnumber']    = (int)$v['huodongnumber'];
                    $results[0]['barruletype']      = (int)$v['barruletype'];
                    $results[0]['barrule']          = $v['barrule'] != '' ? unserialize($results[0]['barrule']) : array();
                    $results[0]['pintime']          = (int)$v['pintime'];
                    $results[0]['hid']              = (int)$v['id'];
                }
            }
        }

        $flag = explode(",", $results[0]['flag']);

        $yksql   = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining` WHERE  `proid` = '$id' AND `state` = 1");
        $ykcount = $dsql->dsqlOper($yksql, "totalCount");

        $results[0]['ykcount'] = $ykcount;
        /*砍价活动 - 用户有未发起*/
        if ($results[0]['states'] == 3) {
            $bargainingsql = $dsql->SetQuery("SELECT `id`,`gnowmoney`,`gmoney`,`gfinalmoney`,`oid`,`state` FROM `#@__shop_bargaining` WHERE `proid` = '$id' AND `hid` = '" . $results[0]['hid'] . "' AND `userid` = '$userid' AND (`state` = '0' or (state = 1 AND `oid` = '' ))");
            $bargainingres = $dsql->dsqlOper($bargainingsql, "results");

            if ($bargainingres) {
                $results[0]['bargainingjoin'] = $bargainingres && is_array($bargainingres) ? 1 : 0;
                $results[0]['yk_money']       = sprintf("%.2f", (float)$bargainingres[0]['gmoney'] - (float)$bargainingres[0]['gnowmoney']);
                $results[0]['hs_money']       = sprintf("%.2f", (float)$bargainingres[0]['gnowmoney'] - (float)$bargainingres[0]['gfinalmoney']);
                $results[0]['bargaid']        = $bargainingres[0]['id'];
                $results[0]['gnowmoney']      = $bargainingres[0]['gnowmoney'];
                $results[0]['oid']            = $bargainingres[0]['oid'];
                $results[0]['kjstate']        = $bargainingres[0]['state'];
            }
        }

        //分类名
        global $data;
        $data                   = "";
        $proType                = getParentArr("shop_type", $results[0]["type"]);
        $proName                = array_reverse(parent_foreach($proType, "typename"));
        $results[0]["typename"] = $proName;
        $data                   = "";
        $proIds                 = array_reverse(parent_foreach($proType, "id"));
        $results[0]["typeids"]  = $proIds;
        //品牌信息
        $brandName    = $brandLogo = "";
        if(!$oneself){
            $archives     = $dsql->SetQuery("SELECT `title`, `logo` FROM `#@__shop_brand` WHERE `id` = " . $results[0]['brand'] . " ORDER BY `id` DESC");
            $brandResults = $dsql->dsqlOper($archives, "results");
            if ($brandResults) {
                $brandName = $brandResults[0]['title'];
                $brandLogo = getFilePath($brandResults[0]['logo']);
            }
        }
        $results[0]["brandName"] = $brandName;
        $results[0]["brandLogo"] = $brandLogo;

        //字段值
        $propertyArr = array();
        if(!$oneself){
            $property                 = $results[0]["property"];
            $results[0]['propertyId'] = $property;
            if (!empty($property)) {
                $property = explode("|", $property);
                $_pk = 0;
                foreach ($property as $k => $_v) {
                    $item        = explode("#", $_v);
                    $_item_id    = $item[0];
                    //系统属性
                    if(is_numeric($_item_id)){
                        
                        $archives    = $dsql->SetQuery("SELECT `typename`, `flag` FROM `#@__shop_item` WHERE `id` = " . $_item_id);
                        $itemResults = $dsql->dsqlOper($archives, "results");
                        if ($itemResults) {
                            $propertyArr[$_pk]['typename'] = $itemResults[0]['typename'];
                            $_flag                       = $itemResults[0]['flag'];

                            //可输入的不查询数据库
                            if (!strstr($_flag, 'w')) {
                                //只有数字的时候
                                if (is_numeric($item[1])) {
                                    $archives    = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_item` WHERE `id` = " . $item[1]);
                                    $itemResults = $dsql->dsqlOper($archives, "results");
                                    if ($itemResults) {
                                        $propertyArr[$_pk]['val'] = $itemResults[0]['typename'];
                                    }

                                    //包含，号的时候
                                } elseif (strpos($item[1], ",") !== false) {
                                    $val   = explode(",", $item[1]);
                                    $value = array();
                                    foreach ($val as $_pk_ => $v_) {
                                        $archives    = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_item` WHERE `id` = " . $v_);
                                        $itemResults = $dsql->dsqlOper($archives, "results");
                                        if ($itemResults) {
                                            $value[] = $itemResults[0]['typename'];
                                        }
                                    }
                                    $propertyArr[$_pk]['val'] = join(",", $value);

                                    //其它，直接输出
                                } else {
                                    $propertyArr[$_pk]['val'] = $item[1];
                                }
                            } else {
                                $propertyArr[$_pk]['val'] = $item[1];
                            }
                        }
                    }
                    //自定义属性
                    else{
                        $propertyArr[$_pk]['typename'] = $_item_id;
                        $propertyArr[$_pk]['val'] = $item[1];
                    }
                    $_pk++;
                }
            }
        }
        $results[0]["property"] = $propertyArr;
        /*查看参加了哪些活动*/
        $endtime = GetMkTime(time());
        $huodongsql = $dsql->SetQuery("SELECT `ktime`,`etime`,`changci`,`huodongtype`,`huodongnumber`,`huodongprice` FROM `#@__shop_huodongsign` WHERE `proid` = '" . $results[0]['id'] . "' AND `state` != 2 AND `etime` > '$endtime' GROUP BY `huodongtype`");
        $huodongres               = $dsql->dsqlOper($huodongsql, "results");
        $results[0]['huodongarr'] = $huodongres;

        //规格值
        $specification = array();
        $specifiIds    = array();
        $speArr        = array();

        //团购多规格和电商多规格
        if(($results[0]['promotype'] == 1 && $results[0]['guigetype'] == 1) || $results[0]['promotype'] == 2){
            $sql = $dsql::SetQuery("select * from `#@__shop_good_sku` where `gid`=$id and `del`=0");
            $skuArr = $dsql->getArrList($sql);
            if (!empty($skuArr)) {
                foreach ($skuArr as $item) {
                    $speids = explode(",", $item['speids']);
                    $speNames = array();
                    foreach ($speids as $jj) {
                        if ($jj[0] == "c") {
                            $jj = substr($jj, 1);
                            if($jj){
                                $speNames[] = $dsql->getOne($dsql::SetQuery("select `name` from `#@__shop_good_spe` where `id`=$jj")) ?: "未知";
                            }else{
                                $speNames[] = "未知";
                            }
                        } else {
                            if($jj){
                                $speNames[] = $dsql->getOne($dsql::SetQuery("select `typename` from `#@__shop_specification` where `id`=$jj")) ?: "未知";
                            }else{
                                $speNames[] = "未知";
                            }
                        }
                    }
                    $speArr[] = array("id" => $item['id'], "spe" => $item['speids'], "name" => $speNames, "price" => array($item['mprice'], $item['price'], $item['stock']));
                    $speids_i = explode(",", $item['speids']);
                    foreach ($speids_i as $speids_j) {
                        if (is_numeric($speids_j) && !in_array($speids_j, $specifiIds)) {
                            array_push($specifiIds, $speids_j);
                        }
                    }
                }
            }
        }
        $results[0]['specification'] = $speArr;

        if ($huodong == 1 && $results[0]['states'] != 3 && $results[0]['states'] != 4 && $v['ktime'] >= GetMkTime(time())) {

            $results[0]['specification'] = $pinspeArr;
            $results[0]['specifiList']   = $pinspecifiList;
        }

        //遍历所选分类ID
        $typeid = $results[0]['type'];
        // $parentArr = getParentArr("shop_type", $results[0]['type']);
        // if(empty($parentArr)) return;
        //
        // $proId = array_reverse(parent_foreach($parentArr, "id"));
        // $proId = array_diff($proId, $proType);
        // foreach($proId as $key => $val){
        // 	$archives = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `type` = ".$val);
        // 	$proResults = $dsql->dsqlOper($archives, "results");
        // 	if($proResults){
        // 		$typeid = $val;
        // 	}
        // }

        //遍历所选分类ID
        // global $data;
        // $data    = "";
        // $proType = getParentArr("shop_type", $typeid);
        // $proId   = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
        // $proId = array_slice($proId, 0, count($proType));
        
        $proId = $proIds;

        //根据分类ID，获取分类属性值
        $itemid1 = 0;
        if (count($proId) > 0) {
            foreach ($proId as $key => $val) {
                $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `spe` != '' AND `id` = " . $val);
                $results_ = $dsql->dsqlOper($archives, "results");
                if ($results_) {
                    $itemid1 = $val;
                }
            }
        }

        //规格自定义图片
        $spePicPx = 0;
        $spePics  = $results[0]['spePics'] ? unserialize($results[0]['spePics']) : array();

        //已有规格自定义字段
        $speFiled = $results[0]['speFiled'] ? unserialize($results[0]['speFiled']) : array();
        $speFiledNewFormat = array();
        $speids_sku = array();
        if (!empty($speFiled)) {
            $sql = $dsql::SetQuery("select * from `#@__shop_good_spe` where `gid`=$id and `del`=0 and `type`='system'");
            $speFiledNew = $dsql->getArrList($sql);
            foreach ($speFiledNew as $speFiled_i) {
                $speFiledNewFormat[$speFiled_i['parent_id']][] = $speFiled_i;
            }
            $speids_sku[] = array_column($speFiledNewFormat, "id");
        }

        //新建自定义规格
        $speCustom = $results[0]['speCustom'] ? unserialize($results[0]['speCustom']) : array();

        if ($itemid1 != 0 && $results[0]['moduletype'] != 1) {
            $archives    = $dsql->SetQuery("SELECT `spe` FROM `#@__shop_type` WHERE `id` = " . $itemid1);
            $typeResults = $dsql->dsqlOper($archives, "results");
            if ($typeResults) {
                if ($typeResults[0]['spe']) {
                    $spe = explode(",", $typeResults[0]['spe']);
                    foreach ($spe as $key => $val) {
                        $archives_1 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `id` = " . $val . " ORDER BY `weight` ASC");
                        $results_1  = $dsql->dsqlOper($archives_1, "results");
                        if ($results_1) {
                            $speItem = array();
                            foreach ($results_1 as $key_1 => $val_1) {

                                //自定义字段
                                $speList = $speFiledNewFormat[$val_1['id']];
                                if ($speFiledNewFormat && $speList) {
                                    foreach ($speList as $k_s => $v_s) {
                                        $val_s = $v_s['name'];

                                        //颜色
                                        if ($results_1[0]['typename'] == "颜色") {

                                            $imgurl = '';
                                            if ($spePics) {
                                                $imgurl = getFilePath($spePics[$spePicPx]);
                                                $spePicPx++;
                                            }

                                            array_push($speItem, array(
                                                'id'   => "c" . $v_s['id'],
                                                'name' => $val_s,
                                                'pic'  => $imgurl
                                            ));

                                            //普通类型
                                        } else {
                                            array_push($speItem, array(
                                                'id'   => "c" . $v_s['id'],
                                                'name' => $val_s
                                            ));
                                        }
                                    }
                                }

                                $archives_2 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `parentid` = " . $val_1['id'] . " ORDER BY `weight` ASC");
                                $results_2  = $dsql->dsqlOper($archives_2, "results");
                                if ($results_2) {
                                    $i = 0;
                                    foreach ($results_2 as $key_2 => $val_2) {
                                        if (in_array($val_2['id'], $specifiIds)) {

                                            //颜色
                                            if ($results_1[0]['typename'] == "颜色") {

                                                $imgurl = '';
                                                if ($spePics) {
                                                    $imgurl = getFilePath($spePics[$spePicPx]);
                                                    $spePicPx++;
                                                }

                                                array_push($speItem, array(
                                                    'id'   => $val_2['id'],
                                                    'name' => $val_2['typename'],
                                                    'pic'  => $imgurl
                                                ));

                                                //普通类型
                                            } else {
                                                array_push($speItem, array(
                                                    'id'   => $val_2['id'],
                                                    'name' => $val_2['typename']
                                                ));
                                            }
                                        } else {

                                            //颜色
                                            if ($results_1[0]['typename'] == "颜色" && $spePics) {
                                                $spePicPx++;
                                            }
                                        }
                                    }
                                }
                            }
                            if ($speItem) {
                                $speids_sku[] = array_column($speItem, "id");
                                array_push($specification, array(
                                    'id'       => $results_1[0]['id'],
                                    'typename' => $results_1[0]['typename'],
                                    'itemtype' => '0', /*自定义*/
                                    'item'     => $speItem
                                ));
                            }
                        }
                    }
                }
            }
        }

        if ($speCustom) {  //新增spe

            $sql = $dsql::SetQuery("select * from `#@__shop_good_spe` where `gid`=$id and `del`=0 and `type`='custom' and `parent_id`=0");
            $speCustomNew = $dsql->getArrList($sql);
            $speCustomKeys = array_keys($speCustom);
            //遍历查找key
            $speCustomNewOrder = array();
            foreach ($speCustomKeys as $i) {
                foreach ($speCustomNew as $j) {
                    if ($i == $j['name']) {
                        $speCustomNewOrder[] = $j;
                    }
                }
            }
            foreach ($speCustomNewOrder as $speCustom_i) {
                $speCustomVals = $speCustom[$speCustom_i['name']];
                $sql = $dsql::SetQuery("select CONCAT('c',`id`) 'id',`name` from `#@__shop_good_spe` where `gid`=$id and `del`=0 and `type`='custom' and `parent_id`={$speCustom_i['id']}");
                $custom = $dsql->getArrList($sql);
                $customOrder = array();
                foreach ($speCustomVals as $i) {
                    foreach ($custom as $j) {
                        if ($i === $j['name']) {
                            $customOrder[] = $j;
                        }
                    }
                }
                $speids_sku[] = array_column($customOrder, "id");
                array_push($specification, array(
                    'id'       => "c" . $speCustom_i['id'],
                    'typename' => $speCustom_i['name'],
                    'itemtype' => '1', /*自定义*/
                    'item'     => $customOrder
                ));
            }
        }
        // sku排序
        if (!empty($speids_sku)) {
            //$speids_sku需要加上sysspe
            $speids_sku = array_filter($speids_sku);
            $speids_sku_order = array();
            //电商类型排序
            if ($results[0]['moduletype'] != 1) {
                if (count($speids_sku) > 1) {
                    $speids_sku = descartes($speids_sku);
                } elseif (count($speids_sku) == 1) { //一个
                    $speids_sku_d = array();
                    foreach (current($speids_sku) as $speids_sku_i) {
                        $speids_sku_d[] = array($speids_sku_i);
                    }
                    $speids_sku = $speids_sku_d;
                }
                foreach ($speids_sku as $kk => $II) {
                    $speids_sku[$kk] = join(",", $II);
                }
                $speids_sku_order = array();
                foreach ($speids_sku as $II) {
                    foreach ($speArr as $JJ) {
                        if ($II == $JJ['spe']) {
                            $jjNames = $JJ['spe'];
                            $JJNames = explode(",", $jjNames);
                            $jjNames = $this->asc_sort($JJNames);  //根据ascii排序，正序
                            $JJ['spe'] = join(",", $JJNames);
                            $speids_sku_order[] = $JJ;
                        }
                    }
                }
            }
            //团购类型排序
            else {
                foreach ($speids_sku as $kk => $II) {
                    foreach ($speArr as $JJ) {
                        if ($II[0] == $JJ['spe']) {
                            $speids_sku_order[] = $JJ;
                        }
                    }
                    $speids_sku[$kk] = $II[0];
                }
            }
            $results[0]['specification'] = $speids_sku_order;
        }
        $results[0]["specificationArr"] = $specification;
        $results[0]["litpicSource"]     = $results[0]["litpic"];
        $results[0]["litpic"]           = getFilePath($results[0]["litpic"]);

        //图集
        $imgList = array();
        $pics    = $results[0]["pics"];
        if (!empty($pics)) {
            $pics = strstr($pics, '||') ? explode("||", $pics) : explode(',', $pics);
            foreach ($pics as $key => $val) {
                $imgList[$key]['pathSource'] = $val;
                $imgList[$key]['path']       = getFilePath($val);
            }
        }
        $results[0]["pics"]  = $imgList;
        $results[0]["video"] = $results[0]['video'] ? getFilePath($results[0]['video']) : '';
        $results[0]["videosource"] = $results[0]['video'];

        //商家信息
        $this->param         = (int)$results[0]['store'];
        $results[0]["store"] = !$onself ? $this->storeDetail(1) : array();
        //物流信息
        $logisticNote         = "";
        $bearFreight          = 0;
        $valuation            = 0;
        $express_start        = 0;
        $express_postage      = 0;
        $express_plus         = 0;
        $express_postageplus  = 0;
        $preferentialStandard = 0;
        $preferentialMoney    = 0;

        /*快递类型 ---s*/
        $logisticId = $results[0]['logistic'];
        // if(!$oneself){
            $archives   = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE `id` = $logisticId");
            $ret        = $dsql->dsqlOper($archives, "results");
            if ($ret) {
                $value        = $ret[0];
                $logisticNote = getPriceDetail($value["bearFreight"], $value['valuation'], $value['express_start'], $value['express_postage'], $value['express_plus'], $value['express_postageplus'], $value['preferentialStandard'], $value['preferentialMoney'], $logisticId);

                $bearFreight          = $value["bearFreight"];
                $valuation            = $value["valuation"];
                $express_start        = $value["express_start"];
                $express_postage      = $value["express_postage"];
                $express_plus         = $value["express_plus"];
                $express_postageplus  = $value["express_postageplus"];
                $preferentialStandard = $value["preferentialStandard"];
                $preferentialMoney    = $value["preferentialMoney"];

                $devspecification = !empty($value['devspecification']) ? unserialize($value['devspecification']) : array();

                if (empty($devspecification)) {
                    $deliveryarea = array();
                    $deliveryarea[0]['cityid']              = '';
                    $deliveryarea[0]['express_start']       = $value['express_start'];
                    $deliveryarea[0]['express_postage']     = $value['express_postage'];
                    $deliveryarea[0]['express_plus']        = $value['express_plus'];
                    $deliveryarea[0]['express_postageplus'] = $value['express_postageplus'];
                    $deliveryarea[0]['area']                = '默认全国';

                    $devspecification['deliveryarea']       = $deliveryarea;
                    $devspecification['valuation']          = $value['valuation'];
                }

                $results[0]['logisticNote'] = $logisticNote;

                $results[0]['logistic']                         = array();
                $results[0]['logistic']['bearFreight']          = $bearFreight;
                $results[0]['logistic']['valuation']            = $valuation;
                $results[0]['logistic']['express_start']        = $express_start;
                $results[0]['logistic']['express_postage']      = $express_postage;
                $results[0]['logistic']['express_plus']         = $express_plus;
                $results[0]['logistic']['express_postageplus']  = $express_postageplus;
                $results[0]['logistic']['preferentialStandard'] = $preferentialStandard;
                $results[0]['logistic']['preferentialMoney']    = $preferentialMoney;

                $results[0]['logisticId'] = $logisticId;
                $results[0]['devspecification'] = $devspecification;
            } else {
                $results[0]['logistic']                         = array();
                $results[0]['logistic']['bearFreight']          = 0;
                $results[0]['logistic']['valuation']            = 0;
                $results[0]['logistic']['express_start']        = 0;
                $results[0]['logistic']['express_postage']      = 0;
                $results[0]['logistic']['express_plus']         = 0;
                $results[0]['logistic']['express_postageplus']  = 0;
                $results[0]['logistic']['preferentialStandard'] = 0;
                $results[0]['logistic']['preferentialMoney']    = 0;
            }
            /*快递类型 ---e*/

            /*商家配送 ---s*/
            $blogisticId = $results[0]['blogistic'];
            $archives    = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE `id` = $blogisticId");
            $ret         = $dsql->dsqlOper($archives, "results");

            if ($ret) {
                $value        = $ret[0];

                $note              = $value['note'];
                $delivery_fee_mode = $value['delivery_fee_mode'];
                $logistype         = $value['logistype'];
                $basicprice        = $value['basicprice'];
                $express_postage   = $value['express_postage'];
                $preferentialMoney = $value['preferentialMoney'];

                $ret[0]['blogisticNote']                  = $note;
                $ret[0]['blogistic']                      = array();
                $ret[0]['blogistic']['delivery_fee_mode'] = $delivery_fee_mode;
                $ret[0]['blogistic']['logistype']         = $logistype;
                $ret[0]['blogistic']['basicprice']        = $basicprice;/*起送价*/
                $ret[0]['blogistic']['express_postage']   = $express_postage; /*默认运费*/
                $ret[0]['blogistic']['preferentialMoney'] = $preferentialMoney;/*满多少包邮*/

                $range_delivery_fee_value = !empty($value['range_delivery_fee_value']) ? unserialize($value['range_delivery_fee_value']) : array();


                $ret[0]['blogisticId']              = $blogisticId;
                $ret[0]['range_delivery_fee_value'] = $range_delivery_fee_value; /*距离配送 规格*/
                $results[0]['blogisticId'] = $blogisticId;
            }
        // }

        /*商家配送 ---s*/

        //评价
        if(!$oneself){
            // $sql = $dsql->SetQuery("SELECT `rating` FROM `#@__shop_common` c WHERE c.`ischeck` = 1 AND c.`pid` = ".$id);
            $sql = $dsql->SetQuery("SELECT c.`rating` FROM `#@__public_comment_all` c WHERE c.`ischeck` = 1 AND c.`type` = 'shop-order' AND c.`aid` = '$id' AND c.`pid` = 0");
            $res = $dsql->dsqlOper($sql, "results");
            $rat = $rat1 = 0;
            foreach ($res as $k => $v) {
                if ($v['rating'] == 1) {
                    $rat1++;
                }
                $rat++;
            }
            //好评率
            $rating = 0;
            if ($rat1 && $rat) {
                $rating = number_format($rat1 / $rat, 2);
            }
            $totalCommon = $dsql->dsqlOper($sql, "totalCount");  //评价总人数

            // $sql = $dsql->SetQuery("SELECT avg(c.`score1`) s1, avg(c.`score2`) s2, avg(c.`score3`) s3 FROM `#@__shop_common` c WHERE c.`ischeck` = 1 AND c.`pid` = ".$id);
            $sql    = $dsql->SetQuery("SELECT avg(c.`sco1`) s1, avg(c.`sco2`) s2, avg(c.`sco3`) s3 FROM `#@__public_comment_all` c WHERE c.`ischeck` = 1 AND c.`type` = 'shop-order' AND c.`aid` = '$id' AND c.`pid` = 0");
            $res    = $dsql->dsqlOper($sql, "results");
            $score1 = $res[0]['s1'];  //分项1
            $score2 = $res[0]['s2'];  //分项2
            $score3 = $res[0]['s3'];  //分项3

            $results[0]['rating']      = number_format($rating, 2);
            $results[0]['rating']      = number_format($rating, 2);
            $results[0]['rating']      = number_format($rating, 2);
            $results[0]['totalCommon'] = $totalCommon;
            $results[0]['rating']      = number_format($rating, 2);
            $results[0]['score1']      = number_format($score1, 1);
            $results[0]['score2']      = number_format($score2, 1);
            $results[0]['score3']      = number_format($score3, 1);
            $param             = array(
                "service"  => "shop",
                "template" => "detail",
                "id"       => $id
            );
            $results[0]['url'] = getUrlPath($param);

            //验证是否已经收藏
            $params                = array(
                "module" => "shop",
                "temp"   => "detail",
                "type"   => "add",
                "id"     => $id,
                "check"  => 1
            );
            $collect               = checkIsCollect($params);
            $results[0]['collect'] = $collect == "has" ? 1 : 0;

            //验证是否已经收藏
            $storeP       = array(
                "module" => "shop",
                "temp"   => "store-detail",
                "type"   => "add",
                "id"     => $results[0]['store']['id'],
                "check"  => 1
            );
            $storeCollect = checkIsCollect($storeP);

            $collectsql = $dsql->SetQuery("SELECT `id` FROM `#@__member_collect` WHERE `module` = 'shop' AND `action` = 'detail' AND `aid` = '$id'");

            $collectnum = $dsql->dsqlOper($collectsql, "totalCount");

            $results[0]['collectnum'] = (int)$collectnum;

            $results[0]['storeCollect'] = $storeCollect == "has" ? 1 : 0;
        }

        $results[0]['inventory']      = $results[0]['inventory'] < 0 ? 0 : $results[0]['inventory'];  //库存
        $results[0]['inventoryCount'] = (int)$results[0]['inventoryCount'];  //库存计数  0拍下减库存  1付款减库存  2永不减库存

        $results[0]['storeFlagArr'] = $results[0]['storeFlag'] ? explode(',', $results[0]['storeFlag']) : array();

        // 所属分站
        //			$sql = $dsql->SetQuery("SELECT `addrid` FROM `#@__shop_store` WHERE `id` = ".$results[0]['store']);
        // $ret = $dsql->dsqlOper($sql)
        $results[0]['huodong'] = $huodong;

        /*销售类型*/
        $typesalesarr = $results[0]['typesales'] != '' ? explode(',', $results[0]['typesales']) : array();
        $results[0]['typesalesarr'] = $typesalesarr;

        if (in_array('1', $typesalesarr)) {
            /*到店消费*/
            $results[0]['protype'] = 1;
        }
        /*其他须知*/
        $notice    = $results[0]['notice'] != '' ? explode('|||', $results[0]['notice']) : array();
        $noticearr = array();

        if ($notice) {
            foreach ($notice as $a => $b) {
                $barr = $b != '' ? explode("$$$", $b) : array();
                $noticearr[$a]['title'] = $barr[0];
                $noticearr[$a]['note']  = $_REQUEST['platform_name'] ? nl2br($barr[1]) : $barr[1];
            }
        }
        $results[0]['noticearr'] = $noticearr;

        /*套餐*/
        $package    = $results[0]['package'] != '' ? explode('|||', $results[0]['package']) : array();
        $package = str_replace("¥", "", $package);
        $packagearr = array();
        if ($package) {
            foreach ($package as $key => $value) {
                $title = $value != '' ? explode('@@@', $value) : array();
                if ($title) {
                    $packagearr[$key]['title'] = $title[0];

                    $pro = $title[1] != '' ? explode("~~~", $title[1]) : array();

                    $proarray = array();

                    if ($pro) {
                        foreach ($pro as $a => $b) {
                            $b = str_replace("￥", "", $b);
                            $proparam = $b != '' ? explode("$$$", $b) : array();

                            array_push($proarray, $proparam);
                        }
                    }

                    $packagearr[$key]['param'] = $proarray;
                }
            }
        }
        $results[0]['packagearr'] = $packagearr;

        /*营业日*/
        $day = array('1' => '周一', '2' => '周二', '3' => '周三', '4' => '周四', '5' => '周五', '6' => '周六', '7' => '周日',);

        $daystr = '';
        $availableweek = $results[0]['availableweek'] != '' ? explode(',', $results[0]['availableweek']) : array();
        if ($availableweek) {
            for ($i = 1; $i <= 7; $i++) {
                if (in_array($i, $availableweek)) {
                    $daystr .= $day[$i] . ' ';
                }
            }
        }
        $results[0]['daystr']     = $daystr;
        $results[0]['daystrarr']  = $availableweek;

        /*时间段*/
        $availabletime    =  $results[0]['availabletime'] != '' ? unserialize($results[0]['availabletime']) : array();

        $availabletimearr = array();
        if (!empty($availabletime)) {
            foreach ($availabletime as $item) {
                array_push($availabletimearr, $item['start'] . '-' . $item['stop']);
            }
        }
        $results[0]['availabletimearr']     = $availabletimearr;



        //评论接口也会调用详情接口，导致阅读次数重复增加
        global $currentAction;
        if($_REQUEST['action'] != 'getComment' && $currentAction != 'getComment' && !$oneself){
            //更新浏览次数
            $sql = $dsql->SetQuery("UPDATE `#@__shop_product` SET `click` = `click` + 1 WHERE `id` = " . $id);
            $dsql->dsqlOper($sql, "update");

            $uid = $userid;
            if ($uid > 0) {
                $uphistoryarr = array(
                    'module'  => 'shop',
                    'uid'     => $uid,
                    'aid'     => $id,
                    'fuid'    => '',
                    'module2' => 'detail',
                );
                /*更新浏览足迹表   */
                updateHistoryClick($uphistoryarr);
            }
        }

        //消费返积分比例
        global $cfg_returnPointState;
        global $cfg_returnPoint_shop;
        if ($cfg_returnPointState == 1) {
            $results[0]['cfg_returnPoint_shop'] = $cfg_returnPoint_shop / 100;
        }else{
            $results[0]['cfg_returnPoint_shop'] = 0;
        }

        //查询当前用户是否为分销商
        if($userid > -1){
            $archives = $dsql->SetQuery("SELECT m.`id`, m.`mtype`, m.`username`, m.`nickname`, m.`from_uid`, m.`cityid`, m2.`username` recuser, m2.`nickname` recname, m2.`mtype` from_mtype, f.`state`, f.`pubdate` FROM `#@__member_fenxiao_user` f LEFT JOIN `#@__member` m  ON m.`id` = f.`uid` LEFT JOIN `#@__member` m2  ON m2.`id` = m.`from_uid` WHERE 1 = 1 AND m.`id` = $userid AND f.`state` = 1");
            $_results  = $dsql->dsqlOper($archives, "results");
            include HUONIAOINC . "/config/settlement.inc.php";
            include HUONIAOINC . "/config/shop.inc.php";
            global $cfg_fenxiaoType;
            global $cfg_fenxiaoState;
            global $cfg_fenxiaoLevel;
            global $cfg_fenxiaoAmount;
            $fenXiao = (int)$customfenXiao;
            //分销佣金比列
            $cfg_fenxiaoFee_shop = 0;
            $fx_reward = $results[0]['fx_reward'];
            if($cfg_fenxiaoLevel && $fenXiao && $cfg_fenxiaoState && $_results && $fx_reward != '0') {
                $level = unserialize($cfg_fenxiaoLevel);
                $levelProportion = $level[0]['fee'];
                $userinfo = $userLogin->getMemberInfo($uid, 1);
                $memberLevelAuth = getMemberLevelAuth($userinfo['level']);
                $shopDiscount = $memberLevelAuth['shop'];               //  商城优惠
                if($cfg_fenxiaoType) {                      //固定等级 分销商比例
                    $sql = $dsql->SetQuery("SELECT `level` FROM `#@__member_fenxiao_user` WHERE `uid` = $uid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $levelProportion = $level[$ret[0]['level']]['fee'];
                    }
                }

                global $cfg_fenxiaoSource;
                $fenxiaoSource = (int)$cfg_fenxiaoSource;
                global $cfg_shopFee;  //平台抽成

                if($detailConfig['store']['shopFee'] > 0){
                    $cfg_shopFee = $detailConfig['store']['shopFee'];
                }

                //如果是平台承担，则计算佣金的底价以平台应得为准
                $pingtai = 1;
                if(!$fenxiaoSource){
                    $pingtai = $cfg_shopFee / 100;
                }

                if ($fx_reward) {
                    if (strstr($fx_reward, '%')) {
                        if (!empty($shopDiscount)) {
                            $cfg_fenxiaoFee_shop = $shopDiscount /10 *  (float)$fx_reward / 100 * $levelProportion / 100 * $pingtai;
                        }else{
                            $cfg_fenxiaoFee_shop =  (float)$fx_reward / 100 * $levelProportion / 100 * $pingtai;
                        }
                    } else {
                        if (!empty($shopDiscount)) {
                            $cfg_fenxiaoFee_intshop = $shopDiscount /10 * $fx_reward * $levelProportion / 100;
                        }else{
                            $cfg_fenxiaoFee_intshop = $fx_reward * $levelProportion / 100;
                        }
                        $results[0]['cfg_fenxiaoFee_intshop'] = sprintf("%.2f", $cfg_fenxiaoFee_intshop);
                    }
                } else {

                    if (!empty($shopDiscount)) {
                        $cfg_fenxiaoFee_shop = $shopDiscount /10 * $cfg_fenxiaoAmount / 100 * $levelProportion / 100 * $pingtai;
                    }else{
                        $cfg_fenxiaoFee_shop =  $cfg_fenxiaoAmount / 100 * $levelProportion / 100 * $pingtai;
                    }

                }
            }
        }

        $results[0]['cfg_fenxiaoFee_shop'] = (float)$cfg_fenxiaoFee_shop;  //比例不需要保留两位小数，否则会出现比例小时，前台不显示分享佣金

        global $customshopbargainingnomoney; /*未到底价是否可以下单*/
        global $customhuodongygtime; /*活动预告时限*/

        $results[0]['customshopbargainingnomoney'] = (int)$customshopbargainingnomoney;
        $results[0]['customhuodongygtime'] = (float)$customhuodongygtime;

        
        return $results[0];
    }

    // 比较两串字符的ascii码大小
    private function check_ascii(string $str1, string $str2)
    {
        $len1 = strlen($str1);
        $len2 = strlen($str2);

        if ($len1 > $len2) {
            $bool = false;
            $len = $len2;
        } else {
            $bool = true;
            $len = $len1;
        }

        for ($i = 0; $i < $len; ++$i) {
            if (ord($str1[$i]) > ord($str2[$i])) { // 第一个 比 第二个 大
                return false;
            } elseif (ord($str1[$i]) < ord($str2[$i])) { // 第二个 比 第一个 大
                return true;
            }
        }
        return $bool; // 前面字符相等，长度短的小
    }
    // 根据 ascii码 排序 顺序
    private function asc_sort(array &$arr)
    {
        foreach ($arr as $k1 => &$v1) {
            foreach ($arr as $k2 => &$v2) {
                if ($v1 != $v2 && $this->check_ascii($v1, $v2)) {
                    $tmp = $v1;
                    $v1 = $v2;
                    $v2 = $tmp;
                }
            }
        }
    }


    /**
     * 一维码查询商品
     *
     * @param code string 一维码
     * @param type string 默认为空，可选值redirect
     * @return array|string 当type值等于redirect时，直接跳转到商品详情页
     */
    public function barcodeSearch()
    {
        global $dsql;

        $code = $this->param['code'];
        $type = $this->param['type'];

        if (empty($code)) {
            if (empty($type)) {
                return array("state" => 200, "info" => "识别失败，请重新扫描！");
            } else {
                die('<script>alert("识别失败，请重新扫描！")</script>');
            }
        }

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_product` WHERE `barcode` = '$code'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $param = array(
                'service'  => 'shop',
                'template' => 'detail',
                'id'       => $ret[0]['id']
            );
            $url   = getUrlPath($param);

            if (empty($type)) {
                return $url;
            } else {
                header('location:' . $url);
                die;
            }
        } else {
            if (empty($type)) {
                return array("state" => 200, "info" => "未找到相关商品！");
            } else {
                die('<script>alert("未找到相关商品！");location.href="' . getUrlPath(array('service' => 'shop')) . '"</script>');
            }
        }
    }


    /**
     * 购物车列表&&下单商品列表
     * 两处共用一个方法，不同点是购物车列表获取cookie信息，下单商品列表获取传递过来的信息
     * @return array
     */
    public function getCartList()
    {
        global $dsql;
        global $langData;

        $param = $this->param;
        if (is_array($param)) {
            unset($param['time']);
            unset($param['cityid']);
            unset($param['access_token']);
            unset($param['platform_version']);
            unset($param['platform_timestamp']);
            unset($param['platform_name']);
        }

        //区分购物车或下单商品列表
        if (!empty($param)) {
            $cartData = $param;

            if (!empty($cartData['ordertype'])  && is_array($cartData)) {

                $ordertype = $cartData['ordertype'];
                unset($cartData['ordertype']);
            }

            if (!empty($cartData['addressid']) && is_array($cartData)) {
                $addressid = (int)$cartData['addressid'];
                unset($cartData['addressid']);
            }
        } else {
            $param         = array("module" => "shop");
            $moduleHandler = new handlers("member", "operateCart");
            $moduleContent = $moduleHandler->getHandle($param);
            $cartData      = $moduleContent['state'] == 100 ? $moduleContent['info']['content'] : '';
            if ($cartData) {
                $cartData = explode("|", $moduleContent['info']['content']);
            }
        }
        if (!empty($cartData)) {

            $return   = array();
            $param    = array(
                "service"  => "shop",
                "template" => "detail",
                "id"       => "%id%"
            );
            $urlParam = getUrlPath($param);

            $i = 0;
            foreach ($cartData as $key => $value) {
                $val = explode(",", $value);
                if(!is_numeric($val[0])) continue;
                $this->param = $val[0];
                // global $oper;
                // $oper = "user";
                $detail = $this->detail(1);
                $delivery = array_column($detail, 'delivery');
                if (!in_array('0', $delivery)) {
                    $delivery  = 1;
                } else {
                    $delivery  = 0;
                }
                if ($detail) {
                    if ($detail['store']) {
                        $return[$i]['store'] = array(
                            "id"           => (int)$detail['store']['id'],
                            "title"        => $detail['store']['title'],
                            "userid"        => (int)$detail['store']['userid'],
                            "domain"       => $detail['store']['domain'],
                            "qq"           => $detail['store']['qq'],
                            "address"      => $detail['store']['address'],
                            "tel"          => $detail['store']['tel'],
                            "distribution" => (int)$detail['store']['distribution'],
                            "express"      => (int)$detail['store']['express'],
                            "delivery"     => (int)$delivery,
                            "lng"          => $detail['store']['lng'],
                            "lat"          => $detail['store']['lat']
                        );
                    }

                    $juli = 0;
                    if ($addressid) {

                        $archives = $dsql->SetQuery("SELECT `lng`,`lat` FROM `#@__member_address` WHERE `id` = '$addressid'");

                        $res      = $dsql->dsqlOper($archives, "results");

                        $lng      = $res && is_array($res) ? $res[0]['lng'] : '';
                        $lat      = $res && is_array($res) ? $res[0]['lat'] : '';
                        $juli =  oldgetDistance($lng, $lat, $detail['store']['lng'], $detail['store']['lat']) / 1000;
                    }

                    $return[$i]['id']           = (int)$val[0];
                    $return[$i]['specation']    = $val[1];
                    $return[$i]['count']        = (int)$val[2];
                    $return[$i]['title']        = $detail['title'];
                    $return[$i]['protype']      = (int)$detail['protype'];
                    $return[$i]['is_tuikuan']   = (int)$detail['is_tuikuan'];
                    $return[$i]['typesales']    = $detail['typesales'];
                    $return[$i]['typesalesarr'] = $detail['typesales'] != '' ? explode(',', $detail['typesales']) : array();

                    $param = array("url" => $detail['litpic'], "type" => "middle");
                    $return[$i]['thumb'] = $detail['litpic'];

                    //价格
                    $price    = $detail['price'];
                    $speids = "";
                    $inventor = $detail['inventory'];
                    $limit    = $detail['limitcount'];
                    if ($detail['specification']) {
                        foreach ($detail['specification'] as $k => $v) {

                            if ($v['id'] == $val[1]) {
                                $price    = $v['price'][1];
                                $inventor = $v['price'][2];
                                $speids = $v['spe'];
                            }
                        }
                    }
                    if ($detail['states'] != 0 && $detail['states'] != 3) {
                        if ($ordertype != 'zjbuy') {

                            $price    = $detail['huodongprice'];
                            $inventor = $detail['huodonginventory'];
                            $limit    = $detail['limit'];
                            if ($detail['pinspecification']) {
                                foreach ($detail['pinspecification'] as $k => $v) {
                                    if ($v['id'] == $val[1]) {
                                        $price    = $v['price'][1];
                                        $inventor = $v['price'][2];
                                    }
                                }
                            }
                        }
                    }
                    $return[$i]['price']    = (float)$price;

                    $return[$i]['shopunit']    = $detail['shopunit'];
                    $return[$i]['inventor'] = $inventor;

                    $return[$i]['states']        = (int)$detail['states'];
                    $return[$i]['smallCount']    = (int)$detail['smallCount'];
                    $return[$i]['packingCount']  = (int)$detail['packingCount'];
                    $return[$i]['etime']         = (int)$detail['etime'];
                    $return[$i]['ktime']         = (int)$detail['ktime'];
                    $return[$i]['ygstates']      = (int)$detail['ygstates'];
                    $return[$i]['huodongstates'] = (int)$detail['states'];
                    $return[$i]['huodongprice']  = (float)$detail['huodongprice'];
                    $return[$i]['limitcount']    = (int)$limit;
                    $return[$i]['state']         = (int)$detail['state'];


                    $typesales   = explode(',', $detail['typesales']);
                    $protypesales = 0;
                    if (in_array('1', $typesales)) {
                        $protypesales                = 1;
                    }
                    if (in_array('1', $typesales) && (in_array('4', $typesales) || in_array('2', $typesales) || in_array('3', $typesales))) {
                        $protypesales                = 2;
                    }
                    $return[$i]['protypesales']  = $protypesales;
                    $return[$i]['volume']        = (float)$detail['volume'];
                    $return[$i]['weight']        = (float)$detail['weight'];
                    $return[$i]['logisticId']    = (int)$detail['logisticId'];
                    $return[$i]['blogisticId']   = (int)$detail['blogisticId'];
                    $dLogistic                  = (float)$detail['logistic'];
                    $devspecification           = $detail['devspecification'];

                    //新用户还未添加过收货地址时，直接计算运费，会报错，这里需要做个判断，没有收货地址ID时，默认为0
                    $logistic                   = $addressid ? getLogisticPrice($devspecification, $price, $val[2], $detail['volume'], $detail['weight'], $addressid, $val[0], $juli, 1) : 0;
                    $return[$i]['logistic']     = $logistic['logistic'];
                    $return[$i]['logistictype'] = $logistic['logistictype'];
                    $return[$i]['logistic_errMsg'] = $logistic['logistic_errMsg'];
                    $return[$i]['logisticTemp'] = $dLogistic;        //之前写的
                    //                    $return[$i]['logisticTemp'] = $devspecification;

                    if ($detail['logistic'] &&  is_array($dLogistic)) {

                        $return[$i]['logisticNote'] = getPriceDetail($dLogistic["bearFreight"], $dLogistic['valuation'], $dLogistic['express_start'], $dLogistic['express_postage'], $dLogistic['express_plus'], $dLogistic['express_postageplus'], $dLogistic['preferentialStandard'], $dLogistic['preferentialMoney'], $detail['logisticId']);
                    } else {
                        $return[$i]['logisticNote'] = $detail['blogisticNote'];
                    }
                    if (!is_numeric($return[$i]['logistic']) || is_nan($return[$i]['logistic'])) {
                        $return[$i]['logistic'] = 0.00;
                    }

                    $return[$i]['url']              = str_replace("%id%", $val[0], $urlParam);
                    $return[$i]['specificationArr'] = $detail['specificationArr'];
                    $return[$i]['allSpecification'] = $detail['specification'];
                    $return[$i]['pinSpecification'] = $detail['pinspecification'];

                    //规格名
                    $speInfo = array();
                    $speArr  = explode(",", $speids);
                    if($speArr && $detail['specificationArr']){
                        foreach ($speArr as $k => $v) {
                            foreach ($detail['specificationArr'] as $kk => $vv) {
                                $typename = $vv['typename'];
                                foreach ($vv['item'] as $kkk => $vvv) {
                                    if ($vvv['id'] == $v) {
                                        array_push($speInfo, $vvv['name']);
                                    }
                                }
                            }
                        }
                    }
                    $return[$i]['speInfo'] = join("；", $speInfo);
                    $i++;
                }
            }
            return $return;
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][2]);  //商品列表为空
        }
    }


    /**
     * 获取下单前的订单商品内容
     * @return array
     */
    public function get_confirm_order()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $param = $this->param;

        if (empty($param)) return array("state" => 200, "info" => "格式错误");

        $buytype = $param['buytype'];
        $ordertype = $param['ordertype'];
        $pinid = (int)$param['pinid'];
        $hid = (int)$param['hid'];
        $directbuy = (int)$param['directbuy'];
        $confirmtype = (int)$param['confirmtype'];
        $frompage = (int)$param['frompage'];
        $adsid = (int)$param['adsid'];
        $peerpay = (int)$param['peerpay'];
        $bid = (int)$param['bid'];
        $pros = $param['pros'];
        $addressid = $adsid;
        
        $userid = $userLogin->getMemberID();
        
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        
        $userinfo = $userLogin->getMemberInfo();

        $lng = $lat = '';
        if($adsid){

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $adsid");
            $userAddr = $dsql->dsqlOper($archives, "results");

            if($userAddr && is_array($userAddr)){
                if(!$userAddr[0]['addrid'] == 0){
                    $addrName = getParentArr("site_area", $userAddr[0]['addrid']);
                    $addrIdArr = array_reverse(parent_foreach($addrName, "id"));
                    $logicityid = $addrIdArr[1];
                }
            }

            $addridarr = array('0'=>$logicityid);

            $lng = $userAddr[0]['lng'];
            $lat = $userAddr[0]['lat'];
            
            if($lng == '' || $lat == ''){
                return array("state" => 200, "info" => "收货地址信息需要更新，请修改收货地址的定位后重新提交！");
            }
        }

        //会员优惠
        if($userinfo['level']){
            $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret && is_array($ret)) {
                $privilege = unserialize($ret[0]['privilege']);
            }
        }


        /*对于收货地址可用和不可用的*/
        $yesaddarr = $noaddarr =  array();
        if ($buytype == 'bargain') {

            $proquantype = 0;
            $this->param = array('id' => $bid);
            $detailConfig = $this->bargainDetail();

            if (is_array($detailConfig)) {

                $cartList = $auth_priceinfo = array();

                $price  = $detailConfig['state'] ==2 ? $detailConfig['gmoney'] :$detailConfig['gnowmoney'];
                $mprice = $price;
                $count  = 1;
                $volume = $detailConfig['goodsvolume'];
                $weight = $detailConfig['goodsweight'];
                $proid  = $detailConfig['proid'];

                $proid = $proid . ',,1';

                $prodetail = $detailConfig['prodetail'];
                $logistic = (int)$prodetail['logisticId'];

                $bearFreight          = 0;
                $valuation            = 0;
                $express_start        = 0;
                $express_postage      = 0;
                $express_plus         = 0;
                $express_postageplus  = 0;
                $preferentialStandard = 0;
                $preferentialMoney    = 0;

                $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE `id` = $logistic");
                $ret      = $dsql->dsqlOper($archives, "results");

                $addrid = 0;

                $devspecification = $deliveryarea = array();
                if (!empty($ret)) {
                    $devspecification = !empty($ret[0]['devspecification']) ? unserialize($ret[0]['devspecification']) : array();
                    if(empty($devspecification)){
                        $deliveryarea[0]['cityid']              = '';
                        $deliveryarea[0]['express_start']       = $ret[0]['express_start'] ? $ret[0]['express_start'] : 0;
                        $deliveryarea[0]['express_postage']     = $ret[0]['express_postage'];
                        $deliveryarea[0]['express_plus']        = $ret[0]['express_plus'];
                        $deliveryarea[0]['express_postageplus'] = $ret[0]['express_postageplus'];
                        $deliveryarea[0]['area']                = '默认全国';
                        $devspecification['deliveryarea']   = $deliveryarea;
                        $devspecification['valuation']      = $ret[0]['valuation'];
                    }

                    if(array_key_exists('nospecify',$devspecification) && $addridarr && $devspecification['opennospecify'] == 1){
                        $cityid = array_column($devspecification['nospecify'],"cityid");
                        $cityidarr = !empty($cityid) ? join(',',$cityid)  : '' ;
                        $nocityid = $cityidarr!='' ? explode(',',$cityidarr): array();
                        foreach ($addridarr as $a => $b){
                            if(!in_array($b,$nocityid)){
                                array_push($yesaddarr,$b);
                            }else{
                                array_push($noaddarr,$b);
                            }
                        }
                    }
                    $addrid = (int)$yesaddarr[0];
                }

                //活动商品不能与商品折扣
                if ($userinfo['level'] && 1 == 2) {
                    $value = $privilege['shop'];
                    if ($value > 0 && $value < 10) {
                        // $price = $price * (1 - $value / 10);
                        $price = (float)sprintf("%.2f",$price * ($value / 10));
                        array_push($auth_priceinfo, array(
                            "level"  => $userinfo['level'],
                            "type"   => "auth_shop",
                            "body"   => $userinfo['levelName'] . "特权-商品原价优惠",
                            "amount" => (float)sprintf("%.2f", (($mprice - $price) * 1 ))
                        ));
                    }
                }

                $juli =  oldgetDistance($lng,$lat,$prodetail['store']['lng'],$prodetail['store']['lng'])/1000;
                $logisticArr = getLogisticPrice($devspecification, $price, $count, $volume, $weight,$adsid,$prodetail['id'],$juli,1);
                    
                $logistic = $logisticArr['logistic'];
                $logistictype = $logisticArr['logistictype'];

                if($prodetail['protype'] == 1){
                    $logistic = 0;
                }

                $data = array(
                    "id"               => $prodetail['id'],
                    "specation"        => $prodetail['specation'],
                    "specificationArr" => $prodetail['specificationArr'],
                    "allSpecification" => $prodetail['allSpecification'],
                    "pinSpecification" => $prodetail['pinSpecification'],
                    "count"            => 1,
                    "title"            => $prodetail['title'],
                    "thumb"            => $prodetail['litpic'],
                    "price"            => (float)$price,
                    "limit"            => $prodetail['limitcount'],
                    "inventor"         => $prodetail['inventor'],
                    "volume"           => $prodetail['volume'],
                    "weight"           => $prodetail['weight'],
                    "logistic"         => $prodetail['logistic'],
                    "logisticTemp"     => $prodetail['logisticTemp'],
                    "logisticNote"     => $prodetail['logisticNote'],
                    "url"              => $prodetail['url'],
                    "speInfo"          => $prodetail['speInfo'],
                    "logisticId"       => $prodetail['logisticId'],
                    "delivery"         => $prodetail['delivery'],
                    "state"            => $prodetail['state'],
                    "protypesales"     => $prodetail['protypesales'],
                    "smallCount"       => $prodetail['smallCount'],
                    "packingCount"     => $prodetail['packingCount'],
                    "shopunit"         => $prodetail['shopunit'],
                    "protype"          => $prodetail['protype'],
                    "is_tuikuan"       => $prodetail['is_tuikuan'],
                    'amount'           => (float)sprintf("%.2f", (($mprice - $price) * 1)),
                );
                $i                            = 0;
                $cartList[$i]['list']         = array($data);
                $cartList[$i]['sid']          = $prodetail['store']['id'];
                $cartList[$i]['distribution'] = $prodetail['store']['distribution'];
                $cartList[$i]['express']      = $prodetail['store']['express'];
                $cartList[$i]['store']        = $prodetail['store']['title'];
                $cartList[$i]['domain']       = $prodetail['store']['domain'];
                $cartList[$i]['qq']           = $prodetail['store']['qq'];
                $cartList[$i]['address']      = $prodetail['store']['address'];
                $cartList[$i]['tel']          = $prodetail['store']['tel'];
                $cartList[$i]['lng']          = $prodetail['store']['lng'];
                $cartList[$i]['lat']          = $prodetail['store']['lat'];
                $cartList[$i]['logistic']     = $logistic;
                $cartList[$i]['logistictype']     = $logistictype;

                    
                    
                //合并计算运费
                $orderLogisticArr  = calculationOrderLogistic($cartList,$addridarr,$addressid,array('returnType'=>1));
                $orderLogistic = $orderLogisticArr['data'];
                
                $delivery_count = $userinfo['delivery_count'];
                $needCount = 1;
                if (is_array($orderLogistic)) {
                    foreach ($orderLogistic as $key => $val) {
                        foreach ($cartList as $k => &$v) {
                            if(!$v) continue;
                            if ($v['sid'] == $key) {
    
                                $val = is_numeric($val) && $val > 0 ? (float)$val : 0;
    
                                //会员运费
                                $logistic = $val;
    //                          if ($userinfo['level'] && $detailConfig[0]['states'] == 0) {
                                if ($userinfo['level']) {
                                    $value = $privilege['delivery'];
    
                                    // if($logistic <= 0){
                                    // 	$needCountm
                                    // }
    
                                    if ($logistic > 0) {
                                        $ok = false;
                                        // 打折
                                        if ($value[0]['type'] == 'discount') {
                                            if ($value[0]['val'] > 0 && $value[0]['val'] < 10) {
                                                $ok = true;
                                            }
                                            // 计次
                                        } elseif ($value[0]['type'] == 'count') {
                                            if ($value[0]['val'] == 0 || ($value[0]['val'] > 0 && $userinfo['delivery_count'] > 0)) {
                                                $ok = true;
                                            }
                                        }
    
                                        if ($ok) {
                                            if ($value[0]['type'] == 'count') {
                                                // $logistic = $val > 3 ? $val- 3 : $val;
                                                // $needCount = count($cartList);
    
                                                if ($delivery_count >= $needCount) {
                                                    $logistic = $logistic == 0 ? $logistic : $logistic - $val;
    
                                                    $delivery_count -= 1;
    
                                                } else {
                                                    $logistic = $delivery_count == 0 ? $logistic : $logistic - $val;
                                                }
    
                                            } else {
                                                $logistic = $logistic - ($val * (1 - $value[0]['val'] / 10));
                                            }
    
    //                                        array_push($auth_priceinfo, array(
    //                                        "level"  => $userinfo['level'],
    //                                        "type"   => "auth_peisong",
    //                                        "body"   => $userinfo['levelName'] . "特权-配送费优惠",
    //                                        "amount" => sprintf("%.2f", ($val - $logistic))
    //                                    ));
                                            $v['lobady'] = $userinfo['levelName'] . "特权-配送费优惠";
                                            $v['lotype'] = "auth_peisong";
                                            $v['loamount'] = (float)sprintf("%.2f", ($val - $logistic));;
                                        }
                                    }
    
                                }
                                
                                $pcount = count($v['list']);
                                // 会员优惠计入每个商品
                                foreach ($v['list'] as $ke => $ve) {
                                    $av = sprintf("%.2f", $logistic / $pcount);
                                    $v['list'][$ke]['auth_peisong'] = (float)sprintf("%.2f", $k + 1 < $pcount ? $av : ($logistic - $av * ($pcount - 1)));
                                    if ($confirmtype == 0) {
                                        $logistic = 0;
                                    }
                                }
                                $logisticTotalAmount += (float)sprintf("%.2f", $logistic);
                                $cartList[$k]['logistic_errMsg'] = str_replace('订单金额未达到商家配送要求，', '', $orderLogisticError[$key]);
                                $cartList[$k]['logistic'] = sprintf("%.2f", $logistic);
                                $cartList[$k]['mlogistic'] = sprintf("%.2f", $logistic + $v['loamount']);
                            }
    
                        }
    
                    }
                }

            }

        } else {

            if($buytype == 'pintuan'){
                if($pinid){
                    $hidsql = $dsql->SetQuery("SELECT `hid` FROM `#@__shop_tuanpin` WHERE `id` = '$pinid' AND `state` = 1");
                    $hidres = $dsql->dsqlOper($hidsql,"results");
                    if($hidres){
                        $hid = (int)$hidres[0]['hid'];
                    }else{
                        return array("state" => 200, "info" => "该拼团已结束，请重新选择！");
                    }
                }
            }

            $cartList = $auth_priceinfo = array();
            $daodiancount = $daojiacount = 0;            

            $d = $pros;  //区分购物车或确认下单页面
            if($ordertype!=''){
                $d['ordertype'] = $ordertype;
            }

            /*传入地址id计算距离给配送模板使用*/
            if ($adsid) {
                $d['addressid'] = $adsid;
            }

            $this->param = $d;
            $detailConfig = $this->getCartList();
            if (is_array($detailConfig)) {

                $i = 0;
                $delivery = true;
                $proquantype = $procountnum = 0;
                foreach ($detailConfig as $k => $v) {

                    //是否已经存在
                    $h = 0;

                    //到店消费的不需要合并订单
                    if ($confirmtype != 1) {
                        foreach ($cartList as $key => $value) {
                            if ($value['sid'] == $v['store']['id']) {
                                $h = 1;
                            }
                        }
                    }

                    $price = $v['price'];
                    // if ($userinfo['level'] && ($buytype == '' && ($v['states'] == 0 || $v['states'] == 3 || $v['states'] == 4)) && $v['states'] !=1 && $v['states'] != 2) {
                    if ($userinfo['level'] && $buytype == '') {

                        $value = $privilege['shop'];
                        if ($value > 0 && $value < 10) {
                            $price = (float)sprintf("%.2f",$price * ($value / 10));
                            array_push($auth_priceinfo, array(
                                "level"  => $userinfo['level'],
                                "type"   => "auth_shop",
                                "body"   => $userinfo['levelName'] . "特权-商品原价优惠",
                                "amount" => (float)sprintf("%.2f", (($v['price'] - $price) * $v['count'] ))
                            ));
                        }
                    }
                    $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE `id` = ".(int)$v['logisticId']);
                    $ret = $dsql->dsqlOper($archives, "results");

                    $addrid = 0;

                    $devspecification = $deliveryarea = array();
                    if ($ret) {
                        $devspecification = !empty($ret[0]['devspecification']) ? unserialize($ret[0]['devspecification']) : array();

                        if(empty($devspecification) && $ret){

                            $deliveryarea[0]['cityid']              = '';
                            $deliveryarea[0]['express_start']       = $ret[0]['express_start'];
                            $deliveryarea[0]['express_postage']     = $ret[0]['express_postage'];
                            $deliveryarea[0]['express_plus']        = $ret[0]['express_plus'];
                            $deliveryarea[0]['express_postageplus'] = $ret[0]['express_postageplus'];
                            $deliveryarea[0]['area']                = '默认全国';

                            $devspecification['deliveryarea']   = $deliveryarea;
                            $devspecification['valuation']      = $ret[0]['valuation'];
                        }

                        if(array_key_exists('nospecify',$devspecification) && $addridarr && $devspecification['opennospecify'] == 1){

                            $cityid = array_column($devspecification['nospecify'],"cityid");
                            $cityidarr = !empty($cityid) ? join(',',$cityid)  : '' ;
                            $nocityid = $cityidarr!='' ? explode(',',$cityidarr): array();
                            foreach ($addridarr as $a => $b){
                                if(!in_array($b,$nocityid)){
                                    array_push($yesaddarr,$b);
                                }else{
                                    array_push($noaddarr,$b);
                                }
                            }

                        }
                        
                    }

                    $data = array(
                        "id"               => $v['id'],
                        "proid"            => $v['id'],
                        "specation"        => $v['specation'],
                        "specificationArr" => $v['specificationArr'],
                        "allSpecification" => $v['allSpecification'],
                        "pinSpecification" => $v['pinSpecification'],
                        "count"            => $count ? $count : $v['count'],
                        "title"            => $v['title'],
                        "thumb"            => $v['thumb'],
                        "price"            => (float)$price,
                        "mprice"            => (float)$v['price'],
                        "limit"            => $v['limitcount'],
                        "inventor"         => $v['inventor'],
                        "volume"           => $v['volume'],
                        "weight"           => $v['weight'],
                        "logistic"         => $v['logistic'],
                        "logistictype"     => $v['logistictype'],
                        "logisticTemp"     => $v['logisticTemp'],
                        "logisticNote"     => $v['logisticNote'],
                        "url"              => $v['url'],
                        "speInfo"          => $v['speInfo'],
                        "logisticId"       => $v['logisticId'],
                        "delivery"         => $v['delivery'],
                        "state"            => (int)$v['state'],
                        "protypesales"     => (int)$v['protypesales'],
                        "ygstates"         => $v['ygstates'],
                        "huodongstates"    => $v['huodongstates'],
                        "huodongprice"     => (float)$v['huodongprice'],
                        "ktime"            => $v['ktime'],
                        "smallCount"       => $v['smallCount'],
                        "packingCount"     => $v['packingCount'],
                        "shopunit"         => $v['shopunit'],
                        "etime"            => $v['etime'],
                        "protype"          => $v['protype'],
                        'amount'           => (float)sprintf("%.2f", (($v['price'] - $price) * $v['count'])),
                        'body'             => $userinfo['levelName'] . "特权-商品原价优惠",
                        'type'             =>"auth_shop",
                        'typesales'        => $v['typesales'] ? $v['typesales'] : 4,
                        'typesalesarr'     => $v['typesalesarr'] ? $v['typesalesarr'] : array("0"=>4),
                        'is_tuikuan'       => $v['is_tuikuan'],
                        'blogisticId'      => $v['blogisticId']
                    );
                    //如果不存在则新建一级
                    if (!$h) {
                        if ($v['store']) {
                            $cartList[$i]['sid']          = $v['store']['id'];
                            $cartList[$i]['distribution'] = $v['store']['distribution'];
                            $cartList[$i]['express']      = $v['store']['express'];
                            $cartList[$i]['store']        = $v['store']['title'];
                            $cartList[$i]['userstore']    = $v['store']['userid'];
                            $cartList[$i]['domain']       = $v['store']['domain'];
                            $cartList[$i]['qq']           = $v['store']['qq'];
                            $cartList[$i]['address']      = $v['store']['address'];
                            $cartList[$i]['lng']          = $v['store']['lng'];
                            $cartList[$i]['lat']          = $v['store']['lat'];
                            $cartList[$i]['tel']          = $v['store']['tel'];
                            $cartList[$i]['daodiancount'] = 0;
                            $cartList[$i]['daojiacount']  = 0;

                            $cartList[$i]['logistic']     = 0;
                            $cartList[$i]['logistic_errMsg']     = $v['logistic_errMsg'];

                            if ($v['store']['delivery'] !=1) {
                                $delivery = false;
                            }

                        } else {
                            $cartList[$i]['sid']   = 0;
                            $cartList[$i]['store'] = $langData['shop'][4][37];  //官方直营
                        }

                        $cartList[$i]['list'] = array($data);
                        $i++;

                    } else {

                        //如果已存在则push
                        foreach ($cartList as $key => $value) {
                            if ($value['sid'] == $v['store']['id']) {
                                array_push($cartList[$key]['list'], $data);
                            }
                        }

                    }


                    if($proquantype != 0 && $procountnum != $proquantype){
                        return array("state" => 200, "info" => "订单中含有多种类型商品，下单失败！");
                        die;
                    }
                }

                /*查询可用优惠券*/
                $nowtime = time();
                foreach ($cartList as $a => $b) {
                    $foodquanarr   = array();

                    /*不可用*/
                    $noquansql = $dsql->SetQuery("SELECT `id`,`name`,`basic_price`,`promotiotype`,`quantype`,`etime`,`promotio`,`bear`,`qid`,'1' nousetype FROM `#@__shop_quanlist` WHERE `userid`  ='$userid' AND (`ktime` > '$nowtime' or `etime` < '$nowtime'  AND (`shopids` ='".$b['sid']."' OR `bear` !=1))");
                    $noquanres = $dsql->dsqlOper($noquansql,"results");
                    if(!empty($noquanres)){
                        $cartList[$a]['noquanarr'] = $noquanres;
                    }else{
                        $cartList[$a]['noquanarr'] = array();
                    }

                    $storeorderamount = array_sum(array_map(function ($product){
                        return (float)sprintf('%.2f',$product['price']) * $product['count'];
                    },$b['list']));

                    /*店铺券*/
                    $storesql = $dsql->SetQuery("SELECT `id`,`name`,`basic_price`,`promotiotype`,`promotio`,`qid`,`quantype`,`etime`,`bear` FROM `#@__shop_quanlist` WHERE `state` = 0 AND `quantype` = 0 AND `userid`  ='$userid'  AND (`shopids` = '".$b['sid']."' or `bear` = 1)AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime' AND `basic_price` <= '$storeorderamount'");
                    $storeres = $dsql->dsqlOper($storesql,"results");
                    if(!empty($storeres)){
                        $cartList[$a]['quanarr'] = $storeres;
                    }else{
                        $cartList[$a]['quanarr'] = array();
                    }

                    /*商品券*/
                    foreach ($b['list'] as $food => $fdv){
                        $foodsql = $dsql->SetQuery("SELECT `id`,`name`,`basic_price`,`promotiotype`,`promotio`,`qid`,`quantype`,`etime` FROM `#@__shop_quanlist` WHERE `state` = 0 AND `quantype` = 1 AND `userid`  ='$userid' AND FIND_IN_SET('".$fdv['id']."',`fid`)  AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime'");
                        $foodres =  $dsql->dsqlOper($foodsql,"results");
                        $quanid = array();

                        $needmoney = 0;
                        if($foodres){
                            $needmoney += ($fdv['price'] * $fdv['count']);
                            if(!empty($foodquanarr)){
                                $quanid = array_column($foodquanarr,'id');
                            }
                            if(!in_array( $foodres[0]['id'],$quanid)){
                                $foodres[0]['needmoney'] = $needmoney;
                                array_push($foodquanarr,$foodres[0]);
                            }else{
                                $quankey = array_search($fdv['id'],$quanid);
                                $foodquanarr[$quankey]['needmoney']+=$needmoney;
                            }
                        }

                    }

                    foreach ($foodquanarr as $food => $foodv){
                        if($foodv['needmoney'] >= $foodv['basic_price'] ){
                            array_push($cartList[$a]['quanarr'],$foodv);
                        }else{
                            $foodv['nousetype'] = 2;
                            array_push($cartList[$a]['noquanarr'],$foodv);
                        }
                    }

                }

                //合并计算运费
                $logisticTotalAmount = 0;
                $orderLogisticArr  = calculationOrderLogistic($cartList,$addridarr,$addressid,array('returnType'=>1));
                $orderLogistic = $orderLogisticArr['data'];
                //覆盖错误信息列表，这里不需要显示，不注释掉会出现cartList结构错误（cartList[商家ID] => 错误信息）
                $orderLogisticError = $orderLogisticArr['error'];
                $delivery_count = $userinfo['delivery_count'];
                $needCount      = 1;
                if (is_array($orderLogistic)) {
                    foreach ($orderLogistic as $key => $val) {
                        foreach ($cartList as $k => &$v) {
                            if(!$v) continue;
                            if ($v['sid'] == $key) {

                                $val = is_numeric($val) && $val > 0 ? (float)$val : 0;

                                //会员运费
                                $logistic = $val;
                                // if ($userinfo['level'] && ($buytype == '' && ($detailConfig[0]['states'] == 0 || $detailConfig[0]['states'] == 3 || $detailConfig[0]['states'] == 4)) && $detailConfig[0]['states'] !=1 && $detailConfig[0]['states'] != 2) {
                                if ($userinfo['level']) {
                                    $value = $privilege['delivery'];

                                    if ($logistic > 0) {
                                        $ok = false;
                                        // 打折
                                        if ($value[0]['type'] == 'discount') {
                                            if ($value[0]['val'] > 0 && $value[0]['val'] < 10) {
                                                $ok = true;
                                            }
                                            // 计次
                                        } elseif ($value[0]['type'] == 'count') {
                                            if ($value[0]['val'] == 0 || ($value[0]['val'] > 0 && $userinfo['delivery_count'] > 0)) {
                                                $ok = true;
                                            }
                                        }

                                        if ($ok) {
                                            if ($value[0]['type'] == 'count') {

                                                if ($delivery_count >= $needCount) {
                                                    $logistic = $logistic == 0 ? $logistic : $logistic - $val;
                                                    $delivery_count -= 1;
                                                } else {
                                                    $logistic = $delivery_count == 0 ? $logistic : $logistic - $val;
                                                }

                                            } else {
                                                $logistic = $logistic - ($val * (1 - $value[0]['val'] / 10));
                                            }

                                            $v['lobady'] = $userinfo['levelName'] . "特权-配送费优惠";
                                            $v['lotype'] = "auth_peisong";
                                            $v['loamount'] = (float)sprintf("%.2f", ($val - $logistic));;
                                        }
                                    }

                                }

                                $pcount = count($v['list']);
                                // 会员优惠计入每个商品
                                foreach ($v['list'] as $ke => $ve) {
                                    $av = sprintf("%.2f", $logistic / $pcount);
                                    $v['list'][$ke]['auth_peisong'] = (float)sprintf("%.2f", $k + 1 < $pcount ? $av : ($logistic - $av * ($pcount - 1)));
                                    if ($confirmtype == 0) {
                                        $logistic = 0;
                                    }
                                }
                                $logisticTotalAmount += (float)sprintf("%.2f", $logistic);
                                $cartList[$k]['logistic_errMsg'] = str_replace('订单金额未达到商家配送要求，', '', $orderLogisticError[$key]);
                                $cartList[$k]['logistic'] = (float)sprintf("%.2f", $logistic);
                                $cartList[$k]['mlogistic'] = (float)sprintf("%.2f", $logistic + $v['loamount']);
                            }
                        }
                    }
                }

            }

        }

        $countstore = $cartList ? array_unique(array_column($cartList,'sid')) :  array();

        //计算积分
        global $cfg_pointRatio;
        $logic = 0;
        $price = 0;

        $pointprice = 0;
        $alldaodiancount = $alldaojiacount = 0;
        if($cartList){
            foreach ($cartList as $kk=>&$vvv) {
                if(!$vvv) continue;
                $daodiancount = $daojiacount = 0;
                foreach ($vvv['list'] as $k=>$vv){
                    $pointprice += $vv['price'] * $vv['count'] + $vv['auth_peisong'];   //计算抵扣积分\
                    $price += $vv['price'] * $vv['count'];
                    if ($vv['typesalesarr']){
                        /*1到店消费 ,快递*/
                        if (in_array('1',$vv['typesalesarr'])) {
                            $daodiancount += 1;
                        }
                        if (in_array('4',$vv['typesalesarr']) || in_array('3',$vv['typesalesarr']) || in_array('2',$vv['typesalesarr']) ) {
                            $daojiacount  += 1;
                        }
                    }

                }
                $alldaodiancount += $daodiancount;
                $alldaojiacount  += $daojiacount;
                $vvv['daodiancount'] = $daodiancount;
                $vvv['daojiacount']  = $daojiacount;
            }
        }

        $pointprice = (float)sprintf("%.2f",$price + $logic);
        
        $userpoint = $userinfo['point'];
        $point_price = getJifen('shop', $pointprice);   //能抵扣多少钱
        $pricepoint  = $point_price * $cfg_pointRatio;      // 能转换多少积分
        if ($pricepoint >=  $userpoint) {
            $pricepoint = $userpoint;
        }

        // 会员特权
        $privilege = [];
        if($userinfo['level']){
            $sql = $dsql->SetQuery("SELECT * FROM `#@__member_level` WHERE `id` = ".$userinfo['level']);
            $ret = $dsql->dsqlOper($sql, "results");
            if($ret){
                $privilege = unserialize($ret[0]['privilege']);
            }
        }

        //确认订单页面输出要下单的商品信息
        if ($buytype == 'bargain') {
            $pros[0] = $proid;
        }
        $ordertype = $pros['ordertype'] ? $pros['ordertype'] : $ordertype;

        if($ordertype!=''){
            unset($pros['ordertype']);
        }

        return array(
            'countstore' => count($countstore),
            'alldaodiancount' => $alldaodiancount,
            'alldaojiacount' => $alldaojiacount,
            'cartList' => $cartList,
            'huodongstates' => $detailConfig[0]['states'],
            'logistic' => (float)sprintf("%.2f", $logisticTotalAmount),
            'pricepoint' => (float)sprintf("%.2f", $pricepoint),
            'userinfo' => $userinfo,
            'delivery' => $delivery,
            'priceinfo' => $auth_priceinfo,
            'yesaddarr' => $yesaddarr,
            'noaddarr' => $noaddarr,
            'privilege' => $privilege,
            'ordertype' => $ordertype,
            'confirmtype' => (int)$confirmtype,
            'frompage' => (int)$frompage,
            'hid' => (int)$hid,
            'pros' => $pros ? join("|", $pros) : ''
        );

    }


    /**
     * 确认订单
     * @return array
     */
    public function confirm_order()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $param = $this->param;

        if (empty($param)) return array("state" => 200, "info" => $langData['shop'][4][3]);  //商品为空

        $pros    = $param['pros'];
        $buytype = $param['buytype'];
        $hid     = (int)$param['hid'];
        if (!is_array($pros)) return array("state" => 200, "info" => $langData['shop'][4][4]);  //格式错误

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $hdres = array();
        if ($hid) {
            $hdsql = $dsql->SetQuery("SELECT `huodongprice`,`huodonginventory`,`pinspecification`,`ktime`,`etime` FROM `#@__shop_huodongsign` WHERE `id` = '$hid'");

            $hdres = $dsql->dsqlOper($hdsql, "results");
        }

        //获取商品相关信息
        $storeArr = array();
        foreach ($pros as $key => $value) {
            //pro[0]商品ID，pro[1]规格，pro[2]数量
            $pro = explode(",", $value);

            $this->param = $pro[0];
            $detail      = $this->detail(1);

            if (!is_array($detail)) return array("state" => 200, "info" => $langData['shop'][4][5]);  //购物车中含有不存在的商品，请刷新页面重试！

            //规格名
            $speInfo = array();
            $speArr  = explode("-", $pro[1]);
            foreach ($speArr as $k => $v) {
                foreach ($detail['specificationArr'] as $kk => $vv) {
                    $typename = $vv['typename'];
                    foreach ($vv['item'] as $kkk => $vvv) {
                        if ($vvv['id'] == $v) {
                            array_push($speInfo, $typename . "：" . $vvv['name']);
                        }
                    }
                }
            }

            //判断限时抢是否已经结束
            if ($buytype != '' && $hid) {

                if (!$hdres) return array("state" => 200, "info" => '未找到该活动!');
                if ($hdres[0]['ktime'] > time()) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][6]);  //活动还未开始
                if ($hdres[0]['etime'] < time()) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][7]);  //活动已经结束
            }

            //价格&&库存
            if ($hid && $hdres) {
                $price    = $hdres[0]['price'];
                $inventor = $hdres[0]['huodonginventory'];
                if ($hdres[0]['pinspecification']) {
                    foreach ($hdres[0]['pinspecification'] as $k => $v) {
                        if ($v['id'] == $pro[1]) {
                            $price    = $v['price'][1];
                            $inventor = $v['price'][2];
                        }
                    }
                }
            } else {

                $price    = $detail['price'];
                $inventor = $detail['inventory'];
                if ($detail['specification']) {
                    foreach ($detail['specification'] as $k => $v) {
                        if ($v['spe'] == $pro[1]) {
                            $price    = $v['price'][1];
                            $inventor = $v['price'][2];
                        }
                    }
                }
            }
            if (($detail['limitcount'] < $pro[2] && $detail['limitcount'] != 0)) return array("state" => 200, "info" => '超过限购数量');

            if (($detail['limitcount'] < $pro[2] && $detail['limitcount'] != 0) || $inventor < $pro[2]) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][8]);  //库存不足

            if ($detail['packingCount'] > 1 || $detail['smallCount'] > 1) {
                $count = $pro[2] - $detail['smallCount'];
                if ($count % $detail['packingCount'] != 0) return array("state" => 200, "info" => '购买数量不正确');
            }
        }

        return true;
    }


    /**
     * 支付前验证帐户积分和余额
     */
    public function checkPayAmount()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointName;
        global $cfg_pointRatio;
        global $langData;

        $userid      = $userLogin->getMemberID();
        $param       = $this->param;
        $pros        = $param['pros'];        //商品
        $ordernum    = $param['ordernum'];    //订单号
        $usePinput   = $param['usePinput'] ? $param['usePinput']  : 0;   //是否使用积分
        $useBalance  = $param['useBalance'];  //是否使用余额
        $balance     = $param['balance'];     //使用的余额
        $paypwd      = $param['paypwd'];      //支付密码
        $buytype     = $param['buytype'];      //支付密码
        $peerpay     = $param['peerpay'];      //支付密码
        $usequan     = $param['quanuse'];      //使用优惠券
        $ordertype   = $param['ordertype'];
        $huodongtype = (int)$param['huodongtype'];      //支付密码
        $addressid   = (int)$param['addressid'];      //收货地址
        $confirmtype   = (int)$param['confirmtype'];  // 1.送到家、0.到店优惠、2.详情页过来
        $bargainid  = (int)$param['bargainid'];
        $count   = (int)$param['count'];
        $hid = $param['hid'];      //活动id
        if ($userid == -1 && !$peerpay) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        if (empty($pros) && strpos($ordernum, ',') === false && empty($ordernum)) return array("state" => 200, "info" => $langData['shop'][4][9]);  //提交失败，商品信息提交失败！

        if ($buytype == 'pintuan') {
            $huodongtype = 4;
        } elseif ($buytype == 'bargain') {
            $huodongtype = 3;
        } elseif ($buytype == 'miaosha') {
            $huodongtype = 2;
        } elseif ($buytype == 'qianggou') {
            $huodongtype = 1;
        }
        $totalPrice = 0;
        $totalPriceArr = array();
        $usequanid = array();

        $mypoint = 0;
        $changetype  = 0;
        $changeprice = 0;
        $logisticAmount = 0; //运费金额，如果是已经下过单的，直接用之前计算的运费结果，不需要再进行重新合并计算
        //如果是支付页面，根据订单号查询出商品的规格信息
        if (!empty($ordernum) && strpos($this->param['ordernum'], ',') === false) {
            $sql = $dsql->SetQuery("SELECT o.`confirmtype`,o.`id`,o.`store`,p.`proid`, p.`speid`, p.`count`,p.`changeprice` pchangeprice,o.`huodongtype`,o.`id`,o.`hid`,o.`userid`,o.`usequan`,o.`point`,o.`changetype`,o.`changeprice`,o.`logistic` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULL AND o.`ordernum` = '$ordernum'");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $speid = array();
                foreach ($ret as $key => $value) {
                    array_push($speid, $value['proid'] . "," . $value['speid'] . "," . $value['count'] . "," . $value['pchangeprice']);
                }

                $pros = join("|", $speid);

                $this->param['pros'] = $pros;
                $huodongtype = $ret[0]['huodongtype'];
                $confirmtype = $ret[0]['confirmtype'];
                $mypoint += $ret[0]['point'];
                $oid = $ret[0]['id'];
                $orderuserid = $ret[0]['userid'];
                $logisticAmount = $ret[0]['logistic'];

                if (!$hid) {
                    $hid = $ret[0]['hid'];
                }


                $this->param['huodongtype'] = $huodongtype;

                //				$priceinfo = $ret[0]['priceinfo'] !='' ? unserialize($ret[0]['priceinfo']) : array();
                $usequanid[$ret[0]['store']] = $ret[0]['usequan'];

                if ($huodongtype == 4) {
                    $buytype = 'pintuan';
                }

                if ($huodongtype == 3) {
                    $buytype = 'bargain';
                }

                $changetype   = (int)$ret[0]['changetype'];
                $changeprice  = (float)$ret[0]['changeprice'];
            } else {
                return array("state" => 200, "info" => $langData['shop'][4][10]);  //订单提交失败！
            }
        } else {
            $priceTotal = 0;
            if (!empty($ordernum)) {
                $pros = array();
                $order = explode(',', $ordernum);
                foreach ($order as $key => $value) {
                    $sql = $dsql->SetQuery("SELECT o.`id`,o.`store`,o.`amount`,p.`proid`, p.`speid`, p.`count`,p.`changeprice`,o.`huodongtype`,o.`id`,o.`hid`,o.`userid`,o.`usequan`,o.`point`,o.`logistic` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULL AND o.`ordernum` = '$value'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $speid = array();
                        foreach ($ret as $key => $value) {
                            array_push($speid, $value['proid'] . "," . $value['speid'] . "," . $value['count'] . "," . $value['changeprice']);
                        }

                        $pros[] = join("|", $speid);
                        //                        $priceTotal +=$ret[0]['amount'];
                        $huodongtype = $ret[0]['huodongtype'];

                        $mypoint += $ret[0]['point'];
                        $logisticAmount += $ret[0]['logistic'];
                        $oid = $ret[0]['id'];

                        $orderuserid = $ret[0]['userid'];

                        if (!$hid) {
                            $hid = $ret[0]['hid'];
                        }

                        $this->param['huodongtype'] = $huodongtype;

                        //				$priceinfo = $ret[0]['priceinfo'] !='' ? unserialize($ret[0]['priceinfo']) : array();


                        $usequanid[$ret[0]['store']] = $ret[0]['usequan'];

                        if ($huodongtype == 4) {
                            $buytype = 'pintuan';
                        }

                        if ($huodongtype == 3) {
                            $buytype = 'bargain';
                        }
                    } else {
                        return array("state" => 200, "info" => $langData['shop'][4][10]);  //订单提交失败！
                    }
                }
            }
        }
        if (is_array($pros)) {
            $pros = implode("|", $pros);
            $this->param['pros'] = $pros;
        }


        //订单状态验证
        $payCheck = $this->payCheck();
        if ($payCheck != "ok") return array("state" => 200, "info" => $payCheck['info']);

        if ($useBalance == 1 && !empty($balance) && empty($paypwd)) return array("state" => 200, "info" => $langData['siteConfig'][21][88]);  //请输入支付密码！

        $proArr = explode("|", $pros);

        $logicityid = 0;
        if (!empty($addressid)) {

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $addressid");
            $userAddr = $dsql->dsqlOper($archives, "results");

            if ($userAddr && is_array($userAddr)) {
                if (!$userAddr[0]['addrid'] == 0) {
                    $addrName = getParentArr("site_area", $userAddr[0]['addrid']);
                    $addrIdArr = array_reverse(parent_foreach($addrName, "id"));
                    $lng     = $userAddr[0]['lng'];
                    $lat     = $userAddr[0]['lat'];
                    $logicityid = $addrIdArr[1];
                }
            }
        }
        $protypenum = 0;
        $typesales = '';
        foreach ($proArr as $key => $value) {
            //新 pro[1] 为sku
            //pro[0]商品ID，pro[1]规格，pro[2]数量，pro[3]改价后的金额（单价*数量）
            $pro = explode(",", $value);

            $this->param = $pro[0];
            $detail = $this->detail(1);
            //价格&&库存
            if ($pro[1]) {
                $skuDetail = $this->getSkuDetail($pro[1]);
                $price = $skuDetail['price'];
            } else {
                $price = $detail['price'];
            }

            //            $confirmtype = $detail['confirmtype'];
            $typesales = $detail['typesales'];               //等于1 到店消费
            //查询会员信息
            $userinfo  = $userLogin->getMemberInfo($orderuserid, 1);
            $usermoney = $userinfo['money'];
            $userpoint = $userinfo['point'];

            //会员优惠
            $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret && is_array($ret)) {

                $privilege = unserialize($ret[0]['privilege']);
            }


            /*$huodongtype 这里原本是使用前端传的  这样不安全 改为 调用接口 查询得*/
            $huodongtype = (int)$detail['states'];

            //如果新下单前端未传buytype，则表示未参加活动，这里不再获取商品的活动类型
            if ($buytype == '' && $huodongtype != 1 && $huodongtype != 2) {
                $huodongtype = 0;
            }

            if ($buytype == '' && $huodongtype != 3 && $huodongtype != 4) {
                if ($huodongtype == '2') {
                    $buytype = 'miaosha';
                }
                if ($huodongtype == '1') {
                    $buytype = 'qianggou';
                }
            }

            //            //会员价格
            //            if ($userinfo['level'] && $huodongtype == 0) {
            //                $value = $privilege['shop'];
            //                if ($value > 0 && $value < 10) {
            //                    // $price = $price * (1 - $value / 10);
            //                    $price = sprintf("%.2f",$price * ($value / 10));
            //                }
            //            }

            if (($buytype && $huodongtype != 0 && $huodongtype != 3) && !empty($detail['hid'])) {
                $price = $detail['huodongprice'];
                if ($detail['pinspecification']) {
                    foreach ($detail['pinspecification'] as $k => $v) {

                        if ($v['id'] == $pro[1]) {
                            $price = $v['price'][1];
                        }
                    }
                }
            }
            if (($buytype == 'bargain' &&  $huodongtype == 3) && !empty($detail['hid'])) {
                if (empty($ordernum)) {
                    $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `id` = '$bargainid'");
                } else {
                    $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `oid` = '$oid'");
                }


                $bargainres = $dsql->dsqlOper($bargainsql, "results");

                $price = $bargainres[0]['state'] == 2 ? (float)$bargainres[0]['gmoney'] : (float)$bargainres[0]['gnowmoney'];
            }
            $devspecification = !empty($detail['devspecification']) ? $detail['devspecification'] : array();

            if (array_key_exists('nospecify', $devspecification) && $logicityid && $devspecification['opennospecify'] == 1 && $confirmtype != 1) {

                $cityid = array_column($devspecification['nospecify'], "cityid");

                $cityidarr = !empty($cityid) ? join(',', $cityid)  : '';


                $nocityid = $cityidarr != '' ? explode(',', $cityidarr) : array();

                if (in_array($logicityid, $nocityid)) {
                    // return array("state" => 200, "info" => $detail['logisticNote'] ? $detail['logisticNote'] : "该收货地址不可用!");  //格式错误
                    return array("state" => 200, "info" => "订单地址不可达，无法下单!");  //格式错误
                }
            }

            $juli =  oldgetDistance($lng, $lat, $detail['store']['lng'], $detail['store']['lat']) / 1000;

            //物流
            $logisticArr = getLogisticPrice($detail['devspecification'], $price, $pro[2], $detail['volume'], $detail['weight'], $addressid, $pro[0], $juli, 1);
            $logistic = (float)$logisticArr['logistic'];
            $logistictype = $logisticArr['logistictype'];
            if ($detail['protype'] == 1 && $huodongtype == 0 && $confirmtype == 1) {
                $logistic = 0;

                $protypenum += 1;
            }
            //规格名
            $speInfo = array();
            $speArr  = explode("-", $pro[1]);
            foreach ($speArr as $k => $v) {
                foreach ($detail['specificationArr'] as $kk => $vv) {
                    $typename = $vv['typename'];
                    foreach ($vv['item'] as $kkk => $vvv) {
                        if ($vvv['id'] == $v) {
                            array_push($speInfo, $typename . "：" . $vvv['name']);
                        }
                    }
                }
            }
            $storeArr[$key]['proid']      = $pro[0];
            $storeArr[$key]['speid']      = $pro[1];
            $storeArr[$key]['specation']  = join("$$$", $speInfo);
            $storeArr[$key]['count']      = $pro[2];
            $storeArr[$key]['volume']     = $detail['volume'];
            $storeArr[$key]['weight']     = $detail['weight'];
            $storeArr[$key]['price']      = $price;
            $storeArr[$key]['logistic']   = $logistic;
            $storeArr[$key]['title'] = $detail['title'];
            $storeArr[$key]['logisticId'] = $detail['logisticId'];
            $storeArr[$key]['blogisticId'] = $detail['blogisticId'];
            $storeArr[$key]['typesales'] = $detail['typesales'];
            $storeArr[$key]['logistictype'] = $logistictype;
            $storeArr[$key]['store']      = (int)$detail['store']['id'];
            $storeArr[$key]['lng']      = $detail['store']['lng'];
            $storeArr[$key]['lat']      = $detail['store']['lat'];
            $storeArr[$key]['huodongtype'] = (int)$huodongtype;
            $storeArr[$key]['hid']      = (int)$detail['hid'];
            $storeArr[$key]['states']   = (int)$detail['states'];

            //
            //            if(!empty($usequan)){
            //
            //                if($buytype !='') return array("state" => 200, "info" => "活动商品不可以用优惠券!");  //格式错误
            //
            //                $quansql = $dsql->SetQuery("SELECT `name`,`basic_price`,`promotio`,`promotiotype`,`shoptype`,`ktime`,`etime`,`fid` FROM `#@__shop_quan` WHERE `id`  ='$usequan'");
            //
            //                $quanres = $dsql->dsqlOper($quansql,"results");
            //
            //                if(!empty($quanres)){
            //
            //                    $ktime        = $quanres[0]['ktime'];
            //                    $etime        = $quanres[0]['etime'];
            //                    $basic_price  = $quanres[0]['basic_price'];
            //                    $promotio     = $quanres[0]['promotio'];
            //                    $promotiotype = $quanres[0]['promotiotype'];
            //                    $shoptype     = $quanres[0]['shoptype'];
            //                    $fid          = $quanres[0]['fid'];
            //                    $quanname     = $quanres[0]['name'];
            //
            //                    if($ktime >= $nowtime || $etime <= $nowtime){
            //                        return array("state" => 200, "info" => "未在该优惠券的使用时间!");  //格式错误
            //                    }
            //
            //                }else{
            //                    return array("state" => 200, "info" => "未找到该优惠券!");  //格式错误
            //                }
            //
            //
            //            }
            $totalPrice += sprintf("%.2f", ($pro[3] > 0 ? $pro[3] : $price * $pro[2]));

            $totalPriceArr[$key] = sprintf("%.2f", ($pro[3] > 0 ? $pro[3] : $price * $pro[2]));
        }

        //        var_dump($totalPrice);
        //        /*砍价价格*/
        //        if($huodongtype ==1){
        //
        //            $bargainsql = $dsql->SetQuery("SELECT `gnowmoney` FROM `#@__shop_bargaining` WHERE `oid` = '$oid'");
        //            $bargainres = $dsql->dsqlOper($bargainsql,"results");
        //
        //            $totalPrice  = (float)$bargainres[0]['gnowmoney'];
        //        }

        if ($protypenum != 0 && $protypenum != count($proArr)) {
            return array("state" => 200, "info" => '订单中含有多种类型商品下单失败');
        }
        $orderList = array();
        //对相同商铺的商品分组，对相同商铺的商品生成一个订单号
        $i = 0;
        foreach ($storeArr as $k => $v) {
            //是否已经存在
            $h = 0;

            //到店消费的不需要合并订单
            if ($confirmtype != 1) {
                foreach ($orderList as $key => $value) {
                    if ($value['store'] == $v['store']) {
                        $h = 1;
                    }
                }
            }

            $data = array(
                "id"         => $v['proid'],
                "title"      => $v['title'],
                "proid"      => $v['proid'],
                "speid"      => $v['speid'],
                "specation"  => $v['specation'],
                "count"      => $v['count'],
                "volume"     => $v['volume'],
                "weight"     => $v['weight'],
                "orderid"    => $v['orderid'],
                "price"      => $v['price'],
                "logistic"   => $v['logistic'],
                "logisticId" => $v['logisticId'],
                "blogisticId" => $v['blogisticId'],
                "typesales"  => $v['typesales'],
                "logistictype" => $v['logistictype'],  //用计算运费方法返回的值
                "states" => $v['states'],  //参加的活动类型
                "hid" => $v['hid'],  //参加的活动id
                // "logistictype" => !strstr($v['typesales'], 3) && $confirmtype == 2 ? 1 : $confirmtype  //如果不支持平台配置，confirmtype重置为1，用于合并计算运费中的规则

            );
            //如果不存在则新建一级
            if (!$h) {
                $orderList[$i]['sid']      = $v['store'];
                $orderList[$i]['store']    = $v['store'];
                $orderList[$i]['lng']      = $v['lng'];
                $orderList[$i]['lat']      = $v['lat'];
                //                $orderList[$i]['logistic'] = 0;
                $orderList[$i]['list']     = array($data);
                $i++;
            } else {

                //如果已存在则push
                foreach ($orderList as $key => $value) {
                    if ($value['store'] == $v['store']) {
                        array_push($orderList[$key]['list'], $data);
                    }
                }
            }
        }


        //查询会员信息
        $userinfo  = $userLogin->getMemberInfo($orderuserid, 1);
        $usermoney = $userinfo['money'];
        $userpoint = $userinfo['point'];

        //如果是老订单支付，不需要再重新合并计算运费，直接使用之前计算好的结果
        if ($ordernum) {
            $alllogistic = $logisticAmount;
        } else {

            //合并计算运费
            $orderLogistic  = calculationOrderLogistic($orderList, array('0' => $logicityid), $addressid);

            $alllogistic   = 0;
            foreach ($orderLogistic as $key => $val) {
                $val = is_numeric($val) && $val > 0 ? (float)$val : 0;
                $alllogistic += $val;
                // $totalPrice += $val;
            }
        }
    
        //$detail是在上面的循环中获取的商品详情，这里不能直接用。
        // if ($confirmtype == 1 || ($detail['protype'] == 1 && $huodongtype == 0 && $confirmtype != 2)) {
        //     $alllogistic = 0;
        // }
        
        $alllogistic = (float)$alllogistic;
        
        // 会员优惠信息
        $delivery_fee    = $alllogistic;
        $auth_priceinfo  = array();
        $aus_courier     = false;
        $auth_shop_price = $auth_delivery_price = 0; // 会员享受的优惠金额

        $auth_shop_price_arr = $auth_delivery_price_arr = array();

        if ($userinfo['level']) {
            $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $privilege = unserialize($ret[0]['privilege']);

                // 配送费
                $value = $privilege['delivery'];
                if ($delivery_fee > 0) {
                    $ok = false;
                    // 打折
                    if ($value[0]['type'] == 'discount') {
                        if ($value[0]['val'] > 0 && $value[0]['val'] < 10) {
                            $ok = true;
                        }
                        // 计次
                    } elseif ($value[0]['type'] == 'count') {
                        $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                        if ($value[0]['val'] == 0 || ($value[0]['val'] > 0 && $userinfo['delivery_count'] > 0)) {
                            $ok = true;
                        }
                    }

                    if ($ok) {
                        // 最多免3元
                        // $delivery_fee = $delivery_fee > 3 ? 3 : $delivery_fee;

                        // 判断剩余次数和此购物车需要次数
                        if ($value[0]['type'] == 'count') {
                            $needCount = count($storeArr);
                            $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                            if ($userinfo['delivery_count'] >= $needCount) {
                                $auth_delivery_price = $delivery_fee * $needCount;

                                //多个商家需要独立核算
                                if (!$ordernum) {
                                    foreach ($orderLogistic as $key => $val) {
                                        $auth_delivery_price_arr[$key] = $val;
                                    }
                                }

                            } else {
                                $auth_delivery_price = $userinfo['delivery_count'] == 0 ? 0 : $delivery_fee * $userinfo['delivery_count'];

                                //多个商家需要独立核算
                                if (!$ordernum) {
                                    foreach ($orderLogistic as $key => $val) {
                                        $auth_delivery_price_arr[$key] = $userinfo['delivery_count'] == 0 ? 0 : $val * $userinfo['delivery_count'];
                                    }
                                }

                            }
                        } else {
                            $auth_delivery_price = $delivery_fee * (1 - $value[0]['val'] / 10);

                            //多个商家需要独立核算
                            if (!$ordernum) {
                                foreach ($orderLogistic as $key => $val) {
                                    $auth_delivery_price_arr[$key] = $val * (1 - $value[0]['val'] / 10);
                                }
                            }
                        }


                        // array_push($auth_priceinfo, array(
                        // 	"level" => $userinfo['level'],
                        // 	"type" => "auth_peisong",
                        // 	"body" => $userinfo['levelName']."特权-配送费优惠",
                        // 	"amount" => sprintf("%.2f", $auth_delivery_price)
                        // ));
                    }
                }

                // 生日特权
                // $value = $privilege['birthday'];
                // if(!empty($userinfo['birthday']) && date('md', $userinfo['birthday']) == date('md')) {
                // 	if($value['type'] && $value['val']['discount'] > 0 && $value['val']['discount'] < 10){
                // 		$limit = $value['val']['limit'];
                // 		// 有总金额限制
                // 		if($limit > 0){
                // 			// 今日订单总金额
                // 			$today_amount = todayOrderAmount($userid);
                // 			// 超出限额
                // 			if($totalPrice + $today_amount > $limit){
                // 				$auth_shop_can = $limit - $today_amount;

                // 				$auth_shop_price = $auth_shop_can * (1 - $value['val']['discount'] / 10);
                // 			}else{
                // 				$auth_shop_price = $totalPrice * (1 - $value['val']['discount'] / 10);

                // 			}
                // 		}else{
                // 			$auth_shop_price = $totalPrice * (1 - $value['val']['discount'] / 10);
                // 		}

                // 		// array_push($auth_priceinfo, array(
                // 		// 	"level" => $userinfo['level'],
                // 		// 	"type" => "auth_shop",
                // 		// 	"body" => $userinfo['levelName']."特权-生日商品原价优惠",
                // 		// 	"amount" => sprintf("%.2f", $auth_shop_price)
                // 		// ));
                // 	}
                // }

                // 商品,并且不是生日
                // if(!$auth_shop_price){
                foreach($storeArr as $_key => $_val){
                    // if(($_val['huodongtype'] == 0 || $_val['huodongtype'] == 3 || $_val['huodongtype'] == 4) && $_val['huodongtype'] != 1 && $_val['huodongtype'] != 2){
                    if($_val['huodongtype'] == 0){
                        $value = $privilege['shop'];
                        if ($value > 0 && $value < 10) {

                            foreach ($totalPriceArr as $key => $val) {
                                if($_key == $key){
                                    $auth_shop_price += (float)sprintf("%.2f", $val * (1 - $value / 10));
                                }
                            }

                            //多个商家需要独立核算
                            // if (!$ordernum) {
                                foreach ($totalPriceArr as $key => $val) {
                                    if($_key == $key){
                                        $auth_shop_price_arr[$key] = (float)sprintf("%.2f", $val * (1 - $value / 10));
                                    }
                                }
                            // }

                            // array_push($auth_priceinfo, array(

                            // 	"level" => $userinfo['level'],
                            // 	"type" => "auth_shop",
                            // 	"body" => $userinfo['levelName']."特权-商品原价优惠",
                            // 	"amount" => sprintf("%.2f", $auth_shop_price)
                            // ));
                        }
                    }
                }
                
                if($auth_shop_price_arr){
                    $auth_shop_price = 0;
                    foreach($auth_shop_price_arr as $_val){
                        $auth_shop_price += $_val;
                    }
                    $auth_shop_price = (float)sprintf("%.2f", $auth_shop_price);
                }

                // }

                // 指定骑手
                // $value = $privilege['qishou'];
                // if($value['type']){
                // 	$aus_courier = true;
                // }

            }
        }

        //防止优惠成负数
        $auth_delivery_price = $auth_delivery_price < 0 ? 0 : $auth_delivery_price;


        //验证限购
        //代付情况也需要验证限购情况
        // if (!$peerpay) {

            $quanarr = array();
            if (!empty($usequan)) {
                $usequan = json_decode($usequan, true);

                if (!empty($usequan)) {
                    $quanarr = array_column($usequan, null, 'shopid');
                }
            }

            $allusemoney = 0; /*多比店铺订单时候 总使用优惠券金额*/
            foreach ($orderList as $key => $value) {

                $foodquanmoney = 0;
                if (isset($quanarr[$value['store']]) || !empty($usequanid)) {
                    $nowtime = time();
                    $quanid  = isset($quanarr[$value['store']]) ? $quanarr[$value['store']]['quanid'] : $usequanid[$value['store']];
                    if($quanid){
                        $quansql = $dsql->SetQuery("SELECT `name`,`basic_price`,`promotio`,`promotiotype`,`quantype`,`ktime`,`etime`,`fid`,`state` FROM `#@__shop_quanlist` WHERE `id`  ='" . $quanid . "'");
                        $quanres = $dsql->dsqlOper($quansql, "results");
    
                        if (!empty($quanres)) {
    
                            $ktime        = $quanres[0]['ktime'];
                            $etime        = $quanres[0]['etime'];
                            $basic_price  = $quanres[0]['basic_price'];
                            $promotio     = $quanres[0]['promotio'];
                            $promotiotype = $quanres[0]['promotiotype'];
                            $shoptype     = $quanres[0]['quantype'];
                            $fid          = $quanres[0]['fid'];
                            $quanname     = $quanres[0]['name'];
    
                            if ($ktime >= $nowtime || $etime <= $nowtime) {
                                return array("state" => 200, "info" => "未在该优惠券的使用时间!");  //格式错误
                            }
    
                            if ($quanres[0]['state'] == 1) {
                                return array("state" => 200, "info" => "该优惠券已使用!");  //格式错误
                            }
                        } else {
                            return array("state" => 200, "info" => "未找到该优惠券!");  //格式错误
                        }
                    }
                }
                $arrList = $value['list'];
                foreach ($value['list'] as $k => $v) {

                    $proid_    = $v['proid'];  //商品ID
                    $procount_ = $v['count'];  //购买数量
                    $price     = $v['price'];  //购买数量
                    if (!empty($quanarr[$value['store']]) || $usequanid[$value['store']]) {
                        if ($shoptype == 1) {
                            $fid = explode(',', $fid);
                            if (in_array($proid_, $fid)) {
                                $foodquanmoney += $price * $procount_;
                            }
                        } else {

                            $foodquanmoney += $price * $procount_;
                        }
                    }

                    //                    $foodquanmoney -= $auth_shop_price;  //减掉会员优惠


                    //查询会员已经购买的数量，排除已付款和已关闭状态的订单
                    
                    //如果是代付订单，则查询下单人的购买数量
                    $_userid = $userid;
                    if($peerpay && $orderuserid) {
                        $_userid = $orderuserid;
                    }
                    
                    $totalprocount = 0;
                    $limit         = 0;
                    $sql           = $dsql->SetQuery("SELECT sum(p.`count`) as totalprocount FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` where o.`userid` = $_userid and o.`orderstate` != 0 AND o.`orderstate` != 10 and p.`proid` = " . $proid_);
                    $ret           = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $totalprocount = $ret[0]['totalprocount'];
                    }

                    //查询商品限制数量
                    if ($huodongtype == 0 || !$v['hid']) {
                        $sql = $dsql->SetQuery("SELECT `limitcount` FROM `#@__shop_product` WHERE `id` = " . $proid_);
                        $ret = $dsql->dsqlOper($sql, "results");

                        $limit = (int)$ret[0]['limitcount'];
                    } else {

                        $sql = $dsql->SetQuery("SELECT sum(p.`count`) as totalprocount FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` where o.`userid` = $_userid and o.`orderstate` != 0 AND o.`orderstate` != 10 AND `huodongtype` = '$huodongtype' and p.`proid` = " . $proid_);
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $totalprocount = (int)$ret[0]['totalprocount'];
                        }

                        $sql = $dsql->SetQuery("SELECT `limitcount` FROM `#@__shop_huodongsign` WHERE `id` = " . $v['hid']);
                        $ret = $dsql->dsqlOper($sql, "results");

                        $ret && is_array($ret[0]) && $limit = (int)$ret[0]['limitcount'];
                    }

                    //验证活动商品限购
                    if ($detail['states'] != 0 && $ordertype != 'zjbuy' && $hid) {
                        $limit = (int)$detail['limit'];
                    }

                    if ($limit && ($totalprocount >= $limit || $procount_ > $limit)) {
                        return array("state" => 200, "info" => "商品【" . $v['title'] . "】限购" . $limit . "个");
                    }
                }
                if($foodquanmoney > 0){
                    $foodquanmoney -= $auth_shop_price_arr[$key];  //减掉会员优惠
                }
                if ($basic_price <= $foodquanmoney) {
                    $usequanmoney = 0;
                    if ($promotiotype == 0) {
                        $usequanmoney = (float)$promotio;
                    } else {
                        $usequanmoney = (float)sprintf("%.2f", $foodquanmoney - $foodquanmoney * $promotio / 10);
                    }
                    
                    $usequanmoney = $usequanmoney > $foodquanmoney ? $foodquanmoney : $usequanmoney;  //优惠券金额大于商品金额时，优惠券以商品金额为准扣除
                    $allusemoney += $usequanmoney;
                }
            }
        // }

        // if ($allusemoney > $totalPrice + $alllogistic  - $auth_delivery_price - $auth_shop_price) {
        //     return array("state" => 200, "info" => "您使用的优惠券超出订单总费用，请重新选择");
        // }

        //合并计算运费
        //         $orderLogistic = calculationOrderLogistic($orderList,array('0'=>$logicityid),$addressid);
        // //        if($protypenum ==count($proArr)){
        // //            $orderLogistic = array('0'=>'0');
        // //        }
        //         $alllogistic   = 0;
        //         foreach ($orderLogistic as $key => $val) {
        //                 $alllogistic += $val;
        //                 // $totalPrice += $val;
        //             }




        //		foreach ($proArr as $key => $value) {
        //
        //			//proInfo[0] 商品ID　proInfo[1] 商品规格  proInfo[2] 数量
        //			$proInfo = explode(",", $value);
        //
        //			$this->param = $proInfo[0];
        //			$detail = $this->detail(1);
        //
        //			//价格&&库存
        //			$price = $detail['price'];
        //			$inventor = $detail['inventory'];
        //			if($detail['specification']){
        //				foreach($detail['specification'] as $k => $v){
        //					if($v['spe'] == $proInfo[1]){
        //						$price = $v['price'][1];
        //						$inventor = $v['price'][2];
        //					}
        //				}
        //			}
        //
        //			//物流
        //			$logistic = getLogisticPrice($detail['logistic'], $price, $proInfo[2], $detail['volume'], $detail['weight']);
        //
        //			//单个商品总金额
        //			$totalPrice += $price * $proInfo[2] + $logistic;
        //
        //			//如果是支付页面，计算折扣金额并从单个商品总金额中减去
        //			if(!empty($ordernum)){
        //
        //				$sql = $dsql->SetQuery("SELECT p.`discount` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` WHERE p.`proid` = ".$proInfo[0]." AND p.`speid` = '".$proInfo[1]."' AND p.`count` = ".$proInfo[2]." AND o.`ordernum` = '$ordernum'");
        //				$ret = $dsql->dsqlOper($sql, "results");
        //				if($ret){
        //					$totalPrice += $ret[0]['discount'];
        //				}
        //
        //			}
        //		}

        // 加上配送费, 1个店铺1笔配送费


        /*查询优惠券使用信息*/
        // if (!empty($ordernum)) {
        //     if (!empty($usequanid)) {
        //         $allusemoney = 0;
                
        //         foreach ($usequanid as $_key => $_val){
                    
        //             $foodprice = 0;
                    
        //             $quansql = $dsql->SetQuery("SELECT ql.`fid`,ql.`quantype`,ql.`basic_price`,ql.`promotiotype`,ql.`promotio` FROM `#@__shop_quanlist` ql  WHERE ql.`id` = '$_val' AND ql.`state` = 0");
        //             $quanres = $dsql->dsqlOper($quansql, "results");
        //             if ($quanres) {
        //                 foreach ($arrList as $k => $v) {
        //                     if ($quanres[0]['quantype'] == 1) {
        //                         $fidarr = explode(',', $quanres[0]['fid']);
        //                         if (in_array($v['proid'], $fidarr)) {
        //                             $foodprice += $v['price'] * $v['count'];
        //                         }
        //                     } else {
        //                         $foodprice += $v['price'] * $v['count'];
        //                     }
        //                 }
    
        //                 $foodprice -= $auth_shop_price;  //减掉会员优惠
    
        //                 if ($quanres[0]['basic_price'] <= $foodprice) {
    
        //                     if ($quanres[0]['promotiotype'] == 0) {
        //                         $allusemoney += $quanres[0]['promotio'];
        //                     } else {
        //                         $allusemoney += sprintf("%.2f", $foodprice - $foodprice * $quanres[0]['promotio'] / 10);
        //                     }
        //                 }
        //             }
        //         }
        //     }
        // }
// 		 var_dump($totalPrice ,$alllogistic , $auth_delivery_price, $allusemoney , $auth_shop_price);
        // if ($confirmtype == 1 || ($detail['protype'] == 1 && $huodongtype == 0 && $ordertype != 'zjbuy' && $confirmtype != 2)){
        //     $alllogistic = 0;
        // }
        $totalPrice = $totalPrice + $alllogistic - $auth_delivery_price - $allusemoney - $auth_shop_price;
        
        $tit        = array();
        $useTotal   = 0;

        if ($peerpay == 1) {

            $userinfo  = $userLogin->getMemberInfo($userid, 1);
            $usermoney = $userinfo['money'];
            $userpoint = $userinfo['point'];
        }
        $userinfo  = $userLogin->getMemberInfo($userid, 1);
        $usermoney = $userinfo['money'];
        $userpoint = $userinfo['point'];

        //老订单需要重新计算需要抵扣的积分，这是由于多个商品一起下单时，抵扣的积分是通过总金额计算的，如果按订单表中记录的值，会有少量误差导致计算异常。
        if ($mypoint && 1 == 2) {
            $useTotal = $mypoint / $cfg_pointRatio;
        } else {
            if ($mypoint || $usePinput == 1) {
                $point_price = getJifen('shop', $totalPrice);
                $pricepoint = $point_price  * $cfg_pointRatio;
                if ($pricepoint > $userpoint) {
                    $point_price = $userpoint  / $cfg_pointRatio;
                }
                $useTotal = $point_price;
            }
        }

        if ($changetype == 1) {
            $totalPrice = $changeprice - $auth_delivery_price - $allusemoney - $auth_shop_price;
        }

        //判断是否使用余额，并且验证余额和支付密码
        if ($useBalance == 1 && !empty($balance) && !empty($paypwd)) {

            //验证支付密码
            $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
            $results  = $dsql->dsqlOper($archives, "results");
            $res      = $results[0];
            $hash     = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
            if ($res['paypwd'] != $hash) return array("state" => 200, "info" => $langData['siteConfig'][21][89]);  //支付密码输入错误，请重试！

            //验证余额
            if ($usermoney < $balance) return array("state" => 200, "info" => $langData['siteConfig'][20][214]);  //您的余额不足，支付失败！

            $useTotal += $balance;
            $tit[]    = $langData['siteConfig'][19][363];  //余额
        }
        
        $useTotal  =  (float)sprintf("%.2f", $useTotal);
        $totalPrice  =  (float)sprintf("%.2f", $totalPrice);
        // var_dump($totalPrice, $useTotal);die;
        $totalPrice = $totalPrice <= 0 ? 0 : $totalPrice;
        if($totalPrice == 0) return 0;
        if ($useTotal > $totalPrice) return array("state" => 200, "info" => str_replace('1', join($langData['siteConfig'][13][46], $tit), $langData['siteConfig'][22][104]));  //和  您使用的1超出订单总费用，请重新输入！
        //返回需要支付的费用
        return sprintf("%.2f", $totalPrice - $useTotal);
    }


    /**
     * 支付前验证订单内容
     * 验证内容：商品是否存在，商品库存
     * @return array
     */
    public function payCheck()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $param   = $this->param;
        $pros    = $param['pros'];
        $peerpay = $param['peerpay'];  //代付
        $paypwd = $param['paypwd'];
        $ordernum = $param['ordernum'];
        $ordertype = $param['ordertype'];
        if (empty($pros)) return array("state" => 200, "info" => $langData['shop'][4][11]);  //商品信息传递失败！

        $userid = $userLogin->getMemberID();
        $proArr = explode("|", $pros);
        foreach ($proArr as $key => $value) {

            //proInfo[0] 商品ID　proInfo[1] 商品规格  proInfo[2] 数量
            $proInfo = explode(",", $value);
            //验证商品是否存在
            $this->param = $proInfo[0];
            $detail      = $this->detail(1);
            if (!is_array($detail)) {
                $info = count($proArr) > 1 ? $langData['shop'][4][12] : $langData['shop'][4][13];  //订单中包含不存在或已下架的商品，请确认后重试！      提交失败，您要购买的商品不存在或已下架！
                return array("state" => 200, "info" => $info);
            }


            //验证是否为自己的店铺
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret && !$peerpay) {
                if ($detail['store']['id'] == $ret[0]['id']) {
                    return array("state" => 200, "info" => $langData['shop'][4][14]);  //企业会员不得购买自己店铺的商品！
                }
            }

            //规格名
            $speInfo = array();
            $speArr  = explode("-", $pro[1]);
            foreach ($speArr as $k => $v) {
                foreach ($detail['specificationArr'] as $kk => $vv) {
                    $typename = $vv['typename'];
                    foreach ($vv['item'] as $kkk => $vvv) {
                        if ($vvv['id'] == $v) {
                            array_push($speInfo, $typename . "：" . $vvv['name']);
                        }
                    }
                }
            }

            //判断限时抢是否已经结束
            if ($detail['states'] != 0) {
                if ($detail['ktime'] > time()) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][6]);  //活动还未开始
                if ($detail['etime'] < time()) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][7]);  //活动已经结束
            }

            //验证商品库存
            if ($detail['states'] != 0) {
                $inventor      = $detail['huodonginventory'];
                $specification = $detail['pinspecification'];
            } else {
                $inventor      = $detail['inventory'];
                $specification = $detail['specification'];
            }
            global $HN_memory;
            if ($specification) {
                foreach ($specification as $k => $v) {

                    $_spe = hnSortArr(explode('-', $proInfo[1]));
                    //数字、字母、中文混合排序
                    // collator_sort(collator_create('zh_CN'),$_spe);
                    $_spe = join('-', $_spe);

                    if ($v['id'] == $_spe) {
                        $inventor = $v['price'][2]; // 多规则库存
                    }

                    // 多规格、尝试读取redis缓存
                    if ($detail['states'] != 0 && $HN_memory && $HN_memory->enable && $ordertype != 'zjbuy') {
                        $inventor_t = $HN_memory->llen("shop_product_huodong_{$detail['hid']}_{$_spe}");
                        if (is_int($inventor_t)) {
                            $inventor = $inventor_t;
                        }
                    }
                }
                
            } else {
                if ($detail['states'] != 0 && $HN_memory && $HN_memory->enable && $ordertype != 'zjbuy') {  // 单规格、尝试读取redis缓存
                    $inventor_t = $HN_memory->llen("shop_product_huodong_{$detail['hid']}");
                    if (is_int($inventor_t)) {
                        $inventor = $inventor_t;
                    }
                }
            }
            if (!empty($ordernum)) {
                $results  = $dsql->dsqlOper($archives, "results");
                if (!$peerpay && empty($results)) {
                    if (($detail['limitcount'] < $proInfo[2] && $detail['limitcount'] != 0) || $inventor < $proInfo[2]) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][8]);  //库存不足
                }
            } else {
                if (!$peerpay) {
                    if (($detail['limitcount'] < $proInfo[2] && $detail['limitcount'] != 0) || $inventor < $proInfo[2]) return array("state" => 200, "info" => '【' . $detail['title'] . '  ' . join("；", $speInfo) . '】' . $langData['shop'][4][8]);  //库存不足
                }
            }
        }

        return "ok";
    }


    /**
     * PC端下单&支付
     * @return array
     */
    public function pay()
    {
        global $dsql;
        global $userLogin;
        global $cfg_basehost;
        global $cfg_pointRatio;
        global $langData;

        $_param = array(
            "service"  => "member",
            "type"     => "user",
            "template" => "order",
            "module"   => "shop"
        );

        $url   = getUrlPath($_param);

        $userDetail = $userLogin->getMemberInfo();
        if ($userDetail['is_staff'] == 1) {
            return array("state" => 200, "info" => "员工账号不可以下单，如需购买请使用普通账号提交！");  //格式错误
        }

        $auth_delivery_isCount = 0;

        $peerpay = $this->param['peerpay'];  //是否代付
        //如果是支付页面，根据订单号查询出商品的规格信息
        $orderid = 0;

        $confirmtype = (int)$this->param['confirmtype'];

        $userid = $userLogin->getMemberID();

        if (!empty($this->param['ordernum']) && strpos($this->param['ordernum'], ',') === false) {
            $sql = $dsql->SetQuery("SELECT o.`id`,o.`ordernum`,o.`orderdate`,o.`confirmtype`,p.`proid`, p.`speid`, p.`count`, o.`lng`, o.`lat`,o.`huodongtype`,o.`userid`,o.`usequan`,o.`hid` ohid ,o.`logistic` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULL AND o.`ordernum` in('" . $this->param['ordernum'] . "')");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {


                $timeout         = $ret[0]['orderdate'] + 1800;

                $yuanlogistic    = $ret[0]['logistic'];

                $confirmtype = !$confirmtype ? $ret[0]['confirmtype'] : $confirmtype;
                $param['confirmtype'] = $confirmtype;

                //代付人
                if ($peerpay) {
                    $p_userid = $userid;

                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `peerpay` = $p_userid WHERE `ordernum` IN ('" . $this->param['ordernum'] . "')");
                    $dsql->dsqlOper($sql, "update");
                } else {
                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `peerpay` = 0 WHERE `ordernum` IN ('" . $this->param['ordernum'] . "')");
                    $dsql->dsqlOper($sql, "update");
                }

                $lng   = $lat = '';
                $speid = $orderid = $ordernumarr =  array();
                foreach ($ret as $key => $value) {
                    $lng = $value['lng'];
                    $lat = $value['lat'];
                    array_push($speid, $value['proid'] . "," . $value['speid'] . "," . $value['count']);

                    $orderid[$value['proid']]                    = $value['id'];
                    $ordernumarr[$value['proid']]                = $value['ordernum'];
                }

                if ($confirmtype != 1 && ($lng == '' || $lat == '')) {
                    return array("state" => 200, "info" => "收货地址信息需要更新，请修改收货地址的定位后重新提交！");
                }

                $pros = join("|", $speid);

                $huodongtype                = $ret[0]['huodongtype'];
                $usequanid                  = $ret[0]['usequan'];
                $ohid                       = $ret[0]['ohid'];
                $this->param['pros']        = $pros;
                $this->param['huodongtype'] = $huodongtype;

                if ($huodongtype == 4) {
                    $buytype = 'pintuan';
                }
            } else {
                header("location:" . $url);
                die;
            }
        } else {
            if (!empty($this->param['ordernum'])) {
                $pros = array();
                $ordernumarr = array();
                $speid = $orderid  =  array();
                $order = explode(',', $this->param['ordernum']);
                foreach ($order as $key => $value) {
                    $sql = $dsql->SetQuery("SELECT o.`ordernum`,o.`amount`,p.`proid`, p.`speid`, p.`count`,o.`huodongtype`,o.`id`,o.`hid`,o.`userid`,o.`usequan`,o.`point` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULL AND o.`ordernum` = '$value'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $timeout         = $ret[0]['orderdate'] + 1800;

                        $yuanlogistic    = $ret[0]['logistic'];

                        //代付人
                        if ($peerpay) {
                            $p_userid = $userid;

                            $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `peerpay` = $p_userid WHERE `ordernum` IN ('" . $this->param['ordernum'] . "')");
                            $dsql->dsqlOper($sql, "update");
                        } else {
                            $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `peerpay` = 0 WHERE `ordernum` IN ('" . $this->param['ordernum'] . "')");
                            $dsql->dsqlOper($sql, "update");
                        }

                        $lng   = $lat = '';
                        foreach ($ret as $key => $vv) {
                            $lng = $vv['lng'];
                            $lat = $vv['lat'];
                            array_push($speid, $vv['proid'] . "," . $vv['speid'] . "," . $vv['count']);

                            $orderid[$vv['proid']]                    = $vv['id'];
                            $ordernumarr[$vv['proid']]                = $vv['ordernum'];
                        }
                        $pros[] = join("|", $speid);

                        $huodongtype                = $ret[0]['huodongtype'];
                        $usequanid                  = $ret[0]['usequan'];
                        $ohid                       = $ret[0]['ohid'];
                        $this->param['pros']        = $pros;
                        $this->param['huodongtype'] = $huodongtype;
                        $timeout         = $ret[0]['orderdate'] + 1800;

                        if ($huodongtype == 4) {
                            $buytype = 'pintuan';
                        }
                    } else {
                        return array("state" => 200, "info" => $langData['shop'][4][10]);  //订单提交失败！
                    }
                }
            }
        }

        if (is_array($pros)) {
            $pros = implode("|", $pros);
            $this->param['pros'] = $pros;
        }
        $param = $this->param;
        //验证需要支付的费用
        $payTotalAmount = $this->checkPayAmount();

        //重置表单参数
        $this->param = $param;
        $paycheckArr = $this->payCheck();

        if ($paycheckArr != "ok" || is_array($payTotalAmount)) {
            if (is_array($payTotalAmount)) {
                return $payTotalAmount;
            } else {
                return $paycheckArr;
            }
        }


        $ordernum    = $param['ordernum'];
        $buytype     = $buytype ? $buytype : $param['buytype'];
        $bargainid   = $param['bargainid']; /*砍价 id*/
        $pros        = $param['pros'];
        $addressid   = $param['addressid'];
        $paytype     = $param['paytype'] == 'balance' ? 'money' : $param['paytype'];
        $note        = $param['note'];
        $usePinput   = $param['usePinput'];
        //        $point       = (float)$param['point'];
        $useBalance  = $param['useBalance'];
        $balance     = (float)$param['balance'];
        $huodongtype = (int)$param['huodongtype'];
        $confirmtype = (int)$param['confirmtype'];
        $hid         = $param['hid'];
        $quanuse     = $param['quanuse'];
        $final       = (int)$param['final']; /*支付预下单 0,发起支付1 */
        $orderfinal  = (int)$param['orderfinal']; /*个人中心订单预下单 0,发起支付1 */
        $peerpayfinal = (int)$param['peerpayfinal']; /*代付 0,发起支付1 */
        // $branchid   = $param['branchid'];  //分店ID
        // $shipping   = $param['shipping'];  //配送方式  0平台骑手   1快递   2商家自配

        $logicityid = 0;
        if (!empty($addressid)) {

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $addressid");
            $userAddr = $dsql->dsqlOper($archives, "results");

            if ($userAddr && is_array($userAddr)) {
                if (!$userAddr[0]['addrid'] == 0) {
                    $addrName = getParentArr("site_area", $userAddr[0]['addrid']);
                    $addrIdArr = array_reverse(parent_foreach($addrName, "id"));
                    $addrids  = join(" ", $addrIdArr);

                    $logicityid = $addrIdArr[1];
                }
            }
        }

        if ($peerpay) {
            $userid = $ret[0]['userid'];
        }
        $logistictype = array();

        /*一个店铺一个券券分组*/
        $storeQuanarr = array();
        if (!empty($quanuse)) {
            $quanusearr = json_decode($quanuse, true);

            $storeQuanarr = array_column($quanusearr, null, 'shopid');
        }


        if (empty($pros) && $final == 0) return array("state" => 200, "info" => $langData['shop'][4][4]);  //格式错误
        if (empty($paytype) && $final == 0 && $orderfinal == 0 && $peerpayfinal == 1) return array("state" => 200, "info" => $langData['siteConfig'][21][75]);  //请选择支付方式
        if (empty($ordernum)) {
            if (empty($addressid) && $final == 0 && $orderfinal == 0 && $peerpay == 0) return array("state" => 200, "info" => $langData['shop'][4][15]);  //请选择收货地址
        }

        //收货地址信息
        if ($final == 0 && $orderfinal == 0) {

            if (empty($ordernum) || !empty($addressid)) {
                global $data;
                $data     = "";
                $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $addressid");
                $userAddr = $dsql->dsqlOper($archives, "results");
                if (!$userAddr) return array("state" => 200, "info" => $langData['shop'][4][16]);  //会员地址库信息不存在或已删除
                $addrArr = getParentArr("site_area", $userAddr[0]['addrid']);
                $addrArr = array_reverse(parent_foreach($addrArr, "typename"));
                $addr    = join(" ", $addrArr);
                $address = $addr . $userAddr[0]['address'];
                $person  = $userAddr[0]['person'];
                $mobile  = $userAddr[0]['mobile'];
                $tel     = $userAddr[0]['tel'];
                $lng     = $userAddr[0]['lng'];
                $lat     = $userAddr[0]['lat'];
                $contact = !empty($mobile) ? $mobile . (!empty($tel) ? " / " . $tel : "") : $tel;
            }

            if (!empty($branchid) && $lng && $lat) {
                $this->param      = $branchid;
                $shopBranchDetail = $this->storeDetail(1);
                $juli             = getDistance($shopBranchDetail['lng'], $shopBranchDetail['lat'], $lng, $lat) / 1000;
                if (100 < $juli) {
                    //return array("state" => 200, "info" => '距离店铺太远，超出了商家的最大服务范围！');
                }
            }
        }

        //获取商品相关信息
        $storeArr = array();

        $pros = explode("|", $pros);

        $proquantype = 0;
        $nowtime      = time();
        foreach ($pros as $key => $value) {
            //pro[0]商品ID，pro[1]规格，pro[2]数量
            $pro = explode(",", $value);
            $this->param = $pro[0];
            $detail      = $this->detail(1);
            if ($confirmtype  == 1) {
                $proquantype += 1;
            }

            /*$huodongtype 这里原本是使用前端传的  这样不安全 改为 调用接口 查询得*/
            //价格&&库存

            $huodongtype = (int)$detail['states'];

            //如果新下单前端未传buytype，则表示未参加活动，这里不再获取商品的活动类型
            if ($buytype == '' && $huodongtype != 1 && $huodongtype != 2) {
                $huodongtype = 0;
            }

            $hid         = (int)$detail['hid'];
            $inventoryCount         = (int)$detail['inventoryCount'];
            if ($buytype == '' && $huodongtype != 3 && $huodongtype != 4) {
                if ($huodongtype == 2) {
                    $buytype = 'miaosha';
                }
                if ($huodongtype == 1) {
                    $buytype = 'qianggou';
                }
            }

            //一个订单多个商品时，ohid始终为0，导致下单时，订单中有活动商品，价格计算错误
            // if ($huodongtype == 0 || empty($detail['hid']) || ($ohid == 0 && !empty($ordernum))) {
            if ($pro[1]) {
                $skuDetail = $this->getSkuDetail($pro[1]);
                $price = $skuDetail['price'];
            } else {
                $price = $detail['price'];
            }
            if (($buytype != '' && $huodongtype == 3) && !empty($detail['hid'])) {

                if ($bargainid) {
                    $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `id` =" . $bargainid);

                    $bargainres = $dsql->dsqlOper($bargainsql, "results");

                    if (!$bargainres) return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_3');  //下单失败！ 砍价

                    $price = $bargainres[0]['state'] == 2 ? $bargainres[0]['gmoney'] : $bargainres[0]['gnowmoney'];
                } else {
                    $bargainsql = $dsql->SetQuery("SELECT `gnowmoney` FROM `#@__shop_bargaining` WHERE `oid` = '" . (int)$orderid[$pro[0]] . "'");

                    $bargainres = $dsql->dsqlOper($bargainsql, "results");
                    $price = (float)$bargainres[0]['gnowmoney'];
                }
                // $bargainsql = $dsql->SetQuery("SELECT `gnowmoney` FROM `#@__shop_bargaining` WHERE `oid` = '".(int)$orderid[$pro[0]]."'");
                // echo $bargainsql
                // $bargainres = $dsql->dsqlOper($bargainsql, "results");

                // if (!$bargainres) return array("state" => 200, "info" => '砍价活动不存在!');

                // $price = (float)$bargainres[0]['gnowmoney'];
            }
            if ($buytype != '' && ($huodongtype == 4 || $huodongtype == 1  || $huodongtype == 2)  && !empty($detail['hid'])) {
                $price = $detail['huodongprice'];
                if ($detail['pinspecification']) {
                    foreach ($detail['pinspecification'] as $k => $v) {

                        if ($v['id'] == $pro[1]) {
                            $price = $v['price'][1];
                        }
                    }
                }
            }
            //            echo "<pre>";
            //            var_dump($detail);die;
            //物流
            $juli =  oldgetDistance($lng, $lat, $detail['store']['lng'], $detail['store']['lat']) / 1000;

            if ($confirmtype == 2 && $detail['typesales'] === '1,2') {
                if ($detail['blogisticId'] && !$detail['logisticId']) {
                    $Sql = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE 1=1 AND `id` = '" . $detail['blogisticId'] . "'");
                    $Res = $dsql->dsqlOper($Sql, "results");
                    $range_delivery_fee_value = $Res[0]['range_delivery_fee_value'] != '' ? unserialize($Res[0]['range_delivery_fee_value']) : array();
                    if ($Res) {
                        $delivery_fee_mode = (int)$Res[0]['delivery_fee_mode'];
                    }

                    //固定配送费，验证起送价是否满足条件
                    if ($delivery_fee_mode == 0) {
                        $basicprice = (float)$Res[0]['basicprice'];
                        $express_juli = (float)$Res[0]['express_juli'];
                        if ($express_juli < $juli) {
                            return array("state" => 200, "info" => "超出卖家最大配送范围" . $express_juli . "公里!");
                        }
                        if ($basicprice > $price * $pro[2]) {
                            return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }

                    //按距离，验证距离和起送价是否满足条件
                    if ($delivery_fee_mode == 1) {
                        $basicprice = '';
                        foreach ($range_delivery_fee_value as $key => $value) {
                            if ($value[0] < $juli && $value[1] > $juli) {
                                $basicprice = $value[3];
                            }
                        }

                        //如果不是数字类型，说明没有匹配到，不在商家的配送范围
                        if (!is_numeric($basicprice)) {
                            return array("state" => 200, "info" => "超出卖家配送范围请选择到店消费!");
                        }

                        //起送价条件
                        if ($basicprice > $price * $pro[2]) {
                            return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }
                }
            }
            if ($confirmtype == 2 && $detail['typesales'] === '2') {
                if ($detail['blogisticId'] && !$detail['logisticId']) {
                    $Sql = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE 1=1 AND `id` = '" . $detail['blogisticId'] . "'");
                    $Res = $dsql->dsqlOper($Sql, "results");
                    $range_delivery_fee_value = $Res[0]['range_delivery_fee_value'] != '' ? unserialize($Res[0]['range_delivery_fee_value']) : array();
                    if ($Res) {
                        $delivery_fee_mode = (int)$Res[0]['delivery_fee_mode'];
                    }

                    //固定配送费，验证起送价是否满足条件
                    if ($delivery_fee_mode == 0) {
                        $basicprice = (float)$Res[0]['basicprice'];
                        $express_juli = (float)$Res[0]['express_juli'];
                        if ($express_juli < $juli) {
                            return array("state" => 200, "info" => "超出卖家最大配送范围" . $express_juli . "公里!");
                        }
                        if ($basicprice > $price * $pro[2]) {
                            return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }

                    //按距离，验证距离和起送价是否满足条件
                    if ($delivery_fee_mode == 1) {
                        $basicprice = '';
                        foreach ($range_delivery_fee_value as $key => $value) {
                            if ($value[0] < $juli && $value[1] > $juli) {
                                $basicprice = $value[3];
                            }
                        }

                        //如果不是数字类型，说明没有匹配到，不在商家的配送范围
                        if (!is_numeric($basicprice)) {
                            return array("state" => 200, "info" => "超出卖家配送范围请选择到店消费!");
                        }

                        //起送价条件
                        if ($basicprice > $price * $pro[2]) {
                            return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }
                }
            }
            //            if (!empty($ordernum)) {
            //                $logistic = getLogisticPrice($detail['devspecification'], $price, $pro[2], $detail['volume'],
            //                    $detail['weight'], $logicityid, $pro[0]);
            $juli =  oldgetDistance($lng, $lat, $detail['store']['lng'], $detail['store']['lat']) / 1000;
            //物流
            $logisticarr  = getLogisticPrice($detail['devspecification'], $price, $pro[2], $detail['volume'], $detail['weight'], $addressid, $pro[0], $juli, 1);
            $logistic    = $logisticarr['logistic'];
            $logistictype = $logisticarr['logistictype'];
            $logisticErrorArr[$detail['store']['id']] = $logisticarr['logistic_errMsg'];

            if(is_array($logistictype)){
                array_push($logistictype, $logisticarr['logistictype']);
            }

            //            } else {
            //                $logistic = 0;
            //            }

            if ($confirmtype == 1 && $detail['qtimetype']  == 2 && $detail['quantime'] <= $nowtime) {
                return array("state" => 200, "info" => "指定团购券有效期已过!");
            }
            if ($confirmtype == 1 && $detail['protype'] == 1) {
                $logistic = 0;
            }
            //规格名
            $speInfo = array();
            $speArr  = explode("-", $pro[1]);
            foreach ($speArr as $k => $v) {
                foreach ($detail['specificationArr'] as $kk => $vv) {
                    $typename = $vv['typename'];
                    foreach ($vv['item'] as $kkk => $vvv) {
                        if ($vvv['id'] == $v) {
                            array_push($speInfo, $typename . "：" . $vvv['name']);
                        }
                    }
                }
            }
            $storeArr[$key]['proid']      = $pro[0];
            $storeArr[$key]['speid']      = $pro[1];
            $storeArr[$key]['specation']  = join("$$$", $speInfo);
            $storeArr[$key]['count']      = $pro[2];
            $storeArr[$key]['volume']     = $detail['volume'];
            $storeArr[$key]['weight']     = $detail['weight'];
            $storeArr[$key]['price']      = $price;
            $storeArr[$key]['logistic']   = $logistic;
            $storeArr[$key]['orderid']    = (int)$orderid[$pro[0]];
            $storeArr[$key]['ordernum']   = $ordernumarr[$pro[0]];
            $storeArr[$key]['logisticId'] = $detail['logisticId'];
            $storeArr[$key]['blogisticId'] = $detail['blogisticId'];
            $storeArr[$key]['typesales']   = $detail['typesales'];
            $storeArr[$key]['logistictype']   = $logistictype;
            $storeArr[$key]['protype']    = $detail['protype'];
            $storeArr[$key]['store']      = (int)$detail['store']['id'];
            $storeArr[$key]['huodongtype'] = (int)$huodongtype;
            if ((int)$detail['store']['id'] == 0) return array("state" => 200, "info" => '订单中有失效商品!');
        }
        if ($pro[2] < $detail['smallCount']) return array("state" => 200, "info" => '不能小于最小起订量!');

        if ($proquantype != 0 && count($pros) != $proquantype) {

            return array("state" => 200, "info" => "订单中含有多种类型商品下单失败!");  //格式错误
        }

        if ($proquantype != 0 && !empty($storeQuanarr)) {

            return array("state" => 200, "info" => "券类型的商品不可以使用优惠券!");  //格式错误
        }

        $orderList = array();
        //对相同商铺的商品分组，对相同商铺的商品生成一个订单号
        $i = 0;
        foreach ($storeArr as $k => $v) {

            //是否已经存在
            $h = 0;

            //到店消费的不需要合并订单
            if ($confirmtype != 1) {
                foreach ($orderList as $key => $value) {
                    if ($value['store'] == $v['store']) {
                        $h = 1;
                    }
                }
            }

            $data = array(
                "id"         => $v['proid'],
                "proid"      => $v['proid'],
                "speid"      => $v['speid'],
                "specation"  => $v['specation'],
                "count"      => $v['count'],
                "volume"     => $v['volume'],
                "weight"     => $v['weight'],
                "orderid"    => $v['orderid'],
                "ordernum"   => $v['ordernum'],
                "price"      => $v['price'],
                "logistic"   => getLogisticPrice(null, $price, $pro[2], $v['volume'], $v['weight'], $addressid, $pro[0], $juli),
                "logisticId" => $v['logisticId'],
                "blogisticId" => $v['blogisticId'],
                "protype"    => $v['protype'],
                "typesales"  => $v['typesales'],
                "logistictype"  => $v['logistictype'],  //使用运费模板返回的值
                "huodongtype" => $v['huodongtype'],  //是否有活动
                // "logistictype" => !strstr($v['typesales'], 3) && $confirmtype == 2 ? 1 : $confirmtype  //如果不支持平台配置，confirmtype重置为1，用于合并计算运费中的规则
            );
            if ($detail['protype'] == 1) {
                $osql = $dsql->SetQuery("select confirmtype from `#@__shop_order` where ordernum='{$v['ordernum']}'");
                $oprotype = $dsql->getOne($osql);
                if ($oprotype == 1) {
                    $data['logistic'] = 0;
                }
            }

            //如果不存在则新建一级
            if (!$h) {
                $orderList[$i]['store']    = $v['store'];
                $orderList[$i]['ordernum'] = $v['ordernum'];
                $orderList[$i]['sid']      = $v['store'];
                $orderList[$i]['lng']      = $detail['store']['lng'];
                $orderList[$i]['lat']      = $detail['store']['lat'];
                $orderList[$i]['huodongtype'] = (int)$v['huodongtype'];
                //                $orderList[$i]['logistic'] = 0;
                $orderList[$i]['list']     = array($data);

                //查找分店信息
                $this->param             = array();
                $this->param['branchid'] = $v['store'];
                $this->param['lng']      = $lng;
                $this->param['lat']      = $lat;
                $this->param['orderby']  = 3;  //按距离排序
                $branchList              = $this->storeBranch();
                if ($branchList && $branchList['list'] && count($branchList['list']) > 0) {
                    $branchInfo = $branchList['list'][0];

                    //把距离最近的分站分配给
                    $branchid                  = $branchInfo['id'];
                    $orderList[$i]['branchid'] = $branchid;
                }

                $i++;
            } else {

                //如果已存在则push
                foreach ($orderList as $key => $value) {
                    if ($value['store'] == $v['store']) {
                        array_push($orderList[$key]['list'], $data);
                    }
                }
            }
        }
        $logistictype =  serialize($logistictype);

        //如果是老订单支付，不需要再重新合并计算运费，直接使用之前计算好的结果
        if ($ordernum) {

            foreach ($orderList as $k => $v) {
                $orderList[$k]['logistic'] = $yuanlogistic;
            }

            //到店消费不需要计算运费
        } elseif ($confirmtype != 1) {
            //合并计算运费
            $orderLogisticArr = calculationOrderLogistic($orderList, array('0' => $logicityid), $addressid, array('returnType' => 1));
            $orderLogistic = $orderLogisticArr['data'];
            //覆盖错误信息
            $orderLogisticError = $orderLogisticArr['error'];
            foreach ($orderLogisticError as $errKey => $errValue) {
                $logisticErrorArr[$errKey] = $errValue;
            }
            //如果有错误，则禁止下单
            foreach ($logisticErrorArr as $errItem) {
                if ($errItem) {
                    return array("state" => 200, "info" => $errItem);
                }
            }

            //        if($proquantype == count($pros) ){
            //            $orderLogistic = array('0'=>'0');
            //        }
            if ($confirmtype == 1 && $detail['protype'] == 1) {
                $orderLogistic = array('0' => '0');
            }
            //        $orderLogistic
            foreach ($orderLogistic as $key => $val) {
                $val = is_numeric($val) && $val > 0 ? (float)$val : 0;
                foreach ($orderList as $k => $v) {
                    if ($v['sid'] == $key) {
                        $orderList[$k]['logistic'] = (int)$val;
                    }
                }
            }
        }

        // 会员优惠信息
        $privilege   = array();
        $aus_courier = false;
        $userinfo    = $userLogin->getMemberInfo($userid, 1);

        /*砍价不参与*/  /*原价购买参与*/
        // if ($userinfo['level'] && ($buytype == '' && ($detailConfig[0]['states'] == 3 || $detailConfig[0]['states'] == 4)) && $detailConfig[0]['states'] !=1 && $detailConfig[0]['states'] != 2) {
        if ($userinfo['level']) {

            $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $privilege = unserialize($ret[0]['privilege']);

                // // 指定骑手 - 这里只判断指定骑手特权，生日特权要在每个店铺订单中判断：订单总额
                // $value = $privilege['qishou'];
                // if($value['type'] == "1"){
                //  $aus_courier = true;
                // }
            }
        }
        $opArr       = array();
        $ordernumArr = array();

        //如果是支付页面只需要更新订单信息
        if (!empty($ordernum)) {
            //            $ordernum= explode(',',$this->param['ordernum']);
            //如果是从支付成功后进入的订单详细页返回过来的，直接跳转至商城首页，否则会出现重复支付的问题！

            if ($final == 0 && $orderfinal == 0) {
                $this->param  = 'channelDomain';
                $shopConfig   = $this->config();
                $shopIndexUrl = $shopConfig['channelDomain'];

                $sql = $dsql->SetQuery("SELECT `orderstate`,`orderdate` FROM `#@__shop_order` WHERE `ordernum` = '$ordernum'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $orderstate = $ret[0]['orderstate'];
                    $timeout    = $ret[0]['orderdate'] + 1800;
                    if ($orderstate != 0) {
                        //                    header("location:" . $shopIndexUrl);
                        return $shopIndexUrl;
                        //                    die;
                    }

                    //如果没有找到订单，同样跳转到商城首页
                } else {
                    //                header("location:" . $shopIndexUrl);

                    return $shopIndexUrl;
                    //                die;
                }
            }
            array_push($ordernumArr, $ordernum);
            foreach ($orderList as $key => $value) {
                $logistic = $value['logistic'];
                $branchid = $value['branchid'];

                $auth_priceinfo  = array();
                $auth_shop_price = $auth_delivery_price = 0;
                $delivery_fee    = $value['logistic'];

                // if ($userinfo['level'] && $privilege && $huodongtype == 0) {
                // if ($userinfo['level'] && (($buytype == '' && ($huodongtype == 0 || $huodongtype == 3 || $huodongtype == 4)) && $huodongtype != 1 && $huodongtype != 2)) {
                if ($userinfo['level'] && $privilege) {
                    
                    // 获取本订单商品总额
                    $shopOrderPrice = [];
                    // 商品折扣
                    $auth_shop_discount = 10;
                    foreach ($value['list'] as $k => $v) {
                        $auth = $privilege['shop'];
                        if ($auth > 0 && $auth < 10 && !$v['huodongtype']) {
                            $_authPrice = $v['price'] * $v['count'];
                            $shopOrderPrice[] = (float)sprintf("%.2f", $_authPrice * (1 - $auth / 10));
                        }
                    }

                    //会员优惠金额
                    $auth_shop_price = 0;
                    if($shopOrderPrice){
                        foreach($shopOrderPrice as $__k => $__v){
                            $auth_shop_price += $__v;
                        }
                    }

                    // 配送费
                    $auth = $privilege['delivery'];
                    $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                    if ($delivery_fee) {
                        $ok = false;
                        // 打折
                        if ($auth[0]['type'] == 'discount') {
                            if ($auth[0]['val'] > 0 && $auth[0]['val'] < 10) {
                                $ok = true;
                            }
                            // 计次
                        } elseif ($auth[0]['type'] == 'count' && $userinfo['delivery_count'] > 0) {
                            if ($auth[0]['val'] == 0 || ($auth[0]['val'] > 0 && $userinfo['delivery_count'] - $key > 0)) {
                                $auth_delivery_isCount++;
                                $ok = true;
                            }
                        }

                        if ($ok) {
                            $auth_delivery_price = $auth[0]['type'] == 'count' ? $delivery_fee : $delivery_fee * (1 - $auth[0]['val'] / 10);

                            if($auth_delivery_price >= 0.01){
                                array_push($auth_priceinfo, array(
                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_peisong",
                                    "body"   => $userinfo['levelName'] . "特权-配送费优惠",
                                    "amount" => sprintf("%.2f", $auth_delivery_price)
                                ));
                            }
                        }
                    }

                    // // 生日特权
                    // $auth = $privilege['birthday'];
                    // if(!empty($userinfo['birthday']) && date('md', $userinfo['birthday']) == date('md')) {
                    //  if($auth['type'] && $auth['val']['discount'] > 0 && $auth['val']['discount'] < 10){
                    //      $limit = $auth['val']['limit'];
                    //      // 有总金额限制
                    //      if($limit > 0){
                    //          // 今日订单总金额,加上前面店铺的订单金额
                    //          $today_amount = todayOrderAmount($userid) + $shopTotalPrice;
                    //          // 超出限额
                    //          if($shopOrderPrice + $today_amount > $limit){
                    //              $auth_shop_can = $limit - $today_amount;

                    //              $auth_shop_price = $auth_shop_can * (1 - $auth['val']['discount'] / 10);
                    //          }else{
                    //              $auth_shop_price = $shopOrderPrice * (1 - $auth['val']['discount'] / 10);

                    //          }
                    //      }else{
                    //          $auth_shop_price = $shopOrderPrice * (1 - $auth['val']['discount'] / 10);
                    //      }

                    //      array_push($auth_priceinfo, array(
                    //          "level" => $userinfo['level'],
                    //          "type" => "auth_shop",
                    //          "body" => $userinfo['levelName']."特权-生日商品原价优惠",
                    //          "amount" => sprintf("%.2f", $auth_shop_price)
                    //      ));
                    //  }
                    // }

                    // 商品,并且不是生日
                    // if(!$auth_shop_price){
                    // if(($v['huodongtype'] == 0 || $v['huodongtype'] == 3 || $v['huodongtype'] == 4) && $v['huodongtype'] != 1 && $v['huodongtype'] != 2){
                        $auth = $privilege['shop'];
                        if ($auth > 0 && $auth < 10) {
                            // $auth_shop_price = (float)sprintf("%.2f", $shopOrderPrice * (1 - $auth / 10));

                            if($auth_shop_price >= 0.01){
                                array_push($auth_priceinfo, array(

                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_shop",
                                    "body"   => $userinfo['levelName'] . "特权-商品原价优惠",
                                    "amount" => sprintf("%.2f", $auth_shop_price)
                                ));
                            }
                        }
                    // }
                    // }

                }


                $allusemoney = $foodprice = 0;
                if (!empty($usequanid)) {
                    $nowtime = GetMkTime(time());
                    $quansql = $dsql->SetQuery("SELECT ql.`name`,ql.`fid`,ql.`quantype`,ql.`basic_price`,ql.`promotiotype`,ql.`promotio`,ql.`bear` FROM `#@__shop_quanlist` ql  WHERE ql.`id` = '$usequanid' AND ql.`state` = '0' AND ql.`ktime` <= '$nowtime' AND ql.`etime` >= '$nowtime'");
                    $quanres = $dsql->dsqlOper($quansql, "results");
                    if ($quanres && is_array($quanres)) {

                        foreach ($value['list'] as $k => $v) {
                            if ($quanres[0]['quantype'] == 1) {
                                $fidarr = explode(',', $quanres[0]['fid']);
                                if (in_array($v['proid'], $fidarr)) {
                                    $foodprice += $v['price'] * $v['count'];
                                }
                            } else {
                                $foodprice += $v['price'] * $v['count'];
                            }
                        }

                        $foodprice -= $auth_shop_price;  //减掉会员优惠

                        if ($quanres[0]['basic_price'] <= $foodprice) {

                            if ($quanres[0]['promotiotype'] == 0) {
                                $allusemoney = (float)$quanres[0]['promotio'];
                            } else {
                                $allusemoney = (float)sprintf("%.2f", $foodprice - ($foodprice * $quanres[0]['promotio'] / 10));
                            }
                        }

                        //优惠券金额如果大于订单金额，实际扣除金额为订单金额
                        $allusemoney = $allusemoney > $foodprice ? $foodprice : $allusemoney;

                        if($allusemoney >= 0.01){
                            array_push($auth_priceinfo, array(
                                "type"     => "quan",
                                "body"     => "使用优惠券",
                                "quanname" => $quanres[0]['name'],
                                "bear"     => $quanres[0]['bear'],                      //平台发放
                                "qid"      => $usequanid,
                                "amount"   => sprintf("%.2f", $allusemoney)
                            ));
                        }
                    }
                }

                $pcount = count($value['list']);
                // 会员优惠计入每个商品
                if ($pcount < 2) {
                    foreach ($value['list'] as $k => $v) {

                        $youhui                           = sprintf("%.2f", $allusemoney / $pcount);
                        $value['list'][$k]['auth_quan'] = $k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                        $av                           = sprintf("%.2f", $auth_delivery_price / $pcount);
                        $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($auth_delivery_price - $av * ($pcount - 1));

                        $avg                           = sprintf("%.2f", $auth_shop_price / $pcount);
                        $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                    }
                } else {
                    // if ($auth_shop_price && $auth_delivery_price && $allusemoney) {
                        foreach ($value['list'] as $k => $v) {
                            //                  $avg                            = sprintf("%.2f", ($v['price'] * $v['count']) / $pcount);
                            //                    $avg                           = sprintf("%.2f", $auth_shop_price / $pcount);
                            //                    $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price- $avg * ($pcount - 1));
                            //                    $youhui                           = sprintf("%.2f", $allusemoney / $pcount);
                            //                    $value['list'][$k]['auth_quan'] =$k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                            //                    $av                           = sprintf("%.2f", $auth_delivery_price / $pcount);
                            //                    $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($auth_delivery_price - $av * ($pcount - 1));

                            //                    $avg                           = sprintf("%.2f", $auth_shop_price / $pcount);
                            //                    $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                            if ($auth > 0 && $auth < 10) {
                                // $avg = sprintf("%.2f", ($v['price'] * $v['count']) / $pcount);
                                // $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : (($v['price'] * $v['count']) - $avg * ($pcount - 1));
                                $value['list'][$k]['auth_hui'] = (float)sprintf("%.2f", $v['price'] * $v['count'] * (1 - $auth / 10));
                            } else {
                                $value['list'][$k]['auth_hui'] = 0;
                            }
                            if ($v['logistic'] > $logistic) {
                                $v['logistic'] = $logistic;
                            }
                            //$av = sprintf("%.2f", $auth_delivery_price / $pcount);
                            $av = sprintf("%.2f", ($v['logistic'] / $pcount));
                            $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($v['logistic'] - $av * ($pcount - 1));

                            if($allusemoney){
                                $youhui = sprintf("%.2f", $allusemoney / $pcount);
                                $value['list'][$k]['auth_quan'] = $k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                            }else{
                                $value['list'][$k]['auth_quan'] = 0;
                            }
                        }
                    // }
                }

                $priceinfo = serialize($auth_priceinfo);
                $branchid  = (int)$branchid;
                //更新主表
                if ($final == 0) {

                    $logisticstr = ",`logistic` = '$logistic'";
                    if (!empty($value['ordernum'])) {
                        $logisticstr = '';

                        $logistic = $yuanlogistic;
                    }
                    if (empty($addressid)) {
                        $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `paytype` = '$paytype' $logisticstr ,`payprice` = '$payTotalAmount', `branchid` = '$branchid', `lng` = '$lng', `lat` = '$lat' ,`priceinfo` = '$priceinfo' WHERE `ordernum` = " . $value['ordernum']);
                    } else {
                        $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `paytype` = '$paytype' $logisticstr , `payprice` = '$payTotalAmount', `people` = '$person', `address` = '$address', `contact` = '$contact', `note` = '$note', `branchid` = '$branchid', `lng` = '$lng', `lat` = '$lat',`priceinfo` = '$priceinfo' WHERE `ordernum` = " . $value['ordernum']);
                    }
                    $dsql->dsqlOper($sql, "update");
                }
                $order_amount = $logistic;  //订单总金额
                //更新订单商品价格及运费为最新价格
                foreach ($value['list'] as $k => $v) {
                    if ($v['logistic'] > $logistic) {
                        $v['logistic'] = $logistic;
                    }
                    //获取订单商品ID
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order_product` WHERE `orderid` = '" . $v['orderid'] . "' AND `proid` = '" . $v['proid'] . "' AND `speid` = '" . $v['speid'] . "' AND `count` = " . $v['count']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $pid = $ret[0]['id'];

                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `price` = " . $v['price'] . ", `logistic` = " . $v['logistic'] . " WHERE `id` = " . $pid);
                    $dsql->dsqlOper($sql, "update");

                    //                    array_push($opArr, array(
                    //                        "id"       => $pid,
                    //                        "price"    => $v['price'] ,
                    //                        "count"    => $v['count'],
                    //                        "auth_hui" => $v['auth_hui'],
                    //                        "auth_quan" => $v['auth_quan'],
                    //                        "logistic" => $v['logistic'],
                    //                        "ordernum" => $v['ordernum']
                    //                    ));
                    array_push($opArr, array(
                        "id"       => $pid,
                        "price"    => $v['price'],
                        "auth_hui" => $v['auth_hui'],
                        "auth_quan" => $v['auth_quan'],
                        "count"    => $v['count'],
                        "logistic" => $v['logistic'],
                        "auth_peisong" => $v['auth_peisong'],
                        "ordernum" => $v['ordernum']
                    ));
                    $order_amount += $v['price'] * $v['count'];
                    $order_amount = $order_amount - $auth_delivery_price - $auth_shop_price - $allusemoney;
                    //更新订单总金额（包含运费），这里不再更新amount值，之前未做活动商品价格的计算，直接用了商品不参加活动的原价，导致这里计算错误
                    // $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `amount` = '$order_amount', `balance` = 0  WHERE `ordernum` = '".$v['ordernum']."'");
                    // $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `balance` = 0  WHERE `ordernum` = '" . $v['ordernum'] . "'");
                    // $dsql->dsqlOper($sql, "update");
                }
            }
        }
        //新订单
        else {
            // 新：从库存中直接使用 redis 的 pop ，如果都是正数，则说明高并发下库存正常
            // 如果存在活动，且商品为下单减库存（0）
            if ($huodongtype != 0 && $inventoryCount == 0 && !empty($hid)) {
                global $HN_memory;
                if ($HN_memory && $HN_memory->enable) {  // 如果开启了 redis
                    $kucunArray = array();  // 已经取出的库存列表
                    foreach ($orderList as $key => $value) {   // 遍历订单
                        foreach ($value['list'] as $k3 => $v3) {  // 遍历订单每个商品
                            $memoryKey = "shop_product_huodong_{$hid}";
                            if (!empty($v3['speid'])) {
                                $memoryKey .= "_{$v3['speid']}";
                            }
                            $v3_count = 0;
                            $v3_break = false;
                            for ($ii = 0; $ii < $v3['count']; $ii++) {
                                $current_count = $HN_memory->lpop($memoryKey);   // 减库存
                                // 该商品库存不足
                                if (!$current_count) {
                                    $v3_break = true;
                                    break;
                                }
                                // 记录该商品取出的库存+1
                                else {
                                    $v3_count++;
                                }
                            }
                            $kucunArray[] = array('key' => $memoryKey, 'count' => $v3_count);
                            if ($v3_break) {  // 说明有其中一个商品的库存不足，则本次订单失效，返还本次取出的所有库存
                                foreach ($kucunArray as $k4 => $v4) {  // 遍历商品
                                    for ($i4 = 0; $i4 < $v4['count']; $i4++) {  // 依次增加库存
                                        $HN_memory->rpush($v4['key'], 1);
                                    }
                                }
                                return array("state" => 200, "info" => "库存不足");  //可能是由于商品后边增加了多规则，之前报名参加的时候还没有多规则
                            }
                        }
                    }
                }
            }

            global $cfg_shopFee;
            $timeout = GetMkTime(time()) + 1800;
            //每个商铺生成一个订单
            $xunipoint = 0;             //虛擬point  用于比较
            $xupoint = 0;
            foreach ($orderList as $key => $value) {
                $auth_priceinfo  = array();
                $auth_shop_price = $auth_delivery_price = 0;
                $delivery_fee    = $value['logistic'];
                // if ($userinfo['level'] && $privilege) {
                if ($userinfo['level'] && $privilege) {

                    // 获取本订单商品总额
                    $shopOrderPrice = 0;
                    //订单总额用于优惠计算
                    $youhuiprice = 0;
                    //优惠多少钱
                    $priceshop = 0;
                    // 商品折扣
                    $auth_shop_discount = 10;
                    $yuanjia = 0;
                    foreach ($value['list'] as $k => $v) {

                        $yuanjia += $v['price'] * $v['count'];   //总额
                        $price = $v['price'];
                        // 商品,并且不是生日
                        // if(!$auth_shop_price){
                        $auth = $privilege['shop'];
                        if ($auth > 0 && $auth < 10) {
                            $price = sprintf("%.2f", $price * ($auth / 10)) * $v['count'];
                            $youhuiprice += $price;
                            $priceshop = $yuanjia - $youhuiprice;   //总额减去优惠后的价格  求优惠多少钱
                            $shopOrderPrice += $price;
                        } else {
                            $shopOrderPrice += $price * $v['count'];
                        }
                    }
                    // 配送费
                    $auth = $privilege['delivery'];
                    $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                    if ($delivery_fee) {
                        $ok = false;
                        // 打折
                        if ($auth[0]['type'] == 'discount') {
                            if ($auth[0]['val'] > 0 && $auth[0]['val'] < 10) {
                                $ok = true;
                            }
                            // 计次
                        } elseif ($auth[0]['type'] == 'count' && $userinfo['delivery_count'] > 0) {
                            if ($auth[0]['val'] == 0 || ($auth[0]['val'] > 0 && $userinfo['delivery_count'] - $key > 0)) {
                                $auth_delivery_isCount++;
                                $ok = true;
                            }
                        }

                        if ($ok) {
                            // $auth_delivery_price = $auth[0]['type'] == 'count' ? ($delivery_fee > 3 ? 3 : $delivery_fee) : $delivery_fee * (1 - $auth[0]['val'] / 10);
                            $auth_delivery_price = $auth[0]['type'] == 'count' ? $delivery_fee : $delivery_fee * (1 - $auth[0]['val'] / 10);

                            if($auth_delivery_price >= 0.01){
                                array_push($auth_priceinfo, array(
                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_peisong",
                                    "body"   => $userinfo['levelName'] . "特权-配送费优惠",
                                    "amount" => sprintf("%.2f", $auth_delivery_price)
                                ));
                            }
                        }
                    }

                    // // 生日特权
                    // $auth = $privilege['birthday'];
                    // if(!empty($userinfo['birthday']) && date('md', $userinfo['birthday']) == date('md')) {
                    //  if($auth['type'] && $auth['val']['discount'] > 0 && $auth['val']['discount'] < 10){
                    //      $limit = $auth['val']['limit'];
                    //      // 有总金额限制
                    //      if($limit > 0){
                    //          // 今日订单总金额,加上前面店铺的订单金额
                    //          $today_amount = todayOrderAmount($userid) + $shopTotalPrice;
                    //          // 超出限额
                    //          if($shopOrderPrice + $today_amount > $limit){
                    //              $auth_shop_can = $limit - $today_amount;

                    //              $auth_shop_price = $auth_shop_can * (1 - $auth['val']['discount'] / 10);
                    //          }else{
                    //              $auth_shop_price = $shopOrderPrice * (1 - $auth['val']['discount'] / 10);

                    //          }
                    //      }else{
                    //          $auth_shop_price = $shopOrderPrice * (1 - $auth['val']['discount'] / 10);
                    //      }

                    //      array_push($auth_priceinfo, array(
                    //          "level" => $userinfo['level'],
                    //          "type" => "auth_shop",
                    //          "body" => $userinfo['levelName']."特权-生日商品原价优惠",
                    //          "amount" => sprintf("%.2f", $auth_shop_price)
                    //      ));
                    //  }
                    // }

                    // 商品,并且不是生日
                    // if(!$auth_shop_price){
                    // if(($buytype == '' && ($huodongtype == 0 || $huodongtype == 3 || $huodongtype == 4)) && $huodongtype != 1 && $huodongtype != 2){
                    if($buytype == '' && $huodongtype == 0){
                        $auth = $privilege['shop'];
                        if ($auth > 0 && $auth < 10) {
                            if ($priceshop > 0) {
                                $auth_shop_price = $priceshop;
                            } else {
                                $auth_shop_price = (float)sprintf("%.2f", $shopOrderPrice * (1 - $auth / 10));
                            }
                            if($auth_shop_price >= 0.01){
                                array_push($auth_priceinfo, array(

                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_shop",
                                    "body"   => $userinfo['levelName'] . "特权-商品原价优惠",
                                    "amount" => sprintf("%.2f", $auth_shop_price)
                                ));
                            }
                        }
                    }
                    // }

                }



                $allusemoney = $foodprice = $usequanid = 0;
                if (!empty($storeQuanarr)) {
                    $usequanid = $storeQuanarr[$value['store']]['quanid'];
                    $nowtime   = GetMkTime(time());
                    $quansql   = $dsql->SetQuery("SELECT ql.`name`,ql.`fid`,ql.`quantype`,ql.`basic_price`,ql.`promotiotype`,ql.`promotio`,ql.`bear` FROM `#@__shop_quanlist` ql  WHERE ql.`id` = '$usequanid' AND ql.`state` = '0' AND ql.`ktime` <= '$nowtime' AND ql.`etime` >= '$nowtime'");
                    $quanres   = $dsql->dsqlOper($quansql, "results");
                    if ($quanres && is_array($quanres)) {

                        foreach ($value['list'] as $k => $v) {
                            if ($quanres[0]['quantype'] == 1) {
                                $fidarr = explode(',', $quanres[0]['fid']);
                                if (in_array($v['proid'], $fidarr)) {
                                    $foodprice += $v['price'] * $v['count'];
                                }
                            } else {
                                $foodprice += $v['price'] * $v['count'];
                            }
                        }

                        $foodprice -= $auth_shop_price;  //减掉会员优惠

                        if ($quanres[0]['basic_price'] <= $foodprice) {
                            if ($quanres[0]['promotiotype'] == 0) {
                                $allusemoney = (float)$quanres[0]['promotio'];
                            } else {
                                $allusemoney = (float)(float)sprintf("%.2f", $foodprice - ($foodprice * $quanres[0]['promotio'] / 10));
                            }
                        }

                        //优惠券金额如果大于订单金额，实际扣除金额为订单金额
                        $allusemoney = $allusemoney > $foodprice ? $foodprice : $allusemoney;

                        if($allusemoney >= 0.01){
                            array_push($auth_priceinfo, array(
                                "type"     => "quan",
                                "body"     => "使用优惠券",
                                "quanname" => $quanres[0]['name'],
                                "bear"     => $quanres[0]['bear'],       //平台发放 1
                                "qid"      => $usequanid,
                                "amount"   => sprintf("%.2f", $allusemoney)
                            ));
                        }
                    }
                }
                $pcount = count($value['list']);


                $protypepe = 0;

                //                $protypearr = array_column($value['list'],'protype');
                //                if(in_array('1',$protypearr)){
                if ($confirmtype == 1) {
                    $protypepe = 1;
                }
                // 会员优惠计入每个商品
                if ($pcount < 2) {
                    foreach ($value['list'] as $k => $v) {
                        $avg = sprintf("%.2f", $auth_shop_price / $pcount);
                        $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                        //                        $avg                           = sprintf("%.2f", ($v['price'] * $v['count']) / $pcount);
                        //                        $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : (($v['price'] * $v['count']) - $avg * ($pcount - 1));
                        $av                           = sprintf("%.2f", $auth_delivery_price / $pcount);
                        //                        $av                           = sprintf("%.2f", ($v['logistic'] / $pcount));
                        $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($auth_delivery_price - $av * ($pcount - 1));

                        $youhui                           = sprintf("%.2f", $allusemoney / $pcount);
                        $value['list'][$k]['auth_quan'] = $k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                    }
                } else {
                    // if ($auth_shop_price && $auth_delivery_price && $allusemoney) {
                        foreach ($value['list'] as $k => $v) {
                            // $avg = sprintf("%.2f", $auth_shop_price / $pcount);
                            // $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                            if ($auth > 0 && $auth < 10) {
                                // $avg = sprintf("%.2f", ($v['price'] * $v['count']) / $pcount);
                                // $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : (($v['price'] * $v['count']) - $avg * ($pcount - 1));
                                $value['list'][$k]['auth_hui'] = (float)sprintf("%.2f", $v['price'] * $v['count'] * (1 - $auth / 10));
                            } else {
                                $value['list'][$k]['auth_hui'] = 0;
                            }

                            if ($v['logistic'] > $logistic) {
                                $v['logistic'] = $logistic;
                            }

                            // $av = sprintf("%.2f", $auth_delivery_price / $pcount);
                            $av = sprintf("%.2f", ($v['logistic'] / $pcount));
                            $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($v['logistic'] - $av * ($pcount - 1));

                            if($allusemoney){
                                $youhui = sprintf("%.2f", $allusemoney / $pcount);
                                $value['list'][$k]['auth_quan'] = $k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                            }else{
                                $value['list'][$k]['auth_quan'] = 0;
                            }
                        }
                    // }
                }

                $priceinfo = serialize($auth_priceinfo);
                //新订单
                $newOrdernum = create_ordernum();
                $tr          = true;


                //新增主表
                $store    = $value["store"];
                $logistic = (int)$value['logistic'];
                $no       = $note[$store];
                $branchid = (int)$value['branchid'];
                // $branchidno = $branchid[$store];
                // $shippingno = $shipping[$store];

                $storefeesql = $dsql->SetQuery("SELECT `shopFee` FROM `#@__shop_store` WHERE `id` = '$store'");

                $storefeeres = $dsql->dsqlOper($storefeesql, "results");


                if ($storefeeres && is_array($storefeeres)) {
                    $cfg_shopFee = !empty((float)$storefeeres[0]['shopFee']) ? (float)$storefeeres[0]['shopFee'] : $cfg_shopFee;
                }

                //                if ($proquantype != 0) {
                //
                //                    $sql = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstaterdate`, `orde`, `paytype`, `logistic`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`logistictype`,`confirmtype`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic', '$payTotalAmount', '$person', '$address', '$contact', '$no', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$usequanid','$cfg_shopFee','$protypepe','$logistictype','$confirmtype')");
                //
                //                    $oid = $dsql->dsqlOper($sql, "lastid");
                //
                //                    array_push($ordernumArr, $newOrdernum);
                //
                //                }
                //
                $sql         = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `logistic`, `amount`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`logistictype`,`confirmtype`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic','$payTotalAmount', '$payTotalAmount', '$person', '$address', '$contact', '$note', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$usequanid','$cfg_shopFee','$protypepe','$logistictype','$confirmtype')");
                $oid = $dsql->dsqlOper($sql, "lastid");

                if ($oid) {

                    if ($huodongtype == '3') {

                        $bargainsql = $dsql->SetQuery("SELECT `oid` FROM `#@__shop_bargaining` WHERE `id` = '$bargainid'");

                        $bargainres = $dsql->dsqlOper($bargainsql, "results");

                        if ($bargainres && is_array($bargainres)) {

                            $archives = $dsql->SetQuery("DELETE FROM `#@__shop_order` WHERE `id` = " . $bargainres[0]['oid']);
                            $dsql->dsqlOper($archives, "update");
                        }

                        if ($confirmtype == 2) {
                            $updatesql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `oid` = '$oid' WHERE `id` = '$bargainid'");

                            $updateres = $dsql->dsqlOper($updatesql, "results");
                        }
                    } elseif ($huodongtype == '4') {

                        $pubdate = GetMkTime(time());
                        $enddate = $pubdate + $detail['pintime'] * 3600;

                        $pintype = 0;
                        if (empty($pinid)) {

                            $pintype = 1;
                            $sql     = $dsql->SetQuery("INSERT INTO `#@__shop_tuanpin` (`oid`, `proid`, `userid`, `pubdate`, `enddate`, `state`,`hid`,`user`) VALUES ('$oid','" . $pro[0] . "', '$userid', '$pubdate', '$enddate', '0','$hid','$userid')");
                            $pid     = $dsql->dsqlOper($sql, "lastid");
                            if (!is_numeric($pid)) {
                                return array("state" => 200, "info" => '下单失败');
                            }
                            $pinid = $pid;
                        } else { //检查拼团状态

                            $sql = $dsql->SetQuery("SELECT `people`, `state`, `userid`, `enddate`, `user` FROM `#@__shop_tuanpin` WHERE `id` = $pinid AND `state` > 0");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if (!$ret) {
                                return array("state" => 200, "info" => '该团不存在，正在开新团|201');
                            } else {
                                $ret  = $ret[0];
                                $user = $ret['user'];
                                if ($ret['state'] == 2) {
                                    return array("state" => 200, "info" => '该团已失效，请开新团');
                                } elseif ($ret['userid'] == $userid) {
                                    return array("state" => 200, "info" => '您已经是该团创建人');
                                } elseif ($ret['state'] == 3) {
                                    //die("该团成员已满");
                                    return array("state" => 200, "info" => '该团成员已满');
                                } elseif ($ret['enddate'] < $pubdate) {
                                    return array("state" => 200, "info" => '该团已失效，正在开新团|201');
                                }
                                // 验证是否已参团
                                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order` WHERE `userid` = $userid AND `pinid` = $pinid AND `orderstate` != 7 and `orderstate` != 10");
                                $ret = $dsql->dsqlOper($sql, "results");
                                if ($ret) {
                                    return array("state" => 200, "info" => '您已经是该团成员');
                                } else { //如果没有就更新
                                    if (empty($user)) {
                                        $sql = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET user = $userid WHERE `id` = '$pinid'");
                                    } else {
                                        $userN    = $user . ',' . $userid;
                                        $userNarr = explode(',', $userN);
                                        $userNarr = array_unique($userNarr);
                                        $userNarr = implode(',', $userNarr);
                                        $sql      = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET user =  '$userNarr' WHERE `id` = '$pinid'");
                                    }
                                    $dsql->dsqlOper($sql, "update");
                                }
                            }
                        }
                    }


                    array_push($ordernumArr, $newOrdernum);

                    $order_amount = $logistic;  //订单总金额
                    //新增订单产品表
                    foreach ($value['list'] as $k => $v) {
                        if ($v['logistic'] > $logistic) {
                            $v['logistic'] = $logistic;
                        }
                        $pointprice = $v['price'] * $v['count'] + $v['logistic'] - $v['auth_peisong'] - $v['auth_hui'] - $v['auth_quan'];   //计算抵扣积分
                        //                        $pointprice = $v['price'] * $v['count'] +  $v['logistic'] - $v['auth_hui'] - $v['auth_quan'];   //计算抵扣积分
                        //                        $pointprice =  $v['price'] * $v['count'] + $v['logistic'];

                        $orderamont = $v['price'] * $v['count']  - $v['auth_hui'];
                        $pricepoint = 0;
                        $a = 0;

                        if ($pinid && $k == 0) {

                            $updatetuanpinsql = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET `oid` = '$oid' WHERE `id` = '$pinid'");
                            $dsql->dsqlOper($updatetuanpinsql, "update");
                        } elseif ($huodongtype == 3 && $k == 0) {

                            $updatesql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `oid` = '$oid' WHERE `id` = '$bargainid'");
                            $updateres = $dsql->dsqlOper($updatesql, "results");
                        }

                        $pinstr = '';
                        if ($huodongtype == '4' && !empty($detail['hid'])) {

                            $pinstr = " ,`pinid` = '" . $pinid . "',`pintype`  = '" . $pintype . "'";
                        }

                        //查询会员信息
                        // $userinfo  = $userLogin->getMemberInfo();
                        $userpoint = $userinfo['point'];
                        if ($usePinput == 1) {
                            $point_price = getJifen('shop', $pointprice);   //能抵扣多少钱
                            $pricepoint  = $point_price * $cfg_pointRatio;      // 能转换多少积分
                            if ($pricepoint >=  $userpoint) {
                                $pricepoint = $userpoint;
                                $xunipoint += $pricepoint;
                            }
                            $xunipoint += $pricepoint;
                            if ($xunipoint >= $userpoint) {
                                $chao = $userpoint - $xunipoint;
                                $pricepoint = $pricepoint + $chao;
                            }
                        }
                        if ($v['speid']) {
                            $order_product_specation = $this->getOrderProductSpecation($v['speid']);
                        } else {
                            $order_product_specation = "";
                        }
                        $archives = $dsql->SetQuery("INSERT INTO `#@__shop_order_product` (`orderid`, `proid`, `speid`, `specation`, `price`, `count`, `logistic`,`point`) VALUES ('$oid', " . $v['proid'] . ", '" . $v['speid'] . "', '" . $order_product_specation . "', '" . $v['price'] . "', '" . $v['count'] . "', '" . $v['logistic'] . "','$pricepoint')");

                        $opid     = $dsql->dsqlOper($archives, "lastid");
                        if (!is_numeric($opid)) {
                            $tr = false;
                        } else {
                            //将新的订单产品组合，以供分配使用的积分或余额
                            array_push($opArr, array(
                                "id"       => $opid,
                                "price"    => $v['price'],
                                "auth_hui" => $v['auth_hui'],
                                "auth_quan" => $v['auth_quan'],
                                "count"    => $v['count'],
                                "logistic" => $v['logistic'],
                                "auth_peisong" => $v['auth_peisong'],
                                "ordernum" => $newOrdernum
                            ));
                            $order_amount += $v['price'] * $v['count'];
                        }
                        //下单减库存
                        if (empty($hid)) {
                            $sql = $dsql->SetQuery("SELECT `specification`, `inventoryCount` FROM `#@__shop_product` WHERE `id` = " . $v['proid']);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {

                                $inventoryCount = (int)$ret[0]['inventoryCount'];

                                $invenstr = " `inventory` = `inventory` - " . $v['count'];

                                $salestr = " `sales` = `sales` + " . $v['count'];

                                if ($huodongtype == 1) {

                                    $invenstr = " `huodonginventory` = `huodonginventory` - " . $v['count'];

                                    //                                $salestr  = " `huodongsales` = `huodongsales` + ".$v['count'];

                                } elseif ($huodongtype == 2) {

                                    $invenstr = " `pininventory` = `pininventory` - " . $v['count'];

                                    //                                $salestr  = " `pinisales` = `pinisales` + ".$v['count'];
                                }

                                if ($inventoryCount == 0) {
                                    //更新已购买数量
                                    $sql = $dsql->SetQuery("UPDATE `#@__shop_product` SET $invenstr, $salestr WHERE `id` = " . $v['proid']);
                                    $dsql->dsqlOper($sql, "update");

                                    //更新sku库存
                                    if ($v['speid']) {
                                        $sql = $dsql::SetQuery("update `#@__shop_good_sku` set `stock`=`stock`-{$v['count']} where `id`={$v['speid']}");
                                        $dsql->update($sql);
                                    }
                                }
                            }
                        } else {
                            if ($huodongtype != 0 && $inventoryCount == 0) {

                                $sql1 = $dsql->SetQuery("UPDATE `#@__shop_huodongsign` SET `huodonginventory` = `huodonginventory` - " . $v['count'] . " WHERE `id` = '$hid'");
                                $dsql->dsqlOper($sql1, "update");

                                $sql = $dsql->SetQuery("SELECT `pinspecification` FROM `#@__shop_huodongsign` WHERE `id` = " . $hid);
                                $ret = $dsql->dsqlOper($sql, "results");
                                if ($ret) {
                                    $specification = $ret[0]['pinspecification'];

                                    if (!empty($specification)) {
                                        $nSpec         = array();
                                        $specification = json_decode($specification, true);
                                        foreach ($specification as $k_ => $v_) {
                                            if ($v_['id'] == $v['speid']) {
                                                $v_['stock'] = $v_['stock'] - $v['count']; //新库存
                                                $v_['stock'] =  $v_['stock'] < 0 ? 0 :  $v_['stock'];
                                                array_push($nSpec, $v_);
                                            } else {
                                                array_push($nSpec, $v_);
                                            }
                                        }

                                        $sql = $dsql->SetQuery("UPDATE `#@__shop_huodongsign` SET `pinspecification` = '" . addslashes(json_encode($nSpec, 256)) . "' WHERE `id` = " . $hid);
                                        $dsql->dsqlOper($sql, "update");
                                    }
                                }
                            }
                        }
                    }

                    //查询会员信息
                    // $userinfo  = $userLogin->getMemberInfo();
                    $userpoint = $userinfo['point'];
                    // if ($proquantype == 0) {
                    $order_amount = $order_amount - $auth_delivery_price - $auth_shop_price - $allusemoney;
                    $pricepoint   = 0;   //积分
                    if ($usePinput == 1) {
                        $point_price = getJifen('shop', $order_amount);   //能抵扣多少钱
                        $pricepoint  = $point_price * $cfg_pointRatio;      // 能转换多少钱
                        if ($pricepoint >=  $userpoint) {
                            $pricepoint = $userpoint;
                            // $xupoint+= $pricepoint;
                        }
                        // $xupoint += $pricepoint;
                        // if ($xupoint >= $userpoint ){
                        //     $chao = $userpoint - $xupoint;
                        //     $pricepoint = $pricepoint + $chao;
                        // }

                    }
                    //更新订单总金额（包含运费），这里不再更新amount值，之前未做活动商品价格的计算，直接用了商品不参加活动的原价，导致这里计算错误
                    // $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `amount` = '$order_amount',`balance` = 0 ,`point` = '$pricepoint' $pinstr  WHERE `id` = '$oid'");
                    // $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `balance` = 0 ,`point` = '$pricepoint' $pinstr  WHERE `id` = $oid");
                    // $dsql->dsqlOper($sql, "update");
                    // }
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_3');  //下单失败！
                }

                if (!$tr) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_4');  //下单失败！
                }
            }
        }
        if ($paytype == 'peerpay') {
            $param = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "daipay",
                "param"    => "module=shop&ordernum=" . join(",", $ordernumArr),

            );
            $url   = getUrlPath($param);

            return $url;
        }
        //        $userinfo = $userLogin->getMemberInfo($userid);
        //        $memberLevelAuth = getMemberLevelAuth($userinfo['level']);
        //        $shopDiscount = $memberLevelAuth['shop'];               //  商城优惠
        //        if ($shopDiscount){
        //            $totalPrice_ = $totalprice * ($shopDiscount/10);
        //        }else{
        //            $totalPrice_ = $totalprice;
        //        }
        //        $point  = getJifen('shop', $totalPrice_);  //积分
        if (($final == 0 || $orderfinal == 1) && $payTotalAmount > 0) {

            if ($paytype == 'delivery') {
                $ordernumArr = join(",", $ordernumArr);

                $paylognum = create_ordernum();
                $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`) VALUES ('shop', '$paylognum', '$userid', '$ordernumArr', '0', '$paytype', '1')");
                $dsql->dsqlOper($archives, "update");

                $reslq = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order`  WHERE  `ordernum` = '$ordernumArr'");
                $numres = $dsql->dsqlOper($reslq, "results");
                $orderid = $numres[0]['id'];
                //执行支付成功的操作
                $this->param = array(
                    "paytype"  => 'delivery',
                    "ordernum" => $ordernumArr,
                    "confirmtype" => $confirmtype
                );
                $this->paySuccess();

                //跳转至支付成功页面
                //                $param = array(
                //                    "service"  => "shop",
                //                    "template" => "payreturn",
                //                    "ordernum" => $paylognum
                //                );
                $paramBusi = array(
                    "service" => "member",
                    "type" => "user",
                    "template" => "orderdetail",
                    "action" => "shop",
                    "id" => $orderid
                );


                $url   = getUrlPath($param);

                return $url;
            }

            $order = createPayForm("shop", join(",", $ordernumArr), $payTotalAmount, '', $langData['shop'][4][17], array(), 1);  //商城订单

            $order['timeout'] = $timeout;

            return  $order;
        }

        // 会员特权，配送费优惠次数-1
        if ($auth_delivery_isCount) {
            $sql = $dsql->SetQuery("UPDATE `#@__member` SET `delivery_count` = `delivery_count` - $auth_delivery_isCount WHERE `id` = $userid");
            $dsql->dsqlOper($sql, "update");
        }

        //如果有使用积分或余额则更新订单内容的价格信息
        if (($usePinput) || ($useBalance && !empty($balance))) {
            //            $pointMoney   = $point / $cfg_pointRatio;
            $balanceMoney = $balance;
            $store = array();
            foreach ($opArr as $key => $value) {
                if ($final == 1) {
                    array_push($ordernumArr, $value['ordernum']);
                }
                if ($confirmtype == 1) {
                    $value['logistic'] = 0;;
                }
                $oprice          = sprintf("%.2f", $value['price'] * $value['count'] + $value['logistic'] - $value['auth_hui'] - $value['auth_quan'] - $value['auth_peisong']);  //单个订单总价 = 单价 * 数量
                //                $oprice = $value['price'] * $value['count'] + $value['logistic'];  //单个订单总价 = 单价 * 数量
                $usePointMoney   = 0;
                $useBalanceMoney = 0;

                $order_point   = 0;
                $order_balance = 0;
                //查询订单运费
                $order_logistic = 0;
                $sql            = $dsql->SetQuery("SELECT `logistic`,`priceinfo`,`point`,`store`,`changetype`,`changeprice` FROM `#@__shop_order` WHERE `ordernum` = '" . $value['ordernum'] . "'");
                $ret            = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $order_logistic = $ret[0]['logistic'];
                    $changetype     = (int)$ret[0]['changetype'];
                    $changeprice    = (float)$ret[0]['changeprice'];

                    if ($changetype == 1) {
                        $oprice = sprintf("%.2f", $changeprice - $value['auth_hui'] - $value['auth_quan'] - $value['auth_peisong']);
                    }

                    $yhlogistic = unserialize($ret[0]['priceinfo']);
                    if ($yhlogistic) {
                        foreach ($yhlogistic as $j => $l) {
                            if ($l['type'] == "auth_peisong") {
                                $order_logistic -= $l['amount'];
                            }
                        }
                    }
                }
                $xunipoint = 0;             //虛擬point  用于比较
                $xupoint = 0;
                $userpoint = $userinfo['point'];
                if ($ret[0]['point'] > 0) {
                    $point_price = getJifen('shop', $oprice);   //能抵扣多少钱
                    $pricepoint  = $point_price * $cfg_pointRatio;      // 能转换多少积分
                    if ($pricepoint >= $userpoint) {
                        // $pricepoint = $userpoint - $xunipoint;
                        $pricepoint = $userpoint;
                    }
                    // if ($pricepoint >=  $userpoint) {
                    //     $pricepoint = $userpoint;
                    //     $xunipoint += $pricepoint;
                    // }
                    $point = $pricepoint;
                    $pointMoney =  $point / $cfg_pointRatio;
                    $payprice = sprintf("%.2f", $oprice - $pointMoney);
                } else {
                    $payprice = $oprice;
                }

                //更新单独商品的支付信息
                //$pointMoney_ = $order_point + $usePointMoney * $cfg_pointRatio;
                $archives    = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `point` = '" . (float)$point . "', `balance` = '" . (float)$payprice . "', `payprice` = '0.00' WHERE `id` = " . $value['id']);
                $dsql->dsqlOper($archives, "update");
                //更新整个订单的支付信息
                //                $order_point   += $point  ;

                $store[] = $opArr[0]['ordernum'];
                if ($store[0] == $v['ordernum'] &&  $opArr[1]['ordernum']) {           //是否为同一个订单号(店铺)
                    $blan += $payprice;
                } else {
                    $blan = $payprice;
                }
                if ($final == 1) {
                    $balance = (float)$blan;

                    $paytype = 'point';

                    if ($balance != '0.00') {

                        $paytype = 'money';
                    }
                }
                $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `paytype` = '$paytype',`balance` = '" . (float)$balance . "',`payprice` = '0.00' WHERE `ordernum` = '" . $value['ordernum'] . "'");
                $dsql->dsqlOper($sql, "update");
            }
            //如果没有使用积分或余额，重置积分&余额等价格信息
        } else {
            foreach ($opArr as $key => $value) {
                //查询订单运费
                $order_logistic = 0;
                $sql            = $dsql->SetQuery("SELECT `logistic`,`priceinfo`FROM `#@__shop_order` WHERE `balance` = 0 AND `point` = 0 AND `ordernum` = '" . $value['ordernum'] . "'");
                $ret            = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $order_logistic = $ret[0]['logistic'];

                    $yhlogistic = unserialize($ret[0]['priceinfo']);
                    if ($yhlogistic) {
                        foreach ($yhlogistic as $j => $l) {
                            if ($l['type'] == "auth_peisong") {
                                $order_logistic -= $l['amount'];
                            }
                        }
                    }
                }
                $payprice = $value['price'] * $value['count'];
                if ($value['count'] > 1) {
                    $payprice = $payprice + $value['auth_hui'];    //原价
                } else {
                    $payprice = $payprice;
                }
                $yuanprice = $payprice + $order_logistic;      // 原价 + 运费
                $archives = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET  `balance` = '0', `payprice` = '$yuanprice' WHERE `id` = " . $value['id']);
                $dsql->dsqlOper($archives, "update");
            }
        }


        //1.如果需要支付的金额小于等于0，表示会员使用积分或余额已经付清了，不需要另外去支付
        //2.这种情况直接更新订单状态，并跳转至支付成功页即可
        //3.对会员的积分和余额进行扣除操作
        if ($payTotalAmount <= 0) {

            $date    = GetMkTime(time());
            $paytype = array();

            //扣除会员账户积分和余额
            foreach ($opArr as $key => $value) {


                //查询订单信息
                $archives = $dsql->SetQuery("SELECT `point`, `balance` FROM `#@__shop_order_product` WHERE `id` = " . $value['id']);
                $results  = $dsql->dsqlOper($archives, "results");
                $res      = $results[0];

                $upoint   = $res['point'];    //使用的积分
                $ubalance = $res['balance'];  //使用的余额
                // $ordernum = $ret['ordernum']; //订单号

                //扣除会员积分
                if (!empty($upoint) && $upoint > 0) {
                    // $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - '$upoint' WHERE `id` = '$userid'");
                    // $dsql->dsqlOper($archives, "update");
                    //
                    // //保存操作日志
                    // $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$upoint', '支付商城订单：$ordernum', '$date')");
                    // $dsql->dsqlOper($archives, "update");

                    $paytype[] = "point";
                }
                //扣除会员余额
                if (!empty($ubalance) && $ubalance > 0) {
                    // $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$ubalance' WHERE `id` = '$userid'");
                    // $dsql->dsqlOper($archives, "update");
                    //
                    // //保存操作日志
                    // $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$ubalance', '支付商城订单：$ordernum', '$date')");
                    // $dsql->dsqlOper($archives, "update");

                    $paytype[] = "money";
                }

                //根据订单商品ID，查询商家会员ID
                $_uid = $_userid = 0;
                $sql  = $dsql->SetQuery("SELECT s.`userid` uid, o.`userid` FROM `#@__shop_order_product` p LEFT JOIN `#@__shop_order` o ON o.`id` = p.`orderid` LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` WHERE p.`id` = " . $value['id']);
                $ret  = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $_uid    = (int)$ret[0]['uid'];
                    $_userid = (int)$ret[0]['userid'];
                }

                //强制绑定关系
                rfbpShareAllocation(array(
                    "uid"              => $_uid,
                    "userid"           => $_userid,
                    "bindFenxiaoshang" => true
                ));
            }

            $_ordernumArr = $ordernumArr;
            $ordernumArr = join(",", $ordernumArr);

            $ordernumArr = explode(",", $ordernumArr);

            $ordernumArr = array_unique($ordernumArr);

            $ordernumArr = join(",", $ordernumArr);

            $paytype     = array_unique($paytype);

            //增加支付日志
            //客户反馈有重复付款的情况，这里再次做下判断
            if ($peerpay) {
                // $userid = $userLogin->getMemberID();
            }
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordertype` = 'shop' AND `uid` = '$userid' AND `body` = '$ordernumArr' AND `amount` = 0 AND `paytype` = '" . join(",", $paytype) . "'");
            $ret = $dsql->dsqlOper($sql, "results");
            //            if ($ret) {
            //                header("location:" . $shopIndexUrl . '?from=shopClass_4098');
            //                die;
            //            }
            $paysql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `body` = '$ordernumArr'");
            $payre  = $dsql->dsqlOper($paysql, "results");
            if (!empty($payre)) {
                if ($userid > 0) {
                    $archives = $dsql->SetQuery("UPDATE  `#@__pay_log` SET `ordertype` = 'shop',  `uid` = $userid, `paytype` ='" . join(",", $paytype) . "', `state` = 1, `pubdate` = $date  WHERE `body` = '$ordernumArr' AND `ordertype` = 'shop'");
                    $dsql->dsqlOper($archives, "update");
                }
            } else {
                $paylognum = $paylognum ? $paylognum : $_ordernumArr[0];
                $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`) VALUES ('shop', '$paylognum', '$userid', '$ordernumArr', '0', '" . join(",", $paytype) . "', '1')");
                $dsql->dsqlOper($archives, "update");
            }
            if (empty($paytype)) {
                $paytype = array('money');
                // return array("state" => 200, "info" => "下单异常！");
            }
            $this->param = array(
                "paytype"  => join(",", $paytype),
                "ordernum" => $ordernumArr,
                "confirmtype" => $confirmtype

            );
            //执行支付成功的操作
            $this->paySuccess();
            //跳转至支付成功页面
            $param = array(
                "service"  => "shop",
                "template" => "payreturn",
                "ordernum" => $ordernumArr
            );
            $url   = getUrlPath($param);

            //支付成功后跳转页面
            global $cfg_payReturnType;
            global $cfg_payReturnUrlPc;
            global $cfg_payReturnUrlTouch;

            if ($cfg_payReturnType) {

                //移动端自定义跳转链接
                if (isMobile() && $cfg_payReturnUrlTouch) {
                    $url = $cfg_payReturnUrlTouch;
                }

                //电脑端自定义跳转链接
                if (!isMobile() && $cfg_payReturnUrlPc) {
                    $url = $cfg_payReturnUrlPc;
                }
            }

            if ($peerpay) {

                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                    "template" => "daipay_return",
                    "param"    => "module=shop&ordernum=" . $ordernum
                );
                $url   = getUrlPath($param);

                //                header("location:" . $url);
            }
            return $url;
        } else {
            //判断是否货到付款
            /**
             * 出现的问题；
             * 1、购物车页面多个商品，如果有个商品不支持货到付款，怎么解决？
             */
            if ($paytype == 'delivery') {
                $ordernumArr = join(",", $ordernumArr);

                $paylognum = create_ordernum();
                $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`) VALUES ('shop', '$paylognum', '$userid', '$ordernumArr', '0', '$paytype', '1')");
                $dsql->dsqlOper($archives, "update");
                $reslq = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order`  WHERE  `ordernum` = '$ordernumArr'");
                $numres = $dsql->dsqlOper($reslq, "results");
                $orderid = $numres[0]['id'];
                //执行支付成功的操作
                $this->param = array(
                    "paytype"  => 'delivery',
                    "ordernum" => $ordernumArr,
                    "confirmtype" => $confirmtype
                );
                $this->paySuccess();

                //跳转至支付成功页面
                //                $param = array(
                //                    "service"  => "shop",
                //                    "template" => "payreturn",
                //                    "ordernum" => $paylognum
                //                );
                $paramBusi = array(
                    "service" => "member",
                    "type" => "user",
                    "template" => "orderdetail",
                    "action" => "shop",
                    "id" => $orderid
                );
                $url   = getUrlPath($paramBusi);

                return $url;
                //                header("location:" . $url);
            } else {

                //跳转至第三方支付页面
                return createPayForm("shop", join(",", $ordernumArr), $payTotalAmount, $paytype, $langData['shop'][4][17]);  //商城订单
            }
        }
    }


    public function getOrderProductSpecation($sku)
    {
        $skuDetail = $this->getSkuDetail($sku);
        $speDetails = $skuDetail['speDetail'];
        if(!$speDetails) return '';
        $specation = array();
        if ($skuDetail['promotype'] != "1") { //电商模板
            foreach ($speDetails as $speDetails_i) {
                //找出所有的父级
                $name = $speDetails_i['name'];
                if ($speDetails_i['parent_id'] != 0) {
                    $name = $speDetails_i['parent_name'] . "：" . $name;
                }
                $specation[] = $name;
            }
        } else { //团购模板
            foreach ($speDetails as $speDetails_i) {
                if ($speDetails_i['parent_id'] != "0") {
                    $specation[] = $speDetails_i['name'];
                }
            }
        }
        return join("$$$", $specation);
    }

    /**
     * 移动端下单
     * @return array
     */
    public function dealTouch()
    {
        global $dsql;
        global $userLogin;
        global $cfg_basehost;
        global $cfg_pointRatio;
        global $langData;
        global $cfg_pointName;

        $param = array(
            "service"  => "member",
            "type"     => "user",
            "template" => "order",
            "module"   => "shop"
        );
        $url   = getUrlPath($param);

        $userDetail = $userLogin->getMemberInfo();
        if ($userDetail['is_staff'] == 1) {
            return array("state" => 200, "info" => "员工账号不可以下单，如需购买请使用普通账号提交！");  //格式错误
        }

        $param = $this->param;

        //验证需要支付的费用
        $payTotalAmount = $this->checkPayAmount();
        //重置表单参数
        $this->param = $param;
        $payCheck = $this->payCheck();
        if ($payCheck != "ok" || is_array($payTotalAmount)) {
            if ($payCheck != "ok") {
                return $payCheck;
            }

            if (is_array($payTotalAmount)) {
                return $payTotalAmount;
            }

            header("location:" . $url);
            die;
        }
        $buytype    = $param['buytype']; /*砍价 bargain*/
        $bargainid  = $param['bargainid']; /*砍价 id*/
        $ordernum   = $param['ordernum'];
        $pros       = $param['pros'];
        $addressid  = $param['addressid'];
        $paytype    = $param['paytype'];
        $note       = $param['note'];
        $usePinput  = $param['usePinput'];
        $pinid      = (int)$param['pinid'];
        $point      = (float)$param['point'];
        $useBalance = $param['useBalance'];
        $ordertype  = $param['ordertype'];
        $directbuy  = $param['directbuy'];
        $balance    = (float)$param['balance'];
        $customtel  = (float)$param['customtel'];
        $usequan    = $param['quanuse']; /*使用优惠券*/
        $count      = $param['count']; /*使用优惠券*/
        $tuantel    = $param['tuantel'];   //团购购买填写手机号
        $userid     = $userLogin->getMemberID();

        $huodongtype = (int)$param['huodongtype'];
        $hid         = (int)$param['hid'];
        //        var_dump($param);die;
        $peerpay    = (int)$param['peerpay'];
        $confirmtype    = (int)$param['confirmtype'];  /*确认类型 1-到店消费(券) 2-送到家*/
        //        $this->param = $param;
        //        return $this->pay();
        if ($buytype == '') {
            $hid = 0;
        }

        if (empty($addressid) && $confirmtype != 1) return array("state" => 200, "info" => $langData['shop'][4][15]);  //请选择收货地址
        if (empty($pros)) return array("state" => 200, "info" => $langData['shop'][4][4]);  //格式错误


        $logicityid = 0;
        if (!empty($addressid)) {

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $addressid");
            $userAddr = $dsql->dsqlOper($archives, "results");

            if ($userAddr && is_array($userAddr)) {
                if (!$userAddr[0]['addrid'] == 0) {
                    $addrName = getParentArr("site_area", $userAddr[0]['addrid']);
                    $addrIdArr = array_reverse(parent_foreach($addrName, "id"));

                    $logicityid = $addrIdArr[1];
                }
            }
        }

        /*查询优惠券*/
        $nowtime      = time();
        $storequanarr = array();
        if (!empty($usequan)) {
            $usequanarr = json_decode($usequan, true);
            if ($buytype != '' && !empty($usequanarr)) return array("state" => 200, "info" => "活动商品不可以用优惠券!");  //格式错误

            foreach ($usequanarr as $index => $quan) {

                $quansql = $dsql->SetQuery("SELECT `id`,`name`,`basic_price`,`promotio`,`promotiotype`,`quantype` shoptype,`ktime`,`etime`,`fid`,`bear` FROM `#@__shop_quanlist` WHERE `id`  ='" . $quan['quanid'] . "' AND `state` = 0");
                $quanres = $dsql->dsqlOper($quansql, "results");


                if (!empty($quanres) && $quan['shopid'] != '' && !array_key_exists($quan['shopid'], $storequanarr)) {

                    $storequanarr[$quan['shopid']]['ktime']        = $quanres[0]['ktime'];
                    $storequanarr[$quan['shopid']]['etime']        = $quanres[0]['etime'];
                    $storequanarr[$quan['shopid']]['basic_price']  = $quanres[0]['basic_price'];
                    $storequanarr[$quan['shopid']]['promotio']     = $quanres[0]['promotio'];
                    $storequanarr[$quan['shopid']]['promotiotype'] = $quanres[0]['promotiotype'];
                    $storequanarr[$quan['shopid']]['shoptype']     = $quanres[0]['shoptype'];
                    $storequanarr[$quan['shopid']]['fid']          = $quanres[0]['fid'];
                    $storequanarr[$quan['shopid']]['name']         = $quanres[0]['name'];
                    $storequanarr[$quan['shopid']]['id']           = $quanres[0]['id'];
                    $storequanarr[$quan['shopid']]['bear']           = $quanres[0]['bear'];

                    if ($quanres[0]['ktime'] >= $nowtime || $quanres[0]['etime'] <= $nowtime) {
                        return array("state" => 200, "info" => "未在该优惠券的使用时间!");  //格式错误
                    }
                } else {
                    return array("state" => 200, "info" => "未找到该优惠券!");  //格式错误
                }
            }
        }

        //收货地址信息
        global $data;
        $data     = "";
        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $addressid");
        $userAddr = $dsql->dsqlOper($archives, "results");
        if (!$userAddr && $confirmtype != 1) return array("state" => 200, "info" => '会员地址库信息不存在或已删除');  //会员地址库信息不存在或已删除
        $addrArr = getParentArr("site_area", $userAddr[0]['addrid']);
        $addrArr = array_reverse(parent_foreach($addrArr, "typename"));
        $addr    = join(" ", $addrArr);
        $address = $addr . $userAddr[0]['address'];
        $person  = $userAddr[0]['person'];
        $mobile  = $userAddr[0]['mobile'];
        $tel     = $userAddr[0]['tel'];
        $lng     = $userAddr[0]['lng'];
        $lat     = $userAddr[0]['lat'];
        $contact = !empty($mobile) ? $mobile . (!empty($tel) ? " / " . $tel : "") : $tel;

        if ($confirmtype != 1 && ($lng == '' || $lat == '')) {
            return array("state" => 200, "info" => "收货地址信息需要更新，请修改收货地址的定位后重新提交！");
        }

        $logistictype = array();
        //获取商品相关信息
        $storeArr = array();


        $pros = explode("|", $pros);

        $proquantype = 0;
        foreach ($pros as $key => $value) {
            
            $huodongtype = 0;
            //pro[0]商品ID，pro[1]规格，pro[2]数量
            $pro = explode(",", $value);

            $this->param = $pro[0];
            $detail      = $this->detail(1);
            if ($confirmtype == 1 && !in_array('1', $detail['typesalesarr'])) {
                return array("state" => 200, "info" => "购物车中含有不是到店消费的商品!");  //格式错误
            }

            if ($detail['protype'] == 1) {
                $proquantype += 1;
            }
            //价格&&库存
            if ($detail['huodonginventory'] <= 0 && $buytype != '') return array("state" => 200, "info" => '活动库存不足！');  //下单失败！ 砍价
            if (($buytype == 'bargain' && $detail['states'] == 3) && !empty($detail['hid']) && !empty($bargainid)) {

                $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `id` = '$bargainid' ");

                $bargainres = $dsql->dsqlOper($bargainsql, "results");

                if (!$bargainres) return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_3');  //下单失败！ 砍价

                $price = $bargainres[0]['state'] == 2 ? $bargainres[0]['gmoney'] : $bargainres[0]['gnowmoney'];
                $huodongtype = 3;

                if ($directbuy == 1) {
                    global $customshopbargainingnomoney; /*未到底价是否可以下单*/

                    if ($customshopbargainingnomoney == 1) return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_9');  //下单失败！ 砍价

                }
            } elseif ($buytype == 'pintuan' && $ordertype != 'zjbuy' && !empty($detail['hid'])) {

                $price = $detail['huodongprice'];
                if ($detail['pinspecification']) {

                    foreach ($detail['pinspecification'] as $k => $v) {

                        if ($v['id'] == $pro[1]) {

                            $price = $v['price'][1];
                        }
                    }
                }
                $huodongtype = 4;
            } elseif (($buytype == 'miaosha' ||  $detail['states'] == 2) && !empty($detail['hid'])) {

                $huodongtype = 2;
                $price       = $detail['huodongprice'];
                if ($detail['pinspecification']) {
                    foreach ($detail['pinspecification'] as $k => $v) {

                        if ($v['id'] == $pro[1]) {
                            $price = $v['price'][1];
                        }
                    }
                }
            } elseif (($buytype == 'qianggou' ||  $detail['states'] == 1) && !empty($detail['hid'])) {
                $huodongtype = 1;
                $price       = $detail['huodongprice'];
                if ($detail['pinspecification']) {
                    foreach ($detail['pinspecification'] as $k => $v) {

                        if ($v['id'] == $pro[1]) {
                            $price = $v['price'][1];
                        }
                    }
                }
            } else {
                $price = $detail['price'];
                if ($detail['specification']) {
                    foreach ($detail['specification'] as $k => $v) {

                        if ($pro[1] == $v['id']) {
                            $skuDetail = $this->getSkuDetail($v['id']);
                            $price = $skuDetail['price'];
                        }

                        // $_spe = hnSortArr(explode('-', $pro[1]));
                        // //数字、字母、中文混合排序
                        // // collator_sort(collator_create('zh_CN'),$_spe);
                        // $_spe = join('-', $_spe);

                        // if ($v['spe'] == $_spe) {
                        //     $price = $v['price'][1];
                        // }
                    }
                }
            }
            $juli =  oldgetDistance($lng, $lat, $detail['store']['lng'], $detail['store']['lat']) / 1000;
            if ($confirmtype == 2 && $detail['typesales'] === '1,2') {
                if ($detail['blogisticId'] && !$detail['logisticId']) {
                    $Sql = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE 1=1 AND `id` = '" . $detail['blogisticId'] . "'");
                    $Res = $dsql->dsqlOper($Sql, "results");
                    $range_delivery_fee_value = $Res[0]['range_delivery_fee_value'] != '' ? unserialize($Res[0]['range_delivery_fee_value']) : array();
                    if ($Res) {
                        $delivery_fee_mode = (int)$Res[0]['delivery_fee_mode'];
                    }

                    //固定配送费，验证起送价是否满足条件
                    if ($delivery_fee_mode == 0) {
                        $basicprice = (float)$Res[0]['basicprice'];
                        $express_juli = (float)$Res[0]['express_juli'];
                        if ($express_juli < $juli) {
                            return array("state" => 200, "info" => "超出卖家最大配送范围" . $express_juli . "公里!");
                        }
                        //起送价条件，下面的合并计算运费方法中会统一验证，这里的验证是错误的，没有将一个商家的多个商品进行合并
                        if ($basicprice > $price * $pro[2]) {
                            // return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }

                    //按距离，验证距离和起送价是否满足条件
                    if ($delivery_fee_mode == 1) {
                        $basicprice = '';
                        foreach ($range_delivery_fee_value as $key => $value) {
                            if ($value[0] < $juli && $value[1] > $juli) {
                                $basicprice = $value[3];
                            }
                        }

                        //如果不是数字类型，说明没有匹配到，不在商家的配送范围
                        if (!is_numeric($basicprice)) {
                            return array("state" => 200, "info" => "超出卖家配送范围请选择到店消费!");
                        }

                        //起送价条件，下面的合并计算运费方法中会统一验证，这里的验证是错误的，没有将一个商家的多个商品进行合并
                        if ($basicprice > $price * $pro[2]) {
                            // return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }
                }
            }
            if ($confirmtype == 2 && $detail['typesales'] === '2') {
                if ($detail['blogisticId'] && !$detail['logisticId']) {
                    $Sql = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE 1=1 AND `id` = '" . $detail['blogisticId'] . "'");
                    $Res = $dsql->dsqlOper($Sql, "results");
                    $range_delivery_fee_value = $Res[0]['range_delivery_fee_value'] != '' ? unserialize($Res[0]['range_delivery_fee_value']) : array();
                    if ($Res) {
                        $delivery_fee_mode = (int)$Res[0]['delivery_fee_mode'];
                    }

                    //固定配送费，验证起送价是否满足条件
                    if ($delivery_fee_mode == 0) {
                        $basicprice = (float)$Res[0]['basicprice'];
                        $express_juli = (float)$Res[0]['express_juli'];
                        if ($express_juli < $juli) {
                            return array("state" => 200, "info" => "超出卖家最大配送范围" . $express_juli . "公里!");
                        }
                        //起送价条件，下面的合并计算运费方法中会统一验证，这里的验证是错误的，没有将一个商家的多个商品进行合并
                        if ($basicprice > $price * $pro[2]) {
                            // return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }

                    //按距离，验证距离和起送价是否满足条件
                    if ($delivery_fee_mode == 1) {
                        $basicprice = '';
                        foreach ($range_delivery_fee_value as $key => $value) {
                            if ($value[0] < $juli && $value[1] > $juli) {
                                $basicprice = $value[3];
                            }
                        }

                        //如果不是数字类型，说明没有匹配到，不在商家的配送范围
                        if (!is_numeric($basicprice)) {
                            return array("state" => 200, "info" => "超出卖家配送范围请选择到店消费!");
                        }

                        //起送价条件，下面的合并计算运费方法中会统一验证，这里的验证是错误的，没有将一个商家的多个商品进行合并
                        if ($basicprice > $price * $pro[2]) {
                            // return array("state" => 200, "info" => "订单金额未达到商家配送要求，起送价为$basicprice" . echoCurrency(array('type' => 'short')) . "！");
                        }
                    }
                }
            }
            //物流
            $logisticarr = getLogisticPrice($detail['devspecification'], $price, $pro[2], $detail['volume'], $detail['weight'], $addressid, $pro[0], $juli, 1);
            $logistic    = $logisticarr['logistic'];
            $logistictype = $logisticarr['logistictype'];
            $logisticErrorArr[$detail['store']['id']]    = $logisticarr['logistic_errMsg'];

            if(is_array($logistictype)){
                array_push($logistictype, $logisticarr['logistictype']);
            }
            if ($confirmtype == 2 && $logisticarr['logistictype'] == 1) {
                if ($detail['blogisticId']) {
                    $Sql = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE 1=1 AND `id` = '" . $detail['blogisticId'] . "'");
                    $Res = $dsql->dsqlOper($Sql, "results");
                    if ($Res) {
                        $exjuli = $Res[0]['express_juli'];
                        if ($exjuli > 0 && $juli >  $exjuli) {
                            return array("state" => 200, "info" => "超出卖家配送范围请选择收货地址!");
                        }
                    }
                }
            }
            if ($confirmtype == 1 && $detail['qtimetype']  == 2 && $detail['quantime'] <= $nowtime) {
                return array("state" => 200, "info" => "指定团购券有效期已过!");
            }
            //            if($detail['protype'] ==1){
            if ($confirmtype == 1 && $hid == 0) {
                $logistic = 0;

                $contact = $customtel;
            }
            //规格名
            $speInfo = array();
            $speArr  = explode("-", $pro[1]);
            foreach ($speArr as $k => $v) {
                foreach ($detail['specificationArr'] as $kk => $vv) {
                    $typename = $vv['typename'];
                    foreach ($vv['item'] as $kkk => $vvv) {
                        if ($vvv['id'] == $v) {
                            array_push($speInfo, $typename . "：" . $vvv['name']);
                        }
                    }
                }
            }

            $storeArr[$key]['proid']      = $pro[0];
            $storeArr[$key]['speid']      = $pro[1];
            $storeArr[$key]['specation']  = join("$$$", $speInfo);
            $storeArr[$key]['count']      = $pro[2];
            $storeArr[$key]['volume']     = $detail['volume'];
            $storeArr[$key]['weight']     = $detail['weight'];
            $storeArr[$key]['price']      = $price;
            $storeArr[$key]['logistic']   = $logistic;
            $storeArr[$key]['protype']    = $detail['protype'];
            $storeArr[$key]['logisticId'] = $detail['logisticId'];
            $storeArr[$key]['blogisticId'] = $detail['blogisticId'];
            $storeArr[$key]['typesales'] = $detail['typesales'];
            $storeArr[$key]['logistictype'] = $logistictype;
            $storeArr[$key]['store']      = (int)$detail['store']['id'];
            $storeArr[$key]['huodongtype'] = (int)$huodongtype;
        }
        //
        //        if($proquantype!=0 && count($pros) != $proquantype){
        //
        //            return array("state" => 200, "info" => "订单中含有多种类型商品下单失败!");  //格式错误
        //        }

        if ($confirmtype == 1 && !empty($storeQuanarr)) {

            return array("state" => 200, "info" => "券类型的商品不可以使用优惠券!");  //格式错误
        }
        $orderList = array();

        $auth_delivery_isCount = 0;
        //对相同商铺的商品分组，对相同商铺的商品生成一个订单号
        $i = 0;
        global $cfg_shopFee;
        foreach ($storeArr as $k => $v) {

            //是否已经存在
            $h = 0;

            //到店消费的不需要合并订单
            if ($confirmtype != 1) {
                foreach ($orderList as $key => $value) {
                    if ($value['store'] == $v['store']) {
                        $h = 1;
                    }
                }
            }

            $data = array(
                "id"         => $v['proid'],
                "proid"      => $v['proid'],
                "speid"      => $v['speid'],
                "specation"  => $v['specation'],
                "count"      => $v['count'],
                "volume"     => $v['volume'],
                "weight"     => $v['weight'],
                "orderid"    => $v['orderid'],
                "price"      => $v['price'],
                "logistic"   => $v['logistic'],
                "logisticId" => $v['logisticId'],
                "blogisticId" => $v['blogisticId'],
                "protype"    => $v['protype'],
                "typesales"  => $v['typesales'],
                "logistictype"  => $v['logistictype'],  //用计算运费方法返回的值
                "huodongtype" => $v['huodongtype'],  //是否有活动
                // "logistictype" => !strstr($v['typesales'], 3) && $confirmtype == 2 ? 1 : $confirmtype  //如果不支持平台配置，confirmtype重置为1，用于合并计算运费中的规则
            );

            //如果不存在则新建一级
            if (!$h) {
                $orderList[$i]['store'] = $v['store'];
                $orderList[$i]['sid']   = $v['store'];
                $orderList[$i]['lng']   = $detail['store']['lng'];
                $orderList[$i]['lat']   = $detail['store']['lat'];
                $orderList[$i]['huodongtype'] = (int)$v['huodongtype'];
                $orderList[$i]['list']  = array($data);

                //查找分店信息
                $this->param             = array();
                $this->param['branchid'] = $v['store'];
                $this->param['lng']      = $lng;
                $this->param['lat']      = $lat;
                $this->param['orderby']  = 3;  //按距离排序
                $branchList              = $this->storeBranch();
                if ($branchList && $branchList['list'] && count($branchList['list']) > 0) {
                    $branchInfo = $branchList['list'][0];

                    //把距离最近的分站分配给
                    $branchid                  = $branchInfo['id'];
                    $orderList[$i]['branchid'] = $branchid;
                }

                $i++;
            } else {

                //如果已存在则push
                foreach ($orderList as $key => $value) {
                    if ($value['store'] == $v['store']) {
                        array_push($orderList[$key]['list'], $data);
                    }
                }
            }
        }
        $logistictype =  serialize($logistictype);
        //合并计算运费，到店消费不需要计算运费
        if ($confirmtype != 1) {
            $orderLogisticArr = calculationOrderLogistic($orderList, array('0' => $logicityid), $addressid, array("returnType" => 1));
            $orderLogistic = $orderLogisticArr['data'];
            $orderLogisticError = $orderLogisticArr['error'];
            //覆盖错误
            foreach ($orderLogisticError as $errKey => $errValue) {
                $logisticErrorArr[$errKey] = $errValue;
            }
            //如果有错误，终止
            foreach ($logisticErrorArr as $errItem) {
                if ($errItem) {
                    return array("state" => 200, "info" => $errItem);
                }
            }
            //        if($proquantype == count($pros) ){
            if ($confirmtype == 1  || $huodong) {
                $orderLogistic = array('0' => '0');
            }
            foreach ($orderLogistic as $key => $val) {
                $val = is_numeric($val) && $val > 0 ? (float)$val : 0;
                foreach ($orderList as $k => $v) {
                    if ($v['sid'] == $key) {
                        $orderList[$k]['logistic'] = $val;
                    }
                }
            }
        }



        // 会员优惠信息
        $privilege   = array();
        $aus_courier = false;
        $userinfo    = $userLogin->getMemberInfo();

        if ($userinfo['level']) {
            $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $privilege = unserialize($ret[0]['privilege']);

                // // 指定骑手 - 这里只判断指定骑手特权，生日特权要在每个店铺订单中判断：订单总额
                // $value = $privilege['qishou'];
                // if($value['type'] == "1"){
                // 	$aus_courier = true;
                // }
            }
        }

        $opArr       = array();
        $ordernumArr = array();

        //如果是支付页面只需要更新订单信息
        if (!empty($ordernum)) {

            array_push($ordernumArr, $ordernum);

            foreach ($orderList as $key => $value) {

                $logistic = $value['logistic'];

                //更新主表
                $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `paytype` = '$paytype', `logistic` = '$logistic', `payprice` = '$payTotalAmount', `people` = '$person', `address` = '$address', `contact` = '$contact',`tuantel` = '$tuantel',`note` = '$note', `branchid` = '$branchid', `lng` = '$lng', `lat` = '$lat'");
                $dsql->dsqlOper($sql, "update");

                $order_amount = $logistic;  //订单总金额

                //更新订单商品价格及运费为最新价格
                foreach ($value['list'] as $k => $v) {

                    //获取订单商品ID
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order_product` WHERE `orderid` = $orderid AND `proid` = " . $v['proid'] . " AND `speid` = '" . $v['speid'] . "' AND `count` = " . $v['count']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $pid = $ret[0]['id'];

                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `price` = " . $v['price'] . ", `logistic` = " . $v['logistic'] . " WHERE `id` = " . $pid);
                    $dsql->dsqlOper($sql, "update");

                    array_push($opArr, array(
                        "id"       => $pid,
                        "price"    => $v['price'],
                        "count"    => $v['count'],
                        "logistic" => $v['logistic'],
                        "ordernum" => $ordernum
                    ));

                    $order_amount += $v['price'] * $v['count'];
                }

                //更新订单总金额（包含运费）
                $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `amount` = '$order_amount', `balance` = 0 WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($sql, "update");
            }

            //新订单
        } else {

            $shopTotalPrice = 0;
            //每个商铺生成一个订单
            $userquanid = 0;
            foreach ($orderList as $key => $value) {

                $allusemoney = $quanmoney = $foodquanmoney = $shopquanmoney = 0; /*券使用需要满足的金额*/

                $auth_priceinfo  = array();
                $auth_shop_price = $auth_delivery_price = $userquanid = 0;
                $delivery_fee    = $value['logistic'];
                

                // if ($userinfo['level'] && $privilege && $buytype != 'bargain' && $buytype != 'pintuan' && $buytype != 'miaosha'&& $buytype != 'qianggou') {
                if ($userinfo['level'] && $privilege) {

                    // 获取本订单商品总额
                    $shopOrderPrice = [];
                    // 商品折扣
                    $auth_shop_discount = 10;
                    foreach ($value['list'] as $k => $v) {
                        $auth = $privilege['shop'];
                        if ($auth > 0 && $auth < 10 && !$v['huodongtype']) {
                            $_authPrice = $v['price'] * $v['count'];
                            $shopOrderPrice[] = (float)sprintf("%.2f", $_authPrice * (1 - $auth / 10));
                        }
                    }

                    //会员优惠金额
                    $auth_shop_price = 0;
                    if($shopOrderPrice){
                        foreach($shopOrderPrice as $__k => $__v){
                            $auth_shop_price += $__v;
                        }
                    }

                    // 配送费
                    $auth = $privilege['delivery'];
                    if ($delivery_fee) {
                        $ok = false;
                        // 打折
                        if ($auth[0]['type'] == 'discount') {
                            if ($auth[0]['val'] > 0 && $auth[0]['val'] < 10) {
                                $ok = true;
                            }
                            // 计次
                        } elseif ($auth[0]['type'] == 'count') {
                            $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                            if ($auth[0]['val'] == 0 || ($auth[0]['val'] > 0 && $userinfo['delivery_count'] - $key > 0)) {
                                $auth_delivery_isCount++;
                                $ok = true;
                            }
                        }

                        if ($ok) {
                            $auth_delivery_price = $auth[0]['type'] == 'count' ? $delivery_fee : $delivery_fee * (1 - $auth[0]['val'] / 10);

                            if($auth_delivery_price >= 0.01){
                                array_push($auth_priceinfo, array(
                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_peisong",
                                    "body"   => $userinfo['levelName'] . "特权-配送费优惠",
                                    "amount" => sprintf("%.2f", $auth_delivery_price)
                                ));
                            }
                        }
                    }

                    // 商品,并且不是生日
                    // if(!$auth_shop_price){
                    
                    // if(($value['huodongtype'] == 0 || $value['huodongtype'] == 3 || $value['huodongtype'] == 4) && $value['huodongtype'] != 1 && $value['huodongtype'] != 2){
                    if($value['huodongtype'] == 0){
                        $auth = $privilege['shop'];
                        if ($auth > 0 && $auth < 10) {
                            // $auth_shop_price = (float)sprintf("%.2f", $shopOrderPrice * (1 - $auth / 10));

                            if($auth_shop_price >= 0.01){
                                array_push($auth_priceinfo, array(
                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_shop",
                                    "body"   => $userinfo['levelName'] . "特权-商品原价优惠",
                                    "amount" => sprintf("%.2f", $auth_shop_price)
                                ));
                            }
                        }
                    }
                    // }

                }

                $pcount = count($value['list']);

                $protypepe = 0;

                //                $protypearr = array_column($value['list'],'protype');
                //                if(in_array('1',$protypearr)){
                if ($confirmtype == 1) {
                    $protypepe = 1;
                }
                //                // 会员优惠计入每个商品
                //                foreach ($value['list'] as $k => $v) {
                //                    $avg                           = sprintf("%.2f", $auth_shop_price / $pcount);
                //                    $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                //                    //配送费
                //                    $av                           = sprintf("%.2f", $auth_delivery_price / $pcount);
                //                    $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($auth_delivery_price - $av * ($pcount - 1));
                //                }


                /*使用优惠券*/

                if (!empty($storequanarr[$value['sid']])) {

                    $storequan = $storequanarr[$value['sid']];
                    foreach ($value['list'] as $k => $v) {
                        if ($storequan['shoptype'] == 1) {
                            $fidarr = explode(',', $storequan['fid']);
                            if (in_array($v['proid'], $fidarr)) {
                                $quanmoney += $v['price'] * $v['count'];
                            }
                        } else {
                            $quanmoney += $v['price'] * $v['count'];
                        }
                    }
                    $quanmoney -= $auth_shop_price;  //减掉会员优惠
                    if ($storequan['basic_price'] <= $quanmoney) {

                        $usequanmoney = 0;
                        if ($storequan['promotiotype'] == 0) {
                            $usequanmoney = (float)$storequan['promotio'];
                        } else {
                            $usequanmoney = (float)sprintf("%.2f", $quanmoney - ($quanmoney * $storequan['promotio'] / 10));
                        }

                        //优惠券金额如果大于订单金额，实际扣除金额为订单金额
                        $usequanmoney = $usequanmoney > $quanmoney ? $quanmoney : $usequanmoney;

                        if($usequanmoney >= 0.01){
                            array_push($auth_priceinfo, array(
                                "type"     => "quan",
                                "body"     => "使用优惠券",
                                "quanname" => $storequan['name'],
                                "qid"      => $storequan['id'],
                                "bear"      => $storequan['bear'],
                                "amount"   => sprintf("%.2f", $usequanmoney)
                            ));
                        }

                        $userquanid = $storequan['id'];
                        $allusemoney += $usequanmoney;
                    }
                }

                $priceinfo = serialize($auth_priceinfo);


                // 会员优惠计入每个商品
                if ($pcount < 2) {
                    foreach ($value['list'] as $k => $v) {
                        $avg = sprintf("%.2f", $auth_shop_price / $pcount);
                        $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                        //                        $avg                           = sprintf("%.2f", ($v['price'] * $v['count']) / $pcount);
                        //                        $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : (($v['price'] * $v['count']) - $avg * ($pcount - 1));
                        $av = sprintf("%.2f", $auth_delivery_price / $pcount);
                        //                        $av                           = sprintf("%.2f", ($v['logistic'] / $pcount));
                        $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($auth_delivery_price - $av * ($pcount - 1));

                        $youhui = sprintf("%.2f", $allusemoney / $pcount);
                        $value['list'][$k]['auth_quan'] = $k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                    }
                } else {
                    foreach ($value['list'] as $k => $v) {
                        //                    $avg                           = sprintf("%.2f", $auth_shop_price / $pcount);
                        //                    $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : ($auth_shop_price - $avg * ($pcount - 1));
                        $avg = sprintf("%.2f", ($v['price'] * $v['count']) / $pcount);
                        $value['list'][$k]['auth_hui'] = $k + 1 < $pcount ? $avg : (($v['price'] * $v['count']) - $avg * ($pcount - 1));
                        //                    $av                           = sprintf("%.2f", $auth_delivery_price / $pcount);
                        $av = sprintf("%.2f", ($v['logistic'] / $pcount));
                        $value['list'][$k]['auth_peisong'] = $k + 1 < $pcount ? $av : ($v['logistic'] - $av * ($pcount - 1));

                        $youhui = sprintf("%.2f", $allusemoney / $pcount);
                        $value['list'][$k]['auth_quan'] = $k + 1 < $pcount ? $youhui : ($allusemoney - $youhui * ($pcount - 1));
                    }
                }



                $logistic = (float)$value['logistic'];
                //新订单
                $newOrdernum = create_ordernum();
                $tr          = true;

                //新增主表
                $store    = $value["store"];
                $no       = $note[$store];
                $branchid = (int)$value['branchid'];

                $storefeesql = $dsql->SetQuery("SELECT `shopFee` FROM `#@__shop_store` WHERE `id` = '$store'");

                $storefeeres = $dsql->dsqlOper($storefeesql, "results");


                if ($storefeeres && is_array($storefeeres)) {
                    if (!empty($storefeeres[0]['shopFee'])) {
                        $cfg_shopFee = $storefeeres[0]['shopFee'];
                    }
                }
                //                if($confirmtype == 2) {
                //                    $sql = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `logistic`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`tuantel`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic', '$payTotalAmount', '$person', '$address', '$contact', '$no', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$userquanid','$cfg_shopFee','$protypepe','$tuantel')");
                //                    $oid = $dsql->dsqlOper($sql, "lastid");
                //
                //                    array_push($ordernumArr, $newOrdernum);
                //                }
                //                if ($oid || $confirmtype == 1) {
                //                    if ($confirmtype == 1) {
                // if ($proquantype != 0) {

                //                    $sql = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstaterdate`, `orde`, `paytype`, `logistic`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`logistictype`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic', '$payTotalAmount', '$person', '$address', '$contact', '$no', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$usequanid','$cfg_shopFee','$protypepe','$logistictype')");
                $sql = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `logistic`, `amount`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`tuantel`,`confirmtype`,`logistictype`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic', '$payTotalAmount', '$payTotalAmount', '$person', '$address', '$contact', '$no', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$userquanid','$cfg_shopFee','$protypepe','$tuantel','$confirmtype','$logistictype')");
                $oid = $dsql->dsqlOper($sql, "lastid");

                // }



                if ($oid) {


                    if ($huodongtype == '3') {

                        $bargainsql = $dsql->SetQuery("SELECT `oid` FROM `#@__shop_bargaining` WHERE `id` = '$bargainid'");

                        $bargainres = $dsql->dsqlOper($bargainsql, "results");

                        if ($bargainres && is_array($bargainres)) {

                            $archives = $dsql->SetQuery("DELETE FROM `#@__shop_order` WHERE `id` = " . $bargainres[0]['oid']);
                            $dsql->dsqlOper($archives, "update");
                        }

                        if ($confirmtype == 2) {
                            $updatesql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `oid` = '$oid' WHERE `id` = '$bargainid'");

                            $updateres = $dsql->dsqlOper($updatesql, "results");
                        }
                    } elseif ($huodongtype == '4') {

                        $pubdate = GetMkTime(time());
                        $_detail_etime = (int)$detail['etime'];  //活动结束时间
                        $enddate = $pubdate + $detail['pintime'] * 3600;  //拼团结束时间，当前时间加上设置的时长

                        if($enddate > $_detail_etime){
                            $enddate = $_detail_etime;
                        }

                        $pintype = 0;
                        if (empty($pinid)) {

                            $pintype = 1;
                            $sql     = $dsql->SetQuery("INSERT INTO `#@__shop_tuanpin` (`oid`, `proid`, `userid`, `pubdate`, `enddate`, `state`,`hid`,`user`) VALUES ('$oid','" . $pro[0] . "', '$userid', '$pubdate', '$enddate', '0','$hid','$userid')");
                            $pid     = $dsql->dsqlOper($sql, "lastid");
                            if (!is_numeric($pid)) {
                                return array("state" => 200, "info" => '下单失败');
                            }
                            $pinid = $pid;
                        } else { //检查拼团状态

                            $sql = $dsql->SetQuery("SELECT `people`, `state`, `userid`, `enddate`, `user` FROM `#@__shop_tuanpin` WHERE `id` = $pinid AND `state` > 0");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if (!$ret) {
                                return array("state" => 200, "info" => '该团不存在，正在开新团|201');
                            } else {
                                $ret  = $ret[0];
                                $user = $ret['user'];
                                if ($ret['state'] == 2) {
                                    return array("state" => 200, "info" => '该团已失效，请开新团');
                                } elseif ($ret['userid'] == $userid) {
                                    return array("state" => 200, "info" => '您已经是该团创建人');
                                } elseif ($ret['state'] == 3) {
                                    //die("该团成员已满");
                                    return array("state" => 200, "info" => '该团成员已满');
                                } elseif ($ret['enddate'] < $pubdate) {
                                    return array("state" => 200, "info" => '该团已失效，正在开新团|201');
                                }
                                // 验证是否已参团
                                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order` WHERE `userid` = $userid AND `pinid` = $pinid AND `orderstate` != 7 and `orderstate` != 10");
                                $ret = $dsql->dsqlOper($sql, "results");
                                if ($ret) {
                                    return array("state" => 200, "info" => '您已经是该团成员');
                                } else { //如果没有就更新
                                    if (empty($user)) {
                                        $sql = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET user = $userid WHERE `id` = '$pinid'");
                                    } else {
                                        $userN    = $user . ',' . $userid;
                                        $userNarr = explode(',', $userN);
                                        $userNarr = array_unique($userNarr);
                                        $userNarr = implode(',', $userNarr);
                                        $sql      = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET user =  '$userNarr' WHERE `id` = '$pinid'");
                                    }
                                    $dsql->dsqlOper($sql, "update");
                                }
                            }
                        }
                    }

                    //                    $sql         = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `logistic`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`logistictype`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic','$payTotalAmount', '$person', '$address', '$contact', '$no', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$usequanid','$cfg_shopFee','$protypepe','$logistictype')");
                    // if ($proquantype == 0) {
                    //      $sql = $dsql->SetQuery("INSERT INTO `#@__shop_order` (`ordernum`, `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `logistic`, `payprice`, `people`, `address`, `contact`, `note`, `tab`, `branchid`, `lng`, `lat`,`priceinfo`,`huodongtype`,`hid`,`usequan`,`shopFee`,`protype`,`tuantel`,`logistictype`) VALUES ('$newOrdernum', '$store', '$userid', 0, " . GetMkTime(time()) . ", '$paytype', '$logistic', '$payTotalAmount', '$person', '$address', '$contact', '$no', 'shop', '$branchid', '$lng', '$lat','$priceinfo','$huodongtype','$hid','$userquanid','$cfg_shopFee','$protypepe','$tuantel','$logistictype')");

                    //        $oid = $dsql->dsqlOper($sql, "lastid");
                    // }


                    array_push($ordernumArr, $newOrdernum);

                    $order_amount = $logistic;  //订单总金额
                    //新增订单产品表
                    foreach ($value['list'] as $k => $v) {
                        if ($pinid && $k == 0) {

                            $updatetuanpinsql = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET `oid` = '$oid' WHERE `id` = '$pinid'");
                            $dsql->dsqlOper($updatetuanpinsql, "update");
                        } elseif ($huodongtype == 3 && $k == 0) {

                            $updatesql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `oid` = '$oid' WHERE `id` = '$bargainid'");

                            $updateres = $dsql->dsqlOper($updatesql, "results");
                        }

                        //                            array_push($ordernumArr, $newOrdernum);
                        //                        }
                        if($v['speid']){
                            $order_product_specation = $this->getOrderProductSpecation($v['speid']);
                        }else{
                            $order_product_specation = '';
                        }
                        if (!is_numeric($v['logistic']) || is_nan($v['logistic'])) {
                            $v['logistic'] = 0.00;
                        }
                        $archives = $dsql->SetQuery("INSERT INTO `#@__shop_order_product` (`orderid`, `proid`, `speid`, `specation`, `price`, `count`, `logistic`) VALUES ('$oid', " . $v['proid'] . ", '" . $v['speid'] . "', '" . $order_product_specation . "', " . $v['price'] . ", " . $v['count'] . ", " . $v['logistic'] . ")");
                        $opid     = $dsql->dsqlOper($archives, "lastid");

                        if (!is_numeric($opid)) {
                            $tr = false;
                        } else {
                            //将新的订单产品组合，以供分配使用的积分或余额
                            array_push($opArr, array(
                                "id"       => $opid,
                                "price"    => $v['price'], //shop_order_product表使用(原价减掉优惠不减统计会有问题)
                                "count"    => $v['count'],
                                "auth_hui"    => $v['auth_hui'],
                                "logistic" => $v['logistic'],
                                "auth_peisong" => $v['auth_peisong'],
                                "auth_quan" => $v['auth_quan'],
                                "ordernum" => $newOrdernum
                            ));
                            $order_amount += $v['price'] * $v['count'];
                        }
                        //下单减库存
                        $sql = $dsql->SetQuery("SELECT `specification`, `inventoryCount` FROM `#@__shop_product` WHERE `id` = " . $v['proid']);
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {

                            $inventoryCount = (int)$ret[0]['inventoryCount'];

                            if ($inventoryCount == 0) {
                                //更新已购买数量
                                $sql = $dsql->SetQuery("UPDATE `#@__shop_product` SET `sales` = `sales` + " . $v['count'] . ", `inventory` = `inventory` - " . $v['count'] . " WHERE `id` = " . $v['proid']);

                                if ($huodongtype != 0) {

                                    $sql = $dsql->SetQuery("UPDATE `#@__shop_huodongsign` SET `huodongsales` = `huodongsales` + " . $v['count'] . ", `huodonginventory` = `huodonginventory` - " . $v['count'] . " WHERE `id` = " . $hid);
                                }
                                $dsql->dsqlOper($sql, "update");

                                if ($v['speid']) {
                                    $sql = $dsql::SetQuery("update `#@__shop_good_sku` set `stock`=`stock`-{$v['count']} where `id`={$v['speid']}");
                                    $dsql->update($sql);
                                }
                            }
                        }
                    }
                    $pinstr = '';

                    if ($huodongtype == '4' && !empty($detail['hid'])) {

                        $pinstr = " ,`pinid` = '" . $pinid . "',`pintype`  = '" . $pintype . "'";
                    }
                    //查询会员信息
                    // $userinfo  = $userLogin->getMemberInfo();
                    $userpoint = $userinfo['point'];
                    $order_amount = $order_amount - $auth_delivery_price - $auth_shop_price - $allusemoney;
                    $pricepoint = 0;   //积分
                    if ($usePinput == 1) {
                        $point_price = getJifen('shop', $order_amount);   //能抵扣多少钱
                        $pricepoint = $point_price * $cfg_pointRatio;      // 能转换多少钱
                        if ($pricepoint >= $userpoint) {
                            $pricepoint = $userpoint;
                            // $xupoint += $pricepoint;
                        }
                        // $xupoint += $pricepoint;
                        // if ($xupoint >= $userpoint) {
                        //     $chao = $userpoint - $xupoint;
                        //     $pricepoint = $pricepoint + $chao;
                        // }

                    }


                    //更新订单总金额（包含运费）
                    $pricepoint = (float)$pricepoint;
                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `amount` = '$order_amount',`point` = '$pricepoint',`balance` = 0 $pinstr WHERE `id` = '$oid'");
                    $dsql->dsqlOper($sql, "update");
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_1');  //下单失败！
                }

                if (!$tr) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][174] . '_2');  //下单失败！
                }
            }
        }

        // 会员特权，配送费优惠次数-1
        // if ($auth_delivery_isCount) {
        //     $sql = $dsql->SetQuery("UPDATE `#@__member` SET `delivery_count` = `delivery_count` - $auth_delivery_isCount WHERE `id` = $userid");
        //     $dsql->dsqlOper($sql, "update");
        // }

        //如果有使用积分或余额则更新订单内容的价格信息
        if (($usePinput) || ($useBalance && !empty($balance))) {
            //            $pointMoney   = $point / $cfg_pointRatio;
            $balanceMoney = $balance;

            foreach ($opArr as $key => $value) {

                // $oprice = $value['price'] * $value['count'] + $value['logistic'];  //单个订单总价 = 单价 * 数量
                // var_dump($value['price'],$value['count'],$value['logistic'],$value['auth_hui'],$value['auth_quan'],$value['auth_peisong']);
                $oprice = sprintf("%.2f", $value['price'] * $value['count'] + $value['logistic'] - $value['auth_hui'] - $value['auth_quan'] - $value['auth_peisong']);

                $usePointMoney   = 0;
                $useBalanceMoney = 0;

                $order_point   = 0;
                $order_balance = 0;

                //查询订单运费
                $order_logistic = 0;
                $sql = $dsql->SetQuery("SELECT `logistic`,`priceinfo`,`point` FROM `#@__shop_order` WHERE `ordernum` = '" . $value['ordernum'] . "'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $order_logistic = $ret[0]['logistic'];

                    $yhlogistic = unserialize($ret[0]['priceinfo']);
                    if ($yhlogistic) {
                        foreach ($yhlogistic as $j => $l) {
                            if ($l['type'] == "auth_peisong") {
                                $order_logistic -= $l['amount'];
                            }
                        }
                    }
                }
                // if ($ret) {
                // $order_logistic = $ret[0]['logistic'];
                // }
                if ($ret[0]['point'] > 0) {
                    $yuanprice = sprintf("%.2f", $oprice);
                    $point_order = $ret[0]['point'];
                    $point  = getJifen('shop', $yuanprice) * $cfg_pointRatio;  //积分
                    if ($point > $userpoint) {
                        $point = $userpoint;
                    }
                    $pointMoney =  $point / $cfg_pointRatio;
                    $payprice = sprintf("%.2f", $yuanprice  - $pointMoney);
                } else {
                    $point = $point_order = 0;
                    $payprice = $yuanprice = $oprice;
                }

                $pointMoney_ = $usePointMoney * $cfg_pointRatio;
                $archives = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `point` = '$point', `balance` = '$payprice', `payprice` = '$yuanprice' WHERE `id` = " . $value['id']);
                $dsql->dsqlOper($archives, "update");

                //更新整个订单的支付信息
                $order_pointt   = $pointMoney_ + $order_point * $cfg_pointRatio;
                $order_balance  += $payprice;
                // $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `balance` = '$order_balance', `point` = '$point_order' WHERE `ordernum` = '" . $value['ordernum'] . "'");
                // $dsql->dsqlOper($sql, "update");
            }
            //如果没有使用积分或余额，重置积分&余额等价格信息
        } else {

            foreach ($opArr as $key => $value) {
                $payprice = $value['price'] * $value['count'];
                $archives = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `point` = '0', `balance` = '0', `payprice` = '$payprice' WHERE `id` = " . $value['id']);
                $dsql->dsqlOper($archives, "update");
            }
        }


        //1.如果需要支付的金额小于等于0，表示会员使用积分或余额已经付清了，不需要另外去支付
        //2.这种情况直接更新订单状态，并跳转至支付成功页即可
        //3.对会员的积分和余额进行扣除操作
        if ($peerpay == 1) {
            $param = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "daipay",
                "param"    => "module=shop&confirmtype=" . $confirmtype . "&ordernum=" . join(",", $ordernumArr),

            );
            $url   = getUrlPath($param);

            return $url;
        }
        if ($payTotalAmount <= 0) {

            $date    = GetMkTime(time());
            $paytype = array();

            //扣除会员账户积分和余额
            foreach ($opArr as $key => $value) {

                //查询订单信息
                $archives = $dsql->SetQuery("SELECT `point`, `balance` FROM `#@__shop_order_product` WHERE `id` = " . $value['id']);
                $results  = $dsql->dsqlOper($archives, "results");
                $res      = $results[0];

                $upoint   = $res['point'];    //使用的积分
                $ubalance = $res['balance'];  //使用的余额
                // $ordernum = $ret['ordernum']; //订单号

                //扣除会员积分
                if (!empty($upoint) && $upoint > 0) {
                    // $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - '$upoint' WHERE `id` = '$userid'");
                    // $dsql->dsqlOper($archives, "update");
                    //
                    // //保存操作日志
                    // $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$upoint', '支付商城订单：$ordernum', '$date')");
                    // $dsql->dsqlOper($archives, "update");

                    $paytype[] = "point";
                }

                //扣除会员余额
                if (!empty($ubalance) && $ubalance > 0) {
                    // $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$ubalance' WHERE `id` = '$userid'");
                    // $dsql->dsqlOper($archives, "update");
                    //
                    // //保存操作日志
                    // $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$ubalance', '支付商城订单：$ordernum', '$date')");
                    // $dsql->dsqlOper($archives, "update");

                    $paytype[] = "money";
                }
            }

            $ordernumArr = join(",", $ordernumArr);
            $paytype     = array_unique($paytype);

            //增加支付日志
            $paylognum = create_ordernum();
            $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`) VALUES ('shop', '$paylognum', '$userid', '$ordernumArr', '0', '" . join(",", $paytype) . "', '1')");
            $dsql->dsqlOper($archives, "update");
            if (empty($paytype)) {
                $paytype = array('money');
                // return array("state" => 200, "info" => "下单异常！");
            }
            //执行支付成功的操作
            $this->param = array(
                "paytype"  => join(",", $paytype),
                "ordernum" => $ordernumArr,
                "confirmtype" => $confirmtype
            );
            $this->paySuccess();

            //跳转至支付成功页面
            $param = array(
                "service"  => "shop",
                "template" => "payreturn",
                "ordernum" => $paylognum
            );
            $url   = getUrlPath($param);
            return $url;
            // header("location:".$url);

        } else {

            //如果有多个订单，需要跳转到订单中心，分别支付
            //为什么电脑端可以合并支付，而移动端不可以？  by gz 20190112
            //原因：由于电脑端和移动端的支付提交订单逻辑不同（电脑端一个页面完成填写订单、选择支付方式，而移动端是分两个页面来做的），电脑端提交订单用的pay()，而移动端提交订单用的dealTouch()
            //电脑端执行完pay()后直接进入到了第三方支付，而移动端执行完dealTouch()，最后还会再跳到pay()
            //pay()里面新订单是根据商品ID、规则信息等创建的信息，老订单是根据传过来的订单号（controller中的pay和class中的pay都是查询的一个订单号，没有兼容多个订单的情况）
            //后面如果要做移动端的多订单合并支付，首先把下单的逻辑梳理清楚，然后修改controller中的pay和class中的pay
            //            if (count($ordernumArr) > 1) {
            //                return $url;
            //            } else {

            if ($paytype == 'delivery') {
                $ordernumArr = join(",", $ordernumArr);

                $paylognum = create_ordernum();
                $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`) VALUES ('shop', '$paylognum', '$userid', '$ordernumArr', '0', '" . $paytype . "', '1')");
                $dsql->dsqlOper($archives, "update");
                $reslq = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order`  WHERE  `ordernum` = '$ordernumArr'");
                $numres = $dsql->dsqlOper($reslq, "results");
                $orderid = $numres[0]['id'];
                //执行支付成功的操作
                $this->param = array(
                    "paytype"  => 'delivery',
                    "ordernum" => $ordernumArr,
                    "confirmtype" => $confirmtype
                );
                $this->paySuccess();

                //跳转至支付成功页面
                //                $param = array(
                //                    "service"  => "shop",
                //                    "template" => "payreturn",
                //                    "ordernum" => $paylognum
                //                );
                $paramBusi = array(
                    "service" => "member",
                    "type" => "user",
                    "template" => "orderdetail",
                    "action" => "shop",
                    "id" => $orderid
                );
                $url   = getUrlPath($paramBusi);
                return $url;
            } else {

                $order = createPayForm("shop", join(",", $ordernumArr), $payTotalAmount, '', $langData['shop'][4][17], array(), 1);  //商城订单

                $order['timeout'] =  GetMkTime(time()) + 1800;

                return  $order;
            }


            //                $RenrenCrypt = new RenrenCrypt();
            //                $ids         = base64_encode($RenrenCrypt->php_encrypt(join(",", $ordernumArr)));
            //
            //                $param = array(
            //                    "service"  => "shop",
            //                    "template" => "pay",
            //                    "param"    => "ordernum=" . $ids
            //                );
            //                return getUrlPath($param);
            //            }

        }
    }

    /**
     * Notes: 砍价下单
     * Ueser: Administrator
     * DateTime: 2021/3/1 13:51
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function bargaining()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $uid = $userLogin->getMemberID();

        if ($uid < 1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $proid = $this->param['id'];
        $hid   = $this->param['hid'];

        global $custombargaintime;
        if (!is_numeric($proid) && $proid == '' || !is_numeric($hid) && $hid == '') return array('state' => 200, 'info' => "格式错误");


        $goodsql = $dsql->SetQuery("SELECT h.`id` hid,h.`huodongprice`,h.`ktime`,h.`etime`,h.`limitcount`,h.`huodongnumber`,p.`price`,p.`mprice`,p.`store` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` WHERE  h.`proid` = '$proid' AND h.`huodongtype` = 3 AND  h.`state` = 1  AND p.`state` =1 AND h.`id` = '$hid'");
        $goodres = $dsql->dsqlOper($goodsql, "results");

        if ($goodres && is_array($goodres)) {

            $selfsql = $dsql->SetQuery("SELECT `userid` FROM `#@__shop_store` WHERE `id` = '" . $goodres[0]['store'] . "'");

            $selfres = $dsql->dsqlOper($selfsql, "results");

            if ($selfres[0]['userid'] == $uid) return array('state' => 200, 'info' => "自己不可以购买自己店铺的商品！");

            $date           = GetMkTime(time());
            $hid            = $goodres[0]['hid'];
            $floorprice     = $goodres[0]['huodongprice'];
            $barktime       = $goodres[0]['ktime'];
            $baretime       = $goodres[0]['etime'];
            $barlimitnum    = $goodres[0]['limitcount'];
            $price          = $goodres[0]['price'];
            $mprice         = $goodres[0]['mprice'];
            $limit          = $goodres[0]['limitcount'];
            $barlimitallnum = $goodres[0]['huodongnumber']; /*砍价总次数*/

            $enddate       = $date + $custombargaintime * 3600;
            $bargainingsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining` WHERE  `proid` = '$proid' AND `hid` = '$hid' AND `userid` = '$uid' AND `state` !=2");
            $truecount     = $dsql->dsqlOper($bargainingsql, "totalCount");

            $limitsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining` WHERE `proid` = '$proid' AND `hid` = '$hid' AND `userid` = '$uid'  AND `state` = 1");

            $limitcount = $dsql->dsqlOper($limitsql, "totalCount");

            if ($barlimitnum <= $truecount) return array('state' => 200, 'info' => "超出限定发起砍价数量限制");
            if ($limitcount > $limit) return array('state' => 200, 'info' => "超出活动限制");

            if ($date <= $barktime || $date >= $baretime) return array('state' => 200, 'info' => "超出砍价活动时间!");

            $insertsql = $dsql->SetQuery("INSERT INTO `#@__shop_bargaining` (`userid`,`proid`,`kj_num`,`shengyu_kj_num`,`gmoney`,`gnowmoney`,`gfinalmoney`,`hid`,`enddate`,`pubdate`) VALUES ('$uid','$proid','$barlimitallnum','$barlimitallnum','$price','$price','$floorprice','$hid','$enddate','$date')");
            $bargainid = $dsql->dsqlOper($insertsql, "lastid");

            if (is_numeric($bargainid)) {

                return $bargainid;
            } else {

                return array('state' => 200, 'info' => "发起错误!请联系管理员");
            }
        } else {

            return array('state' => 200, 'info' => "格式错误");
        }
    }

    /**
     * Notes: 砍价详情
     * Ueser: Administrator
     * DateTime: 2021/3/2 17:39
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function bargainDetail()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (is_array($this->param)) {

            $baraid = $this->param['id'];
        } else {
            $baraid = $this->param;
        }

        $uid = $userLogin->getMemberID();

        if ($uid < 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!is_numeric($baraid) && $baraid == '') return array("state" => 200, "info" => '格式错误');  //登录超时，请重新登录！

        $datetime = GetMkTime(time());

        $sql = $dsql->SetQuery("SELECT b.*,h.`etime` FROM `#@__shop_bargaining` b  LEFT  JOIN `#@__shop_huodongsign` h ON b.`hid` = h.`id` WHERE b.`id` = '$baraid' AND h.`ktime` <= '$datetime' AND h.`etime` >= '$datetime' AND h.`state` = 1");

        $res = $dsql->dsqlOper($sql, "results");

        $bargainDetail = array();

        global $custombargaintime;

        if ($res) {

            $bargainDetail['id']             = $res[0]['id'];
            $bargainDetail['hid']            = $res[0]['hid'];
            $bargainDetail['userid']         = $res[0]['userid'];
            $bargainDetail['uid']            = $uid;
            $bargainDetail['proid']          = $res[0]['proid'];
            $prosql = $dsql->SetQuery("SELECT `typesales`,`promotype` FROM `#@__shop_product` WHERE  `id` = '" . $res[0]['proid'] . "'");
            $prores = $dsql->dsqlOper($prosql, "results");
            $confirmtype = 4;
            $typesales = explode(",", $prores[0]['typesales']);
            if ($prores[0]['typesales'] === 1) {
                $confirmtype = 0;
            }
            if (in_array('3', $typesales) || in_array('4', $typesales) || in_array('2', $typesales)) {
                $confirmtype = 1;
            }
            if (in_array('1', $typesales) && (in_array('3', $typesales) || in_array('4', $typesales) || in_array('2', $typesales))) {
                $confirmtype = 2;
            }
            $bargainDetail['confirmtype'] = $confirmtype;
            $bargainDetail['kj_num']         = $res[0]['kj_num'];
            $bargainDetail['shengyu_kj_num'] = $res[0]['shengyu_kj_num'];
            $bargainDetail['gmoney']         = $res[0]['gmoney'];
            $bargainDetail['gnowmoney']      = $res[0]['gnowmoney'];
            $bargainDetail['gfinalmoney']    = $res[0]['gfinalmoney'];
            $bargainDetail['state']          = $res[0]['state'];
            $bargainDetail['pubdate']        = $res[0]['pubdate'];
            $bargainDetail['enddate']        = $res[0]['enddate'] < $res[0]['etime'] ? $res[0]['enddate'] : $res[0]['etime'];

            $usersql = $dsql->SetQuery("SELECT `photo`,`nickname` FROM `#@__member` WHERE  `id` = '" . $res[0]['userid'] . "'");

            $userres = $dsql->dsqlOper($usersql, "results");

            $bargainDetail['userphoto'] = $userres[0]['photo'] != '' ? getFilePath($userres[0]['photo']) : '';

            $bargainDetail['nickname'] = $userres[0]['nickname'];

            /*商品*/
            $this->param = $res[0]['proid'];

            $detail = $this->detail(1);


            $bargainDetail['goodstitle'] = $detail['title'];

            $bargainDetail['goodsprice'] = $detail['price'];

            $bargainDetail['goodsvolume'] = $detail['volume'];

            $bargainDetail['goodsweight'] = $detail['weight'];

            $bargainDetail['goodsstore'] = $detail['store']['id'];

            $bargainDetail['goodspic'] = $detail['litpic'] != '' ? getFilePath($detail['litpic']) : '';

            $bargainDetail['prodetail'] = $detail;

            /*成功砍价数量*/

            $successcountsql = $dsql->SetQuery("SELECT m.`photo`,m.`nickname`,b.`pubdate` FROM `#@__shop_bargaining` b LEFT JOIN `#@__member` m  ON b.`userid` = m.`id` WHERE b.`state` = 1 AND b.`proid` =" . $detail['id']);

            $successcount = $dsql->dsqlOper($successcountsql, "totalCount");

            $bargainDetail['successcount'] = $successcount;

            $successres = $dsql->dsqlOper($successcountsql, "results");

            $successuserarr = array();

            foreach ($successres as $k => $v) {

                $successuserarr[$k]['photo'] = getFilePath($v['photo']);

                $successuserarr[$k]['nickname'] = $v['nickname'];

                $successuserarr[$k]['pubdate'] = $v['pubdate'];
            }
            $bargainDetail['successresarr'] = $successuserarr;

            $bargainDetail['is_self'] = 0;
            /*查看自己有没有砍过*/

            if ($uid == $res[0]['userid']) {

                $iskansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining_log` WHERE  `bid` = '" . $res[0]['id'] . "' AND `uid` = '" . $res[0]['userid'] . "'");

                $bargainDetail['is_self'] = 1;
            } else {

                $iskansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining_log` WHERE  `bid` = '" . $res[0]['id'] . "' AND `uid` = '" . $uid . "'");
            }

            $iskanres = $dsql->dsqlOper($iskansql, "results");

            $is_kan = 0;

            if ($iskanres && is_array($iskanres)) {

                $is_kan = 1;
            }

            $bargainDetail['is_kan'] = $is_kan;
        }
        return $bargainDetail;
    }

    /**
     * Notes: 帮砍价/自砍
     * Ueser: Administrator
     * DateTime: 2021/3/1 15:58
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function doBargaining()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $customhelpbargain;

        $param  = $this->param;
        $kjid   = (int)$this->param['kjid'];
        $kjtype = (int)$this->param['kjtype']; /*砍价类型 0-自己,1-好友*/
        $uid    = $userLogin->getMemberID();

        if (!is_numeric($kjid) && $kjid == '') return array('state' => 200, 'info' => "格式错误");

        $bargainingsql = $dsql->SetQuery("SELECT sp.`id`,h.`barruletype`,sp.`gnowmoney`,sp.`gfinalmoney`,sp.`kj_num`,sp.`shengyu_kj_num`,h.`barrule`,p.`store` FROM `#@__shop_bargaining` sp LEFT JOIN  `#@__shop_product` p ON sp.`proid` = p.`id` LEFT JOIN `#@__shop_huodongsign` h ON h.`id` = sp.`hid` WHERE h.`huodongtype` = 3 AND h.`state` = 1 AND sp.`id` = '$kjid' AND sp.`state` = 0");

        $bargainingres = $dsql->dsqlOper($bargainingsql, "results");

        if ($bargainingres && is_array($bargainingres)) {

            $spid           = $bargainingres[0]['id'];
            $barruletype    = $bargainingres[0]['barruletype'];
            $gnowmoney      = $bargainingres[0]['gnowmoney'];
            $gfinalmoney    = $bargainingres[0]['gfinalmoney'];
            $kj_num         = $bargainingres[0]['kj_num'];
            $shengyu_kj_num = $bargainingres[0]['shengyu_kj_num'];
            $barrule        = $bargainingres[0]['barrule'] != '' ? unserialize($bargainingres[0]['barrule']) : array();

            $bargalogsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining_log` WHERE  `bid` = '$kjid' AND `uid` = '$uid'");

            $bargalogres = $dsql->dsqlOper($bargalogsql, "results");

            /*当天 帮砍次数*/
            $start_time = strtotime(date("Y-m-d", GetMkTime(time())));

            //当天结束之间
            $end_time = $start_time + 60 * 60 * 24;

            $bargalogcountsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_bargaining_log` WHERE `uid` = '$uid' AND `pubdate` >= '$start_time' AND `pubdate` <= '$end_time'");

            $bargalogcount = $dsql->dsqlOper($bargalogcountsql, "totalCount");


            /*自己帮自己不算*/
            if ($kjtype == 0) {

                global $customselfbargain;

                if ($customselfbargain == 0) return array('state' => 200, 'info' => "自己不可以砍价！");

                $bargalogcount = (int)$bargalogcount != 0 ? (int)$bargalogcount - 1 : 0;
                /*自己店铺的不可以砍*/

                $selfsql = $dsql->SetQuery("SELECT `userid` FROM `#@__shop_store` WHERE `id` = '" . $bargainingres[0]['store'] . "'");

                $selfres = $dsql->dsqlOper($selfsql, "results");

                if ($selfres[0]['userid'] == $uid) return array('state' => 200, 'info' => "自己不可以购买自己店铺的商品！");
            }

            if ($bargalogcount >= $customhelpbargain) return array('state' => 200, 'info' => "今日帮砍次数已达上限！请明日在砍");

            if ($bargalogres && is_array($bargalogres)) return array('state' => 200, 'info' => "已砍过!请勿重复砍价！");

            $kj_shengyu_money = (float)$gnowmoney - (float)$gfinalmoney; /*砍价剩余金额*/

            $kj_yikan_num = (int)$kj_num - (int)$shengyu_kj_num; /*已砍多少刀*/

            if ((float)$kj_shengyu_money == 0) return array('state' => 200, 'info' => "该商品已经被砍到最低价请勿重复砍价");

            if ((int)$shengyu_kj_num <= 0) return array('state' => 200, 'info' => "该商品最多被砍" . $kj_num . "");
            if ((int)$barruletype == 1) {

                array_multisort($barrule, SORT_ASC);

                $rulemaxnum = array_column($barrule, 'max');


                $rulemaxmoney = array_column($barrule, 'money');

                array_multisort($rulemaxnum, SORT_DESC);

                array_multisort($rulemaxmoney, SORT_ASC);

                $min = 0.01;     //每个人最少能收到10元
                if ($rulemaxnum[0] >= ($kj_yikan_num + 1) && $gnowmoney > $rulemaxmoney[0]) {
                    /*规则配置内满足条件的*/
                    foreach ($barrule as $k => $v) {

                        if (($kj_yikan_num + 1) >= $v['min'] && ($kj_yikan_num + 1) <= $v['max']) {

                            $qujiancount = abs((int)$v['max'] - (int)$v['min']) + 1;

                            $qujianmoney = $gnowmoney > $v['money'] ? abs((float)$gnowmoney - (float)$v['money']) : 0;

                            if ($qujianmoney > 0) {

                                if ($qujiancount > 1 && $shengyu_kj_num > 1) {

                                    if ($kj_yikan_num + 1 == $v['max']) {

                                        $total = $qujianmoney;
                                    } else {

                                        $safe_total = ($qujianmoney - $qujiancount * $min) / $qujiancount; //随机安全上限

                                        $total = mt_rand($min * 100, $safe_total * 100) / 100;

                                        $total = sprintf("%.2f", $total);   //砍掉的金额
                                    }
                                } else {

                                    $total = $qujianmoney;
                                }
                            }
                        }
                    }
                    //                    file_put_contents('suiji.txt', $i.':'.$total.PHP_EOL,FILE_APPEND);
                } else {

                    $min = 0.01;     //每个人最少能收到10元

                    if ($shengyu_kj_num > 1) {

                        $safe_total = ($kj_shengyu_money - ($shengyu_kj_num - 1) * $min) / ($shengyu_kj_num - 1); //随机安全上限

                        $total = mt_rand($min * 100, $safe_total * 100) / 100;

                        $total = sprintf("%.2f", $total);   //砍掉的金额

                    } else {

                        $total = $kj_shengyu_money;
                    }

                    //                    file_put_contents('suijiafter.txt', $i.':'.$total.PHP_EOL,FILE_APPEND);
                }
            } else {

                $min = 0.01;     //每个人最少能收到10元
                if ($gnowmoney > $gfinalmoney) {

                    if ($shengyu_kj_num > 1) {

                        $safe_total = ($gnowmoney - ($shengyu_kj_num - 1) * $min) / ($shengyu_kj_num - 1); //随机安全上限

                        if ($safe_total > $gnowmoney - $gfinalmoney) {

                            $safe_total = (($gnowmoney - $gfinalmoney) - ($shengyu_kj_num - 1) * $min) / ($shengyu_kj_num - 1); //随机安全上限

                        }

                        $total = mt_rand($min * 100, $safe_total * 100) / 100;

                        $total = sprintf("%.2f", $total);   //砍掉的金额

                    } else {

                        $total = sprintf("%.2f", $gnowmoney - $gfinalmoney);   //砍掉的金额

                    }
                }
            }
            if ((string)(sprintf("%.2f", $gnowmoney - $total)) >= $gfinalmoney) {

                $statestr = '';

                if ((string)(sprintf("%.2f", $gnowmoney - $total)) == $gfinalmoney) {
                    $statestr = ' ,`state` = 1';
                }
                $updatesql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `shengyu_kj_num` = `shengyu_kj_num` - 1,`gnowmoney` = `gnowmoney` - $total  $statestr WHERE  `id` = '$kjid'");


                $dsql->dsqlOper($updatesql, 'update');

                $insertsql = $dsql->SetQuery("INSERT INTO `#@__shop_bargaining_log`(`bid`,`uid`,`money`,`pubdate`)VALUES ('$kjid','$uid','$total','" . GetMkTime(time()) . "')");

                $dsql->dsqlOper($insertsql, 'update');

                return $total;
            } else {
                return array('state' => 200, 'info' => "砍价失败!请联系管理员！");
            }
        } else {
            return array('state' => 200, 'info' => "未找到该活动！或者已经成功");
        }
    }

    /**
     * Notes: 砍价记录
     * Ueser: Administrator
     * DateTime: 2021/3/2 18:40
     * Param1:
     * Param2:
     * Param3:
     * Return:\
     */
    public function bargainingLog()
    {

        global $dsql;

        global $langData;

        $param = $this->param;

        if (!$param && !is_array($param)) return array('state' => 200, 'info' => "格式错误");

        $bargaid = $param['bargaid'];

        if (!is_numeric($bargaid) && $bargaid == '') return array('state' => 200, 'info' => "格式错误");

        $bargastate = $param['bargastate'];

        $pageSize = $param['pageSize'];

        $page = $param['page'];

        $pageSize = empty($pageSize) ? 10 : $pageSize;

        $page = empty($page) ? 1 : $page;

        $where = '';

        if ($bargastate) {

            $where = " AND b.`state` = $bargastate";
        }

        $archives = $dsql->SetQuery("SELECT bl.`money`, bl.`pubdate`, m.`photo`,m.`nickname`,b.`gnowmoney` FROM `#@__shop_bargaining_log` bl LEFT JOIN `#@__member` m ON bl.`uid` = m.`id` LEFT JOIN `#@__shop_bargaining` b ON bl.`bid` = b.`id` WHERE bl.`bid` = '$bargaid' $where");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);

        $where = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $where, "results");

        $loglist = array();

        if ($results) {

            foreach ($results as $k => $v) {

                $loglist[$k]['nickname']  = $v['nickname'];
                $loglist[$k]['money']     = $v['money'];
                $loglist[$k]['gnowmoney'] = $v['gnowmoney'];
                $loglist[$k]['photo']     = getFilePath($v['photo']);
                $loglist[$k]['pubdate']   = date('Y-m-d H:i:s', $v['pubdate']);
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $loglist);
    }

    /**
     * Notes: 砍价列表
     * Ueser: Administrator
     * DateTime: 2021/3/5 14:55
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function bargainingList()
    {

        global $dsql;
        global $userLogin;
        global $langData;

        $param = $this->param;
        if (!$param && !is_array($param)) return array('state' => 200, 'info' => "格式错误");

        $uid = $userLogin->getMemberID();

        $myhuodong = (int)$param['myhuodong'];

        $pageSize = $param['pageSize'];
        $id = $this->param['id'];  //指定商品id，多个用,分隔

        $page = $param['page'];
        $userlng = $this->param['userlng'];
        $userlat = $this->param['userlat'];

        $pageSize = empty($pageSize) ? 10 : $pageSize;

        $page = empty($page) ? 1 : $page;

        $where = '';

        //指定商品id
        if($id){
            $_id = array();
            $_idArr = explode(',', $id);
            foreach($_idArr as $v){
                $v = (int)$v;
                if($v){
                    array_push($_id, $v);
                }
            }
            $id = join(',', $_id);
            $where .= " AND p.`id` IN ($id)";
        }

        $cityid = getCityId($this->param['cityid']);

        //我砍价的商品
        if ($uid < 0 && $myhuodong) return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！
        
        if($myhuodong){
            $bargainsql = $dsql->SetQuery("SELECT p.`id`,p.`title` ,p.`litpic`,p.`mprice`,p.`price`,p.`sales`,h.`huodongprice`,h.`huodonginventory`,h.`huodongsales`,s.`lng`,s.`lat`,s.`title` storeTitle FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON  h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` LEFT JOIN `#@__shop_bargaining` b ON b.`proid` = p.`id` WHERE p.`state` = 1 AND s.`state` = 1 AND h.`huodongtype` = 3 AND h.`state` = 1  AND h.`ktime`<= " . GetMkTime(time()) . " AND  h.`etime` >= " . GetMkTime(time()) . " AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND (b.`state` = 0 OR b.`state` = 1) AND b.`userid` = $uid ".$where." GROUP BY h.`proid`");
        }else{
            $bargainsql = $dsql->SetQuery("SELECT p.`id`,p.`title` ,p.`litpic`,p.`mprice`,p.`price`,p.`sales`,h.`huodongprice`,h.`huodonginventory`,h.`huodongsales`,s.`lng`,s.`lat`,s.`title` storeTitle FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON  h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`state` = 1 AND s.`state` = 1 AND h.`huodongtype` = 3 AND h.`state` = 1  AND h.`ktime`<= " . GetMkTime(time()) . " AND  h.`etime` >= " . GetMkTime(time()) . " AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) ".$where." GROUP BY h.`proid`");
        }

        $totalCount = $dsql->dsqlOper($bargainsql, "totalCount");

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        if($myhuodong){
            $where = "";
        }else{
            $atpage = $pageSize * ($page - 1);
            $where = " LIMIT $atpage, $pageSize";
        }

        $bargainres = $dsql->dsqlOper($bargainsql . $where, "results");

        $list = array();

        if ($bargainres) {

            $param    = array(
                "service"  => "shop",
                "template" => "detail",
                "id"       => "%id%"
            );
            $urlParam = getUrlPath($param);

            foreach ($bargainres as $k => $v) {

                $list[$k]['id']               = $v['id'];
                $list[$k]['title']            = $v['title'];
                $list[$k]['mprice']           = $v['mprice'];
                $list[$k]['price']            = $v['price'];
                $list[$k]['sales']            = $v['sales'] ? $v['sales'] : $v['huodongsales'];
                $list[$k]['floorprice']       = $v['huodongprice'];
                $list[$k]['litpic']           = $v['litpic'] != '' ? getFilePath($v['litpic']) : '';
                $list[$k]['huodonginventory'] = $v['huodonginventory'];

                $isself = $myhuodong ? 1 : 0;
                $kanjiastate = 0;
                if ($uid > 0 && !$myhuodong) {
                    $isselfsql = $dsql->SetQuery("SELECT `id`,`state` FROM `#@__shop_bargaining` WHERE `userid` = '$uid' AND `proid` = '" . $v['id'] . "' AND (`state` =0 OR `state` = 1)");
                    $isselfres = $dsql->dsqlOper($isselfsql, "results");

                    if ($isselfres) {
                        $kanjiastate = $isselfres[0]['state'];
                        $isself      = 1;
                    }
                }

                $list[$k]['isself']      = $isself;
                $list[$k]['kanjiastate'] = $kanjiastate;

                $list[$k]['storeTitle'] = $v['storeTitle'];

                //距离
                if ($userlng && $userlat) {
                    $julishop = oldgetDistance($v['lng'], $v['lat'], $userlng, $userlat) / 1000;
                    $list[$k]['julishop'] = $julishop;
                }
                
                $list[$k]['url'] = str_replace("%id%", $v['id'], $urlParam);
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 商品活动列表
     * Ueser: Administrator
     * DateTime: 2021/3/5 16:14
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function proHuodongList()
    {

        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {

            $where2 = $where = $pageSize = $page = '';
            if (!is_array($this->param)) {

                return array("state" => 200, "info" => '格式错误！');
            } else {

                $param        = $this->param;
                $u            = $this->param['u'];
                $add          = (int)$this->param['add'];
                $huodongstate = $this->param['huodongstate'];
                $huodongtype  = $this->param['huodongtype'];
                $changci      = (int)$this->param['changci'];
                $protype      = (int)$this->param['protype'];
                $title        = $this->param['title'];
                $presale      = (int)$this->param['presale'];
                $page         = $this->param['page'];
                $pageSize     = $this->param['pageSize'];
                $pagetype     = $this->param['pagetype'];
                $huodongtime  = $this->param['huodongtime'];
                $userlng      = $this->param['userlng'];
                $userlat      = $this->param['userlat'];
                $id = $this->param['id'];  //指定商品id，多个用,分隔
                $title = $title == 'undefined' ? '' : $title;
                $sid          = (int)$this->param['sid'];  //指定店铺
            }
        }

        $now = GetMkTime(time());
        $daytime = strtotime(date('Y-m-d'));
        $todayEnd = strtotime(date('Y-m-d 23:59:59', time()));
        $pageinfo = $list = array();


        $where2 = " `state` = 1 ";

        //数据共享
        //        var_dump(HUONIAOINC."/config/shop.inc.php");die;
        require(HUONIAOINC . "/config/shop.inc.php");

        $dataShare = (int)$customDataShare;
        $cityid = getCityId($this->param['cityid']);

        if (!$dataShare && !$u) {

            if ($cityid) {

                $where2 .= " AND `cityid` = " . $cityid;
            }
        }

        //指定商品id
        if($id){
            $_id = array();
            $_idArr = explode(',', $id);
            foreach($_idArr as $v){
                $v = (int)$v;
                if($v){
                    array_push($_id, $v);
                }
            }
            $id = join(',', $_id);
            $where .= " AND p.`id` IN ($id)";
        }


        if ($u != 1) {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE " . $where2);

            $results = $dsql->dsqlOper($archives, "results");

            if ($results) {

                foreach ($results as $key => $value) {

                    $sidArr[$key] = $value['id'];
                }

                $where .= " AND p.`store` in (" . join(",", $sidArr) . ")";
            } else {

                $where .= " AND 2 = 3";
            }

            $where .= " AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND p.`state` = 1";
        } else {

            $adminid = $userLogin->getUserID();  //管理员登录ID

            if($sid && $adminid){
                $where .= " AND p.`store` = " . $sid;
            }else{
                $uid = $userLogin->getMemberID();
                if (!verifyModuleAuth(array("module" => "shop"))) {
                    return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
                }

                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = $uid");
                $storeRes = $dsql->dsqlOper($sql, "results");
                if ($storeRes) {
                    $where .= " AND p.`store` = " . $storeRes[0]['id'];
                } else {
                    $where .= " AND 1 = 2";
                }
            }

            if ($add == 1) {

                $where .= " AND p.`state` = 1";

                $where .= " AND  h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "'";
            }

            $where .= " AND (p.`promotype` = 1 OR p.`promotype` != 1)";
        }
        if ($pagetype == 1) {
            $where .= " AND s.`shoptype` =1";
        }
        if ($pagetype == 2) {
            $where .= " AND (s.`shoptype` = 2 OR s.`shoptype` = 0)";
        }

        if ($title != '') {
            $where .= " AND p.`title` like '%$title%'";
        }
        if (!$huodongstate) {
            // $where .= " AND h.`state` = 1";
        }
        if ($huodongstate == 0) {

            $where .= " AND h.`huodongtype` !=0";
        } elseif ($huodongstate == 1) {

            $where .= " AND h.`state` =1  AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND h.`state` = 1";
        } elseif ($huodongstate == 2) {

            $where .= " AND h.`huodongtype` !=0 AND h.`etime` < $now";
        } elseif ($huodongstate == 3) {

            $where .= " AND (p.`state` = 0 or h.`state` = 0)";
        }

        if ($huodongtype == 1) {

            $where .= " AND h.`huodongtype` =1";

            if ($changci) {
                $where .= " AND h.`changci` = '$changci'";
            }

            if ($huodongtime) {
                $where .= " AND h.`ktime` >= '$huodongtime' AND  h.`ktime` > '$daytime'";
            }
        } elseif ($huodongtype == 2) {

            $where .= " AND h.`huodongtype` =2";
            if ($presale != 1 && $u != 1) {
                $where .= " AND h.`huodongtype` !=0 AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "'";
            }
        } elseif ($huodongtype == 3) {

            $where .= " AND h.`huodongtype` =3";
        } elseif ($huodongtype == 4) {

            $where .= " AND h.`huodongtype` =4";

            if (!empty($protype)) {
                if ($dsql->getTypeList($protype, "shop_type")) {
                    global $arr_data;
                    $arr_data = array();
                    $lower    = arr_foreach($dsql->getTypeList($protype, "shop_type"));
                    $lower    = $protype . "," . join(',', $lower);
                } else {
                    $lower = $protype;
                }
                $where .= " AND p.`type` in ($lower)";
            }
        }

        if ($changci) {
            $where .= "  AND h.`ktime`>=" . $daytime . " AND h.`ktime`<=" . $todayEnd;
        }
        //        if (!$huodongstate && $u != 1 && !$huodongtime && empty($huodongtime)) {
        //
        //            $where .= "  AND h.`etime`>" . $now;
        //        }

        if ($presale == 1) {
            $where .= "  AND h.`ktime`>" . $now;
        }
        $pageSize = empty($pageSize) ? 10 : $pageSize;

        $page = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT DISTINCT p.`typesales`,p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`price`,p.`mprice`,h.`state`,h.`limitcount`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber`,s.`lng`,s.`lat`,s.`title` storeTitle FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1 AND s.`state` = 1 " . $where);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);


        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";
        $orderby = " ORDER BY `id` DESC";


        if ($huodongstate == 0 && empty($huodongtime)) {
            $orderby = " ORDER BY h.`etime` DESC";
        }
        if ($presale == 1) {
            $orderby = " ORDER BY h.`ktime` ASC";
        }

        $hasids = array();

        $results = $dsql->dsqlOper($archives . $orderby . $where, "results");

        if ($results) {

            foreach ($results as $k => $v) {

                array_push($hasids, $v['id']);

                $list[$k]['id'] = $v['id'];
                $list[$k]['limitcount'] = $v['limitcount'];

                $huodongstate = '';
                /*抢购*/
                if ($v['huodongtype'] == 1) {

                    $huodongstate = '1';
                } elseif ($v['huodongtype'] == 2) {
                    /*秒杀*/
                    $huodongstate = '2';
                } elseif ($v['huodongtype'] == 3) {
                    /*砍价*/
                    $huodongstate = '3';

                    $table = '#@__shop_bargaining';

                    $wheres = " AND `state` = 1 AND `hid` = '" . $v['hid'] . "'";

                    $wherez = " AND `state` = 0 AND `hid` = '" . $v['hid'] . "'";

                    $wheref = " AND `state` = 2 AND `hid` = '" . $v['hid'] . "'";
                } elseif ($v['huodongtype'] == 4) {
                    /*拼团*/
                    $huodongstate = '4';


                    $table = '#@__shop_tuanpin';

                    $wheres = " AND `state` = 3 AND `hid` = '" . $v['hid'] . "'";

                    $wherez = " AND `state` = 1 AND `hid` = '" . $v['hid'] . "'";

                    $wheref = " AND `state` = 2 AND `hid` = '" . $v['hid'] . "'";
                }

                if ($v['huodongtype'] == 3 || $v['huodongtype'] == 4) {

                    /*成功*/
                    $successsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wheres);

                    $successres = $dsql->dsqlOper($successsql, "totalCount");

                    /*进行中*/
                    $handsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wherez);

                    $handres = $dsql->dsqlOper($handsql, "totalCount");

                    /*失败*/
                    $failsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wheref);

                    $failres = $dsql->dsqlOper($failsql, "totalCount");

                    $list[$k]['successres'] = $successres;

                    $list[$k]['handres'] = $handres;

                    $list[$k]['failres'] = $failres;
                }

                $list[$k]['huodongprice'] = $v['huodongprice'];
                $list[$k]['huodongsales'] = $v['huodongsales'];
                $list[$k]['huodongnumber'] = $v['huodongnumber'];
                $list[$k]['title']        = $v['title'];
                $list[$k]['subtitle']     = $v['subtitle'];
                $list[$k]['sales']        = $v['sales'];
                $list[$k]['hid']          = $v['hid'];
                $list[$k]['litpic']       = getFilePath($v['litpic']);
                $list[$k]['huodongstate'] = $huodongstate;
                $list[$k]['state']        = $v['state'];
                $list[$k]['mprice']       = $v['mprice'];
                $list[$k]['ktime']        = date("m-d H:i:s", $v['ktime']);
                $list[$k]['ktimestr']     = $v['ktime'];
                $list[$k]['etimestr']     = $v['etime'];
                $list[$k]['etime']        = date("m-d H:i:s", $v['etime']);
                $list[$k]['click']        = $v['click'];
                $list[$k]['price']        = $v['price'];
                $typesalesarr = $v['typesales'] != '' ? explode(',', $v['typesales']) : array();
                $is_daodian = 0;
                if (in_array('1', $typesalesarr)) {
                    $is_daodian = 1;
                }
                $list[$k]['is_daodian']       = $is_daodian;
                $huodongtimestate = 0;
                if ($v['ktime'] <= GetMkTime(time()) && $v['etime'] >= GetMkTime(time())) {

                    $huodongtimestate = 1;
                }

                if ($v['etime'] <= GetMkTime(time())) {

                    $huodongtimestate = 2;
                }



                $list[$k]['huodongtimestate'] = $huodongtimestate;

                $list[$k]['huodonginventory'] = $v['huodonginventory'];

                $param    = array(
                    "service"  => "shop",
                    "template" => "detail",
                    "id"       => $v['id']
                );
                $urlParam = getUrlPath($param);

                $list[$k]['url'] = $urlParam;

                $list[$k]['storeTitle'] = $v['storeTitle'];

                //距离
                if ($userlng && $userlat) {
                    $julishop = oldgetDistance($v['lng'], $v['lat'], $userlng, $userlat) / 1000;
                    $list[$k]['julishop'] = $julishop;
                }
            }
        }
        if ($huodongtype == 2 && $page == $totalPage && $presale != 1) {

            $where =  '';

            if ($hasids) {
                $hasids = join(',', $hasids);
                $where .= " AND p.`id` not in ($hasids)";
            }

            $where2 = " `state` = 1 ";
            $u     = (int)$this->param['u'];
            require(HUONIAOINC . "/config/shop.inc.php");

            $dataShare = (int)$customDataShare;

            if (!$dataShare) {

                $cityid = getCityId($this->param['cityid']);

                if ($cityid) {

                    $where2 .= " AND `cityid` = " . $cityid;
                }
            }


            if ($u != 1) {

                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE " . $where2);

                $results = $dsql->dsqlOper($archives, "results");

                if ($results) {

                    foreach ($results as $key => $value) {

                        $sidArr[$key] = $value['id'];
                    }

                    $where .= " AND p.`store` in (" . join(",", $sidArr) . ")";
                } else {

                    $where .= " AND 2 = 3";
                }

                $where .= " AND p.`state` = 1";
            } else {
                $where .= " AND s.`userid` = $uid";
            }
            $prolist = array();
            $archives = $dsql->SetQuery("SELECT DISTINCT p.`typesales`,p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`price`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber`,s.`lng`,s.`lat`,s.`title` storeTitle FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1 AND  h.`huodongtype` = 2  AND h.`etime` < $now $where LIMIT 50 ");

            $prores = $dsql->dsqlOper($archives, "results");
            if ($prores) {

                foreach ($prores as $k => $v) {

                    $prolist[$k]['id'] = $v['id'];

                    $huodongstate = '';
                    /*抢购*/
                    if ($v['huodongtype'] == 1) {

                        $huodongstates = '1';
                    } elseif ($v['huodongtype'] == 2) {
                        /*秒杀*/
                        $huodongstate = '2';
                    } elseif ($v['huodongtype'] == 3) {
                        /*砍价*/
                        $huodongstate = '3';

                        $table = '#@__shop_bargaining';

                        $wheres = " AND `state` = 1 AND `hid` = '" . $v['hid'] . "'";

                        $wherez = " AND `state` = 0 AND `hid` = '" . $v['hid'] . "'";

                        $wheref = " AND `state` = 2 AND `hid` = '" . $v['hid'] . "'";
                    } elseif ($v['huodongtype'] == 4) {
                        /*拼团*/
                        $huodongstate = '4';


                        $table = '#@__shop_tuanpin';

                        $wheres = " AND `state` = 3 AND `hid` = '" . $v['hid'] . "'";

                        $wherez = " AND `state` = 1 AND `hid` = '" . $v['hid'] . "'";

                        $wheref = " AND `state` = 2 AND `hid` = '" . $v['hid'] . "'";
                    }

                    if ($v['huodongtype'] == 3 || $v['huodongtype'] == 4) {

                        /*成功*/
                        $successsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wheres);

                        $successres = $dsql->dsqlOper($successsql, "totalCount");

                        /*进行中*/
                        $handsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wherez);

                        $handres = $dsql->dsqlOper($handsql, "totalCount");

                        /*失败*/
                        $failsql = $dsql->SetQuery("SELECT `id` FROM `" . $table . "` WHERE  1=1 " . $wheref);

                        $failres = $dsql->dsqlOper($failsql, "totalCount");

                        $prolist[$k]['successres'] = $successres;

                        $prolist[$k]['handres'] = $handres;

                        $prolist[$k]['failres'] = $failres;
                    }

                    $prolist[$k]['huodongprice'] = $v['huodongprice'];
                    $prolist[$k]['huodongsales'] = $v['huodongsales'];
                    $prolist[$k]['huodongnumber'] = $v['huodongnumber'];
                    $prolist[$k]['title']        = $v['title'];
                    $prolist[$k]['subtitle']     = $v['subtitle'];
                    $prolist[$k]['sales']        = $v['sales'];
                    $prolist[$k]['hid']          = $v['hid'];
                    $prolist[$k]['litpic']       = getFilePath($v['litpic']);
                    $prolist[$k]['huodongstate'] = $huodongstate;
                    $prolist[$k]['state']        = $v['state'];
                    $prolist[$k]['mprice']       = $v['mprice'];
                    $prolist[$k]['ktime']        = date("m-d H:i:s", $v['ktime']);
                    $prolist[$k]['ktimestr']     = $v['ktime'];
                    $prolist[$k]['etimestr']     = $v['etime'];
                    $prolist[$k]['etime']        = date("m-d H:i:s", $v['etime']);
                    $prolist[$k]['click']        = $v['click'];
                    $prolist[$k]['price']        = $v['price'];
                    $typesalesarr = $v['typesales'] != '' ? explode(',', $v['typesales']) : array();
                    $is_daodian = 0;
                    if (in_array('1', $typesalesarr)) {
                        $is_daodian = 1;
                    }
                    $prolist[$k]['is_daodian']       = $is_daodian;
                    $huodongtimestate = 0;
                    if ($v['ktime'] <= GetMkTime(time()) && $v['etime'] >= GetMkTime(time())) {

                        $huodongtimestate = 1;
                    }

                    if ($v['etime'] <= GetMkTime(time())) {

                        $huodongtimestate = 2;
                    }



                    $prolist[$k]['huodongtimestate'] = $huodongtimestate;

                    $prolist[$k]['huodonginventory'] = $v['huodonginventory'];

                    $param    = array(
                        "service"  => "shop",
                        "template" => "detail",
                        "id"       => $v['id']
                    );
                    $urlParam = getUrlPath($param);

                    $prolist[$k]['url'] = $urlParam;

                    $prolist[$k]['storeTitle'] = $v['storeTitle'];

                    //距离
                    if ($userlng && $userlat) {
                        $julishop = oldgetDistance($v['lng'], $v['lat'], $userlng, $userlat) / 1000;
                        $prolist[$k]['julishop'] = $julishop;
                    }
                }
            }
            $list = array_merge($list, $prolist);
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 活动加入
     * Ueser: Administrator
     * DateTime: 2021/3/8 10:01
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function huodongJoin()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;
        global $HN_memory;

        //基本参数接收
        $param = $this->param;
        if (!$param || !is_array($param)) return array("state" => 200, "info" => "格式错误！"); //登录超时，请重新登录！
        $oper           = $param['oper'];
        $hdtype         = $param['hdtype'];
        $proid          = (int)$param['id'];
        $hid            = (int)$param['hid'];
        $changci        = (int)$param['changci'];
        $inventory      = (int)$param['inventory'];   /*活动库存*/
        $barlimitnum    = (int)$param['maxnum']; /*砍价限购次数*/
        $kanstime       = (int)$param['startdate'] != '' ? strtotime($param['startdate']) : GetMkTime(time());
        $kanetime       = (int)$param['enddate'] != '' ? strtotime($param['enddate']) : GetMkTime(time());
        $hdprice        = (float)$param['hdprice']; /*砍价底价*/
        $market         = (float)$param['market']; /*砍价底价*/
        $barlimitallnum = (int)$param['allnum']; /*砍价需要总次数*/
        $barruletype    = (int)$param['bargainrule']; /*砍价规则 0-程序，1-自定义*/
        $barRulejson = $param['barRule'] != '' ? json_decode($param['barRule'], true) : '';
        $barrule = !empty($barRulejson) ? serialize($barRulejson) : '';   /*砍价规则*/
        if ($hdprice && $market && $hdprice >= $market) {
            return array("state" => 200, "info" => "活动价不得大于等于原价！");
        }
        $pinpeople = (int)$param['pinpeople'];
        $pinlimit  = (int)$param['pinlimit'];
        $pintime   = (int)$param['pintime'];
        //登录校验
        $userid = $userLogin->getMemberID();
        $userinfo = $userLogin->getMemberInfo();
        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }
        if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop"))) {
            return array("state" => 200, "info" => $langData['marry'][5][12]); //商家权限验证失败！
        }
        $sql      = $dsql->SetQuery("SELECT `id`,`state` FROM `#@__shop_store` WHERE `userid` = $userid");
        $storeRes = $dsql->dsqlOper($sql, "results");
        if (!$storeRes) return array("state" => 200, "info" => "您还未开通商城店铺!");
        if ($storeRes[0]['state'] == 0) {
            return array("state" => 200, "info" => $langData['marry'][5][14]); //您的公司信息还在审核中，请通过审核后再发布！
        }
        if ($storeRes[0]['state'] == 2) {
            return array("state" => 200, "info" => $langData['marry'][5][15]); //您的公司信息审核失败，请通过审核后再发布！
        }
        $sid = $storeRes[0]['id'];

        /*查看活动有无冲突*/
        $huodongsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_huodongsign` WHERE `proid` = '$proid' AND (( '$kanstime' > `ktime` AND '$kanetime' < `etime`) OR ('$kanstime' < `ktime` AND '$kanetime' > `etime`) OR ('$kanetime' > `ktime` AND '$kanetime' < `etime`) OR ('$kanstime' = `ktime` AND '$kanetime' = `etime`)) AND `state` = 1");
        $huodongres = $dsql->dsqlOper($huodongsql, "results");
        if ($huodongres) {
            if (($oper == 'update' && $huodongres[0]['id'] != $hid) || $oper == 'add') {
                return array("state" => 200, "info" => "该商品此时间段已参加其他活动!");
            }
        } //商家权限验证失败！

        /*查看有无此商品*/
        $prosql = $dsql->SetQuery("SELECT `id`,`title`,`type`,`typesales`,`promotype` FROM `#@__shop_product` WHERE `id`  = '$proid' AND `state` = 1");
        $prores = $dsql->dsqlOper($prosql, "results");
        if (!$prores) return array("state" => 200, "info" => "暂未查到此商品或者商品待审核！"); //！

        //取得商品信息
        $protitle       = $prores[0]['title'];
        $typeid         = $prores[0]['type'];
        $typesalesarr   = $prores[0]['typesales'] != '' ? explode(',', $prores[0]['typesales']) : array();
        $promotype      = (int)$prores[0]['promotype'];

        $protype = 0; /*1到店(优惠券)*/
        if (in_array('1', $typesalesarr)) {
            $protype = 1;
        }
        if ($oper == 'add' || $oper == 'update') {
            if (empty($proid) && !is_numeric($proid)) return array("state" => 200, "info" => '请选择商品！'); //！
            if ($hdprice && empty($hdprice))  return array("state" => 200, "info" => "价格不能为0"); //！
            if ($pinpeople <= 1 && $hdtype == 'tuan') return array("state" => 200, "info" => '活动人数不得小于1!！'); //！
        } elseif ($oper == 'del') {
            if (!is_numeric($proid)) return array("state" => 200, "info" => $langData['marry'][5][10]); //格式错误！
        }
        //活动类型
        $pubdate = GetMkTime(time());
        if ($hdtype == 'bargain') {
            $huodongtype = 3; //砍价
        } elseif ($hdtype == 'tuan') {
            $huodongtype = 4; //团购
        } elseif ($hdtype == 'qianggou') {
            $huodongtype = 1; //限时抢购
        } elseif ($hdtype == 'miaosha' || $hdtype == 'secKill') {
            $huodongtype = 2; //秒杀
        } else {
            return array("state" => 200, "info" => "参数错误");
        }
        global $customhuodongFabuCheck;  //活动是否需要审核
        //不同的活动做不同的处理
        if ($huodongtype == 3) {
            $huodongnumber = $barlimitallnum;  //活动需要总人数
            $limit = $barlimitnum;  //限购数量
        } elseif ($huodongtype == 4 || $huodongtype == 1 || $huodongtype == 2) {
            $huodongnumber = $pinpeople;
            $limit = $barlimitnum;

            //获取拼团的规格、活动的最小价格【传递 sku、以及对应的 mprice、price、stock】
            $skuList = $dsql->getArr($dsql::SetQuery("select `id` from `#@__shop_good_sku` where `gid`=$proid and `del`=0"));
            $specifival = array();
            $pricearr = array();
            foreach ($skuList as $skuList_i) {
                $spemprice = $_POST["hd_mprice_" . $skuList_i];
                $speprice  = $_POST["hd_price_" . $skuList_i];
                array_push($pricearr, $speprice);
                $speinventory = $_POST["hd_inventory_" . $skuList_i];
                if (!preg_match("/^0|\d*\.?\d+$/i", $spemprice, $matches)) {
                    echo '{"state": 200, "info": "规格表中价格不得为空，类型为数字！"}';
                    exit();
                } elseif (!preg_match("/^0|\d*\.?\d+$/i", $speprice, $matches)) {
                    echo '{"state": 200, "info": "规格表中库存不得为空，类型为数字！"}';
                    exit();
                } elseif (!preg_match("/^0|\d*\.?\d+$/i", $speinventory, $matches)) {
                    echo '{"state": 200, "info": "规格表中库存不得为空，类型为数字！"}';
                    exit();
                } else {
                    $invent += $speinventory;
                    $skuDetail = $this->getSkuDetail($skuList_i);
                    $speDetail = $skuDetail['speDetail'];
                    $speids = array_column($speDetail, "id");
                    $speNames = array_column($speDetail, "name");
                    array_push($specifival, array("id" => $skuList_i, "spe" => join(",", $speids), "name" => $speNames, "mprice" => $spemprice, "price" => $speprice, "stock" => $speinventory));
                }
            }

            if (!empty($specifival)) {
                $specifival = json_encode($specifival);
                $inventory  = $invent;
            } else {
                $specifival = "";

                if (!preg_match("/^0|\d*\.?\d+$/i", $inventory, $matches)) {
                    echo '{"state": 200, "info": "库存不得为空，类型为数字！"}';
                    exit();
                }
            }
            if ($pricearr && is_array($pricearr)) {
                $hdprice = min($pricearr);
            }
        }

        if ($oper == 'add') {

            $addsql = $dsql->SetQuery("INSERT INTO `#@__shop_huodongsign` (`proid`,`huodongtype`,`huodonginventory`,`pinspecification`,`ktime`,`etime`,`sid`,`state`,`huodongprice`,`barruletype`,`barrule`,`huodongnumber`,`changci`,`limitcount`,`pintime`,`pubdate`)
            VALUES ('$proid','$huodongtype','$inventory','" . addslashes($specifival) . "','$kanstime','$kanetime','$sid','$customhuodongFabuCheck','$hdprice','$barruletype','$barrule','$huodongnumber','$changci','$limit','$pintime','$pubdate')");


            $lastid = $dsql->dsqlOper($addsql, "lastid");

            if (is_numeric($lastid)) {

                //库存数量，使用redis优化
                if ($HN_memory && $HN_memory->enable) {
                    $memoryKey = "shop_product_huodong_$lastid";
                    $products_sql = $dsql->SetQuery("select `huodongtype`,`huodonginventory`,`huodongsales`,`pinspecification` from `#@__shop_huodongsign` where `id`=$lastid");
                    $products = $dsql->dsqlOper($products_sql, "results");
                    $products = $products[0];
                    //解析数据（如果是多规则，则每个规格单独设立库存）
                    if ($products['pinspecification']) {
                        $kucun = $products['pinspecification'];
                        $kucun = json_decode($kucun, true);
                        foreach ($kucun as $v) {
                            $guige = $v['id'];  // 规格名
                            $guigeKc = $v['stock'];  // 规格库存
                            $guigeKey =        $memoryKey . "_" . $guige;
                            $HN_memory->rm($guigeKey);  // 删除、再新增
                            // 审核通过
                            if ($customhuodongFabuCheck == 1) {
                                for ($i = 1; $i <= $guigeKc; $i++) {  // 必须从1开始
                                    $HN_memory->rpush($guigeKey, $i);
                                }
                            }
                        }
                    }
                    // 单规格，一个商品对应一个库存
                    else {
                        $HN_memory->rm($memoryKey);  // 删除、再新增
                        $kucun = $products['huodonginventory'];
                        if ($customhuodongFabuCheck == 1) {
                            for ($i = 1; $i <= $kucun; $i++) { // 必须从1开始
                                $HN_memory->rpush($memoryKey, $i);
                            }
                        }
                    }
                }

                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid   = $siteCityInfo['cityid'];
                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
                $param    = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户 :" . $userinfo['nickname'] . " \r\新增活动商品：" . $protitle . ($customhuodongFabuCheck == 1 ? '等待审核!' : ''),
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("shop", "store", $param);
                return $lastid;
            } else {
                return array("state" => 101, "info" => $langData['marry']['5']['16']); //发布到数据时发生错误，请检查字段内容！
            }
        } elseif ($oper == 'update') {

            $updatesql = $dsql->SetQuery("UPDATE `#@__shop_huodongsign` SET `ktime` = '$kanstime',`etime` = '$kanetime',`state` = '$customhuodongFabuCheck',`huodongprice` = '$hdprice' ,`barruletype` = '$barruletype',`barrule` = '$barrule',`huodongnumber` = '$huodongnumber',`limitcount` = '$limit',`pinspecification` = '" . addslashes($specifival) . "',`pintime` = '$pintime',`changci` = '$changci',`huodonginventory` = '$inventory' WHERE `id` = '$hid'");


            $updateres = $dsql->dsqlOper($updatesql, "update");
            if ($updateres == 'ok') {

                //库存数量，使用redis优化
                if ($HN_memory && $HN_memory->enable) {
                    $memoryKey = "shop_product_huodong_$hid";
                    $products_sql = $dsql->SetQuery("select `huodongtype`,`huodonginventory`,`huodongsales`,`pinspecification` from `#@__shop_huodongsign` where `id`=$hid");
                    $products = $dsql->dsqlOper($products_sql, "results");
                    $products = $products[0];
                    //解析数据（如果是多规则，则每个规格单独设立库存）
                    if ($products['pinspecification']) {
                        $kucun = $products['pinspecification'];
                        $kucun = json_decode($kucun, true);
                        foreach ($kucun as $v) {
                            $guige = $v['id'];  // 规格名
                            $guigeKc = $v['stock'];  // 规格库存
                            $guigeKey =        $memoryKey . "_" . $guige;
                            $HN_memory->rm($guigeKey);  // 删除、再新增
                            // 审核通过
                            if ($customhuodongFabuCheck == 1) {
                                for ($i = 1; $i <= $guigeKc; $i++) {  // 必须从1开始
                                    $HN_memory->rpush($guigeKey, $i);
                                }
                            }
                        }
                    }
                    // 单规格，一个商品对应一个库存
                    else {
                        $HN_memory->rm($memoryKey);  // 删除、再新增
                        $kucun = $products['huodonginventory'];
                        if ($customhuodongFabuCheck == 1) {
                            for ($i = 1; $i <= $kucun; $i++) { // 必须从1开始
                                $HN_memory->rpush($memoryKey, $i);
                            }
                        }
                    }
                }

                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid   = $siteCityInfo['cityid'];
                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
                $param    = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户：" . $userinfo['nickname'] . " \r\n修改了活动商品：：" . $protitle . ($customhuodongFabuCheck == 1 ? '等待审核!' : ''),
                        'date'      => date("Y-m-d H:i:s", GetMkTime(time())),
                    )
                );
                updateAdminNotice("shop", "store", $param);
                return 'ok';
            }
        }
    }

    /**
     * Notes: 活动详情
     * Ueser: Administrator
     * DateTime: 2021/3/8 15:08
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function huodongDetail()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (is_array($this->param)) {

            $huodongid = $this->param['id'];
        } else {

            $huodongid = $this->param;
        }

        $uid = $userLogin->getMemberID();

        if ($uid < 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!is_numeric($huodongid) && $huodongid == '') return array("state" => 200, "info" => '格式错误');  //登录超时，请重新登录！

        $huodongdetail = array();

        $sql = $dsql->SetQuery("SELECT p.`id`,p.`title`,p.`litpic`,p.`price`,p.`mprice`,h.`huodongprice`,h.`huodongnumber`,h.`barruletype`,h.`barrule`,h.`huodonginventory`,h.`limitcount`,h.`ktime`,h.`etime`,h.`pintime`,h.`pinspecification` ,h.`changci`,h.`huodongtype`,p.`promotype` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` WHERE h.`id` = '$huodongid'");
        $res = $dsql->dsqlOper($sql, "results");

        if ($res) {
            $huodongdetail['goodid']           = $res[0]['id'];
            $huodongdetail['title']            = $res[0]['title'];
            $huodongdetail['litpic']           = getFilePath($res[0]['litpic']);
            $huodongdetail['mprice']           = $res[0]['mprice'];
            $huodongdetail['price']            = $res[0]['price'];
            $huodongdetail['huodongprice']     = $res[0]['huodongprice'];
            $huodongdetail['huodongnumber']    = $res[0]['huodongnumber'];
            $huodongdetail['huodongtype']      = $res[0]['huodongtype'];
            $huodongdetail['barruletype']      = $res[0]['barruletype'];
            $huodongdetail['barrule']          = $res[0]['barrule'] != '' ? unserialize($res[0]['barrule']) : '';
            $huodongdetail['huodonginventory'] = $res[0]['huodonginventory'];
            $huodongdetail['limit']            = $res[0]['limitcount'];
            $huodongdetail['pintime']          = $res[0]['pintime'];
            $huodongdetail['ktime']            = $res[0]['ktime'];
            $huodongdetail['etime']            = $res[0]['etime'];
            $huodongdetail['changci']          = $res[0]['changci'];
            $huodongdetail['promotype']        = $res[0]['promotype'];
            if ($res[0]['huodongtype'] == 1) {

                $changcisql = $dsql->SetQuery("SELECT `title` FROM `#@__shopsessionsite` WHERE `id` = '" . $res[0]['changci'] . "'");

                $changcires = $dsql->dsqlOper($changcisql, "results");

                if ($changcires) {

                    $huodongdetail['changcititle'] = date("Y-m-d", $res[0]['ktime']) . ' ' . $changcires[0]['title'];
                    $huodongdetail['changcinem']   = $changcires[0]['title'];
                }
            }
            $huodongdetail['pinspecification'] = $res[0]['pinspecification'];

            $huodongpricearr = array();
            if ($res[0]['pinspecification'] != '') {


                $huodongpricearr = json_decode($res[0]['pinspecification'], true);
                foreach ($huodongpricearr as $k_ => $v_) {
                    $huodongpricearr[$k_]['price'] = array($v_['mprice'], $v_['price'], $v_['stock']);
                    unset($huodongpricearr[$k_]['mprice']);
                    unset($huodongpricearr[$k_]['stock']);
                }

                $this->param = $res[0]['id'];

                $gooddetail = $this->detail(1);
            }
            $huodongdetail['specifiVal'] = $huodongpricearr ? json_encode($huodongpricearr) : '';
            $huodongdetail['specificationArr'] = $gooddetail['specificationArr'] ? json_encode($gooddetail['specificationArr']) : '';
            $huodongdetail['specifiList']      = $huodongpricearr ? json_encode($huodongpricearr) : '';
        }

        return $huodongdetail;
    }

    /**
     * 支付成功
     * 此处进行支付成功后的操作，例如发送短信等服务
     *
     */
    public function paySuccess()
    {
        global $langData;
        global $cfg_timeZone;
        global $userLogin;
        global  $cfg_pointRatio;

        $time51 = $cfg_timeZone * -1;
        @date_default_timezone_set('Etc/GMT' . $time51);

        $param = $this->param;
        if (!empty($param)) {
            global $dsql;

            $paytype  = $param['paytype'];
            $confirmtype = $param['confirmtype'];
            $paramArr = explode(",", $param['ordernum']);
            $date     = GetMkTime(time());

            foreach ($paramArr as $key => $value) {

                //查询订单信息
                $archives = $dsql->SetQuery("SELECT o.`id`, o.`userid`, o.`paydate`, o.`logistic`, o.`amount`, o.`balance`, o.`payprice`, o.`point`, o.`branchid`,o.`huodongtype`,o.`pinid`,o.`hid`,o.`peerpay`,o.`usequan`,o.`changetype`,o.`changeprice`,o.`protype`,s.`title`,s.`id` sid, s.`userid` uid,  b.`userid` branchuid FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = o.`branchid` WHERE o.`ordernum` = '$value' AND o.`orderstate` !=1");

                $res = $dsql->dsqlOper($archives, "results");
                if ($res) {

                    $order_id       = (int)$res[0]['id'];
                    $order_amount   = $res[0]['amount'];
                    if ((int)$res[0]['changetype'] == 1) {
                        $order_amount   = $res[0]['changeprice'];
                    }
                    $order_balance  = (float)$res[0]['balance'];
                    $order_payprice = $res[0]['payprice'];
                    $order_point    = $res[0]['point'];
                    $order_branchid = $res[0]['branchid'];
                    $branchuid      = $res[0]['branchuid'];
                    $shopname       = $res[0]['title'];
                    $huodongtype    = $res[0]['huodongtype'];
                    $pinid          = $res[0]['pinid'];
                    $hid            = $res[0]['hid'];
                    $peerpay        = $res[0]['peerpay'];
                    $usequan        = $res[0]['usequan'];
                    $orderrotype    = (int)$res[0]['protype'];
                    $pointprice =   $order_point / $cfg_pointRatio;
                    // $order_amount =  sprintf("%.2f",$order_amount - $pointprice);

                    //如果余额支付金额大于订单金额
                    // if($order_balance && $order_balance > $order_amount){
                    //     $order_balance = sprintf("%.2f", $order_amount - $order_payprice);
                    // }

                    //如果使用的不是余额支付，更新balance值为0
                    if($paytype != 'balance' && $paytype != 'money' && $paytype != 'point,money'){
                        $order_balance = 0;
                    }
                    //如果使用的余额支付，但是余额为0，这时重新计算使用的余额
                    elseif($order_balance == 0){
                        $order_balance = (float)sprintf("%.2f", $order_amount - $pointprice);

                        //更新数据库
                        $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `balance` = '$order_balance' WHERE `id` = '$order_id'");
                        $dsql->dsqlOper($sql, "update");
                    }

                    // $bind_print          	= $res[0]['bind_print'];
                    // $print_config        	= $res[0]['print_config'];
                    // $branchbind_print    	= $res[0]['branchbind_print'];
                    // $branchprint_config  	= $res[0]['branchprint_config'];

                    $sid     = $res[0]['sid'];
                    $orderid = $res[0]['id'];

                    //打印机查询(2020/4/28)
                    $printsql = $dsql->SetQuery("SELECT * FROM `#@__business_shop_print` WHERE  `sid` = " . $sid . " AND `service` = 'shop'");
                    $printret = $dsql->dsqlOper($printsql, "results");

                    //                $bind_print = $printret['bind_print'];
                    // if(!empty($order_branchid)){
                    // 	$bprintsql = $dsql->SetQuery("SELECT * FROM `#@__shop_shopprint` WHERE `type` = 1 AND `sid` = ".$order_branchid);
                    //                	$bprintret = $dsql->dsqlOper($bprintsql,"results");

                    //                	$bprintret = $bprintret[0];
                    //                	$branchbind_print 	= $bprintret['bind_print'];
                    // 	if($branchbind_print!=1 || empty($bprintret)){
                    // 		$bind_print   = $bind_print;
                    // 		$print_config = $printret;
                    // 	}else{
                    // 		$bind_print   = $branchbind_print;
                    // 		$print_config = $bprintret;
                    // 	}
                    // }else{
                    // 	$bind_print   = $bind_print;
                    // 	$print_config = $printret;
                    // }

                    // 查询订单商品
                    $arc     = $dsql->SetQuery("SELECT `proid`, `speid`, `count`, `logistic`, `point`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `orderid` = " . $res[0]['id']);
                    $proList = $dsql->dsqlOper($arc, "results");

                    $orderid = $res[0]['id'];
                    $userid  = $res[0]['userid'];
                    $uid     = $res[0]['uid'];
                    $paydate = $res[0]['paydate'];

                    $totalPrice = $upoint = $ubalance = 0;

                    //判断是否已经更新过状态，如果已经更新过则不进行下面的操作
                    if ($paydate == 0) {
                        //更新订单状态
                        //判断是否未货到付款
                        $archives = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = '1', `paydate` = '$date', `paytype` = '$paytype', `balance` = '$order_balance' WHERE `ordernum` = '$value'");
                        $dsql->dsqlOper($archives, "update");

                        foreach ($proList as $k => $val) {
                            $proid      = $val['proid'];
                            $speid      = $val['speid'];
                            $count      = $val['count'];
                            $totalPrice += $val['payprice'];
                            //							$upoint     += $val['point'];
                            //							$ubalance   += $val['balance'];


                            //更新库存，付款减库存
                            $sql = $dsql->SetQuery("SELECT `specification`, `inventoryCount`,`pinnumber`,`protype`,`quantime`,`qtimetype` FROM `#@__shop_product` WHERE `id` = $proid");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {

                                /*发放商城券*/
                                //                                $protype   = $ret[0]['protype'];
                                $qetime    = $ret[0]['quantime'];
                                $qtimetype = $ret[0]['qtimetype'];


                                if ($qtimetype == 1) {
                                    $qetime = GetMkTime(time()) + 24 * 3600 * $qetime;
                                }
                                if ($huodongtype == 4) {
                                    $huodongsql = $dsql->SetQuery("SELECT `pinspecification`,`huodongnumber`,`pintime` FROM `#@__shop_huodongsign` WHERE `id` = '$hid'");
                                    $huodongres = $dsql->dsqlOper($huodongsql, "results");

                                    $pinnumber = $huodongres[0]['huodongnumber'];

                                    $pintime = $ret[0]['pintime'];

                                    if ($pinid) {
                                        $pinSuc = false;
                                        $sql    = $dsql->SetQuery("SELECT * FROM `#@__shop_tuanpin` WHERE `id` = $pinid");
                                        $pin    = $dsql->dsqlOper($sql, "results");
                                        if ($pin) {
                                            $pin    = $pin[0];
                                            $fields = array();
                                            array_push($fields, "`people` = `people` + 1");
                                            // 创始人 更新拼团状态，开始和结束时间
                                            if ($userid == $pin['userid']) {
                                                $pubdate = GetMkTime(time());
                                                array_push($fields, "`state` = 1, `pubdate` = '$pubdate'");
                                            }
                                            if ($pin['people'] + 1 == $pinnumber) {
                                                array_push($fields, "`state` = 3");
                                                array_push($fields, "`okdate` = $date");
                                                $pinSuc = true;

                                                if ($orderrotype == 1) {
                                                    $pinquansql = $dsql->SetQuery("SELECT op.`count`,o.`id`,op.`proid`,p.`quantime`,p.`qtimetype`,o.`protype` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` LEFT JOIN `#@__shop_product` p  ON op.`proid` = p.`id`WHERE o.`pinid` = $pinid");

                                                    $pinquanres = $dsql->dsqlOper($pinquansql, "results");

                                                    foreach ($pinquanres as $index => $pinquanre) {
                                                        if ($pinquanre['qtimetype'] == 1) {
                                                            $qetime = GetMkTime(time()) + 24 * 3600 * $pinquanre['quantime'];
                                                        }

                                                        $orderid = $pinquanre['id'];
                                                        $carddate = GetMkTime(time());
                                                        for ($i = 0; $i < $count; $i++) {
                                                            $cardnum     = genSecret(12, 1);
                                                            $sqlQuan[$i] = "('$orderid','$proid', '$cardnum', '$carddate', 0, '$qetime')";
                                                        }

                                                        if ($pinquanre['protype'] == 1) {

                                                            $sql = $dsql->SetQuery("INSERT INTO `#@__shopquan` (`orderid`, `proid`,`cardnum`, `carddate`, `usedate`, `expireddate`) VALUES " . join(",", $sqlQuan));
                                                            $dsql->dsqlOper($sql, "update");
                                                        }
                                                    }
                                                }
                                            }
                                            $sql = $dsql->SetQuery("UPDATE `#@__shop_tuanpin` SET " . join(",", $fields) . " WHERE `id` = $pinid");
                                            $dsql->dsqlOper($sql, "update");
                                        }
                                    }
                                } elseif ($huodongtype == 3) {

                                    global $customshopbargainingnomoney; /*未到底价是否可以下单*/

                                    if ($customshopbargainingnomoney == 0) {

                                        $sql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `state` = 1 WHERE `oid` = '$orderid'");
                                        $dsql->dsqlOper($sql, "update");
                                    }
                                }
                                if (($protype == 1 || $orderrotype == 1) && $huodongtype != 4) {
                                    $carddate = GetMkTime(time());
                                    for ($i = 0; $i < $count; $i++) {
                                        $cardnum     = genSecret(12, 1);
                                        $sqlQuan[$i] = "('$orderid','$proid', '$cardnum', '$carddate', 0, '$qetime')";
                                    }

                                    $sql = $dsql->SetQuery("INSERT INTO `#@__shopquan` (`orderid`, `proid`,`cardnum`, `carddate`, `usedate`, `expireddate`) VALUES " . join(",", $sqlQuan));
                                    $dsql->dsqlOper($sql, "update");
                                }

                                // 更新订单表中拼团状态
                                if ($pinid && $pinSuc) {
                                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `pinstate` = '1' WHERE `pinid` = $pinid");
                                    $dsql->dsqlOper($sql, "update");
                                }


                                $inventoryCount = (int)$ret[0]['inventoryCount'];

                                if ($huodongtype != 0 && $inventoryCount == 1) {

                                    /*活动减库存*/
                                    global $HN_memory;
                                    if ($HN_memory && $HN_memory->enable) {
                                        // 减少redis中的库存
                                        $memory_key = "shop_product_huodong_{$hid}";
                                        if (!empty($speid)) {
                                            $memory_key .= "_{$speid}";
                                        }
                                        for ($ii = 0; $ii < $count; $ii++) {
                                            $HN_memory->lpop($memory_key);  // 减库存
                                        }
                                    }
                                    $sql1 = $dsql->SetQuery("UPDATE `#@__shop_huodongsign` SET `huodonginventory` = `huodonginventory` - " . $count . ",`huodongsales` = `huodongsales` + " . $count . " WHERE `id` = '$hid'");
                                    $dsql->dsqlOper($sql1, "update");

                                    $specification = $huodongres[0]['pinspecification'];

                                    if (!empty($specification)) {
                                        $nSpec         = array();
                                        $specification = json_decode($specification, true);
                                        foreach ($specification as $k => $v) {
                                            if ($v['id'] == $speid) {
                                                $v['stock'] = $v['stock'] - $count;
                                                $v['stock'] = $v['stock'] < 0 ? 0 : $v['stock'];
                                                array_push($nSpec, $v);
                                            } else {
                                                array_push($nSpec, $v);
                                            }
                                        }


                                        $sql = $dsql->SetQuery("UPDATE `#@__shop_huodongsign` SET `pinspecification` = '" . addslashes(json_encode($nSpec, 256)) . "' WHERE `id` = '$hid'");
                                        $dsql->dsqlOper($sql, "update");
                                    }
                                }


                                if ($huodongtype == 0 && $inventoryCount == 1) {

                                    $invenstr = " `inventory` = `inventory` - " . $count;
                                    $salestr = " `sales` = `sales` + " . $count;

                                    //更新已购买数量
                                    $sql = $dsql->SetQuery("UPDATE `#@__shop_product` SET $invenstr, $salestr WHERE `id` = '$proid'");

                                    $dsql->dsqlOper($sql, "update");


                                    /*拼团活动库存暂未设置*/
                                    $specification = $ret[0]['specification'];

                                    //更新sku库存
                                    if ($speid) {
                                        $sql = $dsql::SetQuery("update `#@__shop_good_sku` set `stock`=`stock`-$count where `id`=" . $speid);
                                        $dsql->update($sql);
                                    }
                                }
                            }
                        }

                        /*更新优惠券已使用*/
                        if (!empty($usequan)) {

                            $quanupdatesql = $dsql->SetQuery("UPDATE `#@__shop_quanlist` SET `usedate` = '$date',`state` = 1 WHERE `id` = '$usequan'");

                            $dsql->dsqlOper($quanupdatesql, "update");
                        }

                        if ($peerpay && $peerpay > 0) {

                            $userid = $peerpay;
                        }
                        //扣除会员积分
                        if (!empty($order_point) && $order_point > 0) {
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - '$order_point' WHERE `id` = '$userid'");

                            if ($peerpay && $peerpay > 0) {
                                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - '$order_point' WHERE `id` = '$peerpay'");
                            }
                            $dsql->dsqlOper($archives, "update");

                            //保存操作日志
                            $info = $langData['shop'][4][18] . '：' . $value;  //支付商城订单
                            $user  = $userLogin->getMemberInfo($userid, 1);
                            $userpoint = $user['point'];
                            //                            $pointuser  = (int)($userpoint-$order_point);
                            $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '0', '$order_point', '$info', '$date','xiaofei','$userpoint')");

                            if ($peerpay && $peerpay > 0) {
                                $user  = $userLogin->getMemberInfo($peerpay, 1);
                                $userpoint = $user['point'];
                                //                                $pointuser  = (int)($userpoint-$order_point);
                                $info     = $langData['shop'][4][18] . '(代付)：' . $value;  //支付商城订单
                                $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$peerpay', '0', '$order_point', '$info', '$date','xiaofei','$userpoint')");
                            }
                            $dsql->dsqlOper($archives, "update");
                        }
                        //扣除会员余额
                        if (!empty($order_balance) && $order_balance > 0) {

                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$order_balance' WHERE `id` = '$userid'");
                            $dsql->dsqlOper($archives, "update");

                            //保存操作日志，下面已经有冻结的记录，里面包含了余额
                            //$archives = $dsql->SetQuery("INSERT INTO `#@__mem ber_money` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$order_balance', '支付商城订单：$value', '$date')");
                            //$dsql->dsqlOper($archives, "update");

                            //							$totalPrice += $order_balance;
                        }


                        //增加冻结金额

                        // if ($peerpay <= 0) {

                        //     $order_freeze = $order_balance + $order_payprice;
                        //     $archives     = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` + '$order_freeze' WHERE `id` = '$userid'");
                        //     $dsql->dsqlOper($archives, "update");
                        // }

                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `body` like '%$value%' AND `state` = 1");
                        $ret = $dsql->dsqlOper($sql, "results");
                        $pid = '';
                        if ($ret) {
                            $pid = $ret[0]['id'];
                        }
                        $paramUser = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "orderdetail",
                            "action"   => "shop",
                            "id"       => $orderid
                        );
                        $urlParam  = serialize($paramUser);
                        //保存操作日志
                        $info = $langData['shop'][4][19] . '：' . $value;  //商城消费

                        //砍价
                        $title = '商城消费-' . $shopname;

                        if ($huodongtype == 3) {
                            $title = '商城砍价消费-' . $shopname;

                            $bargainsql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `state` = 1 WHERE  `oid` = '" . $res[0]['id'] . "'");

                            $dsql->dsqlOper($bargainsql, "update");
                        }


                        if (!empty($order_balance) && $order_balance > 0) {
                            $user  = $userLogin->getMemberInfo($userid, 1);
                            $usermoney = $user['money'];
                            //                            $money    = sprintf('%.2f',($usermoney-$order_amount));
                            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`urlParam`,`title`,`ordernum`,`balance`) VALUES ('$userid', '0', '$order_balance', '$info', '$date','shop','xiaofei','$pid','$urlParam','$title','$value','$usermoney')");
                            if ($peerpay && $peerpay > 0) {
                                $user  = $userLogin->getMemberInfo($peerpay, 1);
                                $usermoney = $user['money'];
                                //                                $money   = sprintf('%.2f',($usermoney-$order_amount));
                                $info     = $langData['shop'][4][19] . '(代付)：' . $value;  //支付商城订单
                                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`urlParam`,`title`,`ordernum`,`balance`) VALUES ('$peerpay', '0', '$order_balance', '$info', '$date','shop','xiaofei','$pid','$urlParam','$title','$value','$usermoney')");
                            }
                            $dsql->dsqlOper($archives, "update");
                        }

                        //打印机接单
                        if (!empty($printret)) {
                            //                            printerShopOrder($orderid);
                            $this->param['id'] = $orderid;
                            $this->orderPrint();
                        }


                        //支付成功，会员消息通知
                        $paramUser = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "orderdetail",
                            "action"   => "shop",
                            "id"       => $orderid
                        );

                        $paramBusi = array(
                            "service"  => "member",
                            "template" => "orderdetail",
                            "action"   => "shop",
                            "id"       => $orderid
                        );

                        //获取会员名
                        $username = "";
                        $sql      = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                        $ret      = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                        }

                        //自定义配置
                        $config = array(
                            "username" => $username,
                            "order"    => $value,
                            "amount"   => $order_amount,
                            "title"    => "商城订单",
                            "fields"   => array(
                                'keyword1' => '商品信息',
                                'keyword2' => '付款时间',
                                'keyword3' => '订单金额',
                                'keyword4' => '订单状态'
                            )
                        );

                        updateMemberNotice($userid, "会员-订单支付成功", $paramUser, $config);

                        //记录用户行为日志
                        memberLog($userid, 'shop', 'order', 0, 'insert', '下单(' . $value . '=>' . $order_amount . '元)', '', '');

                        //优惠券商品不通知商家
                        if ($protype == 0) {
                            //获取会员名
                            $username = "";
                            $sql      = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $uid");
                            $ret      = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                            }

                            //自定义配置
                            $config = array(
                                "username" => $username,
                                "title"    => "商城订单",
                                "order"    => $value,
                                "amount"   => $order_amount,
                                "fields"   => array(
                                    'keyword1' => '订单编号',
                                    'keyword2' => '商品名称',
                                    'keyword3' => '订单金额',
                                    'keyword4' => '付款状态',
                                    'keyword5' => '付款时间'
                                )
                            );

                            updateMemberNotice($uid, "会员-商家新订单通知", $paramBusi, $config);

                            //获取分店信息
                            if (!empty($order_branchid)) {
                                updateMemberNotice($branchuid, "会员-商家新订单通知", $paramBusi, $config);
                            }
                        }
                    }
                }
            }
        }
    }

    /**
     * 买家申请退款
     */
    public function refund()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_pointRatio;

        $id      = $this->param['id'];       //订单id
        $type    = $this->param['type'];       // 3 平台客服
        $pics    = $this->param['pics'];
        $content = trim($this->param['content']);
        $retmoney = (float)$this->param['retmoney'];
        $proid   = (int)$this->param['proid'];               //  商品id
        $refundtype  = (int)$this->param['refundtype'];               // 退款类型
        $tuinum   = (int)$this->param['tuinum'];               // 退款类型
        $tuinum = $tuinum ? $tuinum : 1;

        if (empty($id) && empty($proid)) return array("state" => 200, "info" => $langData['shop'][4][20]);  //数据不完整，请检查！
        if (!$tuinum) return array("state" => 200, "info" => "请选择要退款的数量");
        if ($type != 3) {
            if (empty($type)) return array("state" => 200, "info" => $langData['shop'][4][21]);  //请选择退款原因！
            //            if (empty($content)) return array("state" => 200, "info" => $langData['shop'][4][22]);  //请输入退款说明！
        }
        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }
        $type    = filterSensitiveWords(addslashes($type));
        $content = filterSensitiveWords(addslashes($content));
        $type    = cn_substrR($type, 20);
        $content = cn_substrR($content, 500);
        $content = $content ? $content : '无';
        //验证订单
        if ($proid) {
            $archives = $dsql->SetQuery("SELECT  ob.`protype`,o.`price`,ob.`ordernum`,ob.`priceinfo`, s.`userid`,ob.`amount`,o.`ret_negotiate`,ob.`exp_company`,ob.`exp_number`,ob.`exp_date`,ob.`shipping`,o.`count`,o.`balance`,o.`point` FROM `#@__shop_order` ob LEFT JOIN `#@__shop_store` s ON s.`id` = ob.`store` LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id` AND o.`proid` = '$proid' WHERE o.`proid` = '$proid' AND o.`orderid` = '$id' AND ob.`userid` = '$uid' AND (ob.`orderstate` = 11 OR ob.`orderstate` = 1 OR ob.`orderstate` = 6 OR (ob.`orderstate` = 2 AND ob.`paydate` != 0)) AND (o.`ret_state` = 0 OR o.`ret_audittype` != 2)");
        } else {
            $archives = $dsql->SetQuery("SELECT o.`protype`,o.`id`, o.`ordernum`,ob.`priceinfo`, s.`userid`,o.`amount`,o.`ret_negotiate` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` WHERE o.`id` = '$id' AND o.`userid` = '$uid' AND (o.`orderstate` = 11 OR o.`orderstate` = 1 OR o.`orderstate` = 6 OR (o.`orderstate` = 2 AND o.`paydate` != 0)) AND (o.`ret_state` = 0 OR o.`ret_audittype` != 2)");
        }
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $userid   = $results[0]['userid'];  //卖家会员ID
            $ordernum = $results[0]['ordernum'];  //订单号
            $amount   = (float)$results[0]['amount'];
            $price    = $results[0]['price'];
            $protype  = $results[0]['protype'];  //订单号
            $balance  = $results[0]['balance'];  //余额
            $point    = $results[0]['point'];  //积分
            // 查询订单商品
            $orderprice = 0;
            $arc = $dsql->SetQuery("SELECT `count`, `logistic`, `price`,`proid`,`point` FROM `#@__shop_order_product` WHERE `orderid` = " . $id);
            $proList = $dsql->dsqlOper($arc, "results");
            $istuan = '';
            if ($proList) {
                foreach ($proList as $key => $value) {
                    $orderprice += $value['count'] * $value['price'] + $value['logistic'] - $value['point'] / $cfg_pointRatio;

                    $prosql = $dsql->SetQuery("SELECT `is_tuikuan`,`protype` FROM `#@__shop_product` WHERE `id` = " . $value['proid']);
                    $prores = $dsql->dsqlOper($prosql, "results");
                    $istuan = $prores[0]['protype'];
                    if ($prores[0]['protype'] == 1 && $prores[0]['is_tuikuan'] == 1) return array("state" => 200, "info" => '此商品不支持退款！');
                    //                        if ((int)$prores[0]['is_tuikuan'] != 0) return array("state" => 200, "info" => '此商品不支持退款！');
                }
            }

            $priceinfo = empty($results[0]['priceinfo']) ? array() : unserialize($results[0]["priceinfo"]);
            $orderDetail["priceinfo"] = $priceinfo;
            $auth_hui = 0;
            if ($priceinfo) {
                foreach ($priceinfo as $key => $value) {
                    $auth_hui += $value['amount'];
                }
            }

            $orderprice -= $auth_hui;

            //需要退款的金额
            $tuiAmount = $retmoney <= $orderprice ? $retmoney : $orderprice;
            $tuiAmount = sprintf('%.2f', $tuiAmount);
            
            if ($protype == 1) {
                if ($tuinum == 0) {
                    $tuinum = 1;
                }
                //查询优惠券
                $_tuinum = 0;
                $archives = $dsql->SetQuery("SELECT `id`,`ret_state` FROM `#@__shopquan` WHERE `orderid` = '$id' AND `ret_state` = 0 AND `usedate` = 0 ORDER BY `id` ASC LIMIT $tuinum ");
                $proresid = $dsql->dsqlOper($archives, "results");
                $qids = array();
                foreach ($proresid as $kk => $vv) {
                    $_tuinum++;
                    array_push($qids, $vv['id']);
                    $sql = $dsql->SetQuery("UPDATE `#@__shopquan` SET `ret_state` = 1 WHERE `id` = '" . $vv['id'] . "'");
                    $dsql->dsqlOper($sql, "update");
                }
                $tuinum = $_tuinum;
                if ($tuinum == 0) return array("state" => 200, "info" => "没有可退的订单");
                $retstate = array_column($proresid, 'ret_state');
                if (!in_array(0, $retstate)) {
                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 6, `ret_state` = 1  WHERE `id` = " . $id);
                    $dsql->dsqlOper($sql, "update");
                }
                $shopcount = $results[0]['count'];
                $danjiabalance = ($balance / $shopcount) * $tuinum;                //钱
                $danjiapoint = ($point / $shopcount) * $tuinum;                 //积分
                //                //验证订单
                $quanarchive = $dsql->SetQuery("SELECT  ob.`ordernum`, ob.`userid`, o.`balance`, o.`point`, o.`logistic`, o.`payprice`, ob.`huodongtype`,ob.`paytype`,o.`refrundno`,ob.`peerpay`,s.`title`,s.`userid` uid FROM `#@__shop_order` ob LEFT JOIN  `#@__shopquan` quan ON quan.`orderid` = ob.`id` LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id` AND o.`proid` = '$proid' LEFT JOIN `#@__shop_store` s ON ob.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON ob.`branchid` = b.`id` LEFT JOIN `#@__member` m ON s.`userid` = m.`id` WHERE ob.`id` = '$id' AND quan.`ret_state` = 1");
                $results = $dsql->dsqlOper($quanarchive, "results");
                if ($results) {
                    $orderid = $results[0]['id'];         //需要退回的订单ID
                    $ordernum = $results[0]['ordernum'];   //需要退回的订单号
                    $userid  = $results[0]['userid'];     //需要退回的会员ID
                    $uid     = $results[0]['uid'];        //商家会员ID
                    $balance = $danjiabalance;    //余额支付
                    $point = $danjiapoint;      //积分支付
                    $payprice = $results[0]['payprice'];   //实际支付
                    $logistic = $results[0]['logistic'];   //运费
                    $shopname = $results[0]['title'];   //运费
                    $paytype = $results[0]["paytype"];
                    $refrundno = $results[0]["refrundno"];
                    $peerpay = $results[0]["peerpay"];

                    //砍价订单
                    if ($results[0]['huodongtype'] == 3) {
                        //查询砍价金额
                        $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `oid` = " . $id);
                        $bargainres = $dsql->dsqlOper($bargainsql, "results");
                        $payprice = $bargainres[0]['state'] == 2 ? (float)$bargainres[0]['gmoney'] : (float)$bargainres[0]['gnowmoney'];
                    }

                    // $orderTotalAmount = (float)sprintf('%.2f', $balance + $payprice + $point / $cfg_pointRatio);
                    $orderTotalAmount = (float)sprintf('%.2f', $balance + $payprice);  //退款金额不计算积分抵扣的费用
                    $totalPoint = 0;

                    $freezeamount = (float)$balance + (float)$payprice;
                    //混合支付退款
                    $refrunddate = GetMkTime(time());
                    $online_amount = $refrund_online = $orderTotalAmount;
                    $arr = refund('shop', $peerpay, $paytype, $payprice, $ordernum, $refrundno, $balance, $id);
                    $r = $arr[0]['r'];
                    $refrunddate = $arr[0]['refrunddate'] ? $arr[0]['refrunddate'] : $refrunddate;
                    $refrundno   = $arr[0]['refrundno'];
                    $refrundcode = $arr[0]['refrundcode'];
                    //更新订单状态
                    if ($r) {

                        $pointinfo = '商城订单退回：$ordernum';
                        $balanceinfo = '商城订单退款：$ordernum';
                        if ($point != 0) {
                            $pointinfo = '商城订单退回：(积分退款:' . $point . ',现金退款：' . $payprice . ',余额退款：' . $balance . ')：' . $ordernum;
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$point' WHERE `id` = '$userid'");
                            $dsql->dsqlOper($archives, "update");
                            $user = $userLogin->getMemberInfo($userid, 1);
                            $userpoint = $user['point'];
                            //                    $pointuser  = (int)($userpoint+$point);
                            //保存操作日志
                            $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '1', '$point', '$pointinfo', " . GetMkTime(time()) . ",'tuihui','$userpoint')");
                            $dsql->dsqlOper($archives, "update");
                        }
                        if ($balance != 0) {

                            $pay_name = '';
                            $pay_namearr = array();
                            $paramUser = array(
                                "service" => "member",
                                "type" => "user",
                                "template" => "orderdetail",
                                "action" => "shop",
                                "id" => $id
                            );
                            $urlParam = serialize($paramUser);

                            $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $paytype . "'");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if (!empty($ret)) {
                                $pay_name = $ret[0]['pay_name'];
                            } else {
                                $pay_name = $ret[0]["paytype"];
                            }

                            if ($pay_name) {
                                array_push($pay_namearr, $pay_name);
                            }

                            if ($balance != '') {
                                array_push($pay_namearr, "余额");
                            }

                            if ($point != '') {
                                array_push($pay_namearr, "积分");
                            }

                            if ($pay_namearr) {
                                $pay_name = join(',', $pay_namearr);
                            }

                            $tuikuan = array(
                                'paytype' => $pay_name,
                                'truemoneysy' => $payprice,
                                'money_amount' => $balance,
                                'point' => $point,
                                'refrunddate' => $refrunddate,
                                'refrundno' => $refrundno
                            );
                            $tuikuanparam = serialize($tuikuan);
                            $balanceinfo = '商城订单退款：(积分退款：' . $point . '，现金退款：' . $payprice . '，余额退款：' . $balance . ')：' . $ordernum;
                            $userOpera = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + " . $balance . " WHERE `id` = " . $userid);
                            $dsql->dsqlOper($userOpera, "update");
                            $user = $userLogin->getMemberInfo($userid, 1);
                            $usermoney = $user['money'];
                            //记录退款日志
                            $logs = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `amount`, `type`, `info`, `date`,`ordertype`,`ctype`,`urlParam`,`ordernum`,`tuikuanparam`,`title`,`balance`) VALUES ('$userid', '$balance', '1', '$balanceinfo', '" . GetMkTime(time()) . "','shop','tuikuan','$urlParam','$ordernum','$tuikuanparam','商城消费','$usermoney')");
                            $dsql->dsqlOper($logs, "update");
                        }
                        if ($peerpay <= 0) {
                            /*商家扣除冻结金额*/
                            $usersql = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` - $freezeamount WHERE `id` = " . $userid);
                            $dsql->dsqlOper($usersql, "update");
                        }
                        $now = GetMkTime(time());

                        //查询优惠券
                        $archives = $dsql->SetQuery("SELECT `id`,`ret_state` FROM `#@__shopquan` WHERE `orderid` = '$id'");
                        $proresid = $dsql->dsqlOper($archives, "results");
                        $retstate = array_column($proresid, 'ret_state');
                        if (in_array(1, $retstate)) {

                            $sql = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET  `user_refundtype` = '$refundtype',`ret_state` = 0, `ret_type` = '$type', `ret_note` = '$content', `ret_pics` = '$pics', `ret_date` = " . GetMkTime(time()) . ",`ret_audittype` = 0 WHERE `proid` = '$proid' AND `orderid` = '$id'");
                            $dsql->dsqlOper($sql, "update");

                            $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 7, `ret_state` = 0, `ret_amount` = '$orderTotalAmount', `ret_type` = '$type', `ret_note` = '$content', `ret_pics` = '$pics', `ret_date` = " . GetMkTime(time()) . ", `ret_ok_date` = " . GetMkTime(time()) . " WHERE `id` = " . $id);
                            $dsql->dsqlOper($orderOpera, "update");
                        }
                        //获取会员名
                        $username = "";
                        $sql = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                        }

                        $paramBusi = array(
                            "service" => "member",
                            "type" => "user",
                            "template" => "orderdetail",
                            "action" => "shop",
                            "id" => $orderid
                        );
                        //自定义配置
                        $config = array(
                            "username" => $username,
                            "order" => $ordernum,
                            "amount" => $orderTotalAmount,
                            "info" => $content,
                            "fields" => array(
                                'keyword1' => '退款状态',
                                'keyword2' => '退款金额',
                                'keyword3' => '审核说明'
                            )
                        );

                        updateMemberNotice($userid, "会员-订单退款成功", $paramBusi, $config);


                        return $langData['siteConfig'][9][34];  //退款成功

                    }else{
                        //退款失败的，恢复券的状态
                        if($qids){
                            $qids = join(',', $qids);
                            $sql = $dsql->SetQuery("UPDATE `#@__shopquan` SET `ret_state` = 0 WHERE `id` IN ($qids)");
                            $dsql->dsqlOper($sql, "update");
                        }

                        return array("state" => 200, "info" => "退款失败，请联系客服处理，错误代码：Service Error");
                    }
                }
            } else {

                if ($type == 3) {
                    $ret_negotiate = unserialize($results[0]['ret_negotiate']);
                    $refundinfo                 = array();
                    if ($ret_negotiate) {
                        $refundinfo['typename']     = '买家申请客服介入';
                        $refundinfo['refundinfo']   = $this->param['retnote'];
                        $refundinfo['refundtype']   = $type;
                        $refundinfo['tuikuanmoney'] = $tuiAmount;
                        $now                        = GetMkTime(time());
                        $refundinfo['datetime']     = $now;
                        $refundinfo['type']         = $refundtype;
                        $ret_negotiate['numeber']   = 2;
                        $refundinfo['status']       = 0;
                        $refundinfo['service']      = 1;
                        $refundinfo['typestatus']   = 0;     // 0买家   1卖家   2客服
                        $refundinfo['pics']         = $pics;


                        array_push($ret_negotiate['refundinfo'], $refundinfo);
                    }
                    $ret_negotiate = serialize($ret_negotiate);

                    $date = GetMkTime(time());

                    $platformArr = array();
                    $platformArr['id'] = $this->param['id'];
                    $platformArr['name'] = $this->param['name'];
                    $platformArr['mobile'] = $this->param['mobile'];
                    $platformArr['rettype'] = $this->param['rettype'];
                    $platformArr['price'] = $this->param['price'];
                    $platformArr['retnote'] = $this->param['retnote'];
                    $platformArr['pics'] = $this->param['pics'];
                    $platformArr = serialize($platformArr);

                    //                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `user_refundtype` = 2,`ret_negotiate` = '$ret_negotiate',`platform` = '$platformArr' WHERE `id` = " . $id);

                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `user_refundtype` = 2,`ret_negotiate` = '$ret_negotiate',`platform` = '$platformArr' WHERE `orderid` = '$id' AND `proid` = '$proid'");
                    $dsql->dsqlOper($sql, "update");
                    return $langData['siteConfig'][20][244];  //操作成功
                }
                $paramBusi = array(
                    "service" => "member",
                    "template" => "orderdetail",
                    "action" => "shop",
                    "id" => $id
                );

                //获取会员名
                $username = "";
                $sql = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                }

                //自定义配置
                $config = array(
                    "username" => $username,
                    "order" => $ordernum,
                    "amount" => $tuiAmount,
                    "note" => $content,
                    "fields" => array(
                        'reason' => '退款原因',
                        'refund' => '退款金额'
                    )
                );

                updateMemberNotice($userid, "会员-订单退款通知", $paramBusi, $config);

                if ($results[0]['ret_negotiate'] == '') {
                    $refundinfo                 = $ret_negotiate = array();
                    $refundinfo['typename']     = '买家创建了退款申请';
                    $refundinfo['refundinfo']   = $content;
                    $refundinfo['refundtype']   = 0;
                    $refundinfo['tuikuanmoney'] = $tuiAmount;
                    $now                        = GetMkTime(time());
                    $refundinfo['datetime']     = $now;
                    $refundinfo['type']         = $refundtype;
                    $ret_negotiate['numeber']   = 1;
                    $refundinfo['status']       = 0;
                    $refundinfo['typestatus']         = 0;     // 0买家   1卖家   2客服
                    $refundinfo['pics']         = $pics;

                    $ret_negotiate['refundinfo'] = array();
                    array_push($ret_negotiate['refundinfo'], $refundinfo);
                    $ret_negotiate = serialize($ret_negotiate);
                } else {
                    $nerefund = unserialize($results[0]['ret_negotiate']);
                    $retArr = $nerefund['refundinfo'][count($nerefund['refundinfo']) - 1];
                    if ($retArr['status'] == 0) {
                        $ret_negotiate = unserialize($results[0]['ret_negotiate']);
                        $refundinfo                 = array();
                        if ($ret_negotiate) {
                            $refundinfo['typename']     = '买家修改了退款申请';
                            $refundinfo['refundinfo']   = $content;
                            $refundinfo['refundtype']   = $type;
                            $refundinfo['tuikuanmoney'] = $tuiAmount;
                            $now                        = GetMkTime(time());
                            $refundinfo['datetime']     = $now;
                            $refundinfo['type']         = $refundtype;
                            $ret_negotiate['numeber']   = 1;
                            $refundinfo['status']       = 0;
                            $refundinfo['typestatus']   = 0;
                            $refundinfo['pics']         = $pics;
                            array_push($ret_negotiate['refundinfo'], $refundinfo);
                        }
                        $ret_negotiate = serialize($ret_negotiate);
                    }
                }
                $nerefund = unserialize($results[0]['ret_negotiate']);
                if ($nerefund) {
                    $retArr = $nerefund['refundinfo'][count($nerefund['refundinfo']) - 1];
                }
                if ($retArr['status'] != 0) {
                    $ret_negotiate = unserialize($results[0]['ret_negotiate']);
                    $refundinfo                 = array();
                    if ($ret_negotiate) {
                        $refundinfo['typename']     = '买家修改了退款申请';
                        $refundinfo['refundinfo']   = $content;
                        $refundinfo['refundtype']   = $type;
                        $refundinfo['tuikuanmoney'] = $tuiAmount;
                        $now                        = GetMkTime(time());
                        $refundinfo['datetime']     = $now;
                        $refundinfo['type']         = $refundtype;
                        $ret_negotiate['numeber']   = 2;
                        $refundinfo['status']       = 0;
                        $refundinfo['pics']         = $pics;

                        $refundinfo['typestatus']   = 0;
                        array_push($ret_negotiate['refundinfo'], $refundinfo);
                    }
                    $ret_negotiate = serialize($ret_negotiate);
                }
                $date = GetMkTime(time());

                $sql = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET  `user_refundtype` = '$refundtype',`ret_state` = 1, `ret_type` = '$type', `ret_note` = '$content', `ret_pics` = '$pics', `ret_date` = '$date',`ret_negotiate` = '$ret_negotiate',`ret_audittype` = 0 WHERE `proid` = '$proid' AND `orderid` = '$id'");
                $dsql->dsqlOper($sql, "update");

                // $archives = $dsql->SetQuery("SELECT o.`ret_state` FROM `#@__shop_order` ob LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id`  WHERE o.`orderid` = '$id'");
                // $ret_state = $dsql->dsqlOper($archives, "results");
                // $retstate = array_column($ret_state, 'ret_state');
                // if (!in_array(0, $retstate)) {
                $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 6, `ret_state` = 1, `ret_type` = '$type', `ret_note` = '$content', `ret_pics` = '$pics', `ret_date` = '$date',`ret_negotiate` = '$ret_negotiate', `ret_amount` = '$tuiAmount' WHERE `id` = " . $id);
                $dsql->dsqlOper($sql, "update");
                // }

                return $langData['siteConfig'][20][244];  //操作成功
            }
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][23]);  //操作失败，请核实订单状态后再操作！
        }
    }


    /**
     * 买家确认收货
     */
    public function receipt()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $autoReceiptUserID;
        global $siteCityInfo;
        $id = $this->param['id'];
        //外送员用户id
        $qsuserid = (int)$this->param['did'];

        $time = time();

        if (empty($id)) return array("state" => 200, "info" => $langData['shop'][4][24]);  //操作失败，参数传递错误！

        //获取用户ID
        $uid = $autoReceiptUserID ? $autoReceiptUserID : $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        //验证订单
        $archives = $dsql->SetQuery("SELECT o.`priceinfo`,o.`ordernum`, o.`userid`, o.`paytype`, o.`payprice`, o.`amount`, o.`logistic`, o.`balance`,o.`peisongid`,o.`shipping`,o.`peerpay`,o.`huodongtype`,o.`protype`,s.`title`,s.`userid` uid ,s.`cityid`,o.`shopFee`,p.`price`,o.`changeprice`,o.`changetype` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` LEFT JOIN `#@__shop_order_product` p ON o.`id` = p.`orderid`  WHERE o.`id` = '$id' AND o.`userid` = '$uid' AND o.`orderstate` = 6");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            //更新订单状态
            $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = '3', `okdate` = '$time' WHERE `id` = " . $id);
            $dsql->dsqlOper($sql, "update");


            //将订单费用转至商家账户
            $ordernum    = $results[0]['ordernum'];
            $userid      = $results[0]['userid'];
            $uid         = $results[0]['uid'];
            $amount      = $results[0]['amount'];
            $logistic    = $results[0]['logistic'];
            $balance     = $results[0]['balance'];
            $paytype     = $results[0]['paytype'];
            $payprice    = $results[0]['payprice'];
            $cityid      = $results[0]['cityid'];
            $peisongid   = $results[0]['peisongid'];
            $shipping    = $results[0]['shipping'];
            $shopname    = $results[0]['title'];
            $peerpay     = $results[0]['peerpay'];
            $shopFee     = $results[0]['shopFee'];
            $huodongtype = $results[0]['huodongtype'];
            $price       = $results[0]['price'];
            $protype     = $results[0]['protype'];
            $changeprice    = $results[0]['changeprice'];    //改价的价格
            $changetype    = $results[0]['changetype'];    //是否改价
            $priceinfo   = unserialize($results[0]['priceinfo']);

            $quan  = 0;
            foreach ($priceinfo as $k => $v) {
                if ($v['type'] == 'quan') {
                    $quan      = $v['amount'];
                    $bear      = $v['bear'];                    // 平台
                    $quanbody  = $v['quanname'];
                }
            }
            //            $amount    = $price+$logistic-$quan;       //计算商家


            if ($protype == 1) {
                return array("state" => 200, "info" => "该笔订单操作错误~请检查订单数据类型！");  //登录超时，请重新登录！
            }

            $totalMoney  = $logistic;
            $freezeMoney = 0;

            //判断是否货到付款
            if ($paytype == 'delivery' && $peisongid == 0) {
                if (!empty($payprice) && $payprice > 0) {
                    /* $archives = $dsql->SetQuery("SELECT `money` FROM `#@__member` WHERE `id` = '$userid'");
					$ret = $dsql->dsqlOper($archives, "results");
					if($ret[0]['money'] >= $payprice){
						$archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `moneorderdetail-shopy` - '$payprice' WHERE `id` = '$userid'");
						$dsql->dsqlOper($archives, "update");
					} */
                }
            }

            //计算费用
            $sql = $dsql->SetQuery("SELECT `price`, `count`, `logistic`, `discount`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `ret_ok_date` = 0 AND  `orderid` = $id");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                foreach ($ret as $key => $val) {
                    $totalMoney  += $val['price'] * $val['count'] + $val['discount'];
                    $freezeMoney += $val['balance'] + $val['payprice'];
                }
            }
            if ($bear != 1) {
                $amount = $totalMoney - $quan;
            } else {
                $amount = $totalMoney;
            }
            if ($changetype == 1) {
                $amount = $changeprice;
            }
            if ($amount > 0) {


                /* start  分离订单费用、配送费 */
                $psLogistic = 0;
                $busLogistic = 0;
                //平台配送，则配送费全给平台
                if ($shipping == 0) {
                    $psLogistic = $logistic;
                } else {
                    $busLogistic = $logistic;
                }
                $amount -= $logistic;
                /* 分离订单费用、配送费 end */
                //扣除佣金
                global $cfg_shopFee;
                global $cfg_fzshopFee;
                $cfg_shopFee   = !empty((float)$shopFee) ? (float)$shopFee : (float)$cfg_shopFee;
                $cfg_fzshopFee = (float)$cfg_fzshopFee;
                $fee = $amount * $cfg_shopFee / 100;
                $fee = floor($fee * 100) / 100; // 保留2位小数，不进行四舍五入，服务商分账时，不会四舍五入
                $fee = $fee < 0.01 ? 0 : $fee;
                $amount_ = sprintf('%.2f', $amount - $fee);
                //获取transaction_id
                $pid = 0;
                $transaction_id = $_ordernum = '';
                $sql            = $dsql->SetQuery("SELECT `transaction_id`, `ordernum`,`id`,`amount` FROM `#@__pay_log` WHERE FIND_IN_SET('$ordernum',`body`) AND `state` = 1");
                $ret            = $dsql->dsqlOper($sql, "results");
                $truepayprice   = 0;
                if ($ret) {
                    $truepayprice   = $ret[0]['amount'];
                    $transaction_id = $ret[0]['transaction_id'];
                    $_ordernum      = $ret[0]['ordernum'];
                    $pid            = $ret[0]['id'];
                }

                /* start 合并配送费 */
                $fee += $psLogistic;
                $amount_ += $busLogistic;
                $amount += $logistic;
                /* 合并配送费 end */


                //校验配送员id是否合法
                if ($qsuserid) {
                    $checkqs = $dsql->SetQuery("SELECT `id`,`qsamount` FROM `#@__shop_order` WHERE `id` = $id AND `songdate` != 0 AND `peisongid` = $qsuserid");
                    $qs = $dsql->getArr($checkqs);
                    if (!is_array($qs) || empty($qs)) { //如果不是数组，失败，如果数组为空，失败
                        $qsuserid = 0;
                    }
                }
                /*给骑手钱*/
                if ($qsuserid) {
                    $qsMoney =  $qs['qsamount'];

                    $updatesql = $dsql->SetQuery("UPDATE `#@__waimai_courier` SET `money` = `money`+'$qsMoney' WHERE `id` = '$qsuserid'");
                    $dsql->dsqlOper($updatesql, "update");
                    $selectsql = $dsql->SetQuery("SELECT `money` FROM  `#@__waimai_courier`  WHERE `id` = '$qsuserid'");           //查询骑手余额
                    $courieMoney = $dsql->dsqlOper($selectsql, "results");
                    $courierMoney = $courieMoney[0]['money'];
                    $date = GetMkTime(time());
                    $info = '商品配送收入-订单号-' . $ordernum;
                    //记录操作日志
                    $insertsql = $dsql->SetQuery("INSERT INTO  `#@__member_courier_money` (`userid`,`type`,`amount`,`info`,`date`,`balance`) VALUES ('$qsuserid','1','$qsMoney','$info','$date','$courierMoney')");
                    $dsql->dsqlOper($insertsql, "update");

                    //平台剩余的钱，等于 平台金额-骑手金额
                    $fee -= $qsMoney;
                }


                //分销信息
                global $cfg_fenxiaoState;
                global $cfg_fenxiaoSource;
                global $cfg_fenxiaoDeposit;
                global $cfg_fenxiaoAmount;
                include HUONIAOINC . "/config/shop.inc.php";
                $fenXiao = (int)$customfenXiao;

                $fenxiaoparamarr = fenXiaoMoneyCalculation('shop', $ordernum);
                //                //分销金额
                //                if ($cfg_fenxiaoState && $fenXiao) {
                //
                //                    //商家承担
                //                    if($cfg_fenxiaoSource == 1) {
                //                        $amount_ = $amount_ - $fenxiaoparamarr['totalAmount'];
                //                    }else{ //平台承担
                //                        $fee = $fee - $fenxiaoparamarr['totalAmount'];
                //                    }
                //                }

                $fenxiaoTotalPrice = $fenxiaoparamarr['totalAmount'];
                $precipitateMoney = 0;  //计算沉淀金额
                $bearfenyong = 0;

                //活动商品没有分销佣金
                if ($cfg_fenxiaoState && $fenXiao == 1 && $huodongtype == 0) {
                    $fenxiaoparamarr['amount'] = $fenxiaoTotalPrice;
                    (new member())->returnFxMoney("shop", $userid, $ordernum, $fenxiaoparamarr);
                    $_title = '商城消费，订单号：' . $ordernum;
                    //查询一共分销了多少佣金
                    $fenxiaomoneysql = $dsql->SetQuery("SELECT SUM(`amount`) allfenxiao FROM `#@__member_fenxiao` WHERE `ordernum` = '$_title' AND `module`= 'shop'");
                    $fenxiaomonyeres = $dsql->dsqlOper($fenxiaomoneysql, "results");
                    if (!$cfg_fenxiaoDeposit) {
                        $fenxiaoTotalPrice = $fenxiaomonyeres[0]['allfenxiao'];
                    } else {
                        //沉淀的钱 = 应该分销的钱 - 实际分销的钱
                        $precipitateMoney = $fenxiaoTotalPrice - $fenxiaomonyeres[0]['allfenxiao'];
                    }
                // }

                // if ($cfg_fenxiaoState && $fenXiao) {
                    //商家承担
                    if ($cfg_fenxiaoSource) {
                        //记录沉淀资金
                        if ($precipitateMoney > 0) {
                            (new member())->recodePrecipitationMoney($uid, $ordernum, '商城店铺收入-' . $shopname, $precipitateMoney, $cityid, "shop");
                        }
                        $amount_ = $amount_ -  $fenxiaoTotalPrice;   //没有分佣完的钱在加给商家
                        $bearfenyong = 2;
                        //平台承担
                    } else {
                        $fee = $fee - $fenxiaoTotalPrice;                //没有分佣完的钱在加给平台
                        $bearfenyong = 1;
                    }

                    //更新订单分销明细
                    if($huodongtype == 0){
                        $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `fenxiao_amount` = '$fenxiaoTotalPrice', `fenxiao_precipitate` = '$precipitateMoney', `fenxiao_source` = '$cfg_fenxiaoSource' WHERE `id` = " . $id);
                        $dsql->dsqlOper($sql, "update");
                    }
                }
                if ($bear == 1) {
                    $fee -= $quan;
                }
                $amount_ = $amount_ < 0.01 ? 0 : $amount_;

                //货到付款的方式，不给商家增加余额
                if($paytype != 'delivery'){
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$amount_' WHERE `id` = '$uid'");
                    $dsql->dsqlOper($archives, "update");
                }
                $now = GetMkTime(time());

                $paramBusi = array(
                    "service"  => "member",
                    "template" => "orderdetail",
                    "action"   => "shop",
                    "id"       => $id
                );
                $urlParam  = serialize($paramBusi);
                $user  = $userLogin->getMemberInfo($uid, 1);
                $usermoney = $user['money'];
                //商家收入
                $title = '商城店铺收入-' . $shopname;

                //货到付款的方式，不给商家增加余额
                if($paytype != 'delivery'){
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`urlParam`,`title`,`ordernum`,`balance`) VALUES ('$uid', '1', '$amount_', '商城订单：$ordernum', '$now','shop','shangpinxiaoshou','$pid','$urlParam','$title','$ordernum','$usermoney')");
                    $dsql->dsqlOper($archives, "update");
                }

                //分站佣金
                $fzFee = cityCommission($cityid, 'shop');
                //分站
                $fztotalAmount_ = (float)sprintf('%.2f', $fee * (float)$fzFee / 100);
                $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;

                $fee -= $fztotalAmount_;            //平台收入减去分站收入

                $cityName = getSiteCityName($cityid);

                $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` + '$fztotalAmount_' WHERE `cid` = '$cityid'");
                $dsql->dsqlOper($fzarchives, "update");
                //                //分佣 开关
                //                if ($fenXiao == 1 && $huodongtype == 0) {
                //                    $fenxiaoparamarr['amount'] = $fenxiaoparamarr['totalAmount'];
                //                    (new member())->returnFxMoney("shop", $userid, $ordernum, $fenxiaoparamarr);
                //                }
                //计算平台所得
                //                $archives = $dsql->SetQuery("SELECT SUM(`amount`) amount FROM  `#@__member_fenxiao`  WHERE `ordernum` = $ordernum ");
                //                $priceamount =   $dsql->dsqlOper($archives, "results");
                //                if (!$priceamount[0]['amount']){
                //                    $fee +=$fenxiaoparamarr['totalAmount'];
                //                }else{
                //                    $fee +=$fenxiaoparamarr['totalAmount'] - $priceamount[0]['amount'];
                //                }
                //保存操作日志
                $now      = GetMkTime(time());
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`,`bear`) VALUES ('$uid', '1', '$amount', '商城订单：$ordernum', '$now','$cityid','$fztotalAmount_','shop',$fee,'1','shangpinxiaoshou','$bearfenyong')");
                //                $dsql->dsqlOper($archives, "update");
                $lastid = $dsql->dsqlOper($archives, "lastid");
                substationAmount($lastid, $cityid);

                //工行E商通银行分账
                if ($transaction_id) {
                    if ($truepayprice <= 0) {
                        $truepayprice = $amount_;
                    }
                    rfbpShareAllocation(array(
                        "uid"               => $uid,
                        "ordertitle"        => "商城订单收入",
                        "ordernum"          => $_ordernum,
                        "orderdata"         => array(),
                        "totalAmount"       => $amount,
                        "amount"            => $amount_,
                        "channelPayOrderNo" => $transaction_id,
                        "paytype"           => $paytype
                    ));
                }


                //返积分
                (new member())->returnPoint("shop", $userid, $amount, $ordernum, $amount_, $uid);

                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名

                //微信通知
                $param = array(
                    'type'   => "1", //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n分站获得佣金：" . sprintf("%.2f", $fztotalAmount_),
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );

                $params = array(
                    'type'   => "2", //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n平台获得佣金：" . $fee . " \r\n分站获得佣金：" . sprintf("%.2f", $fztotalAmount_),
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                //后台微信通知
                updateAdminNotice("shop", "detail", $param);
                updateAdminNotice("shop", "detail", $params);
            } else {

                $_ordernum = '';
                $sql       = $dsql->SetQuery("SELECT `ordernum` FROM `#@__pay_log` WHERE FIND_IN_SET('$ordernum',`body`) AND `state` = 1");
                $ret       = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $_ordernum = $ret[0]['ordernum'];
                }

                rfbpShareAllocation(array(
                    "uid"      => $uid,
                    "ordernum" => $_ordernum
                ));
            }


            if ($peerpay <= 0) {
                //减去冻结金额
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` - '$amount' WHERE `id` = '$userid'");
                $dsql->dsqlOper($archives, "update");

                //如果冻结金额小于0，重置冻结金额为0
                $archives = $dsql->SetQuery("SELECT `freeze` FROM `#@__member` WHERE `id` = '$userid'");
                $ret      = $dsql->dsqlOper($archives, "results");
                if ($ret) {
                    if ($ret[0]['freeze'] < 0) {
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = 0 WHERE `id` = '$userid'");
                        $dsql->dsqlOper($archives, "update");
                    }
                }
            }
            //保存操作日志
            // $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$balance', '商城消费：$ordernum', '$now')");
            // $dsql->dsqlOper($archives, "update");


            //商家会员消息通知
            $paramBusi = array(
                "service"  => "member",
                "template" => "orderdetail",
                "action"   => "shop",
                "id"       => $id
            );

            //获取会员名
            $username = "";
            $sql      = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $uid");
            $ret      = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
            }

            //自定义配置
            $config = array(
                "username" => $username,
                "title"    => $ordernum,
                "amount"   => $amount,
                "fields"   => array(
                    'keyword1' => '订单编号',
                    'keyword2' => '下单时间',
                    'keyword3' => '订单金额',
                    'keyword4' => '订单状态'
                )
            );

            updateMemberNotice($uid, "会员-商品成交通知", $paramBusi, $config);
            return $langData['siteConfig'][20][244];  //操作成功

        } else {
            return array("state" => 200, "info" => $langData['shop'][4][23]);  //操作失败，请核实订单状态后再操作！
        }
    }


    /**
     * 商家发货
     */
    public function delivery()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $juhe_express_company;

        $id       = $this->param['id'];
        $shipping = (int)$this->param['shipping'];
        $company  = $this->param['company'];
        $number   = $this->param['number'];
        if (empty($id)) return array("state" => 200, "info" => $langData['shop'][4][20]);  //数据不完整，请检查！

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $userDetail = $userLogin->getMemberInfo();
        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '3'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }
        $archives = $dsql->SetQuery("SELECT o.`ret_state` FROM `#@__shop_order` ob LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id` WHERE o.`orderid` = '$id'");
        $ret_state = $dsql->dsqlOper($archives, "results");
        $retstate = array_column($ret_state, 'ret_state');
        if (in_array(1, $retstate)) {
            return array("state" => 200, "info" => '暂有订单未处理!');
        }
        //验证订单
        $archives = $dsql->SetQuery("SELECT o.`id`, o.`userid`, o.`ordernum`, o.`amount`, s.`distribution`, s.`express`, s.`merchant_deliver`,o.`logistic`,s.`shopFee` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON o.`branchid` = b.`id` LEFT JOIN `#@__member` m ON s.`userid` = m.`id` WHERE o.`id` = '$id' AND o.`protype` = 0 AND (s.`userid` = '$uid' OR b.`userid` = '$uid') AND (o.`orderstate` = 1 || o.`orderstate` = 11)");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {

            $userid   = $results[0]['userid'];
            $ordernum = $results[0]['ordernum'];
            $amount   = $results[0]['amount'];
            $logistic   = $results[0]['logistic'];
            $shopFee   = $results[0]['shopFee'];

            $paramBusi = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "orderdetail",
                "action"   => "shop",
                "id"       => $id
            );

            if (($shipping == 0 && !$results[0]['distribution']) || ($shipping == 1 && !$results[0]['express']) || ($shipping == 2 && !$results[0]['merchant_deliver'])) {
                return array("state" => 200, "info" => $langData['siteConfig'][9][72]);  //不支持的配送方式
            } elseif (empty($shipping) && $shipping != 0) {
                return array("state" => 200, "info" => $langData['siteConfig'][9][73]);  //请选择配送方式
            }

            if ($shipping == 1 && (empty($company) || empty($number))) {
                return array("state" => 200, "info" => $langData['siteConfig'][9][74]);  //请填写快递信息
            }

            //获取会员名
            $username = "";
            $sql      = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
            $ret      = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
            }

            //快递类型
            if ($shipping == 1) {
                //更新订单状态
                $now = GetMkTime(time());
                $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 6, `shipping` = '$shipping', `exp_company` = '$company', `exp_number` = '$number', `exp_date` = '$now' WHERE `id` = " . $id);
                $dsql->dsqlOper($sql, "update");
                //自定义配置
                $config = array(
                    "username"    => $username,
                    "order"       => $ordernum,
                    "expCompany"  => $juhe_express_company[$company],
                    "exp_company" => $juhe_express_company[$company],
                    "expnumber"   => $number,
                    "exp_number"  => $number,
                    "fields"      => array(
                        'keyword1' => '订单编号',
                        'keyword2' => '快递公司',
                        'keyword3' => '快递单号'
                    )
                );

                updateMemberNotice($userid, "会员-订单发货通知", $paramBusi, $config);

                return $langData['siteConfig'][20][244];  //操作成功


                //订单确认-(骑手配送、商家自送)
            } elseif ($shipping == 0 || $shipping == 2) {

                //订单确认时，如果是平台配送（骑手），计算并生成骑手本单金额
                if ($shipping == 0) {
                    global $cfg_shopFee;
                    global $custom_shopCourierP; //骑手百分比
                    global $custom_free_delivery_mode; //免配送费时选择的模式
                    global $custom_free_delivery_static; //免费时固定费用
                    global $custom_free_delivery_ps; //平台收入百分比
                    global $custom_free_delivery_pr; //商品收入百分比
                    $fee = (float)$shopFee ?: (float)$cfg_shopFee; //真实佣金百分比
                    //有配送费
                    if ($logistic != 0) {
                        $qsMoney = $logistic * ($custom_shopCourierP / 100);
                    }
                    //没有配送费
                    else {
                        //固定
                        if ($custom_free_delivery_mode == 0) {
                            $qsMoney = $custom_free_delivery_static;
                        }
                        //平台百分比
                        elseif ($custom_free_delivery_mode == 1) {
                            $qsMoney = $amount * ($fee / 100) * ($custom_free_delivery_ps / 100);;
                        }
                        //订单金额百分比
                        else {
                            $qsMoney = $custom_free_delivery_pr / 100 * $amount;
                        }
                    }
                    $qsSql = $dsql->SetQuery("update `#@__shop_order` set `qsamount`={$qsMoney} where `id`={$id}");
                    $dsql->update($qsSql);
                }

                //自定义配置
                $config = array(
                    "ordernum"   => $ordernum,
                    "orderdate"  => date("Y-m-d H:i:s", GetMkTime(time())),
                    "orderinfo"  => '商城订单',
                    "orderprice" => $amount,
                    "fields"     => array(
                        'keyword1' => '订单编号',
                        'keyword2' => '下单时间',
                        'keyword3' => '订单详情',
                        'keyword4' => '订单金额'
                    )
                );

                updateMemberNotice($userid, "会员-订单确认提醒", $paramBusi, $config);

                //更新订单状态
                $now = GetMkTime(time());
                $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 6, `shipping` = '$shipping', `confirmdate` = '$now',`exp_date` = '$now' WHERE `id` = " . $id);
                $dsql->dsqlOper($sql, "update");
                return $langData['siteConfig'][20][244];  //操作成功

            }
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][23]);  //操作失败，请核实订单状态后再操作！
        }
    }


    /**
     * 商家退款
     */
    public function refundPay()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id           = $this->param['id'];
        $status       =  (int)$this->param['status'];
        $proid        = is_array($this->param) ? $this->param['proid'] : 0;
        $returngoods  = (int)$this->param['returngoods'];            //同意退货
        $name         = $this->param['name'] ? $this->param['name'] : '';            //同意退货
        $tel          = $this->param['tel'] ? $this->param['tel'] : '';            //同意退货
        $areaCode     = $this->param['areaCode'] ? $this->param['areaCode'] : '';            //同意退货
        $addrid       = $this->param['addrid'] ? $this->param['addrid'] : '';            //同意退货
        $returncityid       = $this->param['cityid'] ? $this->param['cityid'] : '';            //同意退货
        $returnnote         = $this->param['note'] ? $this->param['note'] : '';            //同意退货
        $address      = $this->param['address'] ? $this->param['address'] : '';            //同意退货
        $explain = filterSensitiveWords(addslashes($this->param['explain']));


        if (empty($id)) return array("state" => 200, "info" => $langData['shop'][4][20]);  //数据不完整，请检查！

        //获取用户ID
        $uid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '3'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }


        if ($proid) {

            //验证订单
            //            $archives = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`userid`, o.`balance`, o.`point`, o.`logistic`, o.`payprice`,o.`paytype`,o.`refrundno`,o.`peerpay`,o.`ret_negotiate`,s.`title`,s.`userid` uid FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON o.`branchid` = b.`id` LEFT JOIN `#@__member` m ON s.`userid` = m.`id` WHERE o.`id` = '$id' AND (s.`userid` = '$uid' OR b.`userid` = '$uid') AND o.`orderstate` = 6 AND o.`ret_state` = 1");

            $archives = $dsql->SetQuery("SELECT ob.`orderid`, o.`ordernum`, o.`userid`, ob.`balance`, ob.`point`, ob.`logistic`, ob.`payprice`,o.`paytype`,ob.`refrundno`,o.`peerpay`,ob.`ret_negotiate`,s.`title`,s.`userid` uid FROM `#@__shop_order` o  LEFT JOIN `#@__shop_order_product` ob ON o.`id` = ob.`orderid`  LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON o.`branchid` = b.`id` LEFT JOIN `#@__member` m ON s.`userid` = m.`id` WHERE ob.`orderid` = '$id' AND `proid` = '$proid' AND (s.`userid` = '$uid' OR b.`userid` = '$uid')  AND ob.`ret_state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {

                $orderid = $results[0]['id'];         //需要退回的订单ID
                $ordernum = $results[0]['ordernum'];   //需要退回的订单号
                $userid = $results[0]['userid'];     //需要退回的会员ID
                $uid = $results[0]['uid'];        //商家会员ID
                $balance = $results[0]['balance'];    //余额支付
                $point = $results[0]['point'];      //积分支付
                $payprice = $results[0]['payprice'];   //实际支付
                $logistic = $results[0]['logistic'];   //运费
                $shopname = $results[0]['title'];   //运费
                $paytype = $results[0]["paytype"];
                $refrundno = $results[0]["refrundno"];
                $peerpay = $results[0]["peerpay"];
                $ret_negotiate = $results[0]["ret_negotiate"] != '' ? unserialize($results[0]["ret_negotiate"]) : array(); /*协商历史*/

                global $cfg_pointRatio;
                // $orderTotalAmount = $balance + $payprice + $point / $cfg_pointRatio;
                if ($balance > 0) {
                    $orderTotalAmount = $balance + $payprice;
                } else {
                    $orderTotalAmount = $payprice - $point / $cfg_pointRatio;
                }

                //同意退货
                if ($returngoods == 1) {
                    /*同意退货*/
                    $refundinfo = array();
                    $refundinfo['typename'] = '同意退货';
                    $refundinfo['refundinfo'] = $name . ',' . $tel . ',' . $address;
                    $now = GetMkTime(time());
                    $refundinfo['datetime'] = $now;
                    $refundinfo['type'] = 0;
                    $refundinfo['status'] = 0;
                    $refundinfo['returngoods'] = $returngoods;
                    $refundinfo['typestatus']         = 1;     // 0买家   1卖家   2客服

                    if ($ret_negotiate) {
                        array_push($ret_negotiate['refundinfo'], $refundinfo);
                    } else {
                        $ret_negotiate['refundinfo'][0] = $refundinfo;
                    }
                    $ret_negotiatestr = serialize($ret_negotiate);
                    $goodsInfo = array();
                    $goodsInfo['name'] = $name;
                    $goodsInfo['tel'] = $tel;
                    $now = GetMkTime(time());
                    $goodsInfo['datetime'] = $now;
                    $goodsInfo['areaCode'] = $areaCode;
                    $goodsInfo['addrid'] = $addrid;
                    $goodsInfo['returncityid'] = $returncityid;
                    $goodsInfo['returnnote'] = $returnnote;
                    $goodsInfo['address'] = $address;
                    $goodsInfo = serialize($goodsInfo);
                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `ret_audittype` = 2,`returngood` = '$goodsInfo',`ret_negotiate` = '$ret_negotiatestr',`user_refundtype` = 1,`ret_audittime`='$now' WHERE `orderid` ='$id' AND `proid` = '$proid' ");
                    $dsql->dsqlOper($orderOpera, "update");

                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `ret_audittype` = 2,`ret_negotiate` = '$ret_negotiatestr' WHERE `id` = " . $id);
                    $dsql->dsqlOper($orderOpera, "update");

                    return '操作成功！';
                }
                if ($status == 2) {
                    /*拒绝退款*/
                    $refundinfo = array();
                    $refundinfo['typename'] = '商家拒绝退款';
                    $refundinfo['refundinfo'] = $explain;
                    $now = GetMkTime(time());
                    $refundinfo['datetime'] = $now;
                    $refundinfo['type'] = 1;
                    $refundinfo['status'] = (int)$ret_negotiate['numeber'];
                    $refundinfo['typestatus']         = 1;     // 0买家   1卖家   2客服


                    if ($ret_negotiate) {

                        array_push($ret_negotiate['refundinfo'], $refundinfo);
                    } else {
                        $ret_negotiate['refundinfo'][0] = $refundinfo;
                    }
                    $ret_negotiatestr = serialize($ret_negotiate);
                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `ret_audittype` = 1,`ret_negotiate` = '$ret_negotiatestr' WHERE `orderid` ='$id' AND `proid` = '$proid' ");
                    $dsql->dsqlOper($orderOpera, "update");

                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `ret_audittype` = 1,`ret_negotiate` = '$ret_negotiatestr' WHERE `id` = " . $id);
                    $dsql->dsqlOper($orderOpera, "update");

                    //获取会员名
                    $username = "";
                    $sql = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                    }

                    $paramBusi = array(
                        "service" => "member",
                        "type" => "user",
                        "template" => "orderdetail",
                        "action" => "shop",
                        "id" => $orderid
                    );

                    $note = '商家拒绝退款';
                    //自定义配置
                    $config = array(
                        "username" => $username,
                        "order" => $ordernum,
                        "amount" => $orderTotalAmount,
                        "note" => $note,
                        "fields" => array(
                            'reason' => '退款原因',
                            'refund' => '退款金额'
                        )
                    );

                    updateMemberNotice($userid, "会员-订单退款通知", $paramBusi, $config);


                    return '操作成功！';  //退款成功

                }

                $totalPoint = 0;

                //			$sql = $dsql->SetQuery("SELECT `point`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `orderid` = '$orderid'");
                //			$ret = $dsql->dsqlOper($sql, "results");
                //			if($ret){
                //				foreach($ret as $key => $val){
                //					$totalMoney += $val['balance'] + $val['payprice'];
                //					$totalPoint += $val['point'];
                //				}
                //			}

                $freezeamount = (float)$balance + (float)$payprice;
                //混合支付退款
                $refrunddate = GetMkTime(time());
                $online_amount = $refrund_online = $orderTotalAmount;
                $arr = refund('shop', $peerpay, $paytype, $payprice, $ordernum, $refrundno, $balance, $id);
                $r = $arr[0]['r'];
                $refrunddate = $arr[0]['refrunddate'] ? $arr[0]['refrunddate'] : $refrunddate;
                $refrundno = $arr[0]['refrundno'];
                $refrundcode = $arr[0]['refrundcode'];
                //更新订单状态
                if ($r) {

                    $pointinfo = '商城订单退回：$ordernum';
                    $balanceinfo = '商城订单退款：$ordernum';
                    if ($point != 0) {
                        $pointinfo = '商城订单退回：(积分退款:' . $point . ',现金退款：' . $payprice . ',余额退款：' . $balance . ')：' . $ordernum;
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$point' WHERE `id` = '$userid'");
                        $dsql->dsqlOper($archives, "update");
                        $user = $userLogin->getMemberInfo($userid, 1);
                        $userpoint = $user['point'];
                        //                    $pointuser  = (int)($userpoint+$point);
                        //保存操作日志
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '1', '$point', '$pointinfo', " . GetMkTime(time()) . ",'tuihui','$userpoint')");
                        $dsql->dsqlOper($archives, "update");
                    }
                    if ($balance != 0 && $paytype != 'huoniao_bonus') {

                        $pay_name = '';
                        $pay_namearr = array();
                        $paramUser = array(
                            "service" => "member",
                            "type" => "user",
                            "template" => "orderdetail",
                            "action" => "shop",
                            "id" => $id
                        );
                        $urlParam = serialize($paramUser);

                        $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $paytype . "'");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if (!empty($ret)) {
                            $pay_name = $ret[0]['pay_name'];
                        } else {
                            $pay_name = $ret[0]["paytype"];
                        }

                        if ($pay_name) {
                            array_push($pay_namearr, $pay_name);
                        }

                        if ($balance != '') {
                            array_push($pay_namearr, "余额");
                        }

                        if ($point != '') {
                            array_push($pay_namearr, "积分");
                        }

                        if ($pay_namearr) {
                            $pay_name = join(',', $pay_namearr);
                        }

                        $tuikuan = array(
                            'paytype' => $pay_name,
                            'truemoneysy' => $payprice,
                            'money_amount' => $balance,
                            'point' => $point,
                            'refrunddate' => $refrunddate,
                            'refrundno' => $refrundno
                        );
                        $tuikuanparam = serialize($tuikuan);
                        $balanceinfo = '商城订单退款：(积分退款:' . $point . ',现金退款：' . $payprice . ',余额退款：' . $balance . ')：' . $shopname . $ordernumstore;
                        $userOpera = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + " . $balance . " WHERE `id` = " . $userid);
                        $dsql->dsqlOper($userOpera, "update");
                        $user = $userLogin->getMemberInfo($userid, 1);
                        $usermoney = $user['money'];
                        //记录退款日志
                        $logs = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `amount`, `type`, `info`, `date`,`ordertype`,`ctype`,`urlParam`,`ordernum`,`tuikuanparam`,`title`,`balance`) VALUES ('$userid', '$balance', '1', '$balanceinfo', '" . GetMkTime(time()) . "','shop','tuikuan','$urlParam','$ordernum','$tuikuanparam','商城消费','$usermoney')");
                        $dsql->dsqlOper($logs, "update");
                    }
                    if ($peerpay <= 0) {
                        /*商家扣除冻结金额*/
                        $usersql = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` - $freezeamount WHERE `id` = " . $userid);
                        $dsql->dsqlOper($usersql, "update");
                    }

                    $now = GetMkTime(time());
                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `ret_state` = 0, `ret_ok_date` = " . GetMkTime(time()) . ",`refrunddate` = '" . $refrunddate . "',`refrundamount` = '$orderTotalAmount', `refrundno` = '$refrundno' WHERE `orderid` = '$id' AND `proid` = '$proid'");

                    $dsql->dsqlOper($orderOpera, "update");


                    $archives = $dsql->SetQuery("SELECT o.`ret_state` FROM `#@__shop_order` ob LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id`  WHERE o.`orderid` = '$id'");
                    $ret_state = $dsql->dsqlOper($archives, "results");
                    $now = GetMkTime(time());
                    $retstate = array_column($ret_state, 'ret_state');
                    if (!in_array(1, $retstate)) {
                        //                        $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 7 WHERE `id` = " . $id);
                        $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 7, `ret_state` = 0, `ret_ok_date` = " . GetMkTime(time()) . ",`refrunddate` = '" . $refrunddate . "',`refrundamount` = '$orderTotalAmount', `refrundno` = '$refrundno' WHERE `id` = " . $id);
                        $dsql->dsqlOper($orderOpera, "update");
                    }


                    //获取会员名
                    $username = "";
                    $sql = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                    }

                    $paramBusi = array(
                        "service" => "member",
                        "type" => "user",
                        "template" => "orderdetail",
                        "action" => "shop",
                        "id" => $orderid
                    );
                    //自定义配置
                    $config = array(
                        "username" => $username,
                        "order" => $ordernum,
                        "amount" => $orderTotalAmount,
                        "fields" => array(
                            'keyword1' => '退款状态',
                            'keyword2' => '退款金额',
                            'keyword3' => '审核说明'
                        )
                    );

                    updateMemberNotice($userid, "会员-订单退款成功", $paramBusi, $config);


                    return $langData['siteConfig'][9][34];  //退款成功

                } else {
                    return array("state" => 200, "info" => $refrundcode);  //操作失败，请核实订单状态后再操作！
                }
            }
        } else {
            //验证订单
            $archives = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`userid`, o.`balance`, o.`point`, o.`logistic`, o.`payprice`,o.`paytype`,o.`refrundno`,o.`peerpay`,o.`ret_negotiate`,s.`title`,s.`userid` uid FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON o.`branchid` = b.`id` LEFT JOIN `#@__member` m ON s.`userid` = m.`id` WHERE o.`id` = '$id' AND (s.`userid` = '$uid' OR b.`userid` = '$uid') AND o.`orderstate` = 6 AND o.`ret_state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {

                $orderid = $results[0]['id'];         //需要退回的订单ID
                $ordernum = $results[0]['ordernum'];   //需要退回的订单号
                $userid = $results[0]['userid'];     //需要退回的会员ID
                $uid = $results[0]['uid'];        //商家会员ID
                $balance = $results[0]['balance'];    //余额支付
                $point = $results[0]['point'];      //积分支付
                $payprice = $results[0]['payprice'];   //实际支付
                $logistic = $results[0]['logistic'];   //运费
                $shopname = $results[0]['title'];   //运费
                $paytype = $results[0]["paytype"];
                $refrundno = $results[0]["refrundno"];
                $peerpay = $results[0]["peerpay"];
                $ret_negotiate = $results[0]["ret_negotiate"] != '' ? unserialize($results[0]["ret_negotiate"]) : array(); /*协商历史*/

                global $cfg_pointRatio;
                // $orderTotalAmount = $balance + $payprice + $logistic + $point / $cfg_pointRatio;
                if ($balance > 0) {
                    $orderTotalAmount = $balance + $payprice + $logistic;
                } else {
                    $orderTotalAmount = $payprice + $logistic - $point / $cfg_pointRatio;
                }

                if ($status == 2) {
                    /*拒绝退款*/
                    $refundinfo = array();
                    $refundinfo['typename'] = '商家拒绝退款';
                    $refundinfo['refundinfo'] = $explain;
                    $now = GetMkTime(time());
                    $refundinfo['datetime'] = $now;
                    $refundinfo['type'] = 1;
                    $refundinfo['status'] = (int)$ret_negotiate['numeber'];
                    if ($ret_negotiate) {

                        array_push($ret_negotiate['refundinfo'], $refundinfo);
                    } else {

                        $ret_negotiate['refundinfo'][0] = $refundinfo;
                    }

                    $ret_negotiatestr = serialize($ret_negotiate);
                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `ret_audittype` = 1,`ret_negotiate` = '$ret_negotiatestr' WHERE `id` = " . $id);
                    $dsql->dsqlOper($orderOpera, "update");

                    //获取会员名
                    $username = "";
                    $sql = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                    }

                    $paramBusi = array(
                        "service" => "member",
                        "type" => "user",
                        "template" => "orderdetail",
                        "action" => "shop",
                        "id" => $orderid
                    );

                    $note = '商家拒绝退款';
                    //自定义配置
                    $config = array(
                        "username" => $username,
                        "order" => $ordernum,
                        "amount" => $orderTotalAmount,
                        "note" => $note,
                        "fields" => array(
                            'reason' => '退款原因',
                            'refund' => '退款金额'
                        )
                    );

                    updateMemberNotice($userid, "会员-订单退款通知", $paramBusi, $config);


                    return '操作成功！';  //退款成功

                }

                $totalPoint = 0;

                //			$sql = $dsql->SetQuery("SELECT `point`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `orderid` = '$orderid'");
                //			$ret = $dsql->dsqlOper($sql, "results");
                //			if($ret){
                //				foreach($ret as $key => $val){
                //					$totalMoney += $val['balance'] + $val['payprice'];
                //					$totalPoint += $val['point'];
                //				}
                //			}

                $freezeamount = (float)$balance + (float)$payprice;
                //混合支付退款
                $refrunddate = GetMkTime(time());
                $online_amount = $refrund_online = $orderTotalAmount;
                $arr = refund('shop', $peerpay, $paytype, $payprice, $ordernum, $refrundno, $balance, $id);
                $r = $arr[0]['r'];
                $refrunddate = $arr[0]['refrunddate'] ? $arr[0]['refrunddate'] : $refrunddate;
                $refrundno = $arr[0]['refrundno'];
                $refrundcode = $arr[0]['refrundcode'];
                //更新订单状态
                if ($r) {

                    $pointinfo = '商城订单退回：$ordernum';
                    $balanceinfo = '商城订单退款：$ordernum';
                    if ($point != 0) {
                        $pointinfo = '商城订单退回：(积分退款:' . $point . ',现金退款：' . $payprice . ',余额退款：' . $balance . ')：' . $ordernum;
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$point' WHERE `id` = '$userid'");
                        $dsql->dsqlOper($archives, "update");
                        $user = $userLogin->getMemberInfo($userid, 1);
                        $userpoint = $user['point'];
                        //                    $pointuser  = (int)($userpoint+$point);
                        //保存操作日志
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '1', '$point', '$pointinfo', " . GetMkTime(time()) . ",'tuihui','$userpoint')");
                        $dsql->dsqlOper($archives, "update");
                    }
                    if ($balance != '0') {

                        $pay_name = '';
                        $pay_namearr = array();
                        $paramUser = array(
                            "service" => "member",
                            "type" => "user",
                            "template" => "orderdetail",
                            "action" => "shop",
                            "id" => $id
                        );
                        $urlParam = serialize($paramUser);

                        $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $paytype . "'");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if (!empty($ret)) {
                            $pay_name = $ret[0]['pay_name'];
                        } else {
                            $pay_name = $ret[0]["paytype"];
                        }

                        if ($pay_name) {
                            array_push($pay_namearr, $pay_name);
                        }

                        if ($balance != '') {
                            array_push($pay_namearr, "余额");
                        }

                        if ($point != '') {
                            array_push($pay_namearr, "积分");
                        }

                        if ($pay_namearr) {
                            $pay_name = join(',', $pay_namearr);
                        }

                        $tuikuan = array(
                            'paytype' => $pay_name,
                            'truemoneysy' => $payprice,
                            'money_amount' => $balance,
                            'point' => $point,
                            'refrunddate' => $refrunddate,
                            'refrundno' => $refrundno
                        );
                        $tuikuanparam = serialize($tuikuan);
                        $balanceinfo = '商城订单退款：(积分退款:' . $point . ',现金退款：' . $payprice . ',余额退款：' . $balance . ')：' . $shopname . $ordernumstore;
                        $userOpera = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + " . $balance . " WHERE `id` = " . $userid);
                        $dsql->dsqlOper($userOpera, "update");
                        $user = $userLogin->getMemberInfo($userid, 1);
                        $usermoney = $user['money'];
                        //记录退款日志
                        $logs = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `amount`, `type`, `info`, `date`,`ordertype`,`ctype`,`urlParam`,`ordernum`,`tuikuanparam`,`title`,`balance`) VALUES ('$userid', '$balance', '1', '$balanceinfo', '" . GetMkTime(time()) . "','shop','tuikuan','$urlParam','$ordernum','$tuikuanparam','商城消费','$usermoney')");
                        $dsql->dsqlOper($logs, "update");
                    }
                    if ($peerpay <= 0) {
                        /*商家扣除冻结金额*/
                        $usersql = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` - $freezeamount WHERE `id` = " . $userid);
                        $dsql->dsqlOper($usersql, "update");
                    }
                    $now = GetMkTime(time());
                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 7, `ret_state` = 0, `ret_ok_date` = " . GetMkTime(time()) . ",`refrunddate` = '" . $refrunddate . "',`refrundamount` = '$orderTotalAmount', `refrundno` = '$refrundno' WHERE `id` = " . $orderid);
                    $dsql->dsqlOper($orderOpera, "update");

                    $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET  `ret_state` = 0, `ret_ok_date` = " . GetMkTime(time()) . ",`refrunddate` = '" . $refrunddate . "',`refrundamount` = '$refrundamount_', `refrundno` = '$refrundno' WHERE `orderid` = '$orderid'");
                    $dsql->dsqlOper($orderOpera, "update");


                    //获取会员名
                    $username = "";
                    $sql = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                    }

                    $paramBusi = array(
                        "service" => "member",
                        "type" => "user",
                        "template" => "orderdetail",
                        "action" => "shop",
                        "id" => $orderid
                    );
                    //自定义配置
                    $config = array(
                        "username" => $username,
                        "order" => $ordernum,
                        "amount" => $orderTotalAmount,
                        "fields" => array(
                            'keyword1' => '退款状态',
                            'keyword2' => '退款金额',
                            'keyword3' => '审核说明'
                        )
                    );

                    updateMemberNotice($userid, "会员-订单退款成功", $paramBusi, $config);


                    return $langData['siteConfig'][9][34];  //退款成功

                } else {
                    return array("state" => 200, "info" => $refrundcode);  //操作失败，请核实订单状态后再操作！
                }
            }
        }
    }


    /**
     * 商家退款回复
     */
    public function refundReply()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id      = $this->param['id'];
        $pics    = $this->param['pics'];
        $content = $this->param['content'];

        if (empty($id)) return array("state" => 200, "info" => $langData['shop'][4][20]);  //数据不完整，请检查！
        if (empty($content)) return array("state" => 200, "info" => $langData['shop'][4][26]);  //请输入回复内容！

        //获取用户ID
        $uid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {

            if (!verificationStaff(array('module' => 'shop', 'type' => '3'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $content = filterSensitiveWords(addslashes($content));
        $content = cn_substrR($content, 500);

        //验证订单
        $archives = $dsql->SetQuery("SELECT o.`id`, o.`userid`, o.`ordernum` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON o.`branchid` = b.`id` LEFT JOIN `#@__member` m ON s.`userid` = m.`id` WHERE o.`id` = '$id' AND (s.`userid` = '$uid' OR b.`userid` = '$uid') AND o.`orderstate` = 6 AND o.`ret_state` = 1");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {

            $userid   = $results[0]['userid'];
            $ordernum = $results[0]['ordernum'];

            // 查询订单商品
            $orderprice = 0;
            $arc        = $dsql->SetQuery("SELECT `count`, `logistic`, `price` FROM `#@__shop_order_product` WHERE `orderid` = " . $id);
            $proList    = $dsql->dsqlOper($arc, "results");
            if ($proList) {
                foreach ($proList as $key => $value) {
                    $orderprice += $value['count'] * $value['price'] + $value['logistic'];
                }
            }

            $paramBusi = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "orderdetail",
                "action"   => "shop",
                "id"       => $id
            );

            //获取会员名
            $username = "";
            $sql      = $dsql->SetQuery("SELECT `username`, `nickname` FROM `#@__member` WHERE `id` = $userid");
            $ret      = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $username = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
            }

            //自定义配置
            $config = array(
                "username" => $username,
                "order"    => $ordernum,
                "amount"   => $orderprice,
                "info"     => $content,
                "fields"   => array(
                    'keyword1' => '退款状态',
                    'keyword2' => '退款金额',
                    'keyword3' => '审核说明'
                )
            );

            updateMemberNotice($userid, "会员-退款申请卖家回复", $paramBusi, $config);

            //更新订单状态
            $now = GetMkTime(time());
            $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `ret_s_note` = '$content', `ret_s_pics` = '$pics', `ret_s_date` = '$now' WHERE `id` = " . $id);
            $dsql->dsqlOper($sql, "update");

            return $langData['siteConfig'][21][147];  //回复成功！

        } else {
            return array("state" => 200, "info" => $langData['shop'][4][27]);  //回复失败，请核实订单状态后再操作！
        }
    }


    /**
     * 商品评论
     * @return array
     */
    public function common()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $id       = $filter = $orderby = $page = $pageSize = $where = $px = "";

        if (!is_array($this->param)) {
            return array("state" => 200, "info" => '格式错误！');
        } else {
            $id       = $this->param['id'];
            $filter   = $this->param['filter'];
            $orderby  = $this->param['orderby'];
            $page     = $this->param['page'];
            $pageSize = $this->param['pageSize'];
        }

        if (empty($id)) return array("state" => 200, "info" => '格式错误！');

        //筛选
        if (!empty($filter)) {
            if ($filter == "pic") {
                $where .= " AND `pics` <> ''";
            } elseif ($filter == "h") {
                $where .= " AND `rating` = 1";
            } elseif ($filter == "z") {
                $where .= " AND `rating` = 2";
            } elseif ($filter == "c") {
                $where .= " AND `rating` = 3";
            }
        }

        //排序
        $px = " ORDER BY `rating` ASC, `floor` ASC, `id` DESC";
        if (!empty($orderby)) {
            if ($orderby == "time") {
                $px = " ORDER BY `floor` ASC, `id` DESC";
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `rating`, `specation`, `userid`, `pics`, `content`, `dtime` FROM `#@__shop_common` WHERE `pid` = " . $id . " AND `ischeck` = 1" . $where . $px);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $where, "results");
        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['rating']    = $val['rating'];
                $list[$key]['specation'] = str_replace("$$$", "，", $val['specation']);

                $imgArr = array();
                $pics   = $val['pics'];
                if (!empty($pics)) {
                    $picArr = explode(",", $pics);
                    foreach ($picArr as $k => $v) {
                        $imgArr[$k] = getFilePath($v);
                    }
                }
                $list[$key]['pics'] = $imgArr;

                $list[$key]['content'] = $val['content'];
                $list[$key]['dtime']   = $val['dtime'];

                $userinfo = $userLogin->getMemberInfo($val['userid'], 1);
                if (is_array($userinfo)) {
                    $list[$key]['user']['id']       = $val['userid'];
                    $list[$key]['user']['photo']    = $userinfo['photo'];
                    $list[$key]['user']['nickname'] = $userinfo['nickname'];
                } else {
                    $list[$key]['user']['id']       = "";
                    $list[$key]['user']['photo']    = "";
                    $list[$key]['user']['nickname'] = $langData['siteConfig'][21][120];  //游客
                }
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 发表评论
     * @return array
     */
    public function sendCommon()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $param = $this->param;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $orderid = $param['orderid'];
        $rating  = $param['rating'];
        $score1  = $param['score1'];
        $score2  = $param['score2'];
        $score3  = $param['score3'];
        $note    = $param['note'];
        $img     = $param['img'];
        $ip      = GetIP();
        $ipaddr  = getIpAddr($ip);
        $date    = GetMkTime(time());

        if (empty($orderid)) return array("state" => 200, "info" => $langData['shop'][4][28]);  //订单信息提交失败！

        //订单详细
        $this->param = $orderid;
        $orderDetail = $this->orderDetail();

        if ($orderDetail['orderstate'] == 3) {

            foreach ($orderDetail['product'] as $key => $value) {

                $pid       = $value['id'];
                $speid     = $value['speid'];
                $specation = $value['specation'];
                $rat       = $rating[$pid . "_" . $speid];
                $sco1      = $score1[$pid . "_" . $speid];
                $sco2      = $score2[$pid . "_" . $speid];
                $sco3      = $score3[$pid . "_" . $speid];
                $not       = $note[$pid . "_" . $speid];
                $im        = $img[$pid . "_" . $speid];

                if (empty($rat)) return array("state" => 200, "info" => $langData['shop'][4][29]);  //请选择商品评价！
                if (empty($sco1)) return array("state" => 200, "info" => $langData['shop'][4][30]);  //请给商品描述打分
                if (empty($sco2)) return array("state" => 200, "info" => $langData['shop'][4][31]);  //请给商家服务打分
                if (empty($sco3)) return array("state" => 200, "info" => $langData['shop'][4][32]);  //请给商品质量打分
                if (empty($not)) return array("state" => 200, "info" => $langData['shop'][4][33]);  //请输入评价内容！

                //修改
                if ($orderDetail['common'] == 1) {
                    $archives = $dsql->SetQuery("UPDATE `#@__shop_common` SET `rating` = '$rat', `score1` = '$sco1', `score2` = '$sco2', `score3` = '$sco3', `pics` = '$im', `content` = '$not', `dtime` = '$date', `ip` = '$ip', `ipaddr` = '$ipaddr', `ischeck` = 0 WHERE `pid` = '$pid' AND `aid` = '$orderid'");
                    $dsql->dsqlOper($archives, "update");

                    //新增
                } else {
                    $archives = $dsql->SetQuery("INSERT INTO `#@__shop_common` (`aid`, `pid`, `speid`, `specation`, `floor`, `userid`, `rating`, `score1`, `score2`, `score3`, `pics`, `content`, `dtime`, `ip`, `ipaddr`, `good`, `bad`, `ischeck`) VALUES ('$orderid', '$pid', '$speid', '$specation', '0', '$userid', '$rat', '$sco1', '$sco2', '$sco3', '$im', '$not', '$date', '$ip', '$ipaddr', 0, 0, 0)");
                    $dsql->dsqlOper($archives, "update");
                }
            }

            $archives = $dsql->SetQuery("UPDATE `#@__shop_order` SET `common` = 1 WHERE `id` = '$orderid'");
            $dsql->dsqlOper($archives, "update");
            return $langData['siteConfig'][20][196];  //评价成功！

        } else {
            return array("state" => 200, "info" => $langData['shop'][4][34]);  //订单状态有误！
        }
    }


    /**
     * 商城订单列表
     * @return array
     */
    public function orderList()
    {
        global $dsql;
        global $langData;
        $pageinfo = $list = array();
        $store    = $state = $userid = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $store    = (int)$this->param['store'];
                $state    = $this->param['state'];
                $userid   = (int)$this->param['userid'];
                $ordernum = $this->param['ordernum'];
                $title    = $this->param['title'];
                $page     = (int)$this->param['page'];
                $pageSize = (int)$this->param['pageSize'];
                $shipping = (int)$this->param['shipping'];
                $branchid = (int)$this->param['branchid'];
            }
        }

        if (empty($userid)) {
            global $userLogin;
            $userid = $userLogin->getMemberID();
        }
        if (empty($userid)) return array("state" => 200, "info" => '会员ID不得为空！');

        $where = '';
        //个人会员订单列表
        if (empty($store)) {
            $where = ' AND o.`userid` = ' . $userid;

            //商家会员订单列表
        } elseif ($store == 1) {

            $userinfo = $userLogin->getMemberInfo();

            if (!verifyModuleAuth(array("module" => "shop")) && $userinfo['is_staff'] != 1) {
                return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
            }

            $sid        = 0;

            //判断当前登录账号是否为分店账号
            $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = " . $userid);
            $userResult = $dsql->dsqlOper($userSql, "results");
            if ($userResult) {
                $sid = $userResult[0]['id'];
                $where = ' AND o.`branchid` = ' . $sid;
            }else{

                $userid = $userinfo['is_staff'] == 1 ? $userinfo['companyuid'] : $userid;
                $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
                $userResult = $dsql->dsqlOper($userSql, "results");
                if (!$userResult) {
                    return array("state" => 200, "info" => $langData['shop'][4][36]);  //您还未开通商城店铺！
                } else {
                    $sid = $userResult[0]['id'];
                }

                //            $where = ' o.`protype` = 0 AND o.`store` = ' . $sid;
                $where = ' AND o.`store` = ' . $sid;
            }
        } elseif ($store == 2) { //分店订单列表
            $sid        = 0;
            $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = " . $userid);
            $userResult = $dsql->dsqlOper($userSql, "results");
            if (!$userResult) {
                return array("state" => 200, "info" => $langData['shop'][4][36]);  //您还未开通商城店铺！
            } else {
                $sid = $userResult[0]['id'];
            }

            $where = ' AND o.`branchid` = ' . $sid;
        }
        if (!empty($shipping)) {
            $where .= " AND o.`shipping` = $shipping ";
        }
        if (!empty($shipping) && $shipping == 0) {
            $where .= " AND (o.`shipping` = 0  OR o.`shipping` = 2)";
        }


        if (!empty($branchid)) {
            $where .= ' AND o.`branchid` = ' . $branchid;
        }



        $lfjoinsql = '';
        if (!empty($title)) {

            $storeSql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `nickname` like '%$title%'");
            $storeResult = $dsql->dsqlOper($storeSql, "results");
            if ($storeResult) {
                $storeid = array();
                foreach ($storeResult as $key => $store) {
                    array_push($storeid, $store['id']);
                }
                $lfjoinsql = " RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`";
                $where .= " AND (p.`title` like '%$title%' or  o.`ordernum` like '%$title%' or o.`userid` in (" . join(",", $storeid) . "))";
            } else {
                $lfjoinsql = " RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`";
                $where .= " AND (p.`title` like '%$title%' or  o.`ordernum` like '%$title%')";
            }
        } else {
            $lfjoinsql = " RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`";
        }

        $where .= " AND p.`id` IS NOT NULL";
        //
               if($state == '4,7'){
        //            $where = " AND ((`orderstate` = 6 AND `ret_state` = 1) or  `orderstate` = 7)";
                //    $where .= " AND ((op.`ret_state` = 1 or op.`ret_ok_date` != ''))";
                   $where .= " AND op.`ret_state` = 1";
               }


        $archives = $dsql->SetQuery("SELECT " .
            "o.`id`,o.`point`,o.`ordernum`, o.`store`, o.`userid`, o.`shipping`, o.`peisongid`, o.`orderstate`, o.`orderdate`, o.`songdate`, o.`paytype`, o.`logistic`, op.`ret_state`, o.`exp_date`, o.`priceinfo`,o.`common`, o.`branchid`,o.`pinid`,o.`pinstate`,o.`pintype`,o.`huodongtype`,o.`protype` ,o.`changetype`,o.`changeprice`,o.`changelogistic`,op.`ret_negotiate`,op.`ret_audittype`,op.`user_refundtype`,op.`ret_date`,op.`ret_audittime`,op.`user_exptime`,op.`user_expoktime`,o.`okdate`,o.`ret_ok_date`,o.`canceltime`,o.`peidate`" .
            "FROM `#@__shop_order` o  $lfjoinsql" .
            "WHERE 1 = 1" . $where);
        $archivesCount = $dsql->SetQuery("SELECT " .
            "o.`id`,o.`point`,o.`ordernum`, o.`store`, o.`userid`, o.`shipping`, o.`peisongid`, o.`orderstate`, o.`orderdate`, o.`songdate`, o.`paytype`, o.`logistic`, op.`ret_state`, o.`exp_date`, o.`priceinfo`,o.`common`, o.`branchid`,o.`pinid`,o.`pinstate`,o.`pintype`,o.`huodongtype`,o.`protype` ,o.`changetype`,o.`changeprice`,o.`changelogistic`,op.`ret_negotiate`,op.`ret_audittype`,op.`user_refundtype`,op.`ret_date`,op.`ret_audittime`,op.`user_exptime`,op.`user_expoktime`,o.`okdate`,o.`ret_ok_date`,o.`canceltime`,o.`peidate`" .
            "FROM `#@__shop_order` o  $lfjoinsql" .
            "WHERE 1 = 1" . $where . " GROUP BY o.`id`");
        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;
        //总条数
        $totalCount = $dsql->dsqlOper($archivesCount, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        //未付款
        $unpaid = $dsql->dsqlOper($archives . " AND `orderstate` = 0 GROUP BY o.`id`", "totalCount");
        //待确认
        $ongoing = $dsql->dsqlOper($archives . " AND `orderstate` = 1  AND o.`protype` = 0  AND 1 = (CASE	WHEN  o.`pinid` != 0 THEN CASE WHEN o.`pinstate` THEN 1 ELSE 0 END ELSE 1=1 END	) GROUP BY o.`id`", "totalCount");
        //已使用
        $success = $dsql->dsqlOper($archives . " AND `orderstate` = 3 GROUP BY o.`id`", "totalCount");
        //等待退款
        $refunded1 = $dsql->dsqlOper($archives . " AND o.`orderstate` = 6 AND o.`ret_state` = 1 GROUP BY o.`id`", "totalCount");
        //退款/售后
        $refunded = $dsql->dsqlOper($archives . " AND op.`ret_state` = 1  GROUP BY o.`id`", "totalCount");
        //待评价
        $rates = $dsql->dsqlOper($archives . " AND `orderstate` = 3 AND `common` = 0 GROUP BY o.`id`", "totalCount");
        //已确认/待配送
        //        $recei = $dsql->dsqlOper($archives . " AND `orderstate` = 6 AND `ret_state` = 0", "totalCount");
        $recei = $dsql->dsqlOper($archives . " AND o.`orderstate` = 6 AND op.`ret_state` = 0 GROUP BY o.`id`", "totalCount");

        //        $recei1 = $dsql->dsqlOper($archives . " AND `orderstate` = 6 AND `ret_state` != 1 AND `exp_date` = 0 AND `peisongid` = 0", "totalCount");
        $recei1 = $dsql->dsqlOper($archives . " AND op.`ret_state` != 1 AND `exp_date` = 0 AND `peisongid` = 0 GROUP BY o.`id`", "totalCount");
        //		 $recei1 = $dsql->dsqlOper($archives." AND `exp_date` != 0 AND `peisongid` = 0", "totalCount");
        //		$recei1 = $dsql->dsqlOper($archives." AND `peisongid` = 0", "totalCount");  //骑手接单后，不需要更新发货时间
        //配送中
        $recei2 = $dsql->dsqlOper($archives . "  AND `orderstate` = 6 AND op.`ret_state` != 1 AND (((`exp_date` != 0 OR `peidate` != 0) OR `peisongid` != 0)) GROUP BY o.`id`", "totalCount");

        //退款成功
        //        $closed = $dsql->dsqlOper($archives . " AND `orderstate` = 7", "totalCount");
        $closed = $dsql->dsqlOper($archives . " AND op.`ret_ok_date` != '' GROUP BY o.`id` ", "totalCount");
        //关闭/失败
        $cancel = $dsql->dsqlOper($archives . " AND `orderstate` = 10 GROUP BY o.`id`", "totalCount");

        /*待使用*/
        $datetime = GetMkTime(time());

        $cuttingsql = explode('WHERE', $archives);

        $cuttingsql[0] .= " LEFT JOIN `#@__shopquan` sq ON sq.`orderid` = o.`id`";

        $tobeusesql =  $dsql->Setquery(join(' WHERE ', $cuttingsql));

        $tobeuseres = $dsql->dsqlOper($tobeusesql . " AND o.`protype` = 1 AND o.`orderstate` != 4 AND o.`orderstate` != 7 AND sq.`expireddate` > '$datetime' AND  o.`orderstate` != 10 AND sq.`usedate` = 0 GROUP BY o.`id`", "totalCount");

        /*待分享*/
        $cuttingsql = explode('WHERE', $archives);

        $cuttingsql[0] .= ' LEFT JOIN `#@__shop_tuanpin` tp ON o.`id` = tp.`oid`';

        $tobefenx =  $dsql->Setquery(join(' WHERE ', $cuttingsql));


        $tobefenxres = $dsql->dsqlOper($tobefenx . " AND tp.`state` = 1 AND  tp.`enddate` > '$datetime' GROUP BY o.`id`", "totalCount");

        /*已过期  */
        $cuttingsql = explode('WHERE', $archives);

        $cuttingsql[0] .= " LEFT JOIN `#@__shopquan` sq ON sq.`orderid` = o.`id`";

        $tobeguoqi =  $dsql->Setquery(join(' WHERE ', $cuttingsql));

        $tobeguoqires = $dsql->dsqlOper($tobeguoqi . " AND  sq.`expireddate` <= '$datetime' GROUP BY o.`id`", "totalCount");

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount,
            "unpaid"     => $unpaid,
            "ongoing"    => $ongoing,
            "success"    => $success,
            "refunded1"   => $refunded1,
            "refunded"   => $refunded,
            "rates"      => $rates,
            "recei"      => $recei,
            "recei1"     => $recei1,
            "recei2"     => $recei2,
            "closed"     => $closed,
            "cancel"     => $cancel,
            "tobeuse"    => $tobeuseres,
            "tobeguoqi"  => $tobeguoqires,
            "tobefenx"   => $tobefenxres
        );

        if ($totalCount == 0) return array("pageInfo" => $pageinfo, "list" => array());

        $where = "";
        if ($state != "" && $state != 4 && $state != 5 && $state != 6) {
            $where = " AND o.`orderstate` = " . $state;

            if ($state == 1) {

                $where .= ' AND o.`orderstate` = 1  AND o.`protype` = 0  AND 1 = (CASE WHEN  o.`pinid` != 0 THEN CASE WHEN o.`pinstate` THEN 1 ELSE 0 END ELSE 1=1 END	)';
            }
        }

        if ($state == '4,7') {
            //            $where = " AND ((`orderstate` = 6 AND `ret_state` = 1) or  `orderstate` = 7)";
            $where = " AND (op.`ret_state` = 1 or op.`ret_ok_date` != '')";
        }

        //退款
        if ($state == '4') {
            //            $where = " AND `orderstate` = 6 AND `ret_state` = 1";
            $where = " AND `op.`ret_state` = 1";
        }
        //待评价
        if ($state == '5') {
            $where = " AND o.`orderstate` = 3 AND o.`common` = 0";
        }

        //已确认
        if ($state == '6') {
            //            $where = " AND `orderstate` = 6 AND `ret_state` = 0";
            $where = " AND o.`orderstate` = 6 AND op.`ret_state` = 0";
        }
        //已确认待配送
        if ($state == '6,1') {
            //			$where = " AND `orderstate` = 6 AND `shipping` = 0 AND `exp_date` = 0 AND `peisongid` = 0";
            // $where = " AND `orderstate` = 6 AND `exp_date` != 0 AND `peisongid` = 0";
            //            $where = " AND `orderstate` = 6 AND `ret_state` != 1 AND `peisongid` = 0 AND `exp_date` = 0";  //骑手接单后，不需要更新发货时间
            $where = " AND o.`orderstate` = 6 AND op.`ret_state` != 1 AND o.`peisongid` = 0 AND o.`exp_date` = 0";  //骑手接单后，不需要更新发货时间

        }
        //已确认配送中
        if ($state == '6,2') {
            //            $where = " AND `orderstate` = 6 AND `ret_state` != 1 AND (`shipping` != 0 OR ((`exp_date` != 0 OR `peidate` != 0) AND `peisongid` != 0))";
            $where = " AND o.`orderstate` = 6 AND op.`ret_state` != 1 AND (((o.`exp_date` != 0 OR o.`peidate` != 0) OR o.`peisongid` != 0))";
        }


        if ($state == '6,3') {

            $datetime = GetMkTime(time());

            $cuttingsql = explode('WHERE', $archives);

            $cuttingsql[0] .= " LEFT JOIN `#@__shopquan` sq ON sq.`orderid` = o.`id`";

            $archives =  $dsql->Setquery(join(' WHERE ', $cuttingsql));

            $where = ' AND o.`protype` = 1 AND o.`orderstate` != 4 AND o.`orderstate` != 7 AND sq.`expireddate` > ' . $datetime . ' AND  o.`orderstate` != 10 AND sq.`usedate` = 0';
        }


        $lfjoinsql1 = '';

        if ($state == '6,4') {

            $datetime = GetMkTime(time());

            $cuttingsql = explode('WHERE', $archives);

            //            $cuttingsql[0] .= ' LEFT JOIN `#@__shop_tuanpin` tp ON o.`id` = tp.`oid` LEFT JOIN `#@__shop_bargaining` sb ON o.`id` = sb.`oid`';
            $cuttingsql[0] .= ' LEFT JOIN `#@__shop_tuanpin` tp ON o.`id` = tp.`oid`';

            $archives =  $dsql->Setquery(join(' WHERE ', $cuttingsql));

            $where = ' AND tp.`state` = 1 AND  tp.`enddate` > ' . $datetime;
        }

        if ($state == '6,5') {

            $datetime = GetMkTime(time());

            $cuttingsql = explode('WHERE', $archives);

            $cuttingsql[0] .= " LEFT JOIN `#@__shopquan` sq ON sq.`orderid` = o.`id`";

            $archives =  $dsql->Setquery(join(' WHERE ', $cuttingsql));

            $where = ' AND  sq.`expireddate` <= ' . $datetime;
        }


        $atpage  = $pageSize * ($page - 1);
        $where   .= " GROUP BY o.`id` ORDER BY o.`id` DESC LIMIT $atpage, $pageSize";
        //        echo $archives . $where;die;
        $results = $dsql->dsqlOper($archives . $where, "results");
        if ($results) {

            $param    = array(
                "service"  => "shop",
                "template" => "detail",
                "id"       => "%id%"
            );
            $urlParam = getUrlPath($param);

            $param       = array(
                "service"  => "shop",
                "template" => "pay",
                "param"    => "ordernum=%id%"
            );
            $payurlParam = getUrlPath($param);

            $param          = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "orderdetail",
                "module"   => "shop",
                "id"       => "%id%",
                "param"    => "rates=1"
            );
            $commonUrlParam = getUrlPath($param);

            $i = 0;
            global $customclosetuikuanday;
            global $customtuikuanday;
            global $cfg_pointRatio;

            $tuikuanday      = (int)$customtuikuanday;
            $closetuikuanday = (int)$customclosetuikuanday;
            foreach ($results as $key => $val) {
                $where3 = '';
                if ($state == '4,7') {
                    $where3 = " AND (p.`ret_state` = 1 or p.`ret_ok_date` != '')";
                }
                $sql = $dsql->SetQuery("SELECT p.* FROM `#@__shop_order_product` p LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULl AND p.`orderid` = " . $val['id'] . "$where3");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {

                    //商家订单列表显示买家会员信息
                    if (!empty($store)) {

                        $member             = getMemberDetail($val['userid']);
                        $list[$i]['member'] = array(
                            "nickname"     => $member['nickname'],
                            "certifyState" => $member['certifyState'],
                            "qq"           => $member['qq']
                        );


                        //个人会员订单列表显示商家信息
                    } else {

                        $this->param = $val['store'];
                        $storeConfig = $this->storeDetail(1);
                        if (is_array($storeConfig)) {
                            $list[$i]['store'] = array(
                                "id"     => $storeConfig['id'],
                                "title"  => $storeConfig['title'],
                                "domain" => $storeConfig['domain'],
                                "qq"     => $storeConfig['qq'],
                                "tel"    => $storeConfig['tel'],
                            );
                        } else {
                            $list[$i]['store'] = array(
                                "id"    => 0,
                                "title" => $langData['shop'][4][37]  //官方直营
                            );
                        }
                    }

                    $list[$i]['id']          = $val['id'];
                    $list[$i]['ordernum']    = $val['ordernum'];
                    $ssql = $dsql->SetQuery("SELECT `userid` FROM `#@__shop_store` WHERE `id` = " . $val['store'] . " AND `state` = 1");
                    $retres = $dsql->dsqlOper($ssql, "results");
                    $list[$i]['storeuserid']      = $retres[0]['userid'];
                    $list[$i]['storename']  = '';
                    if ($retres) {
                        $useinfo  = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = " . $retres[0]['userid'] . " AND `state` = 1");
                        $useres = $dsql->dsqlOper($useinfo, "results");
                        $list[$i]['storename']      = $useres[0]['nickname'] ? $useres[0]['nickname'] : '';
                    }
                    $list[$i]['logistic']    = $val['logistic'];
                    $list[$i]['orderstate']  = $val['orderstate'];
                    $list[$i]['peidate']     = $val['peidate'];
                    $list[$i]['orderdate']   = $val['orderdate'];
                    $list[$i]['retState']    = $val['ret_state'];
                    $list[$i]['expDate']     = $val['exp_date'];
                    $list[$i]['peisongid']   = $val['peisongid'];
                    $list[$i]['songdate']    = $val['songdate'];
                    $list[$i]['shipping']    = $val['shipping'];
                    $list[$i]['pinid']       = $val['pinid'];
                    $list[$i]['pinstate']    = $val['pinstate'];
                    $list[$i]['pintype']     = $val['pintype'];
                    $list[$i]['huodongtype'] = $val['huodongtype'];
                    $list[$i]['protype']     = $val['protype'];
                    $list[$i]['okdate']      = $val['okdate'];
                    $ret_negotiate           = unserialize($val['ret_negotiate']);
                    $ret_audittype = $val['ret_audittype'];
                    $list[$i]['ret_ok_date'] = $val['ret_ok_date'];
                    $list[$i]['ret_refund_money'] = $ret_negotiate['refundinfo'][0]['tuikuanmoney'];
                    $list[$i]['ret_refund_date'] = $ret_negotiate['refundinfo'][0]['datetime'];
                    $list[$i]['canceltime']  = $val['canceltime'];
                    $list[$i]['userid']      = $val['userid'];
                    $list[$i]['user_refundtype']   = $ret_negotiate['refundinfo'][0]['type'];
                    $list[$i]['pingstate']   = 0;
                    if ($val['user_refundtype'] == 2) {
                        $list[$i]['pingstate']   = 1;
                    }
                    $list[$i]["autotuikuantime"]   = (int)$val['ret_date'] + $tuikuanday * 3600 * 24;  /*自动关闭退款时间*/
                    $list[$i]["autoaudittime"]     = (int)$val['ret_audittime'] + $tuikuanday * 3600 * 24;  /*买家同意退货自动退款时间*/
                    $list[$i]["autouser_exptime"]  = (int)$val['user_exptime'] + $tuikuanday * 3600 * 24;  /*买家寄出自动退款时间*/
                    $list[$i]["autocloseexptime"]  = (int)($ret_audittype == 1 ? ($ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1]['datetime'] + $closetuikuanday * 3600 * 24) : 0);  /*买家自行退货自动关闭退款时间*/
                    $list[$i]["autouexpoktime"]    = (int)$val['user_expoktime'] + $tuikuanday * 3600 * 24;  /*买家自行退货已送达自动退款时间*/

                    $totalPoint  = $val["point"];
                    $pointprice = $totalPoint / $cfg_pointRatio;


                    $huodongarr = $userarrpic = array();
                    if ($val['huodongtype'] == 4) {

                        $pinsql = $dsql->SetQuery("SELECT st.`user`,st.`people`,st.`state`,h.`huodongnumber`,h.`huodongprice`,st.`enddate` FROM `#@__shop_tuanpin` st LEFT JOIN `#@__shop_huodongsign` h ON st.`hid` = h.`id` WHERE st.`id` = " . $val['pinid']);
                        $pinres = $dsql->dsqlOper($pinsql, "results");

                        if (!empty($pinres) && is_array($pinres)) {

                            $huodongarr['people']       = $pinres[0]['people'];
                            $huodongarr['state']        = $pinres[0]['state'];
                            $huodongarr['enddate']      = $pinres[0]['enddate'];
                            $huodongarr['huodongprice'] = $pinres[0]['huodongprice'];
                            $huodongarr['chanume']      = $pinres[0]['huodongnumber'] - $pinres[0]['people'];

                            $userarr = $pinres[0]['user'] != '' ? explode(',', $pinres[0]['user'])  : array();

                            foreach ($userarr as $index => $item) {

                                $usersql = $dsql->SetQuery("SELECT `photo` FROM `#@__member` WHERE `id` = '$item'");

                                $userres = $dsql->dsqlOper($usersql, "results");


                                array_push($userarrpic, $userres[0]['photo'] != '' ? getFilePath($userres[0]['photo']) : '');
                            }

                            $huodongarr['userarr'] = $userarrpic;
                        }
                    }

                    $list[$i]['huodongarr'] = $huodongarr;
                    //支付方式
                    $list[$i]["paytypeold"] = $val["paytype"];
                    $paySql                 = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $val["paytype"] . "'");
                    $payResult              = $dsql->dsqlOper($paySql, "results");
                    if (!empty($payResult)) {
                        $list[$i]["paytype"] = $payResult[0]["pay_name"];
                    } else {
                        global $cfg_pointName;
                        $payname = "";
                        if ($val["paytype"] == "point,money") {
                            $payname = $cfg_pointName . "+" . $langData['siteConfig'][19][363];  //余额
                        } elseif ($val["paytype"] == "point") {
                            $payname = $cfg_pointName;
                        } elseif ($val["paytype"] == "money" || $val['paytype'] == '管理员支付') {
                            $payname = $langData['siteConfig'][19][363]; //余额
                        } elseif ($val["paytype"] == "delivery") {
                            $payname = $langData['shop'][5][80]; //货到付款
                        } else {
                            $payname = $val['paytype'];
                        }
                        $list[$i]["paytype"] = $payname;
                    }


                    /*商品券相关*/

                    $shopquan = $expireddate = 0;

                    if ($val['protype'] == 1 && $val['orderstate']) {
                        $shopquansql = $dsql->SetQuery("SELECT `id`,`expireddate` FROM `#@__shopquan` WHERE `orderid` = " . $val['id']);
                        $shopquan = $dsql->dsqlOper($shopquansql, "results");
                        if ($shopquan) {
                            $expireddate = $shopquan[0]['expireddate'];
                            $shopquan = count($shopquan);
                        }
                    }

                    $list[$i]["expireddate"] = date('Y.m.d', $expireddate);
                    $list[$i]["shopquan"]    = $shopquan;

                    //优惠信息
                    $priceinfo = empty($val['priceinfo']) ? array() : unserialize($val["priceinfo"]);
                    $list[$i]["priceinfo"] = $priceinfo;

                    $auth_hui = 0;
                    if ($priceinfo) {
                        foreach ($priceinfo as $key => $value) {
                            $auth_hui += $value['amount'];
                        }
                    }

                    //未付款的提供付款链接
                    if ($val['orderstate'] == 0) {
                        $RenrenCrypt        = new RenrenCrypt();
                        $encodeid           = base64_encode($RenrenCrypt->php_encrypt($val["ordernum"]));
                        $list[$i]["payurl"] = str_replace("%id%", $encodeid, $payurlParam);
                    }

                    //评价
                    $list[$i]['common'] = $val['common'];

                    //商品信息
                    $productArr    = array();
                    $totalPayPrice = 0;

                    $countall = 0;
                    foreach ($ret as $k => $v) {
                        global $oper;
                        $oper = "info";
                        $id = $v['proid'];
                        $arr = array('id' => $id, 'info' => $oper);
                        $this->param = $arr;
                        $detail      = $this->detail(1);

                        if ($val['orderstate'] == 0) {
                            $list[$i]["expireddate"] = $detail['qtimetype'] == 1 ? date('Y.m.d', AddDay(time(), $detail['quantime'])) : date('Y.m.d', $detail['quantime']);
                        }

                        $list[$i]['product'][$k]['proid']      = $v['proid'];
                        $list[$i]['product'][$k]['title']      = $detail['title'];
                        $list[$i]['product'][$k]['inventory']  = $detail['inventory'];
                        $list[$i]['product'][$k]['limit']      = $detail['limit'];
                        $list[$i]['product'][$k]['title']      = $detail['title'];
                        $list[$i]['product'][$k]['litpic']     = $detail['litpic'];
                        $list[$i]['product'][$k]['is_tuikuan'] = $detail['is_tuikuan'];
                        $list[$i]['product'][$k]['url']        = str_replace("%id%", $v['proid'], $urlParam);
                        $list[$i]['product'][$k]['ret_state'] = $v['ret_state'];
                        $list[$i]['product'][$k]['ret_ok_date'] = $v['ret_ok_date'];


                        if ($v['changetype'] == 1) {
                            $list[$i]['product'][$k]['price']     = $v['changeprice'];
                        } else {
                            $list[$i]['product'][$k]['price']     = $v['price'];
                        }
                        $list[$i]['product'][$k]['count']     = $v['count'];

                        $countall += $v['count'];
                        $list[$i]['product'][$k]['specation'] = str_replace('$$$', ' ', $v['specation']);
                        $list[$i]['product'][$k]['speid']     = $v['speid'];

                        //未付款的不计算积分和余额部分
                        if ($val['orderstate'] == 0) {
                            $totalPayPrice += $v['price'] * $v['count'] + $v['discount'];
                        } else {
                            //							$totalPayPrice += $v['payprice'];
                            $totalPayPrice += $v['price'] * $v['count'] + $v['discount'];
                        }
                    }

                    //砍价订单
                    if ($val['huodongtype'] == 3) {
                        //查询砍价金额
                        // $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `oid` = " . $val['id']);
                        // $bargainres = $dsql->dsqlOper($bargainsql, "results");
                        // $totalPayPrice = $bargainres[0]['state'] == 2 ? (float)$bargainres[0]['gmoney'] : (float)$bargainres[0]['gnowmoney'];
                    }

                    $list[$i]['countall'] = $countall;
                    $totalPayPrice += $val['logistic'];
                    if ($val['changetype'] == 1) {
                        $totalPayPrice = sprintf("%.2f", $val['changeprice']);
                    }

                    //积分抵扣的金额
                    if ($val['point'] != 0) {
                        $totalPoint  = $val["point"];
                        $pointprice = $totalPoint / $cfg_pointRatio;
                        $totalPayPrice -= $pointprice;
                    }

                    //改价后需要减去优惠金额和积分抵扣的金额
                    $totalPayPrice = sprintf("%.2f", $totalPayPrice - $auth_hui);
                    $list[$i]['totalPayPrice'] = $totalPayPrice;

                    //分店信息
                    $branchid = $val['branchid'];
                    if ($branchid) {
                        $sql = $dsql->SetQuery("SELECT `userid`,`title`, `tel`, `qq`, `address` FROM `#@__shop_branch_store` WHERE `id` = " . $branchid);
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            //                            $userbranchinfo = $userLogin->getMemberInfo($ret[0]['userid']);
                            $sql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = " . $ret[0]['userid']);
                            $userbranchinfo = $dsql->dsqlOper($sql, "results");
                            $param              = array(
                                'service'  => 'shop',
                                'template' => 'store-detail',
                                'id'       => $val['store']
                            );
                            $list[$i]['branch'] = array(
                                'title'   => $ret[0]['title'],
                                'userid'   => $ret[0]['userid'],
                                'tel'     => $ret[0]['tel'],
                                'qq'      => $ret[0]['qq'],
                                'address' => $ret[0]['address'],
                                'branchusername' => $userbranchinfo[0]['nickname'] ? $userbranchinfo[0]['nickname'] : '',
                                'domain'  => getUrlPath($param)
                            );
                        }
                    }

                    $i++;
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 商城订单详细
     * @return array
     */
    public function orderDetail()
    {
        global $dsql;
        global $langData;
        $orderDetail = $cardnum = array();
        //        $id          = is_array($this->param) ? $this->param['id'] : $this->param;
        $id = is_array($this->param) ? $this->param['id'] : $this->param;
        $proid = is_array($this->param) ? $this->param['proid'] : 0;

        global $userLogin;
        $userid = $userLogin->getMemberID();

        $userinfo = $userLogin->getMemberInfo();

        $userid = $userinfo['is_staff'] == 1 ? $userinfo['companyuid'] : $userid;

        $did = GetCookie("courier");
        $did = (int)$did;
        if ($userid == -1 && $did == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        include HUONIAOINC . "/config/shop.inc.php";
        if (empty($customconfirmDay)) {
            $customconfirmDay = 5;
        }
        $day = (int)$customconfirmDay;
        $tuikuanday = (int)$customtuikuanday;
        $closetuikuanday = (int)$customclosetuikuanday;
        //主表信息
        //        $archives = $dsql->SetQuery("SELECT o.* FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = o.`branchid` WHERE (o.`userid` = '$userid' OR s.`userid` = '$userid'  OR b.`userid` = '$userid' OR (o.`peisongid` = $did && $did != 0)) AND o.`id` = " . $id);
        if ($proid) {
            $archives = $dsql->SetQuery("SELECT o.*,ob.`id`oid,ob.`ordernum`,ob.`ret_amount`,ob.`orderstate`,ob.`orderdate`,ob.`common`,ob.`userid`,ob.`branchid`,ob.`shipping`,ob.`confirmdate`,ob.`lng`,ob.`okdate`,ob.`lat`,ob.`huodongtype`,ob.`pinid`,ob.`pinstate`,ob.`pintype`,ob.`peerpay`,ob.`protype`,ob.`exp_company`,ob.`people`,ob.`address`,ob.`contact`,ob.`note`,ob.`paytype`,ob.`tuantel`,ob.`priceinfo`,ob.`logistic` orderlogistic,ob.`changetype`,ob.`changeprice`,ob.`ret_ok_date`,s.`userid` suid  FROM `#@__shop_order` ob LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id` LEFT JOIN `#@__shop_store` s ON s.`id` = ob.`store` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = ob.`branchid` WHERE (ob.`userid` = '$userid' OR s.`userid` = '$userid'  OR b.`userid` = '$userid' OR (ob.`peisongid` = $did && $did != 0)) AND o.`orderid` = '$id' AND o.`proid` = '$proid'");
            $results = $dsql->dsqlOper($archives, "results");
            if (!empty($results)) {
                $results = $results[0];

                //查询当前登录账号是否为分店管理员，如果是则判断当前订单是否为此分店管理员，如果不是，则无权限查看
                if($userid > -1){
                    $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = " . $userinfo['userid']);
                    $userResult = $dsql->dsqlOper($userSql, "results");
                    if ($userResult) {
                        $_branchid = $userResult[0]['id'];
                        if($_branchid != $results["branchid"] && $userinfo['userid'] != $results["userid"]){
                            showMsg('订单权限错误，您无权查看该订单！', getUrlPath(array('service' => 'member', 'template' => 'order-shop')));
                            die;
                        }
                    }
                }

                $orderDetail["id"] = $results["oid"];
                $orderDetail["ordernum"] = $results["ordernum"];
                $orderDetail["tuantel"] = $results["tuantel"];
                $orderDetail["store"] = $results["store"];
                $orderDetail["suid"] = $results["suid"];
                $orderDetail["orderstate"] = $results["orderstate"];
                $orderDetail["state"] = $results["orderstate"];
                $orderDetail["orderdate"] = $results["orderdate"];
                $orderDetail["autodate"] = (int)$results["orderdate"] + 3600 * 24 * $day;
                if (!empty($results['exp_company'])) {
                    $orderDetail["autodate"] = (int)$results["exp_date"] + 3600 * 24 * $day;
                }
                $orderDetail["common"] = $results["common"];
                $orderDetail["logistic"] = $results["logistic"];
                $orderDetail["userid"] = $results["userid"];
                $orderDetail["branchid"] = $results["branchid"];
                $orderDetail["changetype"] = $results["changetype"];
                $orderDetail["changeprice"] = $results["changeprice"];
                $orderDetail["changelogistic"] = $results["changelogistic"] ? $results["changelogistic"] : $results["logistic"];
                $orderDetail["shipping"] = $results["shipping"];
                $orderDetail["confirmdate"] = $results["confirmdate"];
                $orderDetail["okdate"] = $results["okdate"];
                $orderDetail["lng"] = $results["lng"];
                $orderDetail["lat"] = $results["lat"];
                $orderDetail["huodongtype"] = $results["huodongtype"];
                $orderDetail["pinid"] = $results["pinid"];
                $orderDetail["pinstate"] = $results["pinstate"];
                $orderDetail["pintype"] = $results["pintype"];
                $orderDetail["peerpay"] = $results["peerpay"];
                $orderDetail["protype"] = $results["protype"];
                $orderDetail["ret_state"] = $results["ret_state"];
                $orderDetail["ret_amount"] = (float)$results["ret_amount"];
                $orderDetail["ret_type"] = $results["ret_type"];
                $orderDetail["ret_note"] = $results["ret_note"];
                $orderDetail["ret_ok_date"] = $results["ret_ok_date"];
                $orderDetail["refrundamount"] = $results["refrundamount"];
                $orderDetail["refrunddate"] = $results["refrunddate"];
                $orderDetail["refrunddate"] = $results["refrunddate"];
                $orderDetail["refrundno"] = $results["refrundno"];
                $orderDetail["usequan"] = (int)$results["usequan"];
                $orderDetail["ret_audittype"] = $results["ret_audittype"];   /*卖家退款审核状态 1-拒绝*/
                $orderDetail["ret_ptaudittype"] = $results["ret_ptaudittype"]; /*卖家退款审核状态 1-拒绝*/
                $orderDetail["ret_negotiate"] = unserialize($results["ret_negotiate"]);   /*退款协商历史*/
                //            $orderDetail["ret_negotiate"]   = $results["ret_negotiate"];   /*退款协商历史*/
                $orderDetail["userrefundtype"] = $results["user_refundtype"]; /*用户退款类型 0-退款，1-退货，2-客服介入*/
                $orderDetail["user_expcompany"] = $results["user_expcompany"]; /*用户退货快递公司*/
                $orderDetail["user_expnumber"] = $results["user_expnumber"];  /*用户退货快递单号*/
                $orderDetail["user_exptime"] = $results["user_exptime"];  /*用户退货快递单号*/
                $orderDetail["user_exptype"] = $results["user_exptype"];    /*用户退货类型1-快递，2-自行*/
                $orderDetail["ret_audittime"] = $results["ret_audittime"];   /*卖家操作审核时间*/
                $orderDetail["user_expoktime"] = $results["user_expoktime"];   /*买家自行退货确认送达时间*/
                $orderDetail["balance"] = $results["balance"];
                $orderDetail["returngood"] = $results["returngood"];
                $infosql = $dsql->SetQuery("SELECT `alicard` FROM `#@__member` WHERE `id` = " . $results['userid']);
                $infores = $dsql->dsqlOper($infosql, "results");
                $alicard = $infores[0]['alicard'] ? $infores[0]['alicard'] : '';
                $payname = '';
                if ($results["paytype"] == "wxpay") {
                    $payname = "微信";
                } elseif ($results["paytype"] == "alipay") {
                    $payname = $alicard . "支付宝";
                }
                $orderDetail["payname"] = $payname;
                $ret_negotiate = array();
                if ($results["ret_negotiate"] != '') {
                    $ret_negotiate = unserialize($results["ret_negotiate"]);
                }
                $orderDetail["ret_negotiatearr"] = $ret_negotiate;  /*协商历史数组*/
                $orderDetail["refundnumeber"] = (int)$ret_negotiate['numeber'];  /*次数*/
                $orderDetail['user_refundtype']   = $ret_negotiate['refundinfo'][0]['type'];   //退款类型
                $refundinfo = '';
                $status = 0;
                $isCheck = 0;
                $autotime = GetMkTime(time());
                if ((int)$ret_negotiate['numeber'] != 0) {
                    if ((int)$ret_negotiate['numeber'] == 1) {
                        //                        $autotime = $ret_negotiate['refundinfo'][1]['datetime'];
                        //                        $refundinfo = $ret_negotiate['refundinfo'][1]['refundinfo'];
                        //                        $status = $ret_negotiate['refundinfo'][1]['status'];
                        //                        $selftype= $ret_negotiate['refundinfo'][1]['selftype'];
                        $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                        $autotime = $retArr['datetime'];
                        $refundinfo = $retArr['refundinfo'];
                        $status = $retArr['status'];
                        $isCheck = $retArr['isCheck'];
                    } else {

                        $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                        $autotime = $retArr['datetime'];
                        $refundinfo = $retArr['refundinfo'];
                        $status = $retArr['status'];
                        $type = $retArr['type'];
                        $service = (int)$retArr['service'];
                        $isCheck = $retArr['isCheck'];
                    }
                }

                $orderDetail["status"] = $status;
                $orderDetail["isCheck"] = $isCheck;
                $orderDetail["selftype"] = $results['selftype'];
                $orderDetail["service"] = $service;
                $orderDetail["type"] = $type;
                $orderDetail["refundinfo"] = $refundinfo;
                $orderDetail["closekuantime"] = (int)$autotime + $closetuikuanday * 3600 * 24;
                $orderDetail["autotuikuantime"] = (int)$results['ret_date'] + $tuikuanday * 3600 * 24;  /*自动关闭退款时间*/
                $orderDetail["autoaudittime"] = (int)$results['ret_audittime'] + $tuikuanday * 3600 * 24;  /*买家同意退货自动退款时间*/
                $orderDetail["autouser_exptime"] = (int)$results['user_exptime'] + $tuikuanday * 3600 * 24;  /*买家寄出自动退款时间*/
                // $orderDetail["autocloseexptime"] = (int)$results['user_exptime'] + $closetuikuanday * 3600 * 24;  /*买家自行退货自动关闭退款时间*/
                $orderDetail["autocloseexptime"] = (int)($results["ret_audittype"] == 1 ? ($ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1]['datetime'] + $closetuikuanday * 3600 * 24) : 0);
                $orderDetail["autouexpoktime"] = (int)$results['autouexpoktime'] + $tuikuanday * 3600 * 24;  /*买家自行退货已送达自动退款时间*/

                $totalPoint += $results["point"];
                global $cfg_pointRatio;
                $pointprice = $totalPoint / $cfg_pointRatio;
                $orderDetail["pointprice"] = sprintf('%.2f', $pointprice);
                $cancletime = $results['orderdate'] + 1800;

                $orderDetail["cancletime"] = $cancletime;

                $allquanmoney = 0;
                if ($orderDetail["usequan"] != 0) {

                    $priceinfo = unserialize($results["priceinfo"]);

                    foreach ($priceinfo as $index => $item) {

                        if ($index['type'] == 'quan') {
                            $allquanmoney += $index['amount'];
                        }
                    }
                }

                $orderDetail["allquanmoney"] = $allquanmoney;

                $priceinfo = empty($results['priceinfo']) ? array() : unserialize($results["priceinfo"]);
                $orderDetail["priceinfo"] = $priceinfo;
                $auth_hui = 0;
                if ($priceinfo) {
                    foreach ($priceinfo as $key => $value) {
                        $auth_hui += $value['amount'];
                    }
                }

                //店铺信息
                $store = array();
                if ($results['store'] != 0) {
                    $storeHandels = new handlers("shop", "storeDetail");
                    $storeConfig = $storeHandels->getHandle($results['store']);
                    if (is_array($storeConfig) && $storeConfig['state'] == 100) {
                        $storeConfig = $storeConfig['info'];
                        if (is_array($storeConfig)) {
                            $store = $storeConfig;
                        }
                    }
                }
                $orderDetail['store'] = $store;

                //店铺分店信息
                $storeBranch = array();
                if ($results['branchid'] != 0) {
                    $storeBranchHandels = new handlers("shop", "storeBranchDetail");
                    $storeBranchConfig = $storeBranchHandels->getHandle($results['branchid']);
                    if (is_array($storeBranchConfig) && $storeBranchConfig['state'] == 100) {
                        $storeBranchConfig = $storeBranchConfig['info'];
                        if (is_array($storeBranchConfig)) {
                            $storeBranch = $storeBranchConfig;
                        }
                    }
                }
                $orderDetail['storeBranch'] = $storeBranch;

                $orderFinished = 0;
                if ($results['orderstate'] == 3) {
                    $orderFinished = 1;
                }
                $orderDetail["orderFinished"] = $orderFinished;
                //配送信息
                $orderDetail["username"] = $results["people"];
                $orderDetail["useraddr"] = $results["address"];
                $orderDetail["address"] = $results["address"];
                $orderDetail["usercontact"] = $results["contact"];
                $orderDetail["note"] = $results["note"];


                //未付款的提供付款链接
                if ($results['orderstate'] == 0) {
                    $RenrenCrypt = new RenrenCrypt();
                    $encodeid = base64_encode($RenrenCrypt->php_encrypt($results["ordernum"]));

                    $param = array(
                        "service" => "shop",
                        "template" => "pay",
                        "param" => "ordernum=" . $encodeid
                    );
                    $payurl = getUrlPath($param);

                    $orderDetail["payurl"] = $payurl;
                }



                /*券*/
                $proquanarr = array();

                if ($results["protype"] == 1) {

                    $proquansql = $dsql->SetQuery("SELECT `cardnum`,`expireddate`,`usedate`,`ret_state`,`proid` FROM `#@__shopquan` WHERE `orderid` = '$id' ORDER BY `id` ASC");

                    $proquanres = $dsql->dsqlOper($proquansql, "results");
                    foreach ($proquanres as $index => $proquanre) {
                        $cardnum = join(' ', str_split($proquanre['cardnum'], 4));
                        $proquanarr[$index]['cardnum'] = substr($cardnum, 0, 3) . '******' . substr($cardnum, -3);

                        //自己的订单才需要显示
                        if ($userid == $results["userid"]) {
                            $proquanarr[$index]['cardnum'] = $cardnum;
                            $proquanarr[$index]['ycardnum'] = $proquanre['cardnum'];
                        }

                        $proquanarr[$index]['usedate'] = $proquanre['usedate'];
                        $proquanarr[$index]['ret_state'] = (int)$proquanre['ret_state'];

                        $proquanarr[$index]['expireddate'] = date('Y.m.d', $proquanre['expireddate']);
                        $proquanarr[$index]['expireddatestr'] = $proquanre['expireddate'];
                    }
                    // array_multisort(array_column($proquanarr, 'usedate'), SORT_ASC, $proquanarr);

                    $newarray = array_filter($proquanarr, function ($val) {
                        if ($val['usedate'] == 0) {
                            return $val;
                        }
                    });

                    //自己的订单才需要显示
                    if ($userid == $results["userid"]) {
                        $param = array(
                            "service" => "member",
                            "template" => "verify-shop",
                            "param" => "cardnum=" . join(",", array_column($newarray, 'ycardnum')) . "&currentPageOpen=1&fromQr=1"
                        );
                        $orderDetail["cardnumUrl"] = urlencode(getUrlPath($param));
                    }
                }
                $orderDetail["proquanarr"] = $proquanarr;

                $pinarr = $userarrpic = array();

                if ($results["huodongtype"] == 4) {

                    $pinid = (int)$results["pinid"];
                    $shoppinsql = $dsql->SetQuery("SELECT t.`userid`,t.`user`,h.`huodongnumber`,t.`people`,t.`enddate`,t.`state` FROM `#@__shop_tuanpin` t LEFT JOIN `#@__shop_huodongsign` h ON t.`hid` = h.`id` WHERE t.`id` = '$pinid'");


                    $shoppinres = $dsql->dsqlOper($shoppinsql, "results");

                    if ($shoppinres && is_array($shoppinres)) {

                        $pinarr['chanum'] = $shoppinres[0]['huodongnumber'] - $shoppinres[0]['people'];
                        $pinarr['enddate'] = $shoppinres[0]['enddate'];
                        $pinarr['state'] = $shoppinres[0]['state'];
                        $pinarr['userid'] = $shoppinres[0]['userid'];

                        $userarr = $shoppinres[0]['user'] != '' ? explode(',', $shoppinres[0]['user']) : array();

                        foreach ($userarr as $index => $item) {
                            
                            //获取拼团参与人的订单状态
                            $sql = $dsql->SetQuery("SELECT o.`logistic`, o.`paytype`,o.`ordernum`,o.`orderdate`,o.`orderstate`,op.`count` procount,o.`payprice`,o.`balance`,o.`point`,op.`price`,op.`speid`,`count` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` WHERE o.`userid` = '$item' and o.`pinid` = '$pinid' AND (o.`orderstate` = 1 OR o.`orderstate` = 3)");
                            $res = $dsql->dsqlOper($sql, "results");
                            if($res){
                                $usersql = $dsql->SetQuery("SELECT `photo` FROM `#@__member` WHERE `id` = '$item'");
                                $userres = $dsql->dsqlOper($usersql, "results");

                                $user['photo'] = $userres[0]['photo'] != '' ? getFilePath($userres[0]['photo']) : '';
                                $user['userid'] = $item;
                                array_push($userarrpic, $user);
                            }
                        }

                        $pinarr['userarr'] = $userarrpic;
                    }
                }

                $orderDetail["pinarr"] = $pinarr;
                //支付方式
                $orderDetail["paytypeold"] = $results["paytype"];
                $paySql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $results["paytype"] . "'");
                $payResult = $dsql->dsqlOper($paySql, "results");
                if (!empty($payResult)) {
                    $orderDetail["paytype"] = $payResult[0]["pay_name"];
                } else {
                    global $cfg_pointName;
                    $payname = "";
                    if ($results["paytype"] == "point,money") {
                        $payname = $cfg_pointName . "+" . $langData['siteConfig'][19][363]; //余额
                    } elseif ($results["paytype"] == "point") {
                        $payname = $cfg_pointName;
                    } elseif ($results["paytype"] == "money" || $results['paytype'] == '管理员支付') {
                        $payname = $langData['siteConfig'][19][363]; //余额
                    } elseif ($results["paytype"] == "delivery") {
                        $payname = $langData['shop'][5][80]; //余额
                    } else {
                        $payname = $results["paytype"];
                    }
                    $orderDetail["paytype"] = $payname;
                }
                //
                //            if ($orderDetail['peerpay'] > 0) {
                //
                //                $orderDetail["paytype"] = '朋友代付';
                //            }

                //代付
                if ($results['peerpay'] > 0) {
                    if ($results["paytype"] == "point") {
                        $payname = "积分";
                    } elseif ($results["paytype"] == "money") {
                        $payname = "余额";
                    } elseif ($results["paytype"] == "wxpay") {
                        $payname = "微信";
                    } elseif ($results["paytype"] == "alipay") {
                        $payname = "支付宝";
                    }
                    $userinfo = $userLogin->getMemberInfo($results['peerpay'], 1);
                    if (is_array($userinfo)) {
                        $orderDetail["paytype"] = '[' . $userinfo['nickname'] . ']' . $payname . '代付';
                    } else {
                        $orderDetail["paytype"] = '[好友]' . $payname . '代付';
                    }
                }

                $orderDetail["paydate"] = $results["paydate"];

                //快递公司&单号
                $orderDetail["expCompany"] = $results["exp_company"];
                $orderDetail["expNumber"] = $results["exp_number"];
                $orderDetail["expDate"] = $results["exp_date"];

                //快递跟踪
                $expTrack = $results["exp_track"];
                if ((!$expTrack || $expTrack == 'a:0:{}') && ($results["orderstate"] == 3 || $results["orderstate"] == 4 || $results["orderstate"] == 6 || $results["orderstate"] == 7) && $results["exp_company"] != 'else') {

                    //顺丰快递必须添加收或寄件人手机尾号4位(单号:4位手机号)。例如：SF12345678:0123
                    if ($results["exp_company"] == 'sf') {
                        $results["exp_number"] = $results["exp_number"] . ':' . substr($results["contact"], -4);
                    }

                    //快递跟踪
                    $expTrack = $results["exp_track"];
                    if (($results["orderstate"] == 3 || $results["orderstate"] == 4 || $results["orderstate"] == 6 || $results["orderstate"] == 7) && $results["exp_company"] != 'else' && $results["exp_company"] != '') {
                        $expTrack = getExpressTrack($results["exp_company"], $results["exp_number"], 'shop_order', $id);
                    }
                }
                $orderDetail["expTrack"] = $expTrack ? unserialize($expTrack) : array();

                //卖家回复
                $orderDetail["retSnote"] = $results["ret_s_note"];
                $imglist = array();
                $pics = $results['ret_s_pics'];
                if (!empty($pics)) {
                    $pics = explode(",", $pics);
                    foreach ($pics as $key => $value) {
                        $imglist[$key]['val'] = $value;
                        $imglist[$key]['path'] = getFilePath($value);
                    }
                }

                $orderDetail["retSpics"] = $imglist;
                $orderDetail["retSdate"] = $results["ret_s_date"];


                //退款状态
                $orderDetail["retState"] = $results["ret_state"];
                //退款原因
                $orderDetail["retType"] = $results["ret_type"];
                $orderDetail["retNote"] = $results["ret_note"];

                $imglist = array();
                $pics = $results['ret_pics'];
                if (!empty($pics)) {
                    $pics = explode(",", $pics);
                    foreach ($pics as $key => $value) {
                        $imglist[$key]['val'] = $value;
                        $imglist[$key]['path'] = getFilePath($value);
                    }
                }

                $orderDetail["retPics"] = $imglist;
                $orderDetail["retDate"] = $results["ret_date"];

                //退款确定时间
                $orderDetail["retOkdate"] = $results["ret_ok_date"];
                $orderDetail['now'] = GetMkTime(time());


                //配送员
                $orderDetail["peisongid"] = $results["peisongid"];
                $orderDetail["peidate"] = $results["peidate"];
                $orderDetail["songdate"] = $results["songdate"];

                if ($results["peisongid"]) {
                    $sql = $dsql->SetQuery("SELECT `name`, `areaCode`, `phone` FROM `#@__waimai_courier` WHERE `id` = " . $results["peisongid"]);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $orderDetail["peisongname"] = $ret[0]["name"];
                        $orderDetail["peisongtel"] = ($ret[0]["areaCode"] ? $ret[0]["areaCode"] : '') . $ret[0]["phone"];
                    }
                }


                //商品列表
                $totalPoint = 0;
                $totalBalance = 0;
                $totalPayPrice = 0;
                $logisticprice = 0;
                $sql = $dsql->SetQuery("SELECT p.* FROM `#@__shop_order_product` p LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULL AND p.`proid` =  '$proid' AND p.`orderid` = '$id' AND p.`proid` = '$proid'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $p = 0;
                    $proDetail = array();
                    foreach ($ret as $key => $value) {

                        //查询商品详细信息
                        global $oper;
                        $oper = "info";
                        $arr = array('id' => $value['proid'], 'info' => $oper);
                        $this->param = $arr;
                        $detailConfig = $this->detail(1);

                        $proDetail[$p]['id'] = $detailConfig['id'];
                        $proDetail[$p]['porderid'] = $value['id'];
                        $proDetail[$p]['title'] = $detailConfig['title'];
                        $proDetail[$p]['litpic'] = $detailConfig['litpic'];
                        $proDetail[$p]['orderid'] = $value['orderid'];
                        $proDetail[$p]['proid'] = $value['proid'];
                        $proDetail[$p]['is_tuikuan'] = $detailConfig['is_tuikuan'];
                        $proDetail[$p]['speid'] = $value['speid'];
                        $proDetail[$p]['specation'] = $value['specation'];
                        $proDetail[$p]['price'] = $value['price'];
                        $proDetail[$p]['yprice'] = $detailConfig['price'];
                        $proDetail[$p]['count'] = $value['count'];
                        $proDetail[$p]['logistic'] = $value['logistic'];
                        $proDetail[$p]['discount'] = $value['discount'];
                        $proDetail[$p]['point'] = $value['point'];
                        $proDetail[$p]['balance'] = $value['balance'];
                        $proDetail[$p]['changeprice'] = (float)$value['changeprice'];
                        $proDetail[$p]['body'] = $detailConfig['body'];
                        $proDetail[$p]['packagearr'] = $detailConfig['packagearr'];
                        $proDetail[$p]['qtimetype'] = $detailConfig['qtimetype'];
                        $proDetail[$p]['quantime'] = $detailConfig['quantime'];
                        $proDetail[$p]['noticearr'] = $detailConfig['noticearr'];
                        $proDetail[$p]['daystr'] = $detailConfig['daystr'];
                        $proDetail[$p]['availabletimearr'] = $detailConfig['availabletimearr'];
                        $proDetail[$p]['pinspecification'] = $detailConfig['pinspecification'];
                        $proDetail[$p]['pinspecifiList'] = $detailConfig['pinspecifiList'];
                        $orderDetail["confirmtype"]    = $detailConfig["confirmtype"];

                        $quansql = $dsql->SetQuery("SELECT count(*) totalCount FROM `#@__shopquan` WHERE `orderid` = '$id' AND `ret_state` = 0");
                        $procountres = $dsql->dsqlOper($quansql, "results");
                        $orderDetail["quancount"] = $procountres[0]['totalCount'];

                        $quansql = $dsql->SetQuery("SELECT count(*) totalCount FROM `#@__shopquan` WHERE `orderid` = '$id' AND `proid` = '".$value['proid']."' AND `ret_state` = 0 AND `usedate` = 0");
                        $procountres = $dsql->dsqlOper($quansql, "results");
                        $orderDetail["quancount_normal"] = $procountres[0]['totalCount'];

                        $ret_negotiate = array();
                        if ($value["ret_negotiate"] != '') {
                            $ret_negotiate = unserialize($value["ret_negotiate"]);
                        }
                        $proDetail[$p]["ret_negotiatearr"] = $ret_negotiate;  /*协商历史数组*/
                        $proDetail[$p]["refundnumeber"] = (int)$ret_negotiate['numeber'];  /*次数*/
                        $refundinfo = '';
                        $status = 0;
                        $autotime = GetMkTime(time());
                        if ((int)$ret_negotiate['numeber'] != 0) {
                            if ((int)$ret_negotiate['numeber'] == 1) {
                                //                                $autotime = $ret_negotiate['refundinfo'][1]['datetime'];
                                //                                $refundinfo = $ret_negotiate['refundinfo'][1]['refundinfo'];
                                //                                $status = $ret_negotiate['status'][1]['status'];
                                $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                                $autotime = $retArr['datetime'];
                                $refundinfo = $retArr['refundinfo'];
                                $status = $retArr['status'];
                            } else {
                                $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                                $autotime = $retArr['datetime'];
                                $refundinfo = $retArr['refundinfo'];
                                $status = $retArr['status'];
                                $type = $retArr['type'];
                                $service = (int)$retArr['service'];
                            }
                        }
                        $proDetail[$p]["status"] = $status;
                        $proDetail[$p]["service"] = $service;
                        $proDetail[$p]["type"] = $type;
                        $proDetail[$p]["refundinfo"] = $refundinfo;

                        $proDetail[$p]["retState"] = $value["ret_state"];


                        //评价
                        if ($results['orderstate'] == 3) {

                            // $sql = $dsql->SetQuery("SELECT `rating`, `score1`, `score2`, `score3`, `pics`, `content`, `ischeck` FROM `#@__shop_common` WHERE `aid` = ".$id." AND `speid` = '".$value['speid']."' AND `pid` = ".$value['proid']);

                            //买家不需要验证状态
                            $ischeck = ' AND `ischeck` = 1';
                            if ($results["userid"] == $userid) {
                                $ischeck = '';
                            }

                            $sql = $dsql->SetQuery("SELECT `rating`, `sco1` as score1, `sco2` as score2, `sco3` as score3, `pics`, `content`, `ischeck` FROM `#@__public_comment_all` WHERE `type` = 'shop-order' AND `oid` = '$id' AND `speid` = '" . $value['speid'] . "' AND `pid` = 0" . $ischeck);
                            $ret = $dsql->dsqlOper($sql, "results");
                            $common = array();
                            if ($ret) {
                                if (!empty($ret[0]['pics'])) {
                                    $picArr = array();
                                    $pics = explode(",", $ret[0]['pics']);
                                    foreach ($pics as $k => $v) {
                                        array_push($picArr, array(
                                            "source" => $v,
                                            "url" => getFilePath($v)
                                        ));
                                    }
                                    $ret[0]['pics'] = $picArr;
                                }
                                $common = $ret[0];
                            }
                            $proDetail[$p]['common'] = $common;
                        }

                        //如果是未支付的，不计算积分和余额
                        $payprice = $results['orderstate'] == 0 ? $value['price'] * $value['count'] + $value['discount'] : $value['payprice'];
                        $proDetail[$p]['payprice'] = sprintf("%.2f", $payprice);
                        $p++;

                        $totalPoint += (float)$value['point'];
                        $totalBalance += (float)$value['balance'];
                        $logisticprice += (float)$value['logistic'];
                        // $totalPayPrice += (float)$value['payprice'];
                        if($value['changeprice'] > 0){
                            $totalPayPrice += $value['changeprice'];
                        }else{
                            $totalPayPrice += $value['price'] * $value['count'] + $value['discount'] + $value['logistic'];
                        }
                    }
                }

                if ($totalPoint) {
                    $pointprice = $totalPoint / $cfg_pointRatio;
                    $totalPayPrice -= $pointprice;
                }
                $totalPayPrice = (float)sprintf("%.2f", $totalPayPrice);

                //砍价订单
                if ($results['huodongtype'] == 3) {
                    //查询砍价金额
                    // $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `oid` = " . $id);
                    // $bargainres = $dsql->dsqlOper($bargainsql, "results");
                    // $totalPayPrice = $bargainres[0]['state'] == 2 ? (float)$bargainres[0]['gmoney'] : (float)$bargainres[0]['gnowmoney'];
                }

                // $logisticprice = $results['logistic'];
                // if ($results['logistic'] > $results['orderlogistic']) {
                //     $logisticprice = $results['orderlogistic'];
                // }
                $totalPayPrice += $logisticprice;

                $totalPayPrice = sprintf("%.2f", $totalPayPrice - (float)$auth_hui);
                // if ($results['changetype'] == 1) {
                //     $totalPayPrice = (float)sprintf("%.2f", $results['changeprice']);
                // }

                //                $totalPayPrice += $results["logistic"] - $auth_hui - $pointprice;

                $orderFinished = 0;
                if ($results['songdate'] != 0 && $results['okdate']) {
                    $orderFinished = 1;
                }
                $orderDetail['orderFinished'] = $orderFinished;
                $orderDetail['product'] = $proDetail;
                $orderDetail['totalBalance'] = (float)sprintf("%.2f", $totalBalance);
                // $orderDetail['totalPayPrice'] = (float)sprintf("%.2f", $totalPayPrice);
                $orderDetail['totalPayPrice'] = (float)sprintf("%.2f", $totalPayPrice);
                $orderDetail['totalmoney'] = (float)sprintf("%.2f", $totalPayPrice);
            } //print_R($orderDetail);exit;
            return $orderDetail;
        } else {
            $archives = $dsql->SetQuery("SELECT ob.*,ob.`id`oid,ob.`point`opoint,o.`speid`,o.`specation`,s.`userid`suserid,ob.`orderstate`,ob.`orderdate`,ob.`common`,ob.`userid`,ob.`branchid`,ob.`shipping`,ob.`confirmdate`,ob.`lng`,ob.`okdate`,ob.`lat`,ob.`huodongtype`,ob.`pinid`,ob.`pinstate`,ob.`pintype`,ob.`peerpay`,ob.`protype`,ob.`exp_company`,ob.`people`,ob.`address`,ob.`contact`,ob.`note`,ob.`paytype`,ob.`tuantel`,ob.`priceinfo`,ob.`logistic` orderlogistic  FROM `#@__shop_order` ob LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id` LEFT JOIN `#@__shop_store` s ON s.`id` = ob.`store` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = ob.`branchid` WHERE (ob.`userid` = '$userid' OR s.`userid` = '$userid'  OR b.`userid` = '$userid' OR (ob.`peisongid` = $did && $did != 0)) AND ob.`id` = '$id'");
            $results = $dsql->dsqlOper($archives, "results");

            if (!empty($results)) {
                $results = $results[0];

                //查询当前登录账号是否为分店管理员，如果是则判断当前订单是否为此分店管理员，如果不是，则无权限查看
                if($userid > -1){
                    $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = " . $userinfo['userid']);
                    $userResult = $dsql->dsqlOper($userSql, "results");
                    if ($userResult) {
                        $_branchid = $userResult[0]['id'];
                        if($_branchid != $results["branchid"] && $userinfo['userid'] != $results["userid"]){
                            showMsg('订单权限错误，您无权查看该订单！', getUrlPath(array('service' => 'member', 'template' => 'order-shop')));
                            die;
                        }
                    }
                }

                $orderDetail["id"] = $results["oid"];
                $orderDetail["ordernum"] = $results["ordernum"];
                $orderDetail["tuantel"] = $results["tuantel"];
                $orderDetail["store"] = $results["store"];
                $orderDetail["orderstate"] = $results["orderstate"];
                $orderDetail["state"] = $results["orderstate"];
                $orderDetail["orderdate"] = $results["orderdate"];
                $orderDetail["autodate"] = (int)$results["orderdate"] + 3600 * 24 * $day;
                $orderDetail["common"] = $results["common"];
                $orderDetail["userid"] = $results["userid"];
                $usersql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE  `id` = '" . $results["userid"] . "'");
                $umeminfo = $dsql->dsqlOper($usersql, "results");
                $orderDetail["musername"]   = $umeminfo ? $umeminfo[0]['nickname']  : '';
                $orderDetail["branchid"] = $results["branchid"];
                $orderDetail["shipping"] = $results["shipping"];
                $orderDetail["songdatime"] = $results["songdatime"];
                $orderDetail["confirmdate"] = $results["confirmdate"];
                $orderDetail["changeprice"] = $results["changeprice"];
                $orderDetail["changelogistic"] = $results["changelogistic"] ? $results["changelogistic"] : $results["logistic"];
                $orderDetail["okdate"] = $results["okdate"];
                $orderDetail["lng"] = $results["lng"];
                $orderDetail["lat"] = $results["lat"];
                $orderDetail["huodongtype"] = $results["huodongtype"];
                $orderDetail["pinid"] = $results["pinid"];
                $orderDetail["pinstate"] = $results["pinstate"];
                $orderDetail["pintype"] = $results["pintype"];
                $orderDetail["peerpay"] = $results["peerpay"];
                $orderDetail["protype"] = $results["protype"];
                $orderDetail["ret_state"] = $results["ret_state"];
                $orderDetail["ret_amount"] = (float)$results["ret_amount"];
                $orderDetail["ret_type"] = $results["ret_type"];
                $orderDetail["ret_note"] = $results["ret_note"];
                $orderDetail["refrundamount"] = $results["refrundamount"];
                $orderDetail["refrunddate"] = $results["refrunddate"];
                $orderDetail["refrunddate"] = $results["refrunddate"];
                $orderDetail["refrundno"] = $results["refrundno"];
                $orderDetail["usequan"] = (int)$results["usequan"];
                $orderDetail["ret_audittype"] = $results["ret_audittype"];   /*卖家退款审核状态 1-拒绝*/
                $orderDetail["ret_ptaudittype"] = $results["ret_ptaudittype"]; /*卖家退款审核状态 1-拒绝*/
                $orderDetail["ret_negotiate"] = unserialize($results["ret_negotiate"]);   /*退款协商历史*/
                //            $orderDetail["ret_negotiate"]   = $results["ret_negotiate"];   /*退款协商历史*/
                $orderDetail["user_refundtype"] = $results["user_refundtype"]; /*用户退款类型 0-退款，1-退货，2-客服介入*/
                $orderDetail["user_expcompany"] = $results["user_expcompany"]; /*用户退货快递公司*/
                $orderDetail["user_expnumber"] = $results["user_expnumber"];  /*用户退货快递单号*/
                $orderDetail["user_exptime"] = $results["user_exptime"];  /*用户退货快递单号*/
                $orderDetail["user_exptype"] = $results["user_exptype"];    /*用户退货类型1-快递，2-自行*/
                $orderDetail["ret_audittime"] = $results["ret_audittime"];   /*卖家操作审核时间*/
                $orderDetail["user_expoktime"] = $results["user_expoktime"];   /*买家自行退货确认送达时间*/
                $orderDetail["logistic"] = $results["logistic"];   /*运费*/
                $orderDetail["logistictype"]  =  $results["logistictype"] ?  unserialize($results["logistictype"]) : 0;
                $orderDetail["autotuikuantime"] = (int)$results['ret_date'] + $tuikuanday * 3600 * 24;  /*自动关闭退款时间*/
                $ret_negotiate = array();
                if ($results["ret_negotiate"] != '') {
                    $ret_negotiate = unserialize($results["ret_negotiate"]);
                }
                $orderDetail["ret_negotiatearr"] = $ret_negotiate;  /*协商历史数组*/
                $orderDetail["refundnumeber"] = (int)$ret_negotiate['numeber'];  /*次数*/
                $refundinfo = '';
                $status = 0;
                $autotime = GetMkTime(time());
                if ((int)$ret_negotiate['numeber'] != 0) {
                    if ((int)$ret_negotiate['numeber'] == 1) {
                        //                        $autotime = $ret_negotiate['refundinfo'][1]['datetime'];
                        //                        $refundinfo = $ret_negotiate['refundinfo'][1]['refundinfo'];
                        //                        $status = $ret_negotiate['status'][1]['status'];
                        $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                        $autotime = $retArr['datetime'];
                        $refundinfo = $retArr['refundinfo'];
                        $status = $retArr['status'];
                    } else {

                        $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                        $autotime = $retArr['datetime'];
                        $refundinfo = $retArr['refundinfo'];
                        $status = $retArr['status'];
                        $type = $retArr['type'];
                        $service = (int)$retArr['service'];
                    }
                }
                $orderDetail["status"] = $status;
                $orderDetail["service"] = $service;
                $orderDetail["type"] = $type;
                $orderDetail["refundinfo"] = $refundinfo;
                $orderDetail["closekuantime"] = (int)$autotime + $closetuikuanday * 3600 * 24;
                $orderDetail["autoaudittime"] = (int)$results['ret_audittime'] + $tuikuanday * 3600 * 24;  /*买家同意退货自动退款时间*/
                $orderDetail["autouser_exptime"] = (int)$results['user_exptime'] + $tuikuanday * 3600 * 24;  /*买家寄出自动退款时间*/
                // $orderDetail["autocloseexptime"] = (int)$results['user_exptime'] + $closetuikuanday * 3600 * 24;  /*买家自行退货自动关闭退款时间*/
                $orderDetail["autocloseexptime"] = (int)($results["ret_audittype"] == 1 ? ($ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1]['datetime'] + $closetuikuanday * 3600 * 24) : 0);
                $orderDetail["autouexpoktime"] = (int)$results['autouexpoktime'] + $tuikuanday * 3600 * 24;  /*买家自行退货已送达自动退款时间*/

                $totalPoint = $results["opoint"];
                global $cfg_pointRatio;
                $pointprice = $totalPoint / $cfg_pointRatio;
                $orderDetail["pointprice"] = sprintf('%.2f', $pointprice);
                $cancletime = $results['orderdate'] + 1800;

                $orderDetail["cancletime"] = $cancletime;

                $allquanmoney = 0;
                if ($orderDetail["usequan"] != 0) {

                    $priceinfo = unserialize($results["priceinfo"]);

                    foreach ($priceinfo as $index => $item) {

                        if ($index['type'] == 'quan') {
                            $allquanmoney += $index['amount'];
                        }
                    }
                }

                $orderDetail["allquanmoney"] = $allquanmoney;

                $priceinfo = empty($results['priceinfo']) ? array() : unserialize($results["priceinfo"]);
                $orderDetail["priceinfo"] = $priceinfo;
                $auth_hui = 0;
                $authlogis = 0;
                if ($priceinfo) {
                    foreach ($priceinfo as $key => $value) {
                        $auth_hui += $value['amount'];
                        if ($key['type'] == 'auth_peisong') {
                            $authlogis += $value['amount'];
                        }
                    }
                }
                //                $results['logistic'] = 0;
                $orderDetail["logistic"] = $results['logistic'] - $authlogis;
                if ($results['shipping'] == 0) {  // 平台配送
                    $orderDetail["pslogistic"] = sprintf("%.2f", $results['qsamount']);
                }
                //店铺信息
                $store = array();
                if ($results['store'] != 0) {
                    $storeHandels = new handlers("shop", "storeDetail");
                    $storeConfig = $storeHandels->getHandle($results['store']);
                    if (is_array($storeConfig) && $storeConfig['state'] == 100) {
                        $storeConfig = $storeConfig['info'];
                        if (is_array($storeConfig)) {
                            $store = $storeConfig;
                        }
                    }
                }
                $orderDetail['store'] = $store;

                //店铺分店信息
                $storeBranch = array();
                if ($results['branchid'] != 0) {
                    $storeBranchHandels = new handlers("shop", "storeBranchDetail");
                    $storeBranchConfig = $storeBranchHandels->getHandle($results['branchid']);
                    if (is_array($storeBranchConfig) && $storeBranchConfig['state'] == 100) {
                        $storeBranchConfig = $storeBranchConfig['info'];
                        if (is_array($storeBranchConfig)) {
                            $storeBranch = $storeBranchConfig;
                        }
                    }
                }
                $orderDetail['storeBranch'] = $storeBranch;

                $orderFinished = 0;
                if ($results['orderstate'] == 3) {
                    $orderFinished = 1;
                }
                $orderDetail["orderFinished"] = $orderFinished;
                //配送信息
                $orderDetail["username"] = $results["people"];
                $orderDetail["useraddr"] = $results["address"];
                $orderDetail["address"] = $results["address"];
                $orderDetail["usercontact"] = $results["contact"];
                $orderDetail["note"] = $results["note"];

                //未付款的提供付款链接
                if ($results['orderstate'] == 0) {
                    $RenrenCrypt = new RenrenCrypt();
                    $encodeid = base64_encode($RenrenCrypt->php_encrypt($results["ordernum"]));

                    $param = array(
                        "service" => "shop",
                        "template" => "pay",
                        "param" => "ordernum=" . $encodeid
                    );
                    $payurl = getUrlPath($param);

                    $orderDetail["payurl"] = $payurl;
                }

                /*券*/
                $proquanarr = array();

                if ($results["protype"] == 1) {

                    $proquansql = $dsql->SetQuery("SELECT `cardnum`,`expireddate`,`usedate`,`ret_state` FROM `#@__shopquan` WHERE `orderid` = '$id' ORDER BY `id` ASC");

                    $proquanres = $dsql->dsqlOper($proquansql, "results");

                    foreach ($proquanres as $index => $proquanre) {
                        $cardnum = join(' ', str_split($proquanre['cardnum'], 4));
                        $proquanarr[$index]['cardnum'] = substr($cardnum, 0, 3) . '******' . substr($cardnum, -3);

                        //自己的订单才需要显示
                        if ($userid == $results["userid"]) {
                            $proquanarr[$index]['cardnum'] = $cardnum;
                            $proquanarr[$index]['ycardnum'] = $proquanre['cardnum'];
                        }

                        $proquanarr[$index]['usedate'] = $proquanre['usedate'];
                        $proquanarr[$index]['ret_state'] = $proquanre['ret_state'];

                        $proquanarr[$index]['expireddate'] = date('Y.m.d', $proquanre['expireddate']);
                        $proquanarr[$index]['expireddatestr'] = $proquanre['expireddate'];
                    }
                    // array_multisort(array_column($proquanarr, 'usedate'), SORT_ASC, $proquanarr);

                    $newarray = array_filter($proquanarr, function ($val) {
                        if ($val['usedate'] == 0) {
                            return $val;
                        }
                    });

                    //自己的订单才需要显示
                    if ($userid == $results["userid"]) {
                        $param = array(
                            "service" => "member",
                            "template" => "verify-shop",
                            "param" => "cardnum=" . join(",", array_column($newarray, 'ycardnum')) . "&currentPageOpen=1&fromQr=1"
                        );
                        $orderDetail["cardnumUrl"] = urlencode(getUrlPath($param));
                    }
                }
                $orderDetail["proquanarr"] = $proquanarr;

                $pinarr = $userarrpic = array();

                if ($results["huodongtype"] == 4) {

                    $pinid = (int)$results["pinid"];
                    $shoppinsql = $dsql->SetQuery("SELECT t.`userid`,t.`user`,h.`huodongnumber`,t.`people`,t.`enddate`,t.`state` FROM `#@__shop_tuanpin` t LEFT JOIN `#@__shop_huodongsign` h ON t.`hid` = h.`id` WHERE t.`id` = '$pinid'");


                    $shoppinres = $dsql->dsqlOper($shoppinsql, "results");

                    if ($shoppinres && is_array($shoppinres)) {

                        $pinarr['chanum'] = $shoppinres[0]['huodongnumber'] - $shoppinres[0]['people'];
                        $pinarr['enddate'] = $shoppinres[0]['enddate'];
                        $pinarr['state'] = $shoppinres[0]['state'];
                        $pinarr['userid'] = $shoppinres[0]['userid'];

                        $userarr = $shoppinres[0]['user'] != '' ? explode(',', $shoppinres[0]['user']) : array();

                        foreach ($userarr as $index => $item) {

                            //获取拼团参与人的订单状态
                            $sql = $dsql->SetQuery("SELECT o.`logistic`, o.`paytype`,o.`ordernum`,o.`orderdate`,o.`orderstate`,op.`count` procount,o.`payprice`,o.`balance`,o.`point`,op.`price`,op.`speid`,`count` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` WHERE o.`userid` = '$item' and o.`pinid` = '$pinid' AND (o.`orderstate` = 1 OR o.`orderstate` = 3)");
                            $res = $dsql->dsqlOper($sql, "results");
                            if($res){
                                $usersql = $dsql->SetQuery("SELECT `photo` FROM `#@__member` WHERE `id` = '$item'");
                                $userres = $dsql->dsqlOper($usersql, "results");
                                $user['photo'] = $userres[0]['photo'] != '' ? getFilePath($userres[0]['photo']) : '';
                                $user['userid'] = $item;
                                array_push($userarrpic, $user);
                            }
                        }

                        $pinarr['userarr'] = $userarrpic;
                    }
                }

                $orderDetail["pinarr"] = $pinarr;
                //支付方式
                $orderDetail["paytypeold"] = $results["paytype"];
                $paySql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $results["paytype"] . "'");
                $payResult = $dsql->dsqlOper($paySql, "results");
                if (!empty($payResult)) {
                    $orderDetail["paytype"] = $payResult[0]["pay_name"];
                } else {
                    global $cfg_pointName;
                    $payname = "";
                    if ($results["paytype"] == "point,money") {
                        $payname = $cfg_pointName . "+" . $langData['siteConfig'][19][363]; //余额
                    } elseif ($results["paytype"] == "point") {
                        $payname = $cfg_pointName;
                    } elseif ($results["paytype"] == "money" || $results['paytype'] == '管理员支付') {
                        $payname = $langData['siteConfig'][19][363]; //余额
                    } elseif ($results["paytype"] == "delivery") {
                        $payname = $langData['shop'][5][80]; //余额
                    } else {
                        $payname = $results["paytype"];
                    }
                    $orderDetail["paytype"] = $payname;
                }
                //
                //            if ($orderDetail['peerpay'] > 0) {
                //
                //                $orderDetail["paytype"] = '朋友代付';
                //            }

                //代付
                if ($results['peerpay'] > 0) {
                    if ($results["paytype"] == "point") {
                        $payname = "积分";
                    } elseif ($results["paytype"] == "money") {
                        $payname = "余额";
                    } elseif ($results["paytype"] == "wxpay") {
                        $payname = "微信";
                    } elseif ($results["paytype"] == "alipay") {
                        $payname = "支付宝";
                    }
                    $userinfo = $userLogin->getMemberInfo($results['peerpay'], 1);
                    if (is_array($userinfo)) {
                        $orderDetail["paytype"] = '[' . $userinfo['nickname'] . ']' . $payname . '代付';
                    } else {
                        $orderDetail["paytype"] = '[好友]' . $payname . '代付';
                    }
                }

                $orderDetail["paydate"] = $results["paydate"];

                //快递公司&单号
                $orderDetail["expCompany"] = $results["exp_company"];
                $orderDetail["expNumber"] = $results["exp_number"];
                $orderDetail["expDate"] = $results["exp_date"];
                //快递跟踪
                $expTrack = $results["exp_track"];
                if ((!$expTrack || $expTrack == 'a:0:{}') && ($results["orderstate"] == 3 || $results["orderstate"] == 4 || $results["orderstate"] == 6 || $results["orderstate"] == 7) && $results["exp_company"] != 'else' && $results["exp_company"] != '') {

                    //顺丰快递必须添加收或寄件人手机尾号4位(单号:4位手机号)。例如：SF12345678:0123
                    if ($results["exp_company"] == 'sf') {
                        $results["exp_number"] = $results["exp_number"] . ':' . substr($results["contact"], -4);
                    }
                    $expTrack = getExpressTrack($results["exp_company"], $results["exp_number"], 'shop_order', $id);
                }
                $orderDetail["expTrack"] = $expTrack ? unserialize($expTrack) : array();

                //卖家回复
                $orderDetail["retSnote"] = $results["ret_s_note"];
                $imglist = array();
                $pics = $results['ret_s_pics'];
                if (!empty($pics)) {
                    $pics = explode(",", $pics);
                    foreach ($pics as $key => $value) {
                        $imglist[$key]['val'] = $value;
                        $imglist[$key]['path'] = getFilePath($value);
                    }
                }

                $orderDetail["retSpics"] = $imglist;
                $orderDetail["retSdate"] = $results["ret_s_date"];


                //退款状态
                $orderDetail["retState"] = $results["ret_state"];

                //退款原因
                $orderDetail["retType"] = $results["ret_type"];
                $orderDetail["retNote"] = $results["ret_note"];

                $imglist = array();
                $pics = $results['ret_pics'];
                if (!empty($pics)) {
                    $pics = explode(",", $pics);
                    foreach ($pics as $key => $value) {
                        $imglist[$key]['val'] = $value;
                        $imglist[$key]['path'] = getFilePath($value);
                    }
                }

                $orderDetail["retPics"] = $imglist;
                $orderDetail["retDate"] = $results["ret_date"];

                //退款确定时间
                $orderDetail["retOkdate"] = $results["ret_ok_date"];
                $orderDetail['now'] = GetMkTime(time());


                //配送员
                $orderDetail["peisongid"] = $results["peisongid"];
                $orderDetail["peidate"] = $results["peidate"];
                $orderDetail["songdate"] = $results["songdate"];

                if ($results["peisongid"]) {
                    $sql = $dsql->SetQuery("SELECT `name`, `areaCode`, `phone` FROM `#@__waimai_courier` WHERE `id` = " . $results["peisongid"]);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $orderDetail["peisongname"] = $ret[0]["name"];
                        $orderDetail["peisongtel"] = ($ret[0]["areaCode"] ? $ret[0]["areaCode"] : '') . $ret[0]["phone"];
                    }
                }


                //商品列表
                $totalPoint = 0;
                $totalBalance = 0;
                $totalPayPrice = 0;

                $sql = $dsql->SetQuery("SELECT p.* FROM `#@__shop_order_product` p LEFT JOIN `#@__shop_product` l ON l.`id` = p.`proid` WHERE l.`id` IS NOT NULL AND p.`orderid` = " . $id);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $p = 0;
                    $proDetail = array();
                    foreach ($ret as $key => $value) {
                        //查询商品详细信息
                        global $oper;
                        $oper = "info";
                        $arr = array('id' => $value['proid'], 'info' => $oper);
                        $this->param = $arr;
                        $detailConfig = $this->detail(1);

                        $proDetail[$p]['id'] = $detailConfig['id'];
                        $proDetail[$p]['porderid'] = $value['id'];
                        $proDetail[$p]['title'] = $detailConfig['title'];
                        $proDetail[$p]['litpic'] = $detailConfig['litpic'];
                        $proDetail[$p]['orderid'] = $value['orderid'];
                        $proDetail[$p]['proid'] = $value['proid'];
                        $proDetail[$p]['is_tuikuan'] = $detailConfig['is_tuikuan'];
                        $proDetail[$p]['speid'] = $value['speid'];
                        $proDetail[$p]['specation'] = $value['specation'];
                        $proDetail[$p]['price'] = $value['price'];
                        $proDetail[$p]['yprice'] = $detailConfig['price'];
                        $proDetail[$p]['count'] = $value['count'];
                        $proDetail[$p]['logistic'] = $value['logistic'];
                        $proDetail[$p]['discount'] = $value['discount'];
                        $proDetail[$p]['point'] = $value['point'];
                        $proDetail[$p]['balance'] = $value['balance'];
                        $proDetail[$p]['changeprice'] = (float)$value['changeprice'];
                        $proDetail[$p]['body'] = $detailConfig['body'];
                        $proDetail[$p]['packagearr'] = $detailConfig['packagearr'];
                        $proDetail[$p]['qtimetype'] = $detailConfig['qtimetype'];
                        $proDetail[$p]['quantime'] = $detailConfig['quantime'];
                        $proDetail[$p]['noticearr'] = $detailConfig['noticearr'];
                        $proDetail[$p]['daystr'] = $detailConfig['daystr'];
                        $proDetail[$p]['availabletimearr'] = $detailConfig['availabletimearr'];
                        $proDetail[$p]['ret_ok_date'] = $value['ret_ok_date'];
                        $proDetail[$p]['ret_state'] = $value['ret_state'];
                        $orderDetail["confirmtype"]    = $detailConfig["confirmtype"];
                        $typesales = explode(',', $detailConfig["typesales"]);
                        $pstype = array();
                        if (in_array("2", $typesales)) {
                            $pstype[] = 0;
                        }
                        if (in_array("3", $typesales)) {
                            $pstype[] = 2;
                        }
                        if (in_array("4", $typesales)) {
                            $pstype[] = 1;
                        }
                        $orderDetail["pstype"] = $pstype;

                        $ret_negotiate = array();
                        if ($value["ret_negotiate"] != '') {
                            $ret_negotiate = unserialize($value["ret_negotiate"]);
                        }
                        $proDetail[$p]["ret_negotiatearr"] = $ret_negotiate;  /*协商历史数组*/
                        $proDetail[$p]["refundnumeber"] = (int)$ret_negotiate['numeber'];  /*次数*/
                        $refundinfo = '';
                        $status = 0;
                        $autotime = GetMkTime(time());
                        if ((int)$ret_negotiate['numeber'] != 0) {
                            if ((int)$ret_negotiate['numeber'] == 1) {
                                $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                                $autotime = $retArr['datetime'];
                                $refundinfo = $retArr['refundinfo'];
                                $status = $retArr['status'];
                            } else {

                                $retArr = $ret_negotiate['refundinfo'][count($ret_negotiate['refundinfo']) - 1];
                                $autotime = $retArr['datetime'];
                                $refundinfo = $retArr['refundinfo'];
                                $status = $retArr['status'];
                                $type = $retArr['type'];
                                $service = (int)$retArr['service'];
                            }
                        }
                        $proDetail[$p]["status"] = $status;
                        $proDetail[$p]["service"] = $service;
                        $proDetail[$p]["type"] = $type;
                        $proDetail[$p]["refundinfo"] = $refundinfo;

                        $proDetail[$p]["retState"] = $value["ret_state"];


                        //评价
                        if ($results['orderstate'] == 3) {

                            // $sql = $dsql->SetQuery("SELECT `rating`, `score1`, `score2`, `score3`, `pics`, `content`, `ischeck` FROM `#@__shop_common` WHERE `aid` = ".$id." AND `speid` = '".$value['speid']."' AND `pid` = ".$value['proid']);

                            //买家不需要验证状态
                            //
                            $ischeck = ' AND `ischeck` = 1';
                            if ($results["userid"] == $userid) {
                                $ischeck = '';
                            }
                            if ($results["suserid"] == $userid) {
                                $ischeck = '';
                            }

                            $sql = $dsql->SetQuery("SELECT `rating`, `sco1` as score1, `sco2` as score2, `sco3` as score3, `pics`, `content`, `ischeck` FROM `#@__public_comment_all` WHERE `type` = 'shop-order' AND `oid` = '$id' AND `speid` = '" . $value['speid'] . "' AND `pid` = 0" . $ischeck);
                            $ret = $dsql->dsqlOper($sql, "results");
                            $common = array();
                            if ($ret) {
                                if (!empty($ret[0]['pics'])) {
                                    $picArr = array();
                                    $pics = explode(",", $ret[0]['pics']);
                                    foreach ($pics as $k => $v) {
                                        array_push($picArr, array(
                                            "source" => $v,
                                            "url" => getFilePath($v)
                                        ));
                                    }
                                    $ret[0]['pics'] = $picArr;
                                }
                                $common = $ret[0];
                            }
                            $proDetail[$p]['common'] = $common;
                        }


                        //如果是未支付的，不计算积分和余额
                        $payprice = $results['orderstate'] == 0 ? $value['price'] * $value['count'] + $value['discount'] : $value['payprice'];
                        $proDetail[$p]['payprice'] = sprintf("%.2f", $payprice);
                        $p++;

                        $totalPoint += $value['point'];
                        $totalBalance += $value['balance'];
                        $totalPayPrice += $value['price'] * $value['count'] + $value['discount'];
                    }
                }

                //砍价订单
                if ($results['huodongtype'] == 3) {
                    //查询砍价金额
                    // $bargainsql = $dsql->SetQuery("SELECT `gnowmoney`,`state`,`gmoney` FROM `#@__shop_bargaining` WHERE `oid` = " . $id);
                    // $bargainres = $dsql->dsqlOper($bargainsql, "results");
                    // $totalPayPrice = $bargainres[0]['state'] == 2 ? (float)$bargainres[0]['gmoney'] : (float)$bargainres[0]['gnowmoney'];
                }

                $totalPayPrice = $totalPayPrice +  $results["logistic"] - $auth_hui - $pointprice;

                $changeprice = (float)$results["changeprice"];
                if($results["changetype"]){
                    $totalPayPrice = $changeprice - $auth_hui - $pointprice;
                }

                $orderDetail["changetype"] = (int)$results["changetype"];
                $orderDetail["pricechange"] = sprintf("%.2f", $changeprice);

                $orderFinished = 0;
                if ($results['songdate'] != 0 && $results['okdate']) {
                    $orderFinished = 1;
                }
                $orderDetail['orderFinished'] = $orderFinished;
                $orderDetail['changelogistic'] = $results['changelogistic'];
                $orderDetail['product'] = $proDetail;
                $orderDetail['totalBalance'] = sprintf("%.2f", $totalBalance);
                $orderDetail['totalPayPrice'] = sprintf("%.2f", $totalPayPrice);
                $orderDetail['totalmoney'] = sprintf("%.2f", $totalPayPrice);
            } //print_R($orderDetail);exit;
            return $orderDetail;
        }
    }

    /**
     * 获取spe详情
     */
    public function getSpeDetail($spe)
    {
        global $dsql;
        //商品规格
        if ($spe[0] == "c") {
            $speid_o = substr($spe, 1);  //去掉c，真实的表id
            $sql = $dsql::SetQuery("select `name`,`type`,`parent_id` from `#@__shop_good_spe` where `id`=$speid_o");
            $cusSpe = $dsql->getArr($sql);
            $name = $cusSpe['name'];
            $parent_id = $cusSpe['parent_id'];
            $type = $cusSpe['type'];  //这里只有两种，system（sys的子级），和custom【根据parent_id存在父子级】
            $parent_name = "";
            if ($parent_id != "0") {
                //根据不同的type，取得parent
                if ($type == "system") {
                    $parent_type = "sys";
                    $sql = $dsql::SetQuery("select `typename` from `#@__shop_specification` where `id`=$parent_id");
                    $parent_name = $dsql->getOne($sql);
                } else {
                    $parent_type = "custom";
                    $sql = $dsql::SetQuery("select `name` from `#@__shop_good_spe` where `id`=$parent_id");
                    $parent_name = $dsql->getOne($sql);
                }
            }
        }
        //系统规格
        else {
            $sql = $dsql::SetQuery("select `parentid`,`typename` from `#@__shop_specification` where `id`=$spe");
            $sysSpe = $dsql->getArr($sql);
            $name = $sysSpe['typename'];
            $parent_id = $sysSpe['parentid'];
            $type = "sys";  //纯系统表
            $parent_name = "";
            $parent_type = "sys";
            $speid_o = $spe;

            $sql = $dsql::SetQuery("select `typename` from `#@__shop_specification` where `id`=$parent_id");
            $parent_name = $dsql->getOne($sql);

        }
        return array("id" => $spe, "oid" => $speid_o, "name" => $name, "type" => $type, "parent_id" => $parent_id, "parent_name" => $parent_name, "parent_type" => $parent_type);
    }

    /**
     * 获取sku详情
     */
    public function getSkuDetail($sku)
    {
        $sku = (int)$sku;
        if(!$sku) return array();
        global $dsql;
        //查询spe
        $sql = $dsql::SetQuery("select `gid`,`suid`,`speids`,`mprice`,`price`,`stock`,`del` from `#@__shop_good_sku` where `id`=$sku");
        $skuDetail = $dsql->getArr($sql) ?: array();
        if (!is_array($skuDetail) || empty($skuDetail)) {
            return $skuDetail;
        }
        //对speids进行详细的处理
        $speids = explode(",", $skuDetail['speids']);
        $speDetail = array();
        foreach ($speids as $speid) {
            $speDetail[] = $this->getSpeDetail($speid);
        }
        $skuDetail['speDetail'] = $speDetail;
        //查询商品的模板，不同的模板，spe处理不同
        $sql = $dsql::SetQuery("select `promotype` from `#@__shop_product` where `id`={$skuDetail['gid']}");
        $skuDetail['promotype'] = $dsql->getOne($sql);
        return $skuDetail;
    }


    /**
     * 取消订单
     * @return array
     */
    public function cancelOrder()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id = $this->param['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_order` WHERE `id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $results = $results[0];
            if ($results['userid'] == $uid) {

                if ($results['orderstate'] == 0 || ($results['orderstate'] == 1 && $results['paytype'] == 'delivery')) {
                    $datetime = GetMkTime(time());
                    $archives = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 10,`canceltime` = '$datetime' WHERE `id` = " . $id);
                    $dsql->dsqlOper($archives, "update");

                    return "取消成功";  //删除成功！
                } else {
                    return array("state" => 101, "info" => "订单状态已更新，不可以取消，请确认后操作！");  //订单为不可删除状态！
                }
            } else {
                return array("state" => 101, "info" => $langData['shop'][4][39]);  //权限不足，请确认帐户信息后再进行操作！
            }
        } else {
            return array("state" => 101, "info" => $langData['shop'][4][40]);  //订单不存在，或已经删除！
        }
    }

    /**
     * 撤销退款申请
     */
    public function operOrder()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id     = (int)$this->param['id'];
        $proid  = (int)$this->param['proid'];
        $oper   = $this->param['oper'];
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if ($oper == 'cancelrefund') {
            $archives = $dsql->SetQuery("SELECT  ob.`orderstate`, ob.`exp_date`, ob.`ordernum`, s.`userid`,ob.`amount`,o.`ret_negotiate` FROM `#@__shop_order` ob LEFT JOIN `#@__shop_store` s ON s.`id` = ob.`store` LEFT JOIN `#@__shop_order_product` o ON o.`orderid` = ob.`id` AND o.`proid` = '$proid' WHERE o.`proid` = '$proid' AND o.`orderid` = '$id' AND ob.`userid` = '$uid' AND (ob.`orderstate` = 11 OR ob.`orderstate` = 1 OR ob.`orderstate` = 6 OR (ob.`orderstate` = 2 AND ob.`paydate` != 0)) AND o.`ret_state` = 1");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {


                $sql = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET  `ret_state` = 0, `ret_type` = '', `ret_note` = '', `ret_pics` = '', `ret_date` = '',`ret_negotiate` = '',`ret_audittype` = 0,`ret_ptaudittype`= 0,`ret_audittime` = 0,`user_refundtype` = 0,`user_expcompany` ='',`user_expnumber`='',`user_exptime` = 0,`user_expoktime`=0,`user_exptype`=0,`returngood`='',`selftype` = 0 WHERE `proid` = '$proid' AND `orderid` = '$id'");
                $dsql->dsqlOper($sql, "update");

                //未发货，申请退款后撤消，恢复订单状态
                if ($results[0]['orderstate'] == 6 && $results[0]['exp_date'] == 0) {
                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET  `ret_state` = 0, `ret_type` = '', `ret_note` = '', `ret_pics` = '', `ret_date` = '',`ret_negotiate` = '',`user_refundtype` = 0,`user_expcompany` ='',`user_expnumber`='',`user_exptime` = 0,`user_expoktime`=0,`user_exptype`=0, `orderstate` = 1 WHERE  `id` = '$id'");
                } else {
                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET  `ret_state` = 0, `ret_type` = '', `ret_note` = '', `ret_pics` = '', `ret_date` = '',`ret_negotiate` = '',`user_refundtype` = 0,`user_expcompany` ='',`user_expnumber`='',`user_exptime` = 0,`user_expoktime`=0,`user_exptype`=0 WHERE  `id` = '$id'");
                }
                $dsql->dsqlOper($sql, "update");
                if ($results) {
                    return array("state" => 100, "info" => '操作成功!');
                } else {
                    return array("state" => 100, "info" => '请检查字段!');
                }
            } else {
                return array("state" => 200, "info" => $langData['shop'][4][23]);  //操作失败，请核实订单状态后再操作！
            }
        }
    }


    /**
     * 删除订单
     * @return array
     */
    public function delOrder()
    {
        return array("state" => 200, "info" => '订单不可删除，请使用取消订单接口！');

        global $dsql;
        global $userLogin;
        global $langData;

        $id = $this->param['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_order` WHERE `id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $results = $results[0];
            if ($results['userid'] == $uid) {

                //只有取消的订单才可以删除
                if ($results['orderstate'] == 10) {
                    $archives = $dsql->SetQuery("DELETE FROM `#@__shop_order` WHERE `id` = " . $id);
                    $dsql->dsqlOper($archives, "update");

                    $archives = $dsql->SetQuery("DELETE FROM `#@__shop_order_product` WHERE `orderid` = " . $id);
                    $dsql->dsqlOper($archives, "update");

                    return $langData['siteConfig'][20][444];  //删除成功！
                } else {
                    return array("state" => 101, "info" => $langData['shop'][4][38]);  //订单为不可删除状态！
                }
            } else {
                return array("state" => 101, "info" => $langData['shop'][4][39]);  //权限不足，请确认帐户信息后再进行操作！
            }
        } else {
            return array("state" => 101, "info" => $langData['shop'][4][40]);  //订单不存在，或已经删除！
        }
    }


    /**
     * Notes: 删除优惠券
     * Ueser: Administrator
     * DateTime: 2021/6/2 9:28
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function delQuan()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $qid = $this->param['qid'];

        if (!is_numeric($qid)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_quan` WHERE `id` = " . $qid);
        $results  = $dsql->dsqlOper($archives, "results");

        if ($results && is_array($results)) {

            if ($results[0]['state'] == 0) return array("state" => 200, "info" => '状态异常！');

            $upstatesql = $dsql->SetQuery("DELETE FROM `#@__shop_quan`  WHERE `id` = $qid");

            $upstateres = $dsql->dsqlOper($upstatesql, "update");

            if ($upstateres == 'ok') {
                return '删除成功！';
            } else {
                return array("state" => 200, "info" => "删除失败!");
            }
        } else {
            return array("state" => 200, "info" => "未找到该优惠券!");
        }
    }

    /**
     * 配置商铺
     * @return array
     */
    public function storeConfig()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;

        $userid     = $userLogin->getMemberID();
        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '1'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $userid = $userDetail['companyuid'];
        }
        //入驻审核开关
        include HUONIAOINC . "/config/shop.inc.php";
        $moduleJoinCheck     = (int)$customJoinCheck;
        $editModuleJoinCheck = (int)$customEditJoinCheck;
        $insertstr = $insertval = $upstr = '';
        $param         = $this->param;
        //        $param['pic']           = filterSensitiveWords(addslashes($param['imglist']));
        $param['note']          = filterSensitiveWords(addslashes($param['body'])) ? filterSensitiveWords(addslashes($param['body'])) : $param['note'];
        $param['project']          = filterSensitiveWords(addslashes($param['project']));
        $param['userid']        = $userid;
        $param['pubdate']      = GetMkTime(time());
        $userstate   = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $userRstateres = $dsql->dsqlOper($userstate, "results");
        if (!$userRstateres) {
            $param['state'] = $moduleJoinCheck;
        } else {
            $param['state'] = $editModuleJoinCheck;
        }
        if ($param['updateStore'] == 1) {
            $param['state'] = 1;
        }
        unset($param['telphone'], $param['imglist'], $param['body'], $param['areaCode'], $param['industryname'], $param['updateStore']);
        if ($param) {
            foreach ($param as $p => $m) {
                if ($p == 'industry' && empty($m)) {

                    return array("state" => 200, "info" => $langData['shop'][4][41]);  //请选择所属行业

                } elseif ($p == 'addrid' && empty($m)) {

                    return array("state" => 200, "info" => $langData['siteConfig'][20][68]);  //请选择所在区域

                } elseif ($p == 'company' && empty($m)) {

                    return array("state" => 200, "info" => $langData['shop'][4][42]);  //请输入公司名称

                } elseif ($p == 'title' && empty($m)) {

                    return array("state" => 200, "info" => $langData['shop'][4][42]);  //请输入公司名称

                } elseif ($p == 'address' && empty($m) && $p == 'shoptype' && $m == 1) {

                    return array("state" => 200, "info" => $langData['shop'][4][44]);  //请输入公司地址

                } elseif ($p == 'logo' && empty($m)) {

                    return array("state" => 200, "info" => $langData['shop'][4][45]);  //请上传店铺LOGO

                } elseif ($p == 'people' && empty($m)) {

                    return array("state" => 200, "info" => $langData['shop'][4][46]);  //请输入联系人

                } elseif ($p == 'contact' && empty($m)) {

                    return array("state" => 200, "info" => $langData['siteConfig'][20][433]);  //请输入联系电话

                } elseif ($p == 'body' && empty($m)) {

                    return array("state" => 200, "info" => $langData['shop'][4][48]);  //请输入详细介绍

                }

                if ($p == 'company' || $p == 'title' || $p == 'referred' || $p == 'address' || $p == 'project' || $p == 'people' || $p == 'contact' || $p == 'telphone' || $p == 'qq' || $p == 'wechatcode') {
                    $m = filterSensitiveWords(addslashes($m));
                }

                if ($p == 'cityid' || $p == 'industry' || $p == 'addrid' || $p == 'shoptype' || $p == 'distribution') {
                    $m = (int)$m;
                }

                if ($p == 'typesales') {

                    $m = trim($m);
                    if(!$m) return array("state" => 200, "info" => "请选择销售类型");

                    $typesales = explode(',', $m);

                    if (in_array('1', $typesales)) {

                        $upstr     .= "`toshop` = '1',";
                        $insertstr .= "`toshop`,";
                        $insertval .= "'1',";
                    } else {
                        $upstr     .= "`toshop` = '0',";
                        $insertstr .= "`toshop`,";
                        $insertval .= "'0',";
                    }

                    if (in_array('2', $typesales)) {

                        $upstr     .= "`distribution` = '1',";
                        $insertstr .= "`distribution`,";
                        $insertval .= "'1',";
                    } else {
                        $upstr     .= "`distribution` = '0',";
                        $insertstr .= "`distribution`,";
                        $insertval .= "'0',";
                    }

                    if (in_array('3', $typesales)) {

                        $upstr     .= "`merchant_deliver` = '1',";
                        $insertstr .= "`merchant_deliver`,";
                        $insertval .= "'1',";
                    } else {
                        $upstr     .= "`merchant_deliver` = '0',";
                        $insertstr .= "`merchant_deliver`,";
                        $insertval .= "'0',";
                    }

                    if (in_array('4', $typesales)) {

                        $upstr     .= "`express` = '1',";
                        $insertstr .= "`express`,";
                        $insertval .= "'1',";
                    } else {
                        $upstr     .= "`express` = '0',";
                        $insertstr .= "`express`,";
                        $insertval .= "'0',";
                    }
                    unset($p, $m);
                } elseif ($p == 'lnglat') {
                    $lnglatarr = explode(',', $m);

                    $upstr     .= "`lng` = '" . $lnglatarr[0] . "',`lat` = '" . $lnglatarr[1] . "',";
                    $insertstr .= "`lng`,`lat`,";
                    $insertval .= "'" . $lnglatarr[0] . "','" . $lnglatarr[1] . "',";
                } else {
                    if ($p == 'limit_time') {
                        $p = 'period';
                        $newtimearr = array();
                        $m = explode('||', $m);
                        foreach ($m as $a => $b) {
                            $a += 1;
                            $newb   = explode('-', $b);
                            $insertstr .= "`start_time" . $a . "`,`end_time" . $a . "`,";
                            $insertval .= "'" . $newb['0'] . "','" . $newb['1'] . "',";
                            $upstr     .= "`start_time" . $a . "` = '" . $newb['0'] . "',`end_time" . $a . "` = '" . $newb['1'] . "',";

                            $newtimearr[$a]['start']  = $newb[0];
                            $newtimearr[$a]['stop']   = $newb[1];
                        }
                        $m = serialize($newtimearr);
                    }

                    if ($p == 'authattrparam') {

                        $authattrparamarr = $m ? json_decode($m, true) : array();

                        $authattrtype     = array_column($authattrparamarr, "id");

                        $authattrtype     = $authattrtype ? join(',', $authattrtype) : '';

                        $upstr     .= "`authattrtype` = '" . $authattrtype . "',`authattrparam` = '" . serialize($authattrparamarr) . "',";
                        $insertstr .= "`authattrtype`,";
                        $insertval .= "'" . $authattrtype . "',";
                    }

                    if ($p == 'note') {
                        $m = filterSensitiveWords(addslashes($m));
                    }
                    //                    if(empty($m)){
                    //                        unset($p,$m);
                    //                    }
                    if (strpos($p, 'mark') !== false) {
                        unset($p, $m);
                    }
                    if (!empty($p)) {
                        $insertstr .= "`" . $p . "`,";
                        $insertval .= "'" . $m . "',";
                        $upstr     .= "`" . $p . "` = '" . $m . "',";
                    }
                }
            }

            $insertstr = substr($insertstr, 0, -1);
            $insertval = substr($insertval, 0, -1);
            $upstr     = substr($upstr, 0, -1);
        } else {
            return array("state" => 200, "info" => "参数错误！");
        }

        //        $cityid        = (int)$param['cityid'];
        //        $industry      = (int)$param['industry'];
        //        $addrid        = (int)$param['addrid'];
        //        $shoptype      = (int)$param['shoptype'];
        //        $company       = filterSensitiveWords(addslashes($param['company']));
        //        $title         = filterSensitiveWords(addslashes($param['title']));
        //        $referred      = filterSensitiveWords(addslashes($param['referred']));
        //        $address       = filterSensitiveWords(addslashes($param['address']));
        //        $project       = filterSensitiveWords(addslashes($param['project']));
        //        $logo          = $param['logo'];
        //        $people        = filterSensitiveWords(addslashes($param['people']));
        //        $contact       = filterSensitiveWords(addslashes($param['contact']));
        //        $tel           = filterSensitiveWords(addslashes($param['telphone']));
        //        $qq            = filterSensitiveWords(addslashes($param['qq']));
        //        $wechatcode    = filterSensitiveWords(addslashes($param['wechatcode']));
        //        $wechatqr      = $param['wechatqr'];
        //        $body          = filterSensitiveWords(addslashes($param['body']));
        //        $pubdate       = GetMkTime(time());
        //        $imglist       = $param['imglist']; //图集
        //        $video         = $param['video'];   //视频集合
        //        $businessday   = $param['businessday']; /*营业日*/
        //        $period        = $param['period'];       /*时间段*/
        //        $facility      = $param['facility'];     /*团购设施*/
        //        $explosion     = $param['explosion'];    /*爆款推荐*/
        //        $madvertise    = $param['madvertise'];   /*手机端广告*/
        //        $padvertise    = $param['padvertise'];   /*pc端广告*/
        //        $authattrparam = $param['authattrparam'];   /*商家资质*/
        //        $lnglat        = $param['lnglat'];
        //        if (!empty($lnglat)) {
        //            $lnglat = explode(",", $lnglat);
        //            $lng    = $lnglat[0];
        //            $lat    = $lnglat[1];
        //        }
        //        $distribution       = (int)$param['distribution'];
        //        $merchant_deliver   = (int)$param['merchant_deliver'];
        //        $express            = (int)$param['express'];
        //
        //        if ($userid == -1) {
        //            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        //        }
        //
        //        //验证会员类型
        //        if ($userDetail['userType'] != 2 && $userDetail['is_staff'] != 1) {
        //            return array("state" => 200, "info" => $langData['siteConfig'][21][127]);  //账号验证错误，操作失败！
        //        }
        //
        //        if (!verifyModuleAuth(array("module" => "shop"))) {
        //            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        //        }
        //
        //        if (empty($industry)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][41]);  //请选择所属行业
        //        }
        //
        //        if (empty($addrid)) {
        //            return array("state" => 200, "info" => $langData['siteConfig'][20][68]);  //请选择所在区域
        //        }
        //
        //        if (empty($company)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][42]);  //请输入公司名称
        //        }
        //
        //        if (empty($title)) {
        //            return array("state" => 200, "info" => $langData['siteConfig'][21][128]);  //请输入店铺名称
        //        }
        //
        //        if (empty($referred)) {
        //            // return array("state" => 200, "info" => $langData['shop'][4][43]);  //请输入店铺简称
        //        }
        //
        //        if (empty($address)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][44]);  //请输入公司地址
        //        }
        //
        //        if (empty($logo)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][45]);  //请上传店铺LOGO
        //        }
        //
        //        if (empty($people)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][46]);  //请输入联系人
        //        }
        //
        //        if (empty($contact)) {
        //            return array("state" => 200, "info" => $langData['siteConfig'][20][433]);  //请输入联系电话
        //        }
        //
        //        if (empty($tel)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][47]);  //请输入客服电话
        //        }
        //
        //        if (empty($body)) {
        //            return array("state" => 200, "info" => $langData['shop'][4][48]);  //请输入详细介绍
        //        }

        $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $userResult = $dsql->dsqlOper($userSql, "results");



        //新商铺
        if (!$userResult) {

            //保存到主表
            //            $archives = $dsql->SetQuery("INSERT INTO `#@__shop_store` (`cityid`, `userid`, `title`, `company`, `referred`, `addrid`, `address`, `industry`, `project`, `logo`, `people`, `contact`, `tel`, `qq`, `note`, `click`, `weight`, `state`, `certi`, `rec`, `pubdate`, `wechatcode`, `wechatqr`, `pic`, `lng`, `lat`, `distribution`, `express`, `merchant_deliver`,`shoptype`,`video`,`businessday`,`period`,`facility`,`explosion`,`madvertise`,`padvertise`,`authattrparam`) VALUES ('$cityid', '$userid', '$title', '$company', '$referred', '$addrid', '$address', '$industry', '$project', '$logo', '$people', '$contact', '$tel', '$qq', '$body', '1', '1', '$moduleJoinCheck', '0', '0', '$pubdate', '$wechatcode', '$wechatqr', '$imglist', '$lng', '$lat', '$distribution', '$express', '$merchant_deliver','$shoptype','$video','$businessday','$period','$facility','$explosion','$madvertise','$padvertise','$authattrparam')");
            $archives = $dsql->SetQuery("INSERT INTO `#@__shop_store` ($insertstr) VALUES ($insertval)");
            $aid      = $dsql->dsqlOper($archives, "lastid");

            if (is_numeric($aid)) {

                $urlParam = array(
                    'service' => 'shop',
                    'template' => 'store-detail',
                    'id' => $aid
                );
                $url = getUrlPath($urlParam);

                //记录用户行为日志
                memberLog($userid, 'shop', 'store', $aid, 'insert', '申请店铺(' . $title . ')', $url, $archives);

                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid   = $siteCityInfo['cityid'];
                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
                $param    = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户：" . $userDetail['nickname'] . "\r\n新增商铺：" . $title,
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("shop", "store", $param);
                dataAsync("shop", $aid, "store");  // 在线商城、店铺、新增
                return $langData['shop'][4][49];  //配置成功，您的商铺正在审核中，请耐心等待！
            } else {
                return array("state" => 200, "info" => $langData['shop'][4][50]);  //配置失败，请查检您输入的信息是否符合要求！
            }

            //更新商铺信息
        } else {

            //保存到主表
            //            $archives = $dsql->SetQuery("UPDATE `#@__shop_store` SET `cityid` = '$cityid', `company` = '$company', `title` = '$title', `referred` = '$referred', `addrid` = '$addrid', `address` = '$address', `industry` = '$industry', `project` = '$project', `logo` = '$logo', `people` = '$people', `contact` = '$contact', `tel` = '$tel', `qq` = '$qq', `note` = '$body', `state` = '$editModuleJoinCheck', `wechatcode` = '$wechatcode', `wechatqr` = '$wechatqr', `pic` = '$imglist', `lng` = '$lng', `lat` = '$lat', `distribution` = '$distribution', `express` = '$express', `merchant_deliver` = '$merchant_deliver',`shoptype` = '$shoptype',`video`='$video',`businessday` = '$businessday',`period` = '$period',`facility` = '$facility',`explosion` = '$explosion',`madvertise` = '$madvertise' ,`padvertise` = '$padvertise',`authattrparam` = '$authattrparam' WHERE `userid` = " . $userid);
            $archives = $dsql->SetQuery("UPDATE `#@__shop_store` SET $upstr WHERE `userid` = " . $userid);
            $results  = $dsql->dsqlOper($archives, "update");
            if ($results == "ok") {

                $urlParam = array(
                    'service' => 'shop',
                    'template' => 'store-detail',
                    'id' => $userResult[0]['id']
                );
                $url = getUrlPath($urlParam);

                //记录用户行为日志
                memberLog($userid, 'shop', 'store', $userResult[0]['id'], 'update', '修改店铺(' . $title . ')', $url, $archives);

                $sql = $dsql->SetQuery("select `id` from `#@__shop_store` where `userid`=$userid");
                $ret = $dsql->dsqlOper($sql, "results");
                dataAsync("shop", $ret[0]['id'], "store");  // 在线商城、店铺、更新
                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid   = $siteCityInfo['cityid'];
                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
                $param    = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户：" . $userDetail['nickname'] . "\r\n更新了商铺信息",
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("shop", "store", $param);

                return $langData['siteConfig'][6][39];  //保存成功

            } else {
                return array("state" => 200, "info" => $langData['shop'][4][50]);  //配置失败，请查检您输入的信息是否符合要求！
            }
        }
    }


    /**
     * 删除商铺商品分类
     * @return array
     */
    public function delCategory()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        $id     = $this->param['id'];

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (empty($id)) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][300]);  //删除失败
        }

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $storeid = $ret[0]['id'];

            $ids = explode(",", $id);
            foreach ($ids as $key => $value) {

                //验证权限
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_category` WHERE `type` = $storeid AND `id` = " . $value);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {

                    $sql = $dsql->SetQuery("DELETE FROM `#@__shop_category` WHERE `id` = " . $value . " OR `parentid` = " . $value);
                    if (!$dsql->dsqlOper($sql, "update") == "ok") {
                        return array("state" => 200, "info" => $langData['siteConfig'][20][300]);  //删除失败
                    }
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][182]);  //账号验证错误，删除失败！
                }
            }
            return $langData['siteConfig'][21][136];  //删除成功！

        } else {
            return array("state" => 200, "info" => $langData['shop'][4][51]);  //您的账户暂未开通商品商铺功能！
        }
    }


    /**
     * 更新商铺商品分类
     * @return array
     */
    public function updateCategory()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid   = $userLogin->getMemberID();
        $id       = $this->param['id'];
        $typename = $this->param['typename'];

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (!is_numeric($id)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][179]);  //更新失败，请重试！
        }

        if (empty($typename)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][176]);  //请输入分类名称！
        }

        $typename = cn_substrR($typename, 30);

        // global $userLogin;
        // $userid = $userLogin->getMemberID();
        $sql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $ret    = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $storeid = $ret[0]['id'];

            //验证权限
            $sql = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_category` WHERE `type` = $storeid AND `id` = " . $id);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {

                if ($ret[0]['typename'] == $typename) {
                    return array("state" => 101, "info" => $langData['siteConfig'][21][178]);  //没有变化
                } else {
                    $sql = $dsql->SetQuery("UPDATE `#@__shop_category` SET `typename` = '$typename' WHERE `id` = " . $id);
                    if ($dsql->dsqlOper($sql, "update") == "ok") {
                        return $langData['siteConfig'][21][106];  //更新成功！
                    } else {
                        return array("state" => 200, "info" => $langData['siteConfig'][21][179]);  //更新失败，请重试！
                    }
                }
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][180]);  //账号验证错误，更新失败！
            }
        } else {
            return array("state" => 200, "info" => $langData['shop'][20][51]);  //您的账户暂未开通商品商铺功能！
        }
    }


    /**
     * 更新商铺商品分类
     * @return array
     */
    public function operaCategory()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        $data   = $_POST['data'];

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (!verifyModuleAuth(array("module" => "shop"))) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }

        if (empty($data)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][135]);  //请添加分类！
        }

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $storeid = $ret[0]['id'];

            $data = str_replace("\\", '', $data);
            $json = json_decode($data);

            $json = objtoarr($json);
            $json = $this->proTypeAjax($json, 0, "shop_category", $storeid);
            return $json;
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][51]);  //您的账户暂未开通商品商铺功能！
        }
    }

    //更新分类
    public function proTypeAjax($json, $pid = 0, $tab, $tid)
    {
        global $dsql;
        global $langData;
        for ($i = 0; $i < count($json); $i++) {
            $id   = $json[$i]["id"];
            $name = $json[$i]["name"];

            //如果ID为空则向数据库插入下级分类
            if ($id == "" || $id == 0) {
                $archives = $dsql->SetQuery("INSERT INTO `#@__" . $tab . "` (`type`, `parentid`, `typename`, `weight`, `pubdate`) VALUES ('$tid', '$pid', '$name', '$i', '" . GetMkTime(time()) . "')");
                $id       = $dsql->dsqlOper($archives, "lastid");
            } //其它为数据库已存在的分类需要验证分类名是否有改动，如果有改动则UPDATE
            else {
                $archives = $dsql->SetQuery("SELECT `typename`, `weight`, `parentid` FROM `#@__" . $tab . "` WHERE `id` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if (!empty($results)) {
                    //验证分类名
                    if ($results[0]["typename"] != $name) {
                        $archives = $dsql->SetQuery("UPDATE `#@__" . $tab . "` SET `typename` = '$name' WHERE `id` = " . $id);
                        $dsql->dsqlOper($archives, "update");
                    }
                    //验证排序
                    if ($results[0]["weight"] != $i) {
                        $archives = $dsql->SetQuery("UPDATE `#@__" . $tab . "` SET `weight` = '$i' WHERE `id` = " . $id);
                        $results  = $dsql->dsqlOper($archives, "update");
                    }
                }
            }
            if (is_array($json[$i]["lower"])) {
                $this->proTypeAjax($json[$i]["lower"], $id, $tab, $tid);
            }
        }
        return $langData['siteConfig'][6][39];  //保存成功

    }


    /**
     * 下架商品
     * @return array
     */
    public function offShelf()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id = $this->param['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '2'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }

        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        /*查询有无订单商品*/

        $prosql = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order_product` op LEFT JOIN `#@__shop_order` o on op.`orderid` = o.`id` WHERE op.`proid` = '$id' AND o.`orderstate` != 3 AND o.`orderstate` != 7 AND `orderstate` != 10");

        $prores = $dsql->dsqlOper($prosql, "results");

        if (is_array($prores) && $prores)  return array("state" => 200, "info" => '暂时不能下架,有未处理订单存在！');  //登录超时，请重新登录！

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $results = $results[0];

            if ($results['userid'] == $uid) {

                $archives = $dsql->SetQuery("UPDATE `#@__shop_product` SET `state` = 2 WHERE `id` = " . $id);
                $dsql->dsqlOper($archives, "update");

                $this->updateStorePcount($results['store']);

                //记录用户行为日志
                memberLog($uid, 'shop', '', $id, 'update', '下架商品(' . $results['title'] . ')', '', $archives);

                dataAsync("shop", $id, "product");  // 在线商城、商品、下架
                return $langData['siteConfig'][20][244];  //操作成功
            } else {
                return array("state" => 101, "info" => $langData['shop'][4][39]);  //权限不足，请确认帐户信息后再进行操作！
            }
        } else {
            return array("state" => 101, "info" => $langData['shop'][4][35]);  //商品不存在，或已经删除！
        }
    }


    /**
     * 上架商品
     * @return array
     */
    public function upShelf()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id = $this->param['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        $upshelftime = GetMkTime(time());
        //获取用户ID
        $uid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '2'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }

        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $results = $results[0];

            if ($results['userid'] == $uid) {

                include HUONIAOINC . "/config/shop.inc.php";
                $state = (int)$customFabuCheck;

                $archives = $dsql->SetQuery("UPDATE `#@__shop_product` SET `state` = $state,`upshelftime` = '$upshelftime' WHERE `id` = " . $id);
                $dsql->dsqlOper($archives, "update");

                $this->updateStorePcount($results['store']);

                //记录用户行为日志
                memberLog($uid, 'shop', '', $id, 'update', '上架商品(' . $results['title'] . ')', '', $archives);

                dataAsync("shop", $id, "product");  // 在线商城、商品、上架

                return array("state" => 100, "info" => $langData['siteConfig'][20][244]);  //操作成功
            } else {
                return array("state" => 101, "info" => $langData['shop'][4][39]);  //权限不足，请确认帐户信息后再进行操作！
            }
        } else {
            return array("state" => 101, "info" => $langData['shop'][4][35]);  //商品不存在，或已经删除！
        }
    }


    /**
     * 运费详情
     * @return array
     */
    public function logisticTemplate()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $id = $this->param['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (!empty($id)) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE `id` = $id");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $value = $results[0];
                return getPriceDetail($value["bearFreight"], $value['valuation'], $value['express_start'], $value['express_postage'], $value['express_plus'], $value['express_postageplus'], $value['preferentialStandard'], $value['preferentialMoney'], $id);
            } else {
                return array("state" => 101, "info" => $langData['shop'][4][52]);  //模板不存在！
            }
        }
    }


    /**
     * 发布信息
     * @return array
     */
    public function put()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;

        $userid = $userLogin->getMemberID();
        $param  = $this->param;

        $typeid         = $param['typeid'];
        $brand          = (int)$param['brand'];
        $itemid         = $param['itemid'];
        $title          = filterSensitiveWords(addslashes($param['title']));
        $subtitle       = filterSensitiveWords(addslashes($param['subtitle']));
        $category       = $param['category'];
        $mprice         = $param['mprice'] ?  $param['mprice'] : 0.00;
        $price          = $param['price'] ?  $param['price'] : 0.00;
        $logistic       = (int)$param['express'];/*快递类型模板*/
        $blogistic      = (int)$param['logistic'];/*商家类型*/
        $volume         = (float)$param['volume'];
        $weight         = (float)$param['weight'];
        $inventory      = (int)$param['inventory'];
        $inventoryCount = (int)$param['inventoryCount'];
        $limit          = (int)$param['limit'];
        $litpic         = $param['litpic'];
        $imglist        = $param['imglist'];
        $video          = $param['video'];
        $smallCount     = (int)$param['smallCount'];
        $packingCount   = (int)$param['packingCount'];
        $shopunit       = $param['shopunit'];
        $barcode        = $param['barcode'];
        $storeFlag      = $param['storeFlag'];
        $body           = filterSensitiveWords(addslashes($param['body']));
        $mbody          = filterSensitiveWords(addslashes($param['mbody']));
        $pubdate        = GetMkTime(time());
        $protype        = (int)$param['protype'];
        $qtimetype      = (int)$param['qtimetype'];
        $saletype       = $param['saletype'];
        $modAdrr        = (int)$param['modAdrr'];
        $tuikuantype        = (int)$param['tuikuantype'];
        $notice         = $param['notice'];
        $package        = $param['package'];
        $availableweek  = $param['useweek'];
        $guigetype      = (int)$param['guigetype'];
        $fabutype       = $param['fabutype'];
        
        $cusItemKey     = $param['cusItemKey'];
        $cusItemVal     = $param['cusItemVal'];

        $availabletime  = $param['limit_time'] != '' ? serialize($param['limit_time']) : '';
        $saletypearr    = $saletype != '' ? explode(',', $saletype) : array(); // 1-到店消费，2-平台配送，3-商家配送，4-快递
        $quantime       = $qtimetype == 1 ? (int)$param['tuanvalidity'] : (int)strtotime($param['tuandeadline']);
        $storeFlag = isset($storeFlag) ? join(',', $storeFlag) : '';
        if (in_array("1", $saletypearr)) {
            $protype        = 1;
        }
        include HUONIAOINC . "/config/shop.inc.php";
        $state = (int)$customFabuCheck;
        $shnagjia = 0;
        /*保存到货架*/
        if ($fabutype == 1) {
            $state = 2;
            $shnagjia = 1;
        }

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if ($smallCount < 1 && $modAdrr != 1) {
            return array("state" => 200, "info" => '最小起订量不能小于1');
        }

        $userDetail = $userLogin->getMemberInfo();
        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '2'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $userid = $userDetail['companyuid'];
        }

        $userSql    = $dsql->SetQuery("SELECT `id`, `state` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $userResult = $dsql->dsqlOper($userSql, "results");
        if (!$userResult) {
            return array("state" => 200, "info" => $langData['shop'][4][36]);  //您还未开通商城店铺！
        }

        if ($protype == 1 && empty($qtimetype)) {

            return array("state" => 200, "info" => '请选择券得时间');  //您还未开通商城店铺！
        }

        if (!verifyModuleAuth(array("module" => "shop")) && $userDetail['is_staff'] != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }

        if ($userResult[0]['state'] == 0) {
            return array("state" => 200, "info" => $langData['shop'][4][53]);  //您的商铺信息还在审核中，请通过审核后再发布！
        }

        if ($userResult[0]['state'] == 2) {
            return array("state" => 200, "info" => $langData['shop'][4][54]);  //您的商铺信息审核失败，请通过审核后再发布！
        }

        $sid = $userResult[0]['id'];

        if ($typeid == "") {
            return array("state" => 200, "info" => $langData['shop'][4][55]);  //分类获取失败，请重新选择分类！
        }

        if ($itemid == "") {
            // return array("state" => 200, "info" => $langData['shop'][4][56]);  //分类属性ID获取失败，请重新选择分类！
        }

        //遍历所选分类ID
        global $data;
        $data    = "";
        $proType = getParentArr("shop_type", $typeid);
        $proId   = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
        // $proId = array_slice($proId, 0, count($proType));

        //根据分类ID，获取分类属性值
        if (count($proId) > 0) {
            foreach ($proId as $key => $val) {
                $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `type` = " . $val);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $itemid = $val;
                }
            }
        }
        if ($modAdrr != 1) {
            //获取分类下相应属性
            $property     = array();
            $propertyName = "item";
            $shopitem     = $dsql->SetQuery("SELECT `id`, `typename`, `flag` FROM `#@__shop_item` WHERE `type` = " . $itemid . " AND `parentid` = 0 ORDER BY `weight`");
            $shopResults  = $dsql->dsqlOper($shopitem, "results");
            if($shopResults){
                foreach ($shopResults as $key => $val) {

                    $id       = $val['id'];
                    $typeName = $val['typename'];
                    $r        = strstr($val['flag'], 'r');
                    $proval   = $_POST[$propertyName . $id];
                    if (is_array($proval)) {
                        if ($r && empty($proval) && $fabutype != 1) {
                            return array("state" => 200, "info" => $langData['siteConfig'][7][2] . $typeName . '！');  //请选择
                        }
                        if (!empty($proval)) {
                            array_push($property, $id . "#" . join(",", $proval));
                        }
                    } else {
                        if ($r && $fabutype != 1 && $proval == "") {
                            return array("state" => 200, "info" => $langData['siteConfig'][7][2] . $typeName . '！');  //请选择
                        }
                        if (!empty($proval)) {
                            array_push($property, $id . "#" . $proval);
                        }
                    }
                }
            }

            //自定义产品参数
            if($cusItemKey){

                foreach($cusItemKey as $_k => $_v){
                    $_key = str_replace('|', '｜', str_replace('#', '﹟', trim($_v)));
                    $_val = str_replace('|', '｜', str_replace('#', '﹟', trim($cusItemVal[$_k])));
                    if($_key && $_val){
                        array_push($property, $_key . "#" . $_val);
                    }
                }

            }

            $property = join("|", $property);
        }

        if (empty($quantime) && $saletype === 1 && $fabutype != 1) {
            return array("state" => 200, "info" => "请填写电子券过期时间！");  //请输入商品标题！
        }

        if ($title == "") {
            return array("state" => 200, "info" => $langData['shop'][4][57]);  //请输入商品标题！
        }

        $category = isset($category) ? join(',', $category) : '';

        if (!preg_match("/^0|\d*\.?\d+$/i", $mprice, $matches) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][58]);  //市场价不得为空，类型为数字！
        }

        if (!preg_match("/^0|\d*\.?\d+$/i", $price, $matches) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][59]);  //一口价不得为空，类型为数字！
        }


        if ((empty($blogistic) && in_array('2', $saletypearr) && $fabutype != 1)  || (empty($logistic) && in_array('4', $saletypearr)) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][60]);  //请选择物流运费模板！
        }

        //根据分类ID，获取分类属性值
        $itemid1 = 0;
        if (count($proId) > 0) {
            foreach ($proId as $key => $val) {
                $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `spe` != '' AND `id` = " . $val);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $itemid1 = $val;
                }
            }
        }

        //获取分类下相应规格
        $speFiled    = array();
        $spePics     = array();  //颜色自定义图片
        $specifival  = array();
        $spearray    = array();
        $sysSpeArr      = array();
        $spearmPrice   = array();               //  原价
        $spearPrice   = array();               //现价
        $invent      = 0;
        $typeitem    = $dsql->SetQuery("SELECT `spe` FROM `#@__shop_type` WHERE `id` = " . $itemid1 . "");
        $typeResults = $dsql->dsqlOper($typeitem, "results");
        if ($typeResults) {
            $spe = $typeResults[0]['spe'];
            if ($spe != "") {
                $spe = explode(",", $spe);
                foreach ($spe as $key => $val) {

                    //已有规格自定义字段
                    $customArr = array();
                    $custom    = $_POST["speCustom" . $val];
                    $customPic = $_POST["speCustomPic" . $val];
                    if ($custom) {
                        $speFiled[$val] = $custom;
                        foreach ($custom as $k => $v) {
                            array_push($customArr, $v);
                        }
                    }

                    $spePic = $_POST["spePic" . $val];
                    if ($customPic) {
                        $spePics = $spePic ? array_merge($customPic, $spePic) : $customPic;
                    } elseif ($spePic) {
                        $spePics = $spePic;
                    }

                    $speitem    = array();
                    $speSql     = $dsql->SetQuery("SELECT `id` FROM `#@__shop_specification` WHERE `id` = " . $val . " ORDER BY `weight` ASC");
                    $speResults = $dsql->dsqlOper($speSql, "results");
                    if ($speResults) {
                        $speval = array();
                        if ($customArr) {
                            $speval = $customArr;
                        }
                        $postVal = $_POST["spe" . $speResults[0]['id']];
                        $sysSpeArr[$speResults[0]['id']] = $postVal;
                        $speval  = $speval ? ($postVal ? array_merge($speval, $postVal) : $speval) : $postVal;
                        if (!empty($speval) != "") {
                            array_push($spearray, $speval);
                        }
                    } else {
                        if ($customArr) {
                            array_push($spearray, $customArr);
                        }
                    }
                }
            }
        }
        //规格自定义图片
        $spePics = serialize($spePics);
        //系统规格选中
        $sysSpeArr = $sysSpeArr ? json_encode($sysSpeArr) : "";
        //已有规格自定义字段
        if (!empty($speFiled)) { //截取Filed长度
            $cutSpeCustom = array();
            foreach ($speFiled as $speCustomK => $speCustomV) {
                $speCustomVI = array();
                foreach ($speCustomV as $speCustomVIt) {
                    $spes_jjj = substr($speCustomVIt, strlen("custom_"));  //截取后一半
                    $cus_spe_ii = explode("_", $spes_jjj);
                    $spe_parent_id = $cus_spe_ii[0];  //id
                    $spe_parent_name = substr($spes_jjj, strlen("" . $spe_parent_id) + 1); //name
                    $spe_parent_name = cn_substrR($spe_parent_name, 30);
                    $speCustomVI[] = "custom_" . $spe_parent_id . "_" . $spe_parent_name;
                }
                $cutSpeCustom[$speCustomK] = $speCustomVI;
            }
            $speFiled = $cutSpeCustom;
        }
        $speFiled = serialize($speFiled);
        //全新规格自定义
        $speCustom = array();
        $speNew    = $_POST['speNew'];
        // if ($speNew && (($modAdrr == 1 && $guigetype == 1) || $modAdrr == 2)) {
        if ($speNew) {
            foreach ($speNew as $key => $value) {
                array_push($spearray, $value);
            }
            $speCustom = $speNew;
        }
        if (!empty($speCustom)) { //截取spe长度
            $cutSpeCustom = array();
            foreach ($speCustom as $speCustomK => $speCustomV) {
                $speCustomK = cn_substrR($speCustomK, 30);
                $speCustomVI = array();
                foreach ($speCustomV as $speCustomVIt) {
                    $speCustomVI[] = cn_substrR($speCustomVIt, 30);
                }
                $cutSpeCustom[$speCustomK] = $speCustomVI;
            }
            $speCustom = $cutSpeCustom;
        }
        $speCustom = serialize($speCustom);
        // if (!empty($spearray) && (($modAdrr == 1 && $guigetype == 1) || $modAdrr == 2)) {
        if (!empty($spearray)) {
            if (count($spearray) > 1) {
                $spearray = descartes($spearray);
                if ($modAdrr == 1) {
                    $spearray = $spearray[0];
                }
            } else {
                $spearray = $spearray[0];
            }
            $skuInfo = json_decode($_POST['skuInfoArr'], true);
            foreach ($spearray as $key => $val) {
                $speid = $val;
                if (is_array($val)) {
                    $speid = join("-", $val);
                }
                $spemprice    = $skuInfo["f_mprice_" . $speid];
                $speprice     = $skuInfo["f_price_" . $speid];
                $speinventory = $skuInfo["f_inventory_" . $speid];
                if (!preg_match("/^0|\d*\.?\d+$/i", $spemprice, $matches) && $fabutype != 1) {
                    return array("state" => 200, "info" => $langData['shop'][4][61]);  //规格表中价格不得为空，类型为数字！
                } elseif (!preg_match("/^0|\d*\.?\d+$/i", $speprice, $matches) && $fabutype != 1) {
                    return array("state" => 200, "info" => $langData['shop'][4][62]);  //规格表中库存不得为空，类型为数字！
                } elseif (!preg_match("/^0|\d*\.?\d+$/i", $speinventory, $matches) && $fabutype != 1) {
                    return array("state" => 200, "info" => $langData['shop'][4][62]);  //规格表中库存不得为空，类型为数字！
                } else {
                    $invent += $speinventory;
                    array_push($spearmPrice, $spemprice);
                    array_push($spearPrice, $speprice);
                    array_push($specifival, array("speids" => $val, "mprice" => $spemprice, "price" => $speprice, "stock" => $speinventory));
                }
            }
        }
        if (!empty($specifival) && $fabutype != 1) {
            $specifival = json_encode($specifival, 256);
            $inventory  = $invent;
        } else {
            if (!empty($specifival)) {
                $specifival = json_encode($specifival, 256);
            } else {
                $specifival = "";
            }

            if (!preg_match("/^0|\d*\.?\d+$/i", $inventory, $matches) && $fabutype != 1) {
                return array("state" => 200, "info" => $langData['shop'][4][63]);  //库存不得为空，类型为数字！
            }
        }
        if (!empty($spearmPrice) && !empty($spearPrice)) {
            $mprice = min($spearmPrice);
            $price = min($spearPrice);
        }


        if (empty($litpic) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][64]);  //请上传商品缩略图！
            exit();
        }

        if (empty($imglist) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][65]);  //请上传商品图集！
            exit();
        }

        if (trim($body) == '' && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][66]);  //请输入商品描述
        }
        // $barcode = genSecret(12, 1);
        $mbody = empty($mbody) ? $body : $mbody;
        //保存到主表
        $archives = $dsql->SetQuery("INSERT INTO `#@__shop_product` (`type`, `title`, `subtitle`, `brand`, `property`, `store`, `category`, `mprice`, `price`, `logistic`, `volume`, `weight`, `inventory`, `inventoryCount`, `limitcount`, `sales`, `litpic`, `sort`, `click`, `state`, `pics`, `body`, `mbody`, `pubdate`, `video`, `barcode`, `spePics`, `speFiled`, `speCustom`, `storeFlag`,`protype`,`quantime`,`qtimetype`, `upshelftime`,`smallCount`,`packingCount`,`shopunit`,`promotype`,`typesales`,`package`,`notice`,`availableweek`,`availabletime`,`guigetype`,`blogistic`,`shangjia`,`is_tuikuan`,`sysspe`) VALUES ('$typeid', '$title', '$subtitle', '$brand', '$property', '$sid', '$category', '$mprice', '$price', '$logistic', '$volume', '$weight',  '$inventory', '$inventoryCount', '$limit', '0', '$litpic', '1', '1', '$state', '$imglist', '$body', '$mbody', '$pubdate', '$video', '$barcode', '" . addslashes($spePics) . "', '" . addslashes($speFiled) . "', '" . addslashes($speCustom) . "', '$storeFlag','$protype','$quantime','$qtimetype','$pubdate','$smallCount','$packingCount','$shopunit','$modAdrr','$saletype','$package','$notice','$availableweek','$availabletime','$guigetype','$blogistic','$shnagjia','$tuikuantype','$sysSpeArr')");
        $aid      = $dsql->dsqlOper($archives, "lastid");

        if (is_numeric($aid)) {

            $this->saveSku($aid, $speFiled, $speCustom, $specifival, $_POST['speNew']);
            $this->updateStorePcount($sid);

            $urlParam = array(
                'service' => 'shop',
                'template' => 'detail',
                'id' => $aid
            );
            $url = getUrlPath($urlParam);

            //记录用户行为日志
            memberLog($userid, 'shop', '', $aid, 'insert', '发布商品(' . $title . ')', $url, $archives);

            //微信通知
            $cityName = $siteCityInfo['name'];
            $cityid   = $siteCityInfo['cityid'];
            $noticemodulename = getModuleTitle(array('name' => 'shop'));
            $userinfo = $userLogin->getMemberInfo($userid, 1);
            $param    = array(
                'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn' => $cityName . "分站\r\n" . $noticemodulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n发布了商品：" . $title,
                    'date'      => date("Y-m-d H:i:s", time()),
                )
            );
            updateAdminNotice("shop", "detail", $param);

            //以图搜图-入库
            require_once(HUONIAOINC . "/baidu.aip.func.php");
            $client = new baiduAipImageSearchClient();
            $ret    = $client->productAddUrl(str_replace('small', 'large', getFilePath($litpic)), $aid);
            dataAsync("shop", $aid, "product");  // 在线商城、商品、发布
            return $aid;
        } else {
            return array("state" => 101, "info" => $langData['siteConfig'][21][142]);  //发布到数据时发生错误，请检查字段内容！
        }
    }


    /**
     * 修改信息
     * @return array
     */
    public function edit()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;
        $userid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '2'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $userid = $userDetail['companyuid'];
        }
        $param = $this->param;
        $id             = $param['id'];
        $typeid         = $param['typeid'];
        $brand          = (int)$param['brand'];
        $itemid         = $param['itemid'];
        $title          = filterSensitiveWords(addslashes($param['title']));
        $subtitle       = filterSensitiveWords(addslashes($param['subtitle']));
        $category       = $param['category'];
        $mprice         = $param['mprice'];
        $price          = $param['price'];
        $logistic       = (int)$param['logistic'];
        $volume         = (float)$param['volume'];
        $weight         = (float)$param['weight'];
        $inventory      = (int)$param['inventory'];
        $inventoryCount = (int)$param['inventoryCount'];
        $limit          = (int)$param['limit'];
        $litpic         = $param['litpic'];
        $imglist        = $param['imglist'];
        $video          = $param['video'];
        $barcode        = $param['barcode'];
        $storeFlag      = $param['storeFlag'];
        $smallCount     = (int)$param['smallCount'];
        $packingCount   = (int)$param['packingCount'];
        $shopunit       = $param['shopunit'];
        $logistic       = (int)$param['express'];/*快递类型模板*/
        $blogistic      = (int)$param['logistic'];/*商家类型*/
        $tuikuantype      = (int)$param['tuikuantype'];/*商家类型*/
        $protype        = (int)$param['protype'];
        $qtimetype      = (int)$param['qtimetype'];
        $saletype       = $param['saletype'];
        $modAdrr        = (int)$param['modAdrr'];
        $notice         = $param['notice'];
        $package        = $param['package'];
        $availableweek  = $param['useweek'];
        $guigetype      = (int)$param['guigetype'];
        $fabutype       = (int)$param['fabutype'];
        $availabletime  = $param['limit_time'] != '' ? serialize($param['limit_time']) : '';
        
        $cusItemKey     = $param['cusItemKey'];
        $cusItemVal     = $param['cusItemVal'];

        $saletypearr    = $saletype != '' ? explode(',', $saletype) : array(); // 1-到店消费，2-平台配送，3-商家配送，4-快递
        $quantime       = $qtimetype == 1 ? (int)$param['tuanvalidity'] : (int)strtotime($param['tuandeadline']);
        $storeFlag = isset($storeFlag) ? join(',', $storeFlag) : '';
        if (in_array("1", $saletypearr)) {
            $protype        = 1;
        }
        $body           = filterSensitiveWords(addslashes($param['body']));
        $mbody          = filterSensitiveWords(addslashes($param['mbody']));
        //        $pubdate        = GetMkTime(time());
        $editdate       = GetMkTime(time());
        include HUONIAOINC . "/config/shop.inc.php";
        $state = (int)$customFabuCheck;
        $shangjia =  0;
        if ($fabutype == 1) {
            $state = 2;
            $shangjia =  1;
        }

        $this->param = array(
            'id' => $id,
            'info' => 1
        );
        $detail = $this->detail(1);

        $huodongtype = $detail['huodong'];
        $modAdrr = $detail['moduletype'];

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }
        if ($smallCount < 1 && $modAdrr != 1) {
            return array("state" => 200, "info" => '最小起订量不能小于1');
        }


        $userSql    = $dsql->SetQuery("SELECT `id`, `state` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $userResult = $dsql->dsqlOper($userSql, "results");
        if (!$userResult) {
            return array("state" => 200, "info" => $langData['shop'][4][36]);  //您还未开通商城店铺！
        }

        if ($protype == 1 && empty($qtimetype)) {

            return array("state" => 200, "info" => '请选择券得时间');  //您还未开通商城店铺！
        }

        if (!verifyModuleAuth(array("module" => "shop"))) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }

        if ($userResult[0]['state'] == 0) {
            return array("state" => 200, "info" => $langData['shop'][4][53]);  //您的商铺信息还在审核中，请通过审核后再发布！
        }

        if ($userResult[0]['state'] == 2) {
            return array("state" => 200, "info" => $langData['shop'][4][54]);  //您的商铺信息审核失败，请通过审核后再发布！
        }

        $sid = $userResult[0]['id'];

        if ($sid != $detail['store']['id']) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }

        if ($id == "") {
            return array("state" => 200, "info" => $langData['shop'][4][67]);  //信息提交失败，请重试！
        }

        if ($typeid == "" && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][55]);  //分类获取失败，请重新选择分类！
        }

        if ($itemid == "") {
            // return array("state" => 200, "info" => $langData['shop'][4][56]);  //分类属性ID获取失败，请重新选择分类！
        }

        //遍历所选分类ID
        global $data;
        $data    = "";
        $proType = getParentArr("shop_type", $typeid);
        $proId   = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
        // $proId = array_slice($proId, 0, count($proType));

        //根据分类ID，获取分类属性值
        if (count($proId) > 0) {
            foreach ($proId as $key => $val) {
                $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_item` WHERE `type` = " . $val);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $itemid = $val;
                }
            }
        }
        if ($modAdrr != 1) {
            //获取分类下相应属性
            $property     = array();
            $propertyName = "item";
            $shopitem     = $dsql->SetQuery("SELECT `id`, `typename`, `flag` FROM `#@__shop_item` WHERE `type` = " . $itemid . " AND `parentid` = 0 ORDER BY `weight`");
            $shopResults  = $dsql->dsqlOper($shopitem, "results");
            if($shopResults){
                foreach ($shopResults as $key => $val) {

                    $pid      = $val['id'];
                    $typeName = $val['typename'];
                    $r        = strstr($val['flag'], 'r');
                    $proval   = $_POST[$propertyName . $pid];

                    if (is_array($proval)) {
                        if ($r && empty($proval) && $fabutype != 1) {
                            return array("state" => 200, "info" => $langData['siteConfig'][7][2] . $typeName . '！');  //请选择
                        }
                        if (!empty($proval) && $fabutype != 1) {
                            array_push($property, $pid . "#" . join(",", $proval));
                        }
                    } else {
                        if ($r && $fabutype != 1 && $proval == "") {
                            return array("state" => 200, "info" => $langData['siteConfig'][7][2] . $typeName . '！');  //请选择
                        }
                        if (!empty($proval)) {
                            array_push($property, $pid . "#" . $proval);
                        }
                    }
                }
            }

            //自定义产品参数
            if($cusItemKey){

                foreach($cusItemKey as $_k => $_v){
                    $_key = str_replace('|', '｜', str_replace('#', '﹟', trim($_v)));
                    $_val = str_replace('|', '｜', str_replace('#', '﹟', trim($cusItemVal[$_k])));
                    if($_key && $_val){
                        array_push($property, $_key . "#" . $_val);
                    }
                }

            }

            $property = join("|", $property);
        }

        if ($title == "") {
            return array("state" => 200, "info" => $langData['shop'][4][57]);  //请输入商品标题！
        }

        $category = isset($category) ? join(',', $category) : '';

        if (!preg_match("/^0|\d*\.?\d+$/i", $mprice, $matches) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][58]);  //市场价不得为空，类型为数字！
        }

        if (!preg_match("/^0|\d*\.?\d+$/i", $price, $matches) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][59]);  //一口价不得为空，类型为数字！
        }
        if ((empty($blogistic) && in_array('2', $saletypearr) && $fabutype != 1) || (empty($logistic) && in_array('4', $saletypearr)) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][60]);  //请选择物流运费模板！
        }

        //根据分类ID，获取分类属性值
        $itemid1 = 0;
        if (count($proId) > 0) {
            foreach ($proId as $key => $val) {
                $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `spe` != '' AND `id` = " . $val);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $itemid1 = $val;
                }
            }
        }

        //获取分类下相应规格
        $speFiled    = array();
        $spePics     = array();  //颜色自定义图片
        $specifival  = array();
        $spearray    = array();
        $sysSpeArr = array();
        $spearmPrice   = array();               //  原价
        $spearPrice   = array();               //现价
        $invent      = 0;
        $typeitem    = $dsql->SetQuery("SELECT `spe` FROM `#@__shop_type` WHERE `id` = " . $itemid1 . "");
        $typeResults = $dsql->dsqlOper($typeitem, "results");
        if ($typeResults) {
            $spe = $typeResults[0]['spe'];
            if ($spe != "") {
                $spe = explode(",", $spe);
                foreach ($spe as $key => $val) {

                    //已有规格自定义字段
                    $customArr = array();
                    $custom    = $_POST["speCustom" . $val];
                    $customPic = $_POST["speCustomPic" . $val];
                    if ($custom) {
                        $speFiled[$val] = $custom;
                        foreach ($custom as $k => $v) {
                            array_push($customArr, $v);
                        }
                    }

                    $spePic = $_POST["spePic" . $val];
                    if ($customPic) {
                        $spePics = $spePic ? array_merge($customPic, $spePic) : $customPic;
                    } elseif ($spePic) {
                        $spePics = $spePic;
                    }

                    $speitem    = array();
                    $speSql     = $dsql->SetQuery("SELECT `id` FROM `#@__shop_specification` WHERE `id` = " . $val . " ORDER BY `weight` ASC");
                    $speResults = $dsql->dsqlOper($speSql, "results");
                    if ($speResults) {
                        $speval = array();
                        if ($customArr) {
                            $speval = $customArr;
                        }
                        $postVal = $_POST["spe" . $speResults[0]['id']];
                        $sysSpeArr[$speResults[0]['id']] = $postVal;
                        $speval  = $speval ? ($postVal ? array_merge($speval, $postVal) : $speval) : $postVal;
                        if (!empty($speval) != "") {
                            array_push($spearray, $speval);
                        }
                    } else {
                        if ($customArr) {
                            array_push($spearray, $customArr);
                        }
                    }
                }
            }
        }


        //规格自定义图片
        $spePics = serialize($spePics);
        $sysSpeArr = $sysSpeArr ? json_encode($sysSpeArr) : "";

        //已有规格自定义字段
        if (!empty($speFiled)) { //截取Filed长度
            $cutSpeCustom = array();
            foreach ($speFiled as $speCustomK => $speCustomV) {
                $speCustomVI = array();
                foreach ($speCustomV as $speCustomVIt) {
                    $spes_jjj = substr($speCustomVIt, strlen("custom_"));  //截取后一半
                    $cus_spe_ii = explode("_", $spes_jjj);
                    $spe_parent_id = $cus_spe_ii[0];  //id
                    $spe_parent_name = substr($spes_jjj, strlen("" . $spe_parent_id) + 1); //name
                    $spe_parent_name = cn_substrR($spe_parent_name, 30);
                    $speCustomVI[] = "custom_" . $spe_parent_id . "_" . $spe_parent_name;
                }
                $cutSpeCustom[$speCustomK] = $speCustomVI;
            }
            $speFiled = $cutSpeCustom;
        }
        $speFiled = serialize($speFiled);

        //全新规格自定义
        $speCustom = array();
        $speNew    = $_POST['speNew'];

        // if ($speNew && (($modAdrr == 1 && $guigetype == 1) || $modAdrr == 2)) {
        if ($speNew) {
            foreach ($speNew as $key => $value) {
                array_push($spearray, $value);
            }
            $speCustom = $speNew;
        }
        if (!empty($speCustom)) { //截取spe长度
            $cutSpeCustom = array();
            foreach ($speCustom as $speCustomK => $speCustomV) {
                $speCustomK = cn_substrR($speCustomK, 30);
                $speCustomVI = array();
                foreach ($speCustomV as $speCustomVIt) {
                    $speCustomVI[] = cn_substrR($speCustomVIt, 30);
                }
                $cutSpeCustom[$speCustomK] = $speCustomVI;
            }
            $speCustom = $cutSpeCustom;
        }
        $speCustom = serialize($speCustom);

        // if (!empty($spearray) && (($modAdrr == 1 && $guigetype == 1) || $modAdrr == 2)) {
        if (!empty($spearray)) {
            if (count($spearray) > 1) {
                $spearray = descartes($spearray);
                if ($modAdrr == 1) {
                    $spearray = $spearray[0];
                }
            } else {
                $spearray = $spearray[0];
            };
            $skuInfo = json_decode($_POST['skuInfoArr'], true);
            foreach ($spearray as $key => $val) {
                $speid = $val;
                if (is_array($val)) {
                    $speid = join("-", $val);
                }
                $spemprice    = $skuInfo["f_mprice_" . $speid];
                $speprice     = $skuInfo["f_price_" . $speid];
                $speinventory = $skuInfo["f_inventory_" . $speid];
                if (!preg_match("/^0|\d*\.?\d+$/i", $spemprice, $matches) && $fabutype != 1) {
                    return array("state" => 200, "info" => $langData['shop'][4][61]);  //规格表中价格不得为空，类型为数字！
                } elseif (!preg_match("/^0|\d*\.?\d+$/i", $speprice, $matches) && $fabutype != 1) {
                    return array("state" => 200, "info" => $langData['shop'][4][62]);  //规格表中库存不得为空，类型为数字！
                } elseif (!preg_match("/^0|\d*\.?\d+$/i", $speinventory, $matches) && $fabutype != 1) {
                    return array("state" => 200, "info" => $langData['shop'][4][62]);  //规格表中库存不得为空，类型为数字！
                } else {
                    $invent += $speinventory;
                    array_push($spearmPrice, $spemprice);
                    array_push($spearPrice, $speprice);
                    array_push($specifival, array("speids" => $val, "mprice" => $spemprice, "price" => $speprice, "stock" => $speinventory));
                }
            }
        }
        if (!empty($specifival) && $fabutype != 1) {
            $specifival = json_encode($specifival, 256);
            $inventory  = $invent;
        } else {
            if (!empty($specifival)) {
                $specifival = json_encode($specifival, 256);
            } else {
                $specifival = "";
            }
            if (!preg_match("/^0|\d*\.?\d+$/i", $inventory, $matches) && $fabutype != 1) {
                return array("state" => 200, "info" => $langData['shop'][4][63]);  //库存不得为空，类型为数字！
            }
        }
        if (!empty($spearmPrice) && !empty($spearPrice)) {
            $mprice = min($spearmPrice);
            $price = min($spearPrice);
        }

        if (empty($litpic) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][64]);  //请上传商品缩略图！
            exit();
        }

        if (empty($imglist) && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][65]);  //请上传商品图集！
            exit();
        }

        if (trim($body) == '' && $fabutype != 1) {
            return array("state" => 200, "info" => $langData['shop'][4][66]);  //请输入商品描述
        }
        if (empty($barcode)) {
            // $barcode = genSecret(12, 1);
        }
        $mbody = empty($mbody) ? $body : $mbody;

        //保存到主表
        //移动端修改只更新移动端的内容

        $duospe = "";

        if ($huodongtype != 1) {
            $duospe = " , `spePics` = '" . addslashes($spePics) . "', `speFiled` = '" . addslashes($speFiled) . "', `speCustom` = '" . addslashes($speCustom) . "'";
        }

        if (isMobile()) {
            $archives = $dsql->SetQuery("UPDATE `#@__shop_product` SET `type` = '$typeid', `title` = '$title', `subtitle` = '$subtitle', `brand` = '$brand', `property` = '$property', `category` = '$category', `mprice` = '$mprice', `price` = '$price', `logistic` = '$logistic', `volume` = '$volume', `weight` = '$weight', `inventory` = '$inventory',`editdate` = '$editdate', `inventoryCount` = '$inventoryCount', `limitcount` = '$limit', `litpic` = '$litpic', `state` = '$state', `pics` = '$imglist', `mbody` = '$body', `video` = '$video', `barcode` = '$barcode', `storeFlag` = '$storeFlag',`protype` = '$protype',`smallCount` = '$smallCount',`packingCount` = '$packingCount',`shopunit` = '$shopunit',`quantime`='$quantime',`qtimetype` = '$qtimetype' $duospe  ,`typesales` = '$saletype',`package` = '$package',`notice` = '$notice',`availableweek` = '$availableweek',`availabletime` = '$availabletime',`guigetype` = '$guigetype',`blogistic` = '$blogistic',`shangjia` = '$shangjia',`is_tuikuan` = '$tuikuantype',`sysspe`='$sysSpeArr' WHERE `id` = " . $id);
        } else {
            $archives = $dsql->SetQuery("UPDATE `#@__shop_product` SET `type` = '$typeid', `title` = '$title', `subtitle` = '$subtitle', `brand` = '$brand', `property` = '$property', `category` = '$category', `mprice` = '$mprice', `price` = '$price', `logistic` = '$logistic', `volume` = '$volume', `weight` = '$weight', `inventory` = '$inventory', `inventoryCount` = '$inventoryCount', `limitcount` = '$limit', `litpic` = '$litpic', `state` = '$state', `pics` = '$imglist', `body` = '$body',`smallCount` = '$smallCount',`packingCount` = '$packingCount',`shopunit` = '$shopunit',`editdate` = '$editdate',`mbody` = '$mbody', `video` = '$video', `barcode` = '$barcode', `storeFlag` = '$storeFlag',`protype` = '$protype',`quantime`='$quantime',`qtimetype` = '$qtimetype' $duospe ,`typesales` = '$saletype',`package` = '$package',`notice` = '$notice',`availableweek` = '$availableweek',`availabletime` = '$availabletime',`guigetype` = '$guigetype',`blogistic` = '$blogistic',`shangjia` = '$shangjia',`is_tuikuan` = '$tuikuantype',`sysspe`='$sysSpeArr'  WHERE `id` = " . $id);
        }
        $ret = $dsql->dsqlOper($archives, "update");

        if ($ret == "ok") {

            $this->saveSku($id, $speFiled, $speCustom, $specifival, $_POST['speNew']);
            $this->updateStorePcount($sid);

            $urlParam = array(
                'service' => 'shop',
                'template' => 'detail',
                'id' => $id
            );
            $url = getUrlPath($urlParam);

            //记录用户行为日志
            memberLog($userid, 'shop', '', $id, 'update', '修改商品(' . $title . ')', $url, $archives);

            //微信通知
            $cityName = $siteCityInfo['name'];
            $cityid   = $siteCityInfo['cityid'];
            $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
            $userinfo = $userLogin->getMemberInfo($userid, 1);
            $param    = array(
                'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n更新了商品ID：" . $id,
                    'date'      => date("Y-m-d H:i:s", time()),
                )
            );
            updateAdminNotice("shop", "detail", $param);

            //以图搜图-入库
            require_once(HUONIAOINC . "/baidu.aip.func.php");
            $client = new baiduAipImageSearchClient();
            $ret    = $client->productAddUrl(str_replace('small', 'large', getFilePath($litpic)), $id);
            dataAsync("shop", $id, "product"); // 在线商城、商品、修改
            return "修改成功！";
        } else {
            return array("state" => 101, "info" => $langData['siteConfig'][21][142]);  //发布到数据时发生错误，请检查字段内容！
        }
    }

    //编辑页面、获取规格
    public function getSpeList($id, $itemid, $config = array())
    {
        global $dsql;
        //获取分类规格
        $specification = array();
        $specifiArr = array();
        $specifiIds = array();
        $specifiVal = array();

        //规格自定义图片
        $spePics = array();
        if ($config['pic']) {
            $spePics = $config['pic'];
        }

        //已有规格自定义字段
        $speFiled = array();
        if ($config['filed']) {
            $speFiled = $config['filed'];
        }
        //自定义规格字段
        $speCustom = array();
        if ($config['custom']) {
            $speCustom = $config['custom'];
        }
        //系统字段选中
        $sysSpeSelect = array();
        if ($config['sysSpe']) {
            $sysSpeSelect = $config['sysSpe'];
        }

        if (!empty($id) && $_GET['typeid'] == "") {
            //按顺序找出spe
            $descartesSpe = array();
            $sysspe = array();
            if ($itemid != 0) {
                $sql = $dsql::SetQuery("select `spe` from `#@__shop_type` where `id`=$itemid");
                $sysspe = $dsql->getOne($sql);
            }
            if (!empty($sysspe)) {
                $sysspe = explode(",", $sysspe);
            }
            //循环找出系统子规格和其自定义子级规格
            if($sysspe){
                foreach ($sysspe as $sysspe_i) {
                    $sons = array();
                    $sql = $dsql::SetQuery("select `id` from `#@__shop_good_spe` where `gid`=$id and `del`=0 and `type`='system' and `parent_id`=$sysspe_i");
                    $sonsc = $dsql->getArr($sql);
                    if (!empty($sonsc)) {
                        foreach ($sonsc as $sonsc_i) {
                            $sons[] = "c" . $sonsc_i;
                        }
                    }
                    if ($sysSpeSelect[$sysspe_i]) { //系统规格表
                        $sons = array_merge($sons, $sysSpeSelect[$sysspe_i]);
                    }
                    $descartesSpe[] = $sons;
                }
            }
            $promotype = $dsql->getOne($dsql::SetQuery("select `promotype` from `#@__shop_product` where `id`=$id"));
            //循环找出全自定义规格及其子级
            if (!empty($speCustom)) {
                foreach ($speCustom as $speCustom_k => $speCustom_v) {
                    $customSpe = array();
                    $sql = $dsql::SetQuery("select `id` from `#@__shop_good_spe` where `gid`=$id and `del`=0 and `type`='custom' and `parent_id`=0 and `name`='" . addslashes($speCustom_k) . "'");
                    $spe_parent_id_ = (int)$dsql->getOne($sql);
                    foreach ($speCustom_v as $speCustom_v_i) { //取出每个值的id
                        $speCustom_v_id = $dsql->getOne($dsql::SetQuery("select `id` from `#@__shop_good_spe` where `gid`=$id and `del`=0 and `type`='custom' and `parent_id`=$spe_parent_id_ and `name`='" . addslashes($speCustom_v_i) . "'")) ?: "";
                        $customSpe[] = "c" . $speCustom_v_id;
                    }
                    $descartesSpe[] = $customSpe;
                }
            }
            //笛卡尔积
            if ($promotype != 1) { //电商
                $descartesSpe = array_filter($descartesSpe);
                if (count($descartesSpe) > 1) {
                    $specs = descartes($descartesSpe);
                } elseif (count($descartesSpe) == 1) { //仅一个时，前面的方法不行，手动笛卡尔
                    foreach (current($descartesSpe) as $descartesSpe_i) {
                        $specs[] = array($descartesSpe_i);
                    }
                } else {
                    $specs = array();
                }
            } else {  //团购
                $specs = $descartesSpe;
            }
            //找出sku
            $sql = $dsql::SetQuery("select * from `#@__shop_good_sku` where `gid`=$id and `del`=0");
            $skus = $dsql->getArrList($sql) ?: array();
            //笛卡尔给sku排序
            $orderSkus = array();
            foreach ($specs as $specs_k => $specs_v) {
                $speid_i = join(",", $specs_v);
                foreach ($skus as $II) {
                    if ($II['speids'] == $speid_i) {
                        $orderSkus[] = $II;
                        break;
                    }
                }
            }
            //返回数据
            foreach ($orderSkus as $key => $val) {
                //取得speids
                $speids = explode(",", $val['speids']);
                //取得speNames
                foreach ($speids as $speids_i) {
                    if ($speids_i[0] == "c") {
                        $speids_i = substr($speids_i, 1);
                        $spenames = $dsql->getArr($dsql::SetQuery("select `name`,`parent_id` from `#@__shop_good_spe` where `id`=$speids_i"));
                        $speNames = "custom_" . $spenames['id'] . "_" . $spenames['name'];
                    } else {
                        $speNames = $speids_i;
                    }
                    if (!in_array($speNames, $specifiIds)) {
                        array_push($specifiIds, $speNames);
                    }
                }
                array_push($specifiVal, join("#", array($val['mprice'], $val['price'], $val['stock'])));
            }
        }

        $spePicPx = 0;

        if ($itemid != 0) {
            $archives = $dsql->SetQuery("SELECT `spe` FROM `#@__shop_type` WHERE `id` = " . $itemid);
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && !empty($results[0]['spe'])) {
                $spe = explode(",", $results[0]['spe']);
                foreach ($spe as $key => $val) {
                    $archives_1 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `id` = " . $val . " ORDER BY `weight` ASC");
                    $results_1 = $dsql->dsqlOper($archives_1, "results");
                    if ($results_1) {
                        $speItem = array();
                        $speCustomItem = array();
                        foreach ($results_1 as $key_1 => $val_1) {

                            //自定义字段
                            $speList = $speFiled[$val_1['id']];
                            if ($speFiled && $speList) {
                                foreach ($speList as $k_s => $v_s) {
                                    $val_s = str_replace('custom_' . $val_1['id'] . '_', '', $v_s);

                                    if ($results_1[0]['typename'] == "颜色") {

                                        $imgurl = '';
                                        if ($spePics) {
                                            $imgurl = $spePics[$spePicPx];
                                            $spePicPx++;
                                        }

                                        $img = $imgurl ? "<img src='" . getFilePath($imgurl) . "' data-url='" . $imgurl . "'>" : "";
                                        $hide1 = $imgurl ? "fn-hide" : "";
                                        $hide2 = $imgurl ? "" : "fn-hide";

                                        array_push($speCustomItem, '<div class="self_inp color_inp fn-clear"><input class="fn-hide" checked="checked" type="checkbox" name="speCustom' . $val . '[]" title="' . $val_s . '" value="custom_' . $val . '_' . $val_s . '"><input type="text" class="inp" size="12" value="' . $val_s . '"><i class="del_inp"></i><div class="img_box">' . $img . '</div><div class="upimg filePicker1 ' . $hide1 . '" id="filePicker_' . $v_s . '">选择图片</div><div class="del_img ' . $hide2 . '">删除图片</div><input class="spePic" type="hidden" name="speCustomPic' . $val . '[]" value="' . $imgurl . '" /></div>');
                                    } else {
                                        array_push($speCustomItem, '<div class="self_inp fn-clear"><input class="fn-hide" checked="checked" type="checkbox" name="speCustom' . $val . '[]" title="' . $val_s . '" value="custom_' . $val . '_' . $val_s . '"><input type="text" class="inp"  size="22" value="' . $val_s . '" /><i class="del_inp"></i></div>');
                                    }
                                }
                            }

                            //系统默认字段
                            $archives_2 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `parentid` = " . $val_1['id'] . " ORDER BY `weight` ASC");
                            $results_2 = $dsql->dsqlOper($archives_2, "results");
                            if ($results_2) {
                                foreach ($results_2 as $key_2 => $val_2) {
                                    $checked = "";
                                    if (in_array($val_2['id'], $specifiIds)) {
                                        $checked = " checked";
                                    }
                                    if ($results_1[0]['typename'] == "颜色") {

                                        $imgurl = '';
                                        if ($spePics) {
                                            $imgurl = $spePics[$spePicPx];
                                            $spePicPx++;
                                        }

                                        $img = $imgurl ? "<img src='" . getFilePath($imgurl) . "' data-url='" . $imgurl . "'>" : "";
                                        $hide1 = $imgurl ? "fn-hide" : "";
                                        $hide2 = $imgurl ? "" : "fn-hide";

                                        array_push($speItem, '<li><label><input type="checkbox" name="spe' . $val . '[]" title="' . $val_2['typename'] . '" value="' . $val_2['id'] . '" ' . $checked . ' /><span class="readonly">' . $val_2['typename'] . '</span></label><div class="img_box">' . $img . '</div><div class="upimg filePicker1 ' . $hide1 . '" id="filePicker_' . $val_2['id'] . '" data-type="des"  data-count="1" data-size="" data-imglist="">选择图片</div><div class="del_img ' . $hide2 . '">删除图片</div><input class="spePic" type="hidden" name="spePic' . $val . '[]" value="' . $imgurl . '" /></li>');
                                    } else {
                                        array_push($speItem, '<label><input type="checkbox" name="spe' . $val . '[]" title="' . $val_2['typename'] . '" value="' . $val_2['id'] . '"' . $checked . ' />' . $val_2['typename'] . '</label>');
                                    }
                                }
                            }
                        }
                        if ($speItem) {
                            array_push($specification, '<dl class="clearfix fn-clear"><dt><label>' . $results_1[0]['typename'] . '：</label></dt>');
                            array_push($specification, '<dd class="radio" data-title="' . $results_1[0]['typename'] . '" data-id="' . $results_1[0]['id'] . '">');

                            if ($results_1[0]['typename'] == "颜色") {
                                array_push($specification, '<div class="self_add fn-clear"><div class="fn-left color_div"><input type="text" name="selfinp" class="inp"  size="12" maxlength="50" data-title="请输入自定义值" placeholder="请输入自定义值" value=""><div class="img_box"></div><div class="upimg filePicker1" id="filePicker_0"  data-type="des"  data-count="1" data-size="" data-imglist="">选择图片</div><div class="del_img fn-hide">删除图片</div></div><button type="button" class="sure_add">+添加</button>');
                                array_push($specification, '<span class="tip-inline" style="display:inline-block;"><s></s>图片推荐尺寸：800*800</span></div>');
                                array_push($specification, '<div class="self_box fn-clear">' . join('', $speCustomItem) . '</div>');
                                array_push($specification, '<div class="color_box checkbox"><ul class="fn-clear">' . join("", $speItem) . '</ul></div>');
                            } else {
                                array_push($specification, '<div class="self_add fn-clear"><input type="text" name="selfinp" class="inp"  size="22" maxlength="50" data-title="请输入自定义值" placeholder="请输入自定义值" value=""><button type="button" class="sure_add">+添加</button>');
                                array_push($specification, '</div>');
                                array_push($specification, '<div class="self_box fn-clear">' . join('', $speCustomItem) . '</div>');
                                array_push($specification, '<div class="checkbox otherbox fn-clear">' . join("", $speItem) . '</div>');
                            }

                            array_push($specification, '</dd>');
                            array_push($specification, '</dl>');
                        }
                    }
                }
            }
        }
        return array("specifiVal" => $specifiVal, "specification" => $specification);
    }

    /**
     * 保存spe、sku
     * @param gid 商品id
     * @param speFiled 系统自定义Filed
     * @param speCustom 完全自定义Filed
     * @param specifival 新sku列表【json】
     * @param speNew 新自定义列名和值
     */
    public function saveSku($gid, $speFiled, $speCustom, $specifival, $speNew)
    {
        global $dsql;
        //1、取出系统filed，自定义值
        $sql = $dsql::SetQuery("select * from `#@__shop_good_spe` where `gid`=$gid and `del`=0 and `type`='system'");
        $speFiled_a = $dsql->getArrList($sql) ?: array();
        //铺平speFiled_a
        $speFiled_a_p = array();
        foreach ($speFiled_a as $kkkk => $iii) {
            $speFiled_a_p[] = array("parent_id" => $iii['parent_id'], "name" => $iii['name']);
        }
        $speFiled_n = unserialize($speFiled) ?: array(); //新speids
        foreach ($speFiled_n as $k => $temp_i) {
            $temp_kk = array();
            foreach ($temp_i as $kk => $temp_ii) {
                $temp_ii = substr($temp_ii, strlen("custom_"));
                $temp_ii = explode("_", $temp_ii);
                array_shift($temp_ii);
                $temp_ii = join("_", $temp_ii);
                $temp_kk[$kk] = $temp_ii;
            }
            $speFiled_n[$k] = $temp_kk;
        }
        //铺平speFiled_n
        $speFiled_n_p = array();
        foreach ($speFiled_n as $kkkk => $iii) {
            foreach ($iii as $jjj) {
                $speFiled_n_p[] = array("parent_id" => $kkkk, "name" => $jjj);
            }
        }
        //找出所有已删除的
        $delSpes = array();
        $addSpes = array();
        $delRes = array();
        //遍历旧的，如果不在新的里，就说明已经删除
        foreach ($speFiled_a_p as $spe_i) {
            if (!in_array($spe_i, $speFiled_n_p)) {
                $sql = $dsql::SetQuery("update `#@__shop_good_spe` set `del`=1 where `del`=0 and `gid`={$gid} and `name`='" . addslashes($spe_i['name']) . "' and `parent_id`={$spe_i['parent_id']} and `type`='system'");
                $delRes[$spe_i['parent_id'] . "_" . $spe_i['name']] = $dsql->update($sql);
            }
        }
        $sql = $dsql::SetQuery("select `userid` from `#@__shop_store` s,`#@__shop_product` p where s.`id`=p.`store`");
        $suid = $dsql->getOne($sql);
        //遍历新的，如果不在旧的里，旧说明是新增
        foreach ($speFiled_n_p as $spe_i) {
            if (!in_array($spe_i, $speFiled_a_p)) {
                $sql = $dsql::SetQuery("insert into `#@__shop_good_spe`(`gid`,`suid`,`type`,`name`,`parent_id`) values($gid,$suid,'system','" . addslashes($spe_i['name']) . "',{$spe_i['parent_id']})");
                $addSpes[] = $dsql->dsqlOper($sql, "lastid");
            }
        }
        //2、取出自定义filed的名和值...
        $cus_speCustom_n = unserialize($speCustom) ?: array();
        //取键名，这些都是key
        $cus_speCustom_n_p = array_keys($cus_speCustom_n); //新keys
        $sql = $dsql::SetQuery("select * from `#@__shop_good_spe` where `gid`=$gid and `del`=0 and `type`='custom' and `parent_id`=0");
        $cus_speCusKeys_a = $dsql->getArrList($sql);
        $cus_speCusKeys_a_p = array_column($cus_speCusKeys_a, "name");
        $cus_speCusKeys_a_id = array_column($cus_speCusKeys_a, "id");
        $delCusSpes = array();
        $addCusSpes = array();
        //遍历旧的，如果不在新的里，就说明已经删除
        foreach ($cus_speCusKeys_a_p as $key => $iii) {
            if (!in_array($iii, $cus_speCustom_n_p)) {
                $sql = $dsql::SetQuery("update `#@__shop_good_spe` set `del`=1 where `del`=0 and `gid`={$gid} and `name`='" . addslashes($iii) . "' and `parent_id`=0 and `type`='custom'");
                $delCusSpes[$iii] = $dsql->update($sql);
                //尝试把子级全部删除
                $sql = $dsql::SetQuery("update `#@__shop_good_spe` set `del`=1 where `del`=0 and `gid`={$gid} and `parent_id`={$cus_speCusKeys_a_id[$key]} and `type`='custom'");
                $delCusSpes[$cus_speCusKeys_a_id[$key]] = $dsql->update($sql);
            }
        }
        //遍历新的，如果不在旧的里，旧说明是新增
        foreach ($cus_speCustom_n_p as $key => $iii) {
            if (!in_array($iii, $cus_speCusKeys_a_p)) {
                $sql = $dsql::SetQuery("insert into `#@__shop_good_spe`(`gid`,`suid`,`type`,`name`,`parent_id`) values($gid,$suid,'custom','" . addslashes($iii) . "',0)");
                $addKey_i = $dsql->dsqlOper($sql, "lastid");
                //肯定有子级增加，增加子级
                $sons = $cus_speCustom_n[$iii];
                $sons_id = array();
                foreach ($sons as $son) {
                    $sql = $dsql::SetQuery("insert into `#@__shop_good_spe`(`gid`,`suid`,`type`,`name`,`parent_id`) values($gid,$suid,'custom','" . addslashes($son) . "',$addKey_i)");
                    $sons_id[] = $dsql->dsqlOper($sql, "lastid");
                }
                $addCusSpes[$addKey_i] = $sons_id;
            }
            //否则说明不是新增，再继续校验子级是否修改
            else {
                //取出原子级
                $newSons = $cus_speCustom_n[$iii];
                $newSonsId = 0;
                foreach ($cus_speCusKeys_a_p as $kkk => $vvv) {
                    if ($vvv == $iii) {
                        $newSonsId = $cus_speCusKeys_a_id[$kkk];
                    }
                }
                //取出新子级
                $sql = $dsql::SetQuery("select * from `#@__shop_good_spe` where `gid`=$gid and `del`=0 and `type`='custom' and `parent_id`={$newSonsId}");
                $oldSonsArr = $dsql->getArrList($sql);
                $oldSons = array_column($oldSonsArr, "name");
                $oldSons_id = array_column($oldSonsArr, "id");
                //遍历旧的，如果不在新的里，就说明已经删除
                foreach ($oldSons as $key2 => $jjj) {
                    if (!in_array($jjj, $newSons)) {
                        $sql = $dsql::SetQuery("update `#@__shop_good_spe` set `del`=1 where `del`=0 and `id`={$oldSons_id[$key2]} and `type`='custom'");
                        $delCusSpes[$iii] = $dsql->update($sql);
                    }
                }
                //遍历新的，如果不在旧的里，旧说明是新增
                foreach ($newSons as $key2 => $jjj) {
                    if (!in_array($jjj, $oldSons)) {
                        $sql = $dsql::SetQuery("insert into `#@__shop_good_spe`(`gid`,`suid`,`type`,`name`,`parent_id`) values($gid,$suid,'custom','" . addslashes($jjj) . "',{$newSonsId})");
                        $addCusSpes[$newSonsId] = $dsql->dsqlOper($sql, "lastid");
                    }
                }
            }
        }
        //3、处理sku : $_POST['speNew']存储的是自定义键名和值
        //新的sku
        $newSpecifival_a = json_decode($specifival, true) ?: array();
        $newSpecifival_a_p = array();
        $newSpeArr = array();
        $sql = $dsql::SetQuery("select `promotype` from `#@__shop_product` where `id`=" . $gid);
        $promotype = $dsql->getOne($sql);  //模板类型{1.团购、2.电商}
        //取出sysspe
        $sql = $dsql::SetQuery("select `sysspe` from `#@__shop_product` where `id`=$gid");
        $sysspeStr = $dsql->getOne($sql);
        $sysspeParentCount = 0;
        $sysspeParents = array();
        if (!empty($sysspeStr)) {  //遍历sysspe
            $sysspeArr = json_decode($sysspeStr, true);
            foreach ($sysspeArr as $sysspeArrK => $sysspeArrV) {
                if (!empty($sysspeArrV)) {
                    $sysspeParents[] =  $sysspeArrK;
                }
            }
        }
        if (!empty($speFiled_n)) {
            foreach ($speFiled_n as $speFiled_nK => $speFiled_nV) {
                $sysspeParents[] = $speFiled_nK;
            }
        }
        if (!empty($sysspeParents)) {
            $sysspeParents = array_unique($sysspeParents);
        }
        $sql = $dsql::SetQuery("select t.`spe`,`parentid` from `#@__shop_product` p,`#@__shop_type` t where p.`type`=t.`id` and p.`id`=$gid");
        $productSpes = $dsql->getArr($sql) ?: array();
        $productSpe = $productSpes['spe'];
        if (empty($productSpe) && $productSpes['parentid'] != 0) {  //可能存在第二级
            $sql = $dsql::SetQuery("select t.`spe`,`parentid` from `#@__shop_type` t where t.`id`=" . $productSpes['parentid']);
            $productSpes = $dsql->getArr($sql) ?: array();
            $productSpe = $productSpes['spe'];
            if (empty($productSpe) && $productSpes['parentid'] != 0) { //可能存在第三级
                $sql = $dsql::SetQuery("select t.`spe` from `#@__shop_type` t where t.`id`=" . $productSpes['parentid']);
                $productSpe = $dsql->getOne($sql) ?: "";
            }
        }
        $allParents = array();
        if (!empty($productSpe) && !empty($sysspeParents)) {
            $productSpe = explode(",", $productSpe);
            foreach ($productSpe as $productSpe_i) {
                if (in_array($productSpe_i, $sysspeParents)) {
                    $allParents[] = $productSpe_i;
                }
            }
        }
        if (!empty($cus_speCustom_n_p)) {
            foreach ($cus_speCustom_n_p as $cus_speCustom_n_pV) {
                $allParents[] = $cus_speCustom_n_pV;
            }
        }
        foreach ($newSpecifival_a as $item_i) {
            $spes_ii = $item_i['speids'];
            $spes_ii = is_string($spes_ii) ? array($spes_ii) : $spes_ii;
            $speids = array();
            $spes_jjj_index = -1;
            foreach ($spes_ii as $spes_jjj) {
                $spes_jjj_index++;
                if (substr($spes_jjj, 0, strlen("custom_")) == "custom_") {
                    $spes_jjj = substr($spes_jjj, strlen("custom_"));  //截取后一半
                    $cus_spe_ii = explode("_", $spes_jjj);
                    $spe_parent_id = $cus_spe_ii[0];  //id
                    $spe_parent_name = substr($spes_jjj, strlen("" . $spe_parent_id) + 1); //name
                    $spe_parent_name = cn_substrR($spe_parent_name, 30);
                    $sql = $dsql::SetQuery("select `id` from `#@__shop_good_spe` where `del`=0 and `gid`={$gid} and `parent_id`=$spe_parent_id and `name`='" . addslashes($spe_parent_name) . "' and `type`='system'");
                    $speids[] = "c" . ($dsql->getOne($sql) ?: "");
                } else {
                    //全自定义、配合speNew获取
                    $find_spe = false;
                    $speNew = is_array($speNew) ? $speNew : array();
                    foreach ($speNew as $speNewKeys_i => $speNewVals_i) {
                        //笛卡尔积是子级，不能取顶级
                        if (in_array($spes_jjj, $speNewVals_i)) {
                            $find_spe = true;
                            if ($promotype != 1) {
                                //先找出父级
                                $parent_name_ = $allParents[$spes_jjj_index];
                                $sql = $dsql::SetQuery("select `id` from `#@__shop_good_spe` where `del`=0 and `gid`={$gid} and `parent_id`=0 and `name`='" . addslashes($parent_name_) . "' and `type`='custom'");
                                $parent_id_ = (int)$dsql->getOne($sql);
                                $spes_jjj = cn_substrR($spes_jjj, 30);
                                $sql = $dsql::SetQuery("select `id` from `#@__shop_good_spe` where `del`=0 and `gid`={$gid} and `parent_id`=$parent_id_ and `name`='" . addslashes($spes_jjj) . "' and `type`='custom'");
                                $speids[] = "c" . ($dsql->getOne($sql) ?: '');
                            } else {
                                $spes_jjj = cn_substrR($spes_jjj, 30);
                                $sql = $dsql::SetQuery("select `id` from `#@__shop_good_spe` where `del`=0 and `gid`={$gid} and `parent_id`!=0 and `name`='" . addslashes($spes_jjj) . "' and `type`='custom'");
                                $speids[] = "c" . ($dsql->getOne($sql) ?: "");
                            }
                            break;
                        }
                    }
                    //否则是普通字段【它就是system的type表id】
                    if (!$find_spe) {
                        $speids[] = $spes_jjj;
                    }
                }
            }
            //根据传来的父级，
            $spe_i_str = join(",", $speids);
            $newSpecifival_a_p[] = $spe_i_str;
            $newSpeArr[$spe_i_str] = array($item_i['mprice'], $item_i['price'], $item_i['stock']);
        }
        //原sku
        $sql = $dsql::SetQuery("select * from `#@__shop_good_sku` where `gid`={$gid} and `del`=0");
        $sku_a = $dsql->getArrList($sql);
        $oldSpecifival_a_p = array_column($sku_a, "speids");
        $oldSpecifival_a_p_id = array_column($sku_a, "id", 'speids');
        $oldSpecifival_a_p_mprice = array_column($sku_a, "mprice", 'speids');
        $oldSpecifival_a_p_price = array_column($sku_a, "price", 'speids');
        $oldSpecifival_a_p_stock = array_column($sku_a, "stock", 'speids');
        //找出要新增的、删除的
        $addSkus = array();
        $delSkus = array();
        //遍历旧的，如果不在新的里，就说明已经删除 【speids，在商品中也是唯一的，等效id】
        foreach ($oldSpecifival_a_p as $ii_i) {
            if (!in_array($ii_i, $newSpecifival_a_p)) {
                $sql = $dsql::SetQuery("update `#@__shop_good_sku` set `del`=1 where `del`=0 and gid={$gid} and `speids`='$ii_i'");
                $delRes[$ii_i] = $dsql->update($sql);
            }
        }
        //遍历新的，如果不在旧的里，旧说明是新增
        foreach ($newSpecifival_a_p as $key => $ii_i) {
            if (!in_array($ii_i, $oldSpecifival_a_p)) {
                $sql = $dsql::SetQuery("insert into `#@__shop_good_sku`(`gid`,`suid`,`speids`,`price`,`mprice`,`stock`) values({$gid},$suid,'$ii_i','{$newSpeArr[$ii_i][1]}','{$newSpeArr[$ii_i][0]}',{$newSpeArr[$ii_i][2]})");
                $addSkus[] = $dsql->dsqlOper($sql, "lastid");
            }
            //否则，就是sku无变化，但是原价、现价、库存可能变化，需要一一检测
            else {
                if ($newSpeArr[$ii_i][0] != $oldSpecifival_a_p_mprice[$ii_i] || $newSpeArr[$ii_i][1] != $oldSpecifival_a_p_price[$ii_i] ||  $newSpeArr[2] != $oldSpecifival_a_p_stock[$ii_i]) {
                    //变化了，需要更新【id】
                    $sql = $dsql::SetQuery("update `#@__shop_good_sku` set `mprice`={$newSpeArr[$ii_i][0]},`price`={$newSpeArr[$ii_i][1]},`stock`={$newSpeArr[$ii_i][2]} where `id`={$oldSpecifival_a_p_id[$ii_i]}");
                    $dsql->update($sql);
                }
            }
        }
    }


    /**
     * 商家运费模板列表
     * @return array
     */
    public function logistic()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();

        $logistype = (int)$this->param['logistype'];
        $b         = (int)$this->param['b'];
        $where = '';
        if ($b != 1) {

            $where = " AND `logistype` = '$logistype'";
        }
        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        //如果是员工账号，以下数据按商家账号查询
        $userinfo = $userLogin->getMemberInfo();
        if ($userinfo['is_staff'] == 1) {
            $userid = $userinfo['companyuid'];
        }

        $userSql    = $dsql->SetQuery("SELECT `id`, `state` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $userResult = $dsql->dsqlOper($userSql, "results");
        if (!$userResult) {
            return array("state" => 200, "info" => $langData['shop'][4][36]);  //您还未开通商城店铺！
        }

        if (!verifyModuleAuth(array("module" => "shop"))) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }

        if ($userResult[0]['state'] == 0) {
            //return array("state" => 200, "info" => $langData['shop'][4][53]);  //您的商铺信息还在审核中，请通过审核后再发布！
        }

        if ($userResult[0]['state'] == 2) {
            //return array("state" => 200, "info" => $langData['shop'][4][54]);  //您的商铺信息审核失败，请通过审核后再发布！
        }

        $sid = $userResult[0]['id'];

        $list     = array();
        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_logistictemplate` WHERE `sid` = $sid $where ORDER BY `id` DESC");
        $results  = $dsql->dsqlOper($archives, "results");

        if (count($results) > 0) {
            foreach ($results as $key => $value) {
                $list[$key]["id"]                       = $value["id"];
                $list[$key]["title"]                    = $value["title"];
                $list[$key]["note"]                     = $value["note"];
                $list[$key]["logistype"]                = $value["logistype"];
                $list[$key]["delivery_fee_mode"]        = $value["delivery_fee_mode"];
                $list[$key]["basicprice"]               = $value["basicprice"];
                $list[$key]["logistype"]                = $value["logistype"];
                $list[$key]["range_delivery_fee_value"] = $value["range_delivery_fee_value"];

                $detail = '';
                if ($value["logistype"] == 0) {
                    $detail = getPriceDetail($value["bearFreight"], $value['valuation'], $value['express_start'], $value['express_postage'], $value['express_plus'], $value['express_postageplus'], $value['preferentialStandard'], $value['preferentialMoney'], $value["id"]);
                }
                $list[$key]['detail'] = $detail;
            }
        }

        return $list;
    }


    /**
     * 删除运费模板
     * @return array
     */
    public function delLogistic()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        $id     = $this->param['id'];
        $logistype     = $this->param['logistype'];
        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (empty($id)) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][300]);  //删除失败！
        }
        if ($logistype == 1) {
            $yunfeisql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_product` WHERE `blogistic` = " . $id);
            $yunfeiret = $dsql->dsqlOper($yunfeisql, "totalCount");
            if ($yunfeiret > 0) {
                return array("state" => 200, "info" => '暂有商品绑定!');
            }
        } else {
            $yunsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_product` WHERE `logistic` = " . $id);
            $yunret = $dsql->dsqlOper($yunsql, "totalCount");
            if ($yunret > 0) {
                return array("state" => 200, "info" => '暂有商品绑定!');
            }
        }
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $sid = $ret[0]['id'];
            $sql = $dsql->SetQuery("DELETE FROM `#@__shop_logistictemplate` WHERE `id` = " . $id . " AND `sid` = " . $sid);
            if (!$dsql->dsqlOper($sql, "update") == "ok") {
                return array("state" => 200, "info" => $langData['siteConfig'][20][300]);  //删除失败！
            }

            return $langData['siteConfig'][20][444];  //删除成功！

        } else {
            return array("state" => 200, "info" => $langData['shop'][4][51]);  //您的账户暂未开通商品商铺功能！
        }
    }


    /**
     * 新增运费模板
     * @return array
     */
    public function logisticAdd()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        $param  = $this->param;
        $title  = $param['title'];
        if (empty($title)) return array("state" => 200, "info" => $langData['shop'][4][68]);  //请输入模板名称！

        $cityid = (int)$param['cityid'];
        //        if (empty($cityid)) {
        //            $cityid = getCityId();
        //        }
        //        if (empty($cityid)) return array("state" => 200, "info" => $langData['siteConfig'][20][585]);
        $bearFreight              = (int)$param['bearFreight'];
        $valuation                = (int)$param['valuation'];
        $openspecify              = (int)$param['freeArea'];
        $opennospecify            = (int)$param['noFreeArea'];
        $content                  = $param['content'];
        $logisticArea             = $param['logisticArea'] != '' ? json_decode($param['logisticArea'], true) : array();
        $noFreeAreaArr            = $param['noFreeAreaArr'] != '' ? json_decode(stripslashes($param['noFreeAreaArr']), true) : array();
        $freeArr                  = $param['freeArr'] != '' ? json_decode($param['freeArr'], true) : array();
        $logistype                = (int)$param['logistype']; /*模板类型 0-快递,1-商家配送*/
        $delivery_fee_mode        = (int)$param['delivery_fee_mode']; /*起送价/配送模式 0-快递,1-商家配送*/
        $range_delivery_fee_value = $param['range_delivery_fee_value'] != '' ? json_decode(stripslashes($param['range_delivery_fee_value']), true) : array(); /*按距离配送模板规格*/
        $basicprice               = (float)$param['basicprice']; /*起送价*/
        $express_postage          = (float)$param['express_postage']; /*默认运费*/
        $preferentialMoney        = (float)$param['preferentialMoney']; /*满多少包邮*/
        $openFree                 = (int)$param['openFree'];/*开启满多少包邮*/
        $express_juli              = (int)$param['express_juli'];/*配送距离*/
        //        $express_start        = (float)$param['express_start'];
        //        $express_postage      = (float)$param['express_postage'];
        //        $express_plus         = (float)$param['express_plus'];
        //        $express_postageplus  = (float)$param['express_postageplus'];
        //        $preferentialStandard = (float)$param['preferentialStandard'];
        //        $preferentialMoney    = (float)$param['preferentialMoney'];
        //
        //        if ($bearFreight == 1) {
        //            $purchase             = 0;
        //            $express_start        = 0;
        //            $express_postage      = 0;
        //            $express_plus         = 0;
        //            $express_postageplus  = 0;
        //            $preferentialStandard = 0;
        //            $preferentialMoney    = 0;
        //        }

        $devspecification = array();

        $devspecification['bearFreight']    = $bearFreight;
        $devspecification['valuation']      = $valuation;
        $devspecification['openspecify']    = $openspecify;
        $devspecification['opennospecify']  = $opennospecify;


        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (!verifyModuleAuth(array("module" => "shop"))) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }

        $deliveryarea = $specify = $nospecify = array();

        if ($logisticArea && is_array($logisticArea)) {
            foreach ($logisticArea as $k => $v) {

                $firstcityid = 0;
                $cityidarr = array();
                if ($v['area'] != 0) {
                    foreach ($v['area'] as $a => $b) {

                        array_push($cityidarr, $b[1]);
                    }


                    $firstcityid = $v['area'][0][0];
                }

                $express_start = (int)$v['express_start'];
                $express_plus = (int)$v['express_plus'];

                $deliveryarea[$k]['cityid']              = $cityidarr ? join(',', $cityidarr) : '';
                $deliveryarea[$k]['express_start']       = $express_start ? $express_start : 1;
                $deliveryarea[$k]['express_postage']     = (float)$v['express_postage'];
                $deliveryarea[$k]['express_plus']        = $express_plus ? $express_plus : 1;
                $deliveryarea[$k]['express_postageplus'] = (float)$v['express_postageplus'];
                $deliveryarea[$k]['area']                = $v['area'];
            }
        }
        $devspecification['deliveryarea'] = $deliveryarea;

        if ($noFreeAreaArr && is_array($noFreeAreaArr)) {

            $firstcityid = $noFreeAreaArr[0][0];

            $cityidarr = array();

            foreach ($noFreeAreaArr as $k => $v) {

                array_push($cityidarr, $v[1]);
            }

            $nospecify[0]['area']        = $noFreeAreaArr;

            $nospecify[0]['cityid']      = $cityidarr ? join(',', $cityidarr) : '';
        }

        $devspecification['nospecify'] = $nospecify;

        if ($freeArr && is_array($freeArr)) {

            foreach ($freeArr as $k => $v) {

                $firstcityid = 0;
                $cityidarr = array();
                if ($v['area'] != 0) {
                    foreach ($v['area'] as $a => $b) {

                        array_push($cityidarr, $b[1]);
                    }
                }

                $specify[$k]['cityid']               = $cityidarr ? join(',', $cityidarr) : '';
                $specify[$k]['preferentialStandard'] = $v['preferentialStandard'];
                $specify[$k]['preferentialMoney']    = $v['preferentialMoney'];
                $specify[$k]['area']                 = $v['area'];
            }
        }
        $devspecification['specify'] = $specify;

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $devspecification           = $logistype == 0 ? serialize($devspecification) : '';
            $range_delivery_fee_value   = $logistype == 1 && $delivery_fee_mode == 1 ? serialize($range_delivery_fee_value) : '';
            $sid = $ret[0]['id'];

            //保存到主表
            //            $archives = $dsql->SetQuery("INSERT INTO `#@__shop_logistictemplate` (`cityid`, `sid`, `title`, `bearFreight`, `valuation`, `express_start`, `express_postage`, `express_plus`, `express_postageplus`, `preferentialStandard`, `preferentialMoney`) VALUES ('$cityid', '$sid', '$title', '$bearFreight', '$valuation', '$express_start', '$express_postage', '$express_plus', '$express_postageplus', '$preferentialStandard', '$preferentialMoney')");

            $archives = $dsql->SetQuery("INSERT INTO `#@__shop_logistictemplate` (`cityid`, `sid`, `title`,`devspecification`,`note`,`logistype`,`delivery_fee_mode`,`basicprice`,`range_delivery_fee_value`,`express_postage`,`preferentialMoney`,`openFree`,`express_juli`) VALUES ('$cityid', '$sid', '$title','$devspecification','$content','$logistype','$delivery_fee_mode','$basicprice','$range_delivery_fee_value','$express_postage','$preferentialMoney','$openFree','$express_juli')");

            $results  = $dsql->dsqlOper($archives, "update");

            if ($results == "ok") {
                return $langData['siteConfig'][22][107];  //添加成功！
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][22][108]);  //添加失败！
            }
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][51]);  //您的账户暂未开通商品商铺功能！
        }
    }


    /**
     * 修改运费模板
     * @return array
     */
    public function logisticEdit()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        $param  = $this->param;
        $id     = $param['id'];
        $title  = $param['title'];
        $cityid = $param['cityid'];
        if (empty($id)) return array("state" => 200, "info" => $langData['siteConfig'][20][180]);  //提交失败，请重试！
        if (empty($title)) return array("state" => 200, "info" => $langData['shop'][4][68]);  //请输入模板名称！
        // if (empty($cityid)) return array("state" => 200, "info" => $langData['siteConfig'][20][585]);

        $bearFreight              = (int)$param['bearFreight'];
        $valuation                = (int)$param['valuation'];
        $openspecify              = (int)$param['freeArea'];
        $opennospecify            = (int)$param['noFreeArea'];
        $content                  = $param['content'];
        $logisticArea             = $param['logisticArea'] != '' ? json_decode(stripslashes($param['logisticArea']), true) : array();
        $noFreeAreaArr            = $param['noFreeAreaArr'] != '' ? json_decode(stripslashes($param['noFreeAreaArr']), true) : array();
        $freeArr                  = $param['freeArr'] != '' ? json_decode(stripslashes($param['freeArr']), true) : array();
        $logistype                = (int)$param['logistype']; /*模板类型 0-快递,1-商家配送*/
        $delivery_fee_mode        = (int)$param['delivery_fee_mode']; /*起送价/配送模式 0-快递,1-商家配送*/
        $range_delivery_fee_value = $param['range_delivery_fee_value'] != '' ? json_decode(stripslashes($param['range_delivery_fee_value']), true) : array(); /*按距离配送模板规格*/

        $basicprice               = (float)$param['basicprice']; /*起送价*/
        $express_postage          = (float)$param['express_postage']; /*默认运费*/
        $preferentialMoney        = (float)$param['preferentialMoney']; /*满多少包邮*/
        $openFree                 = (int)$param['openFree'];/*开启满多少包邮*/
        $express_juli              = (int)$param['express_juli'];/*配送距离*/

        //        if ($bearFreight == 1) {
        //            $purchase             = 0;
        //            $express_start        = 0;
        //            $express_postage      = 0;
        //            $express_plus         = 0;
        //            $express_postageplus  = 0;
        //            $preferentialStandard = 0;
        //            $preferentialMoney    = 0;
        //        }

        $devspecification = array();
        $devspecification['bearFreight']    = $bearFreight;
        $devspecification['valuation']      = $valuation;
        $devspecification['openspecify']    = $openspecify;
        $devspecification['opennospecify']  = $opennospecify;

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (!verifyModuleAuth(array("module" => "shop"))) {
            return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
        }


        $deliveryarea = $specify = $nospecify = array();

        if ($logisticArea && is_array($logisticArea)) {
            foreach ($logisticArea as $k => $v) {

                $firstcityid = 0;
                $cityidarr = array();
                if ($v['area'] != 0) {
                    foreach ($v['area'] as $a => $b) {

                        array_push($cityidarr, $b[1]);
                    }


                    $firstcityid = $v['area'][0][0];
                }

                $express_start = (int)$v['express_start'];
                $express_plus = (int)$v['express_plus'];

                $deliveryarea[$k]['cityid']              = $cityidarr ? join(',', $cityidarr) : '';
                $deliveryarea[$k]['express_start']       = $express_start ? $express_start : 1;
                $deliveryarea[$k]['express_postage']     = (float)$v['express_postage'];
                $deliveryarea[$k]['express_plus']        = $express_plus ? $express_plus : 1;
                $deliveryarea[$k]['express_postageplus'] = (float)$v['express_postageplus'];
                $deliveryarea[$k]['area']                = $v['area'];
            }
        }
        $devspecification['deliveryarea'] = $deliveryarea;

        if ($noFreeAreaArr && is_array($noFreeAreaArr)) {

            $firstcityid = $noFreeAreaArr[0][0];

            $cityidarr = array();

            foreach ($noFreeAreaArr as $k => $v) {

                array_push($cityidarr, $v[1]);
            }

            $nospecify[0]['area']        = $noFreeAreaArr;

            $nospecify[0]['cityid']      = $cityidarr ? join(',', $cityidarr) : '';
        }
        $devspecification['nospecify'] = $nospecify;

        if ($freeArr && is_array($freeArr)) {

            foreach ($freeArr as $k => $v) {

                $firstcityid = 0;
                $cityidarr = array();
                if ($v['area'] != 0) {
                    foreach ($v['area'] as $a => $b) {

                        array_push($cityidarr, $b[1]);
                    }
                }

                $specify[$k]['cityid']               = $cityidarr ? join(',', $cityidarr) : '';
                $specify[$k]['preferentialStandard'] = $v['preferentialStandard'];
                $specify[$k]['preferentialMoney']    = $v['preferentialMoney'];
                $specify[$k]['area']                 = $v['area'];
            }
        }
        $devspecification['specify'] = $specify;

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $sid = $ret[0]['id'];
            $devspecification           = $logistype == 0 ? serialize($devspecification) : '';
            $range_delivery_fee_value   = $logistype == 1 && $delivery_fee_mode == 1 ? serialize($range_delivery_fee_value) : '';
            //保存到主表
            $archives = $dsql->SetQuery("UPDATE `#@__shop_logistictemplate` SET `cityid` = '$cityid', `title` = '$title',`devspecification` = '$devspecification',`note` = '$content',`logistype` = '$logistype',`delivery_fee_mode` = '$delivery_fee_mode',`basicprice` = '$basicprice',`range_delivery_fee_value` = '$range_delivery_fee_value',`express_postage` = '$express_postage',`preferentialMoney` = '$preferentialMoney',`openFree` = '$openFree',`express_juli` = '$express_juli' WHERE `id` = " . $id);
            $results  = $dsql->dsqlOper($archives, "update");

            if ($results == "ok") {
                return $langData['siteConfig'][20][229];  //修改成功！
            } else {

                return array("state" => 200, "info" => '添加失败');  //添加失败！

            }
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][51]);  //您的账户暂未开通商品商铺功能！
        }
    }

    /**
     * 获取当前系统的五个时间段
     */
    public function systemTime()
    {
        $time    = $this->param['time'];
        $num     = $this->param['num'];
        $num     = !empty($num) ? ($num > 24 ? 24 : $num) : 5;
        $list    = array();
        $nowTime = GetMkTime(time());

        if (!empty($time)) {
            $now = $nowH = $time;
        } else {
            $now = $nowH = date("H");
        }

        for ($i = 0; $i < $num; $i++) {
            if ($nowH >= 9) {
                $zero = '';
            } else {
                $zero = '0';
            }
            $list[$i]['showTime'] = $zero . $nowH . ":00";
            $list[$i]['nowTime']  = (int)$nowH;
            $nowH                 += 1;
            if ($nowH > 24) {
                $nowH = 1;
            }
            $d = date("Y-m-d") . ' ' . $nowH . ":00:00";
            if (strtotime($d) > strtotime(date('Y-m-d H:i:s'))) {
            } else {
                $d = date("Y-m-d", strtotime('+1 day')) . ' ' . $nowH . ":00:00";
            }
            $list[$i]['nextHour'] = GetMkTime($d);
        }
        return array(
            "now"     => $now,
            "nowTime" => $nowTime,
            "list"    => $list
        );
        //print_R($list);exit;
    }

    /**
     * Notes: 获取场次设置时间
     * Ueser: Administrator
     * DateTime: 2021/3/11 15:49
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function getConfigtime()
    {

        global $dsql;
        global $userLogin;
        $param = $this->param;
        $uid = $userLogin->getMemberID();

        if ($param) {
            $huodongtime = $param['huodongtime'];
            $gettype     = (int)$param['gettype']; /**/

            //            if(!$huodongtime) return array("state" => 200, "info" => '格式错误!');  //您的账户暂未开通商品商铺功能！
        }
        $where = '';

        if ($gettype == 1) {
            $timehour = date('H:i', time());

            $timehourarr = explode(":", $timehour);

            $timehourarr['0'] == '00' ? $h = 0 : $h = $timehourarr['0'];
            $timehourarr['1'] == '00' ? $m = 0 : $m = $timehourarr['1'];
            $timehourarr['2'] == '00' ? $s = 0 : $s = $timehourarr['2'];

            $miaoall = $h * 3600 + $m * 60 + $s;


            $where = " AND TIME_TO_SEC(`ktime`) <= '$miaoall' AND TIME_TO_SEC(`etime`) >= '$miaoall' or TIME_TO_SEC(`ktime`) >= '$miaoall'";
        }

        $where1 = '';
        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `state` = 1");

        $results = $dsql->dsqlOper($archives, "results");

        if ($results) {

            foreach ($results as $key => $value) {

                $sidArr[$key] = $value['id'];
            }

            $where1 .= " AND p.`store` in (" . join(",", $sidArr) . ")";
        } else {

            $where1 .= " AND 2 = 3";
        }

        $sql = $dsql->SetQuery("SELECT * FROM `#@__shopsessionsite` WHERE 1=1 " . $where);

        $res = $dsql->dsqlOper($sql, "results");

        $timearr = array();
        $daytime = strtotime(date('Y-m-d'));
        if ($res) {
            foreach ($res as $k => $v) {
                $timearr[$k]['title'] = $v['title'];

                $ktime = strtotime($huodongtime . ' ' . $v['ktime']);
                $etime = strtotime($huodongtime . ' ' . $v['etime']);

                if ($huodongtime) {

                    $ktime = strtotime($huodongtime . ' ' . $v['ktime']);

                    $etime = strtotime($huodongtime . ' ' . $v['etime']);

                    $countsql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_huodongsign` WHERE  `ktime` = '$ktime' AND `etime` = '$etime' AND `huodongtype` = 1 AND `state`!=0");

                    $minenum = $dsql->dsqlOper($countsql, "totalCount");

                    $timearr[$k]['shengyunum'] = $v['number'] - (int)$minenum;
                }
                //统计小于当前时间
                //                $huosql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_huodongsign` WHERE  `ktime` < '$ktime' AND `huodongtype` = 1 AND `state`!=0");
                $timearr[$k]['ktime']    = $v['ktime'];
                $strtime = strtotime(date('Y-m-d', time()) . ' ' . $v['ktime']);
                $timearr[$k]['ktimestr'] = strtotime(date('Y-m-d', time()) . ' ' . $v['ktime']);
                $timearr[$k]['etime']    = $v['etime'];
                $endtime = strtotime(date('Y-m-d', time()) . ' ' . $v['etime']);
                $timearr[$k]['etimestr'] = strtotime(date('Y-m-d', time()) . ' ' . $v['etime']);
                $timearr[$k]['number']   = $v['number'];
                $timearr[$k]['changci']  = $v['id'];
                $timearr[$k]['now']      = time();
                $huosql = $dsql->SetQuery("SELECT p.`typesales`,p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`price`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND p.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` =1  AND h.`ktime` >= '" . $strtime . "' AND h.`etime` <= '$endtime'" . $where1);
                $huopnum = $dsql->dsqlOper($huosql, "totalCount");
                $timearr[$k]['hongdongCount']    = $huopnum;
            }
        }
        array_multisort(array_column($timearr, 'ktime'), SORT_ASC, $timearr);

        return $timearr;
    }

    /**productAddUrl
     * 以图搜图
     */
    public function searchByImage()
    {
        $url = $this->param['url'];
        $fenlei = (int)$this->param['fenlei'];

        //以图搜图-检索
        require_once(HUONIAOINC . "/baidu.aip.func.php");
        $client = new baiduAipImageSearchClient();
        $ret    = $client->productSearchUrl($url);

        if ($ret) {
            if ($ret['error_code'] && $ret['error_msg']) {
                return array("state" => 200, "info" => $ret['error_code'] . "_" . $ret['error_msg']);
            }

            $ids    = array();
            $result = $ret['result'];
            foreach ($result as $key => $value) {
                array_push($ids, (int)$value['brief']);
            }

            if($fenlei){
                require(HUONIAOINC . "/config/shop.inc.php");
                $dataShare = (int)$customDataShare;

                if (!$dataShare) {
                    $cityid = getCityId($cityid);
                    if ($cityid) {
                        $where .= " AND s.`cityid` = " . $cityid;
                    }
                }

                /*临时表*/
                $temSql = $dsql->SetQuery(" drop table if exists temp_tb; CREATE TEMPORARY TABLE temp_tb(pid int not null default 0)");

                $temRes = $dsql->dsqlOper($temSql,"update");

                $sql = '';
                foreach ($ids as $v){
                    $sql.='('.$v.'),';
                }
                $sql = rtrim($sql,",");
                $teminsersql = $dsql->SetQuery("INSERT INTO temp_tb (`pid`) values $sql");
                $teminserRes = $dsql->dsqlOper($teminsersql,"update");

                $Sql = $dsql->SetQuery("SELECT t.`id`,t.`typename` FROM temp_tb LEFT JOIN `#@__shop_product` p ON temp_tb.`pid` = p.`id` LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` LEFT JOIN `#@__shop_type` t ON p.`type` = t.`id` WHERE 1=1 AND s.`state` = 1 $where GROUP BY p.`type`");
                $Res = $dsql->dsqlOper($Sql, "results");

                return $Res;
            }else{
                return $ids;
            }
        }
    }

    /**
     * 打印订单
     * @return array
     */
    public function orderPrint()
    {
        global $cfg_shortname;
        global $dsql;
        global $langData;

        $param = $this->param;
        $id    = $param['id'];

        $date = GetMkTime(date("Y-m-d"));

        $sql = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`people`, o.`address`, o.`contact`, o.`note`, o.`paytype`, o.`orderdate`, o.`branchid`, s.`title` shoptitle,s.`id` sid, b.`title` branchtitle FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = o.`branchid` WHERE o.`id` = '$id'");
        // $sql = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`people`, o.`address`, o.`contact`, o.`note`, o.`paytype`, o.`orderdate`, o.`branchid`, s.`bind_print`, s.`print_config`, s.`title` shoptitle, b.`title` branchtitle, b.`bind_print` branchbind_print, b.`print_config` branchprint_config FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = o.`branchid` WHERE o.`id` = '$id'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            include(HUONIAOINC . '/config/shop.inc.php');
            //            $customPrintPlat = (int)$customPrintPlat; //打印机品牌  0易联云  1飞鹅

            //            //平台账号信息
            //            $partner = $customPartnerId;
            //            $apikey = $customPrintKey;
            //            $user = $customPrint_user;
            //            $ukey = $customPrint_ukey;
            //            $ucount = (int)$customPrint_ucount;
            //            $ucount = $ucount ? $ucount : 1;  //打印份数

            $data      = $ret[0];
            $id        = $data['id'];
            $note      = $data['note'];
            $ordernum  = $data['ordernum'];
            $paytype   = $data['paytype'];
            $orderdate = date("Y-m-d H:i:s", $data['orderdate']);
            $branchid  = $data['branchid'];
            $shoptitle = $data['shoptitle'];
            // $bind_print         = $data['bind_print'];
            // $print_config       = $data['print_config'];
            $branchtitle        = $data['branchtitle'];
            // $branchbind_print   = $data['branchbind_print'];
            // $branchprint_config = $data['branchprint_config'];
            $people  = $data['people'];
            $address = $data['address'];
            $contact = $data['contact'];

            $sid         = $data['sid'];
            $totalAmount = 0;

            //打印机查询(2020/4/28)
            //            $printsql = $dsql->SetQuery("SELECT * FROM `#@__shop_shopprint` WHERE `type` = 0 AND `sid` = " . $sid);
            $printsql = $dsql->SetQuery("SELECT * FROM `#@__business_shop_print` WHERE  `sid` = " . $sid . " AND `service` = 'shop'");
            $printret = $dsql->dsqlOper($printsql, "results");

            if (!empty($branchid)) {
                $storeName = $branchtitle;
                //                $bprintsql = $dsql->SetQuery("SELECT * FROM `#@__shop_shopprint` WHERE `type` = 1 AND `sid` = " . $branchid);
                $bprintsql = $dsql->SetQuery("SELECT * FROM `#@__business_shop_print` WHERE  `sid` = " . $branchid . " AND `service` = 'shop'");
                $bprintret = $dsql->dsqlOper($bprintsql, "results");

                if (empty($bprintret)) {
                    $print_config = $printret;
                } else {
                    $print_config = $bprintret;
                }
            } else {
                $storeName    = $shoptitle;
                $print_config = $printret;
            }
            if (!empty($print_config)) {
                foreach ($print_config as $k => $v) {
                    $sqlprint = $dsql->SetQuery("SELECT * FROM `#@__business_print` p  LEFT JOIN `#@__business_print_config` c ON p.`type` = c.`print_code` WHERE p.`id` = " . $v['printid'] . " ");
                    $printresult = $dsql->dsqlOper($sqlprint, "results");
                    //            $customPrintPlat = $printresult[0]['type'];
                    $customPrintPlat = $printresult[0]['print_code'] == 'yilianyun' ? 1 : 2;  //目前只有两种平台，易联云为1，其他为2
                    $customPrintType = $printresult[0]['printmodule'];
                    $printConfig = unserialize($printresult[0]['print_config']);

                    $printConfigArr = array();
                    //验证配置
                    foreach ($printConfig as $key => $value) {
                        if (!empty($value['value'])) {
                            $printConfigArr[$value['name']] = $value['value'];
                        }
                    }
                    $partner = $printConfigArr['MembrID'];
                    $apikey = $printConfigArr['signkey'];
                    $user = $printConfigArr['user'];
                    $ukey = $printConfigArr['ukey'];;
                    $ucount = $printConfigArr['number'] ? $printConfigArr['number'] : 1;
                    $ucount = $ucount ? $ucount : 1;  //打印份数
                    $mcode = $printresult[0]['mcode'];
                    $msign = $printresult[0]['msign'];
                    //易联云
                    if ($customPrintPlat == 1) {
                        require_once(HUONIAOINC . '/class/waimaiPrint.class.php');
                        $printClass = new waimaiPrint();

                        //飞鹅
                    } elseif ($customPrintPlat == 2) {
                        require_once(HUONIAOINC . '/class/HttpClient.class.php');
                        $printClass = new HttpClient('api.feieyun.cn', 80);
                    }
                    //易联云
                    if ($customPrintPlat == 1) {
                        $productTitle = '<table><tr><td>商品名</td><td>数量</td><td>小计</td></tr></table>';

                        //飞鹅
                    } elseif ($customPrintPlat == 2) {
                        $productTitle = '商品名              数量 小计';
                    }
                    $productList  = array();
                    $sql          = $dsql->SetQuery("SELECT p.`barcode`, p.`title`, op.`specation`, op.`price`, op.`count`, op.`logistic`,op.`specation` FROM `#@__shop_order_product` op LEFT JOIN `#@__shop_product` p ON p.`id` = op.`proid` WHERE op.`orderid` = " . $id);
                    $ret          = $dsql->dsqlOper($sql, "results");
                    if ($ret) {

                        $feieList = array();
                        foreach ($ret as $key => $val) {
                            $price = sprintf("%.2f", $val['price'] * $val['count']);
                            $val['specation'] = (str_replace('$$$', ',', $val['specation']));

                            //易联云
                            if ($customPrintPlat == 1) {
                                array_push($productList, ($val['barcode'] ? $val['barcode'] . "\r" : '') . $val['title'] . ($val['specation'] ? "(" . $val['specation'] . ")" : '') . "\r                 ×<FB>" . $val['count'] . "</FB>     " . $price . "\r................................");

                                //飞鹅
                            } elseif ($customPrintPlat == 2) {

                                array_push($feieList, array(
                                    'title' => $val['title'],
                                    'ntitle' => $val['specation'],
                                    'price' => $price,
                                    'count' => $val['count']
                                ));
                            }
                            //                            $totalAmount += $val['price'] * $val['count'];
                            $totalAmount += $val['price'] * $val['count'];
                        }

                        if ($feieList) {
                            array_push($productList, printFeieFoodList($feieList, 20, 3, 6));
                        }
                    }
                    $productList = join("\r", $productList);
                    //备注
                    //易联云
                    if ($customPrintPlat == 1) {
                        $noteText = $note ? "<FH2><FW>备注：$note</FW></FH2>" : "";

                        //飞鹅
                    } elseif ($customPrintPlat == 2) {
                        $noteText = $note ? "<L>备注：$note</L>" : "";
                    }

                    //支付方式
                    $paytypeName = "";
                    $sql         = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '$paytype'");
                    $ret         = $dsql->dsqlOper($sql, "results");
                    if (!empty($ret)) {
                        $paytypeName = $ret[0]['pay_name'];
                    } else {
                        $paytypeName = empty($paytype) ? "积分或余额" : ($paytype == 'delivery' ? '货到付款' : ($paytype == 'money' ? '余额' : ($paytype == 'point' ? '积分' : $paytype)));
                    }

                    //易联云
                    if ($customPrintPlat == 1) {
                        $content = "<FB><FH2><center>" . $storeName . "</center></FH2></FB>
********************************
单号：$ordernum
时间：$orderdate
姓名：$people
电话：$contact
地址：$address
********************************
$productTitle
$productList

<FS>合计：" . sprintf("%.2f", $totalAmount) . "元</FS>
支付方式：$paytypeName
********************************
$noteText



";

                        //飞鹅
                    } elseif ($customPrintPlat == 2) {
                        $content = "<BOLD><L><C>" . $storeName . "</C></L></BOLD>
********************************
单号：$ordernum
时间：$orderdate
姓名：$people
电话：$contact
地址：$address
********************************
$productTitle
$productList<BR>
<B>合计：" . sprintf("%.2f", $totalAmount) . "元</B>
支付方式：$paytypeName
********************************<BR>
$noteText

<BR>

";
                    }

                    if ((($customPrintPlat == 1 && $partner && $apikey) || ($customPrintPlat == 2 && $user && $ukey)) && $mcode && $msign && $content) {

                        //易联云
                        if ($customPrintPlat == 1) {
                            $report = $printClass->action_print($partner, $mcode, $content, $apikey, $msign);
                            $report = json_decode($report, true);
                            if ($report['state'] == 1) {
                                $print_dataid = $report['id'];
                                $sql          = $dsql->SetQuery("UPDATE `#@__shop_order` SET `print_dataid` = '$print_dataid' WHERE `id` = $id");
                                $dsql->dsqlOper($sql, "update");

                                //初始化日志
                                require_once HUONIAOROOT . "/api/payment/log.php";
                                $_printReport = new CLogFileHandler(HUONIAOROOT . '/log/yilianyun_printReport/' . date('Y-m-d') . '.log', true);
                                $_printReport->DEBUG("打印成功:" . $sql . "\r\n");
                            }

                            //飞鹅
                        } elseif ($customPrintPlat == 2) {
                            //换行符
                            $content = str_replace('\r', '<BR>', $content);

                            $time = time();         //请求时间
                            $msgInfo = array(
                                'user' => $user,
                                'stime' => $time,
                                'sig' => sha1($user . $ukey . $time),
                                'backurl' => $cfg_secureAccess . $cfg_basehost . '/api/printReport.php?type=1',
                                'apiname' => 'Open_printMsg',
                                'sn' => $mcode,
                                'content' => $content,
                                'times' => $ucount
                            );
                            if (!$printClass->post('/Api/Open/', $msgInfo)) {
                                // echo 'error';
                            } else {

                                //服务器返回的JSON字符串，建议要当做日志记录起来
                                $report = json_decode($printClass->getContent(), true);

                                //打印成功后更新订单打印接口id
                                if ($report['ret'] == 0) {
                                    $time = GetMkTime(time());
                                    $print_dataid = $report['data'];
                                    $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `print_dataid` = '$print_dataid' WHERE `id` = $id");
                                    $dsql->dsqlOper($sql, "update");

                                    //初始化日志
                                    require_once HUONIAOROOT . "/api/payment/log.php";
                                    $_printReport = new CLogFileHandler(HUONIAOROOT . '/log/feie_printReport/' . date('Y-m-d') . '.log', true);
                                    $_printReport->DEBUG("打印成功:" . $sql . "\r\n");
                                }
                            }
                        }
                    }
                }
            }

            return "打印成功";
        } else {
            return array("state" => 200, "info" => '订单查询失败，请确认后重试！');
        }
    }

    /**
     * 配置商铺
     * @return array
     */
    public function storeBranchConfig()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;


        require(HUONIAOINC . "/config/shop.inc.php");
        $state = (int)$customshopbranchCheck;

        $userid     = $userLogin->getMemberID();
        $param      = $this->param;
        $id         = (int)$param['id'];
        $oper       = $param['oper'];
        $type       = $param['type'];
        $cityid     = (int)$param['cityid'];
        $industry   = (int)$param['industry'];
        $addrid     = (int)$param['addrid'];
        $title      = filterSensitiveWords(addslashes($param['title']));
        $address    = filterSensitiveWords(addslashes($param['address']));
        $project    = filterSensitiveWords(addslashes($param['project']));
        $logo       = $param['logo'];
        $people     = filterSensitiveWords(addslashes($param['people']));
        $tel        = filterSensitiveWords(addslashes($param['telphone']));
        $qq         = filterSensitiveWords(addslashes($param['qq']));
        $wechatcode = filterSensitiveWords(addslashes($param['wechatcode']));
        $lnglat     = $param['lnglat'];
        $account     = $param['account'];    //分店管理账号
        $branchid   = (int)$param['branchid'];
        $pubdate    = GetMkTime(time());

        $lnglat = explode(",", $lnglat);
        $lng    = $lnglat[0];
        $lat    = $lnglat[1];

        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        if (!$type) {
            //验证会员类型
            $userDetail = $userLogin->getMemberInfo();
            if ($userDetail['userType'] != 2) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][127]);  //账号验证错误，操作失败！
            }

            if (!verifyModuleAuth(array("module" => "shop"))) {
                return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！
            }

            $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
            $userResult = $dsql->dsqlOper($userSql, "results");
            if (empty($userResult[0]['id'])) {
                return array("state" => 200, "info" => $langData['shop'][4][73]);  //请先入驻商铺
            }

            $branchid = $userResult[0]['id'];
        }

        if ($oper == 'add' || $oper == 'update') {
            if (empty($industry)) {
                return array("state" => 200, "info" => $langData['shop'][4][41]);  //请选择所属行业
            }

            if (empty($addrid)) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][68]);  //请选择所在区域
            }

            if (empty($title)) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][128]);  //请输入店铺名称
            }

            if (empty($address)) {
                return array("state" => 200, "info" => $langData['shop'][4][44]);  //请输入公司地址
            }

            if (empty($logo)) {
                return array("state" => 200, "info" => $langData['shop'][4][45]);  //请上传店铺LOGO
            }

            if (empty($people)) {
                return array("state" => 200, "info" => $langData['shop'][4][46]);  //请输入联系人
            }

            if (empty($tel)) {
                return array("state" => 200, "info" => $langData['shop'][4][47]);  //请输入客服电话
            }

            //            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `phone` = " . $tel);
            //            $ret = $dsql->dsqlOper($sql, "results");
            //            if (empty($ret[0]['id'])) {
            //                return array("state" => 200, "info" => $langData['shop'][5][86]);  //无该会员！
            //            }
            //
            //            $userid = $ret[0]['id'];
        }
        if ($account) {
            if ($id) {
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `phone` = '$account'");
                $ret = $dsql->dsqlOper($sql, "results");
                if (!empty($ret[0]['id'])) {
                    $branchuserid = $ret[0]['id'];

                    //查询会员是否开通过商城店铺，如果已经开通过，就不可以关联分店
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = $branchuserid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if($ret){
                        return array("state" => 200, "info" => '该会员已开通了商城店铺，不可以再关联其他店铺的分站!');
                    }

                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = '$branchuserid'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if (empty($ret)) {
                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `phone` = '$account'");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if (!empty($ret[0]['id'])) {
                            $branchuserid = $ret[0]['id'];
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = '$branchuserid'");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if (!empty($ret)) {
                                return array("state" => 200, "info" => '该会员已开通分店账号，一个会员账号只可以管理一家分店!');
                            } else {
                            }
                        } else {
                            return array("state" => 200, "info" => $langData['shop'][5][86]);  //无该会员！
                        }
                    }
                } else {
                    return array("state" => 200, "info" => $langData['shop'][5][86]);  //无该会员！
                }
            } else {
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `phone` = '$account'");
                $ret = $dsql->dsqlOper($sql, "results");
                if (!empty($ret[0]['id'])) {
                    $branchuserid = $ret[0]['id'];

                    //查询会员是否开通过商城店铺，如果已经开通过，就不可以关联分店
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = $branchuserid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if($ret){
                        return array("state" => 200, "info" => '该会员已开通了商城店铺，不可以再关联其他店铺的分站!');
                    }
                    
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = '$branchuserid'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if (!empty($ret)) {
                        return array("state" => 200, "info" => '该会员已开通分店账号，一个会员账号只可以管理一家分店!');
                    } else {
                    }
                } else {
                    return array("state" => 200, "info" => $langData['shop'][5][86]);  //无该会员！
                }
            }
        }
        if ($oper == 'add' && !$id) {

            //保存到主表
            $archives = $dsql->SetQuery("INSERT INTO `#@__shop_branch_store` (`cityid`, `userid`, `title`, `addrid`, `address`, `industry`, `project`, `logo`, `people`, `tel`, `qq`, `click`, `weight`, `state`, `certi`, `rec`, `pubdate`, `wechatcode`, `branchid`, `lng`, `lat`) VALUES ('$cityid', '$branchuserid', '$title', '$addrid', '$address', '$industry', '$project', '$logo', '$people', '$tel', '$qq', '1', '1', '$state', '0', '0', '$pubdate', '$wechatcode', '$branchid', '$lng', '$lat')");
            $aid      = $dsql->dsqlOper($archives, "lastid");

            if (is_numeric($aid)) {
                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid   = $siteCityInfo['cityid'];
                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
                $param    = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户：" . $userDetail['nickname'] . "\r\n新增商铺分店：" . $title,
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("shop", "branchstore", $param);

                return $aid;  //配置成功，您的商铺正在审核中，请耐心等待！
            } else {
                return array("state" => 200, "info" => $langData['shop'][4][50]);  //配置失败，请查检您输入的信息是否符合要求！
            }

            //更新商铺信息
        } elseif ($oper == 'update' && $id) {

            //保存到主表
            $archives = $dsql->SetQuery("UPDATE `#@__shop_branch_store` SET `cityid` = '$cityid', `userid` = '$branchuserid', `title` = '$title', `addrid` = '$addrid', `address` = '$address', `industry` = '$industry', `project` = '$project', `logo` = '$logo', `people` = '$people', `tel` = '$tel', `qq` = '$qq', `state` = '$state', `wechatcode` = '$wechatcode', `branchid` = '$branchid', `lng` = '$lng', `lat` = '$lat' WHERE `id` = " . $id);
            $results  = $dsql->dsqlOper($archives, "update");
            if ($results == "ok") {
                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid   = $siteCityInfo['cityid'];
                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名
                $param    = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n用户：" . $userDetail['nickname'] . "\r\n更新了商铺分店信息ID：" . $id,
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("shop", "branchstore", $param);

                return $langData['siteConfig'][6][39];  //保存成功
            } else {
                return array("state" => 200, "info" => $langData['shop'][4][50]);  //配置失败，请查检您输入的信息是否符合要求！
            }
        } elseif ($oper == 'del' && $id) {
            $archives = $dsql->SetQuery("SELECT `id`, `logo` FROM `#@__shop_branch_store` WHERE `branchid` = '$branchid' AND `id` = " . $id);
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {

                delPicFile($results[0]['logo'], "delLogo", "shop");

                $archives = $dsql->SetQuery("DELETE FROM `#@__shop_branch_store` WHERE `id` = " . $id);
                $dsql->dsqlOper($archives, "update");

                return array("state" => 100, "info" => $langData['travel'][12][36]); //删除成功！
            } else {
                return array("state" => 101, "info" => $langData['travel'][12][38]); //信息不存在，或已经删除！
            }
        }
    }

    /**
     * 店铺分店列表
     * @return array
     */
    public function storeBranch()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        $pageinfo = $list = array();
        $industry = $addrid = $rec = $certi = $orderby = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $industry = $this->param['industry'];
                $branchid = $this->param['branchid'];
                $addrid   = $this->param['addrid'];
                $rec      = $this->param['rec'];
                $certi    = $this->param['certi'];
                $orderby  = $this->param['orderby'];
                $title    = $this->param['title'];
                $u        = $this->param['u'];
                $lng      = $this->param['lng'];
                $lat      = $this->param['lat'];
                $state    = $this->param['state'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid      = $userLogin->getMemberID();
        $userinfo = $userLogin->getMemberInfo();


        if ($u != 1) {
            $where = " AND `state` = 1";
        }

        //数据共享
        //        require(HUONIAOINC . "/config/shop.inc.php");
        //        $dataShare = (int)$customDataShare;
        //
        //        if (!$dataShare && !$u) {
        //            $cityid = getCityId($this->param['cityid']);
        //            if ($cityid) {
        //                $where .= " AND `cityid` = $cityid";
        //            }
        //        }

        if (!empty($industry)) {
            $where .= " AND `industry` = " . $industry;
        }

        if (!empty($branchid)) {
            $where .= " AND `branchid` = " . $branchid;
        }

        //全国情况，不进行区域筛选
        global $siteCityInfo;
        $siteCityInfoName = $siteCityInfo['name'];

        if (!empty($addrid) && $siteCityInfoName != '全国') {
            $areaArr = $dsql->getTypeList($addrid, "site_area");
            if ($areaArr) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($areaArr);
                $lower    = $addrid . "," . join(',', $lower);
            } else {
                $lower = $addrid;
            }
            $where .= " AND `addrid` in ($lower)";
        }

        if (!empty($rec)) {
            $where .= " AND `rec` = 1";
        }

        if (!empty($certi)) {
            $where .= " AND `certi` = 1";
        }

        if (!empty($title)) {
            //搜索记录
            siteSearchLog("shop", $title);
            $where .= " AND `title` like '%" . $title . "%'";
        }

        if ($u) {
            if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop"))) {
                return array("state" => 200, "info" => $langData['homemaking'][8][3]); //商家权限验证失败
            }

            $whe = '';

            //数据共享
            require(HUONIAOINC . "/config/shop.inc.php");
            $dataShare = (int)$customDataShare;

            //            if (!$dataShare) {
            //                $cityid = getCityId($this->param['cityid']);
            //                $whe    = " AND `cityid` = " . $cityid;
            //            }

            $sql      = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = '$uid'" . $whe);
            $storeRes = $dsql->dsqlOper($sql, "results");
            if ($storeRes) {
                $where .= " AND `branchid` = " . $storeRes[0]['id'];
            } else {
                $where .= " AND 1 = 2";
            }

            if ($state != '') {
                $where .= " AND `state` = " . $state;
            }
        }

        //查询距离
        if ((!empty($lng)) && (!empty($lat))) {
            $select = "ROUND(
		        6378.138 * 2 * ASIN(
		            SQRT(POW(SIN(($lat * PI() / 180 - `lat` * PI() / 180) / 2), 2) + COS($lat * PI() / 180) * COS(`lat` * PI() / 180) * POW(SIN(($lng * PI() / 180 - `lng` * PI() / 180) / 2), 2))
		        ) * 1000
		    ) AS distance,";
            $select = "(2 * 6378.137* ASIN(SQRT(POW(SIN(3.1415926535898*(" . $lat . "-`lat`)/360),2)+COS(3.1415926535898*" . $lat . "/180)* COS(`lat` * 3.1415926535898/180)*POW(SIN(3.1415926535898*(" . $lng . "-`lng`)/360),2))))*1000 AS distance,";
        } else {
            $select = "";
        }

        $order = " ORDER BY `pubdate` DESC, `weight` DESC, `id` DESC";
        //浏览量
        if ($orderby == "1") {
            $order = " ORDER BY `click` DESC, `rec` DESC, `weight` DESC, `id` DESC";
        } elseif ($orderby == "3" && $lng && $lat) {
            $order = " ORDER BY distance ASC";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id`, `logo`, `title`, `addrid`, `address`, `industry`, `project`, `logo`, `userid`, `tel`, `qq`, `wechatcode`, `click`, `certi`, `rec`, `pubdate`, `people`, `lng`, `lat`, " . $select . " `state` FROM `#@__shop_branch_store` where 1=1 " . $where);

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        //会员列表需要统计信息状态
        if ($u == 1 && $uid > -1) {
            //待审核
            $totalGray = $dsql->dsqlOper($archives . " AND `state` = 0", "totalCount");
            //已审核
            $totalAudit = $dsql->dsqlOper($archives . " AND `state` = 1", "totalCount");
            //拒绝审核
            $totalRefuse = $dsql->dsqlOper($archives . " AND `state` = 2", "totalCount");

            $pageinfo['gray']   = $totalGray;
            $pageinfo['audit']  = $totalAudit;
            $pageinfo['refuse'] = $totalRefuse;
        }

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $order . $where, "results");
        $list    = array();

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']         = $val['id'];
                $list[$key]['title']      = $val['title'];
                $list[$key]['wechatcode'] = $val['wechatcode'];
                $list[$key]["logo"]       = getFilePath($val["logo"]);
                $list[$key]['people']     = $val['people'];
                $list[$key]['state']      = $val['state'];

                $list[$key]['distance'] = $val['distance'] > 1000 ? sprintf("%.1f", $val['distance'] / 1000) . $langData['siteConfig'][13][23] : sprintf("%.1f", $val['distance']) . $langData['siteConfig'][13][22];  //距离   //千米  //米

                $param             = array(
                    "service"  => "shop",
                    "template" => "shopbranch-detail",
                    "id"       => $val['id']
                );
                $list[$key]['url'] = getUrlPath($param);

                global $data;
                $data                  = "";
                $addrArr               = getParentArr("site_area", $val['addrid']);
                $addrArr               = array_reverse(parent_foreach($addrArr, "typename"));
                $list[$key]['addr']    = $addrArr;
                $list[$key]['address'] = $val['address'];

                $archives = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $val['industry']);
                $typename = $dsql->dsqlOper($archives, "results");
                if ($typename) {
                    $list[$key]['industry'] = $typename[0]['typename'];
                } else {
                    $list[$key]['industry'] = "";
                }

                $list[$key]['project'] = $val['project'];
                $list[$key]['logo']    = getFilePath($val['logo']);

                //会员信息
                $list[$key]['userinfo'] = getMemberDetail($val['userid']);

                $list[$key]['tel']     = $val['tel'];
                $list[$key]['qq']      = $val['qq'];
                $list[$key]['click']   = $val['click'];
                $list[$key]['certi']   = $val['certi'];
                $list[$key]['rec']     = $val['rec'];
                $list[$key]['pubdate'] = $val['pubdate'];
                $list[$key]['lng']     = $val['lng'];
                $list[$key]['lat']     = $val['lat'];
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 店铺分店详细信息
     * @return array
     */
    public function storeBranchDetail()
    {
        global $dsql;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $langData;
        $listingDetail = array();
        $id            = $this->param;
        $uid           = $userLogin->getMemberID();
        $id            = is_numeric($id) ? $id : $id['id'];
        if (!is_numeric($id) && $uid == -1) {
            return array("state" => 200, "info" => '格式错误！');
        }

        // $where = " AND `state` = 1";

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_branch_store` WHERE `id` = " . $id . $where);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {

            if ($results[0]['lng'] && $results[0]['lat']) {
                $results[0]['lnglat'] = $results[0]['lng'] . ',' . $results[0]['lat'];
            }

            global $data;
            $data               = "";
            $addrName           = getParentArr("site_area", $results[0]['addrid']);
            $addrName           = array_reverse(parent_foreach($addrName, "typename"));
            $results[0]['addr'] = $addrName;
            $meminfo            = $dsql->SetQuery("SELECT `phone` FROM `#@__member` WHERE `id` = " . $results[0]['userid']);
            $meminfores               = $dsql->dsqlOper($meminfo, "results");
            $results[0]['account']    = $meminfores[0]['phone'];
            $industry                 = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $results[0]['industry']);
            $industry                 = $dsql->dsqlOper($industry, "results");
            $results[0]['industryid'] = $results[0]['industry'];
            $results[0]['industry']   = $industry[0]['typename'];

            $results[0]["logoSource"] = $results[0]["logo"];
            $results[0]["logo"]       = getFilePath($results[0]["logo"]);

            //验证是否已经收藏
            $params                = array(
                "module" => "shop",
                "temp"   => "storebranch-detail",
                "type"   => "add",
                "id"     => $id,
                "check"  => 1
            );
            $collect               = checkIsCollect($params);
            $results[0]['collect'] = $collect == "has" ? 1 : 0;

            //会员信息
            $userinfo                   = getMemberDetail($results[0]['userid']);
            $results[0]['certifyState'] = $userinfo['certifyState'];

            return $results[0];
        }
    }

    /**
     * 确认订单
     */
    public function orderConfirm()
    {
        global $dsql;
        global $userLogin;
        $id = $this->param['id'];

        if (empty($id)) return array("state" => 200, "info" => '数据不完整，请检查！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }

        //验证订单
        $archives = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` m ON o.`branchid` = m.`id` WHERE o.`id` = '$id' AND (s.`userid` = '$uid' OR　m.`userid` = '$uid') AND o.`orderstate` = 1");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {

            //更新订单状态
            $now = GetMkTime(time());
            $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 6, `exp_date` = '$now' WHERE `id` = " . $id);
            $dsql->dsqlOper($sql, "update");
            return "操作成功！";
        } else {
            return array("state" => 200, "info" => '操作失败，请核实订单状态后再操作！');
        }
    }

    /**
     * 变更分店
     */
    public function changeBranch()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $id       = (int)$this->param['id'];  //订单ID
        $branchid = (int)$this->param['branchid'];  //变更到的分店ID

        if (empty($id)) return array("state" => 200, "info" => '数据不完整，请检查！');

        //获取用户ID
        $uid = $userLogin->getMemberID();

        //判断当前登录账号是否为分店账号，分店账号无取消和变更权限
        $userSql    = $dsql->SetQuery("SELECT `id` FROM `#@__shop_branch_store` WHERE `userid` = " . $uid);
        $userResult = $dsql->dsqlOper($userSql, "results");
        if ($userResult) {
            if (empty($id)) return array("state" => 200, "info" => '您无权操作此功能，请联系总店处理！');
        }

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '3'))) return array("state" => 200, "info" => $langData['shop'][4][1]);  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }
        if ($uid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }

        //查询会员店铺
        $sid = 0;
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `state` = 1 AND `userid` = " . $uid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $sid = $ret[0]['id'];
        }
        if (!is_numeric($sid) || !$sid) {
            return array("state" => 200, "info" => '店铺状态异常，请确认后重试！');
        }

        //查询订单信息
        $sql = $dsql->SetQuery("SELECT `orderstate`, `branchid` FROM `#@__shop_order` WHERE `id` = $id AND `store` = $sid");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $orderstate = $ret[0]['orderstate'];
            $branchid_  = $ret[0]['branchid'];

            if ($orderstate != 1) {
                return array("state" => 200, "info" => '订单当前状态不可变更分店！');
            }
            if ($branchid == $branchid_) {
                return array("state" => 200, "info" => $langData['shop'][5][111]);  //与当前分店一致，无需变更！
            }
        } else {
            return array("state" => 200, "info" => '订单错误，请确认后重试！');
        }

        //更新订单
        $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `branchid` = $branchid WHERE `id` = $id");
        $ret = $dsql->dsqlOper($sql, "update");
        if ($ret == 'ok') {

            //重新打印订单
            $this->param['id'] = $id;
            $this->orderPrint();

            return $langData['shop'][5][112];  //变更成功！

        } else {
            return array("state" => 200, "info" => $ret);
        }
    }

    /**
     * Notes:  购买列表
     * Ueser: Administrator
     * DateTime: 2021/11/11 15:47
     * Param1:
     * Param2:
     * Param3:
     * Return:
     *
     * @return array
     */
    public function buyList()
    {
        global $dsql;
        $param   = $this->param;
        $pid     = (int)$param['id'];
        $huodong = (int)$param['huodong'];
        //        if (!is_numeric($pid) && $pid == '') return array("state" => 200, "info" => '数据不完整，请检查！');

        $where = '';
        if ($pid) {
            $where .= " AND op.`proid` = '$pid'";
        }

        if ($huodong) {
            if ($huodong == 2) {
                $where .= " AND o.`huodongtype` = 2";
            }
        }

        $sql = $dsql->SetQuery("SELECT m.`photo`,m.`nickname`,p.`title` FROM `#@__shop_order_product` op LEFT JOIN `#@__shop_order` o  ON op.`orderid`  = o.`id` LEFT JOIN `#@__member` m ON o.`userid` = m.`id` LEFT JOIN `#@__shop_product` p ON op.`proid` = p.`id` WHERE 1=1  $where AND o.`orderstate` = '3' ORDER BY o.`orderdate` DESC LIMIT 0,20");


        $res = $dsql->dsqlOper($sql, "results");

        $list = array();
        if ($res) {
            foreach ($res as $k => $v) {
                $list[$k]['nickname'] = $v['nickname'];
                $list[$k]['photo']    = $v['photo'];
                $list[$k]['title']    = $v['title'];
                $list[$k]['photourl'] = getFilePath($v['photo']);
            }
            return $list;
        } else {
            return array("state" => 200, "info" => '暂无数据');
        }
    }

    /**
     * Notes: 砍成功
     * Ueser: Administrator
     * DateTime: 2021/11/11 15:48
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function kanSuccessList()
    {
        global $dsql;
        $now = time();
        $sql = $dsql->SetQuery("select b.`id`, b.`userid`,b.`enddate`,concat(left(m.`nickname`,2),'****') as 'nickname' from `#@__shop_bargaining` b LEFT JOIN `#@__member` m ON m.`id`=b.`userid` where b.`oid`!=0 and b.`state`=1 order by b.`enddate` desc limit 20");
        $arrList = $dsql->getArrList($sql);
        if (!is_array($arrList) || empty($arrList)) {
            return array("state" => 200, "info" => "暂无数据");
        }
        foreach ($arrList as &$item) {
            $item['enddate'] = FloorTime(($now - $item['enddate']), 3);
        }
        unset($item);
        return $arrList;
    }

    /**
     * Notes: 拼成功
     * Ueser: Administrator
     * DateTime: 2021/11/11 15:48
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function pinSuccessList()
    {
        global $dsql;
        $now = time();
        $sql = $dsql->SetQuery("select b.`id`, b.`userid`,b.`enddate`,concat(left(m.`nickname`,2),'****') as 'nickname' from `#@__shop_tuanpin` b LEFT JOIN `#@__member` m ON m.`id`=b.`userid` where b.`oid`!=0 and b.`state`=3 order by b.`enddate` desc limit 20");
        $arrList = $dsql->getArrList($sql);
        if (!is_array($arrList) || empty($arrList)) {
            return array("state" => 200, "info" => "暂无数据");
        }
        foreach ($arrList as &$item) {
            $item['enddate'] = FloorTime(($now - $item['enddate']), 3);
        }
        unset($item);
        return $arrList;
    }

    public function test()
    {
        global $dsql;
        //        $sql = $dsql->SetQuery("SELECT `kj_num`,`shengyu_kj_num`,`gnowmoney`,`gfinalmoney` FROM `#@__shop_bargaining` WHERE  `id` = 1");
        //        $res = $dsql->dsqlOper($sql,"results");
        //        if($res){
        //            $kj_num 		= $res[0]['kj_num'];
        //            $gnowmoney      = $res[0]['gnowmoney'];
        //            $gfinalmoney    = $res[0]['gfinalmoney'];
        //            $shengyu_kj_num = $res[0]['shengyu_kj_num'];
        //        }

        $barruletype = 0;

        $barrule = array(
            '0' =>
            array(
                'min'   => 1,
                'max'   => 1,
                'money' => 299
            ),
            '1' => array(
                'min'   => 2,
                'max'   => 10,
                'money' => 269
            ),
            '2' => array(
                'min'   => 11,
                'max'   => 20,
                'money' => 200
            ),
            '3' => array(
                'min'   => 21,
                'max'   => 30,
                'money' => 180
            )
        );

        $allmoney = 0;
        for ($i = 0; $i < 50; $i++) {

            $sql = $dsql->SetQuery("SELECT `kj_num`,`shengyu_kj_num`,`gnowmoney`,`gfinalmoney` FROM `#@__shop_bargaining` WHERE  `id` = 1");
            $res = $dsql->dsqlOper($sql, "results");
            if ($res) {
                $kj_num         = $res[0]['kj_num'];
                $gnowmoney      = $res[0]['gnowmoney'];
                $gfinalmoney    = $res[0]['gfinalmoney'];
                $shengyu_kj_num = $res[0]['shengyu_kj_num'];
            }


            $kj_shengyu_money = (float)$gnowmoney - (float)$gfinalmoney; /*砍价剩余金额*/

            $kj_yikan_num = (int)$kj_num - (int)$shengyu_kj_num; /*已砍多少刀*/


            if ((int)$barruletype == 1) {

                array_multisort($barrule, SORT_ASC);

                $rulemaxnum = array_column($barrule, 'max');


                $rulemaxmoney = array_column($barrule, 'money');

                array_multisort($rulemaxnum, SORT_DESC);

                array_multisort($rulemaxmoney, SORT_ASC);
                $min = 0.01;     //每个人最少能收到10元
                //                var_dump($rulemaxnum[0],$kj_yikan_num  +1,$gnowmoney,$rulemaxmoney);die;
                //                echo "<br>";
                if ($rulemaxnum[0] >= ($kj_yikan_num + 1) && $gnowmoney > $rulemaxmoney[0]) {
                    /*规则配置内满足条件的*/
                    foreach ($barrule as $k => $v) {
                        if (($kj_yikan_num + 1) >= $v['min'] && ($kj_yikan_num + 1) <= $v['max']) {

                            $qujiancount = abs((int)$v['max'] - (int)$v['min']) + 1;

                            $qujianmoney = $gnowmoney > $v['money'] ? abs((float)$gnowmoney - (float)$v['money']) : 0;
                            if ($qujianmoney > 0) {
                                if ($qujiancount > 1 && $shengyu_kj_num > 1) {
                                    if ($kj_yikan_num + 1 == $v['max']) {
                                        $total = $qujianmoney;
                                    } else {
                                        $safe_total = ($qujianmoney - $qujiancount * $min) / $qujiancount; //随机安全上限
                                        $total      = mt_rand($min * 100, $safe_total * 100) / 100;
                                        //                                    var_dump($kj_yikan_num,$qujiancount,$gnowmoney,$v['money'],$k,$qujianmoney,$total);
                                        //                                    echo "<br>";
                                        $total = sprintf("%.2f", $total);   //砍掉的金额
                                    }
                                    //                                    $allmoney   += $total;
                                } else {
                                    $total = $gnowmoney - $qujianmoney;
                                }
                            }
                        }
                    }
                    file_put_contents('suiji.txt', $i . ':' . $total . PHP_EOL, FILE_APPEND);
                } else {
                    $min = 0.01;     //每个人最少能收到10元
                    if ($shengyu_kj_num > 1) {
                        $safe_total = ($kj_shengyu_money - ($shengyu_kj_num - 1) * $min) / ($shengyu_kj_num - 1); //随机安全上限
                        $total      = mt_rand($min * 100, $safe_total * 100) / 100;
                        $total      = sprintf("%.2f", $total);   //砍掉的金额
                    } else {
                        $total = $kj_shengyu_money;
                    }
                    file_put_contents('suijiafter.txt', $i . ':' . $total . PHP_EOL, FILE_APPEND);
                }
            } else {
                $min = 0.01;     //每个人最少能收到10元
                if ($gnowmoney > $gfinalmoney) {

                    if ($shengyu_kj_num > 1) {
                        $safe_total = ($gnowmoney - ($shengyu_kj_num - 1) * $min) / ($shengyu_kj_num - 1); //随机安全上限
                        if ($safe_total > $gnowmoney - $gfinalmoney) {
                            $safe_total = (($gnowmoney - $gfinalmoney) - ($shengyu_kj_num - 1) * $min) / ($shengyu_kj_num - 1); //随机安全上限
                        }
                        $total = mt_rand($min * 100, $safe_total * 100) / 100;
                        $total = sprintf("%.2f", $total);   //砍掉的金额
                    } else {
                        $total = sprintf("%.2f", $gnowmoney - $gfinalmoney);   //砍掉的金额
                    }
                }
            }

            $allmoney = $gnowmoney - $total;
            file_put_contents('suijiall.txt', $i . ':' . $allmoney . PHP_EOL, FILE_APPEND);
            if ($gnowmoney - $total >= $gfinalmoney) {
                $updatesql = $dsql->SetQuery("UPDATE `#@__shop_bargaining` SET `shengyu_kj_num` = `shengyu_kj_num` - 1,`gnowmoney` = `gnowmoney` - $total  WHERE  `id` = 1");
                $dsql->dsqlOper($updatesql, 'results');
            }
            //            $gnowmoney -= $total;
            //	        $shengyu_kj_num -=1;
        }
    }

    /**
     * Notes: 拼团详情
     * Ueser: Administrator
     * DateTime: 2021/3/5 9:55
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array
     */
    public function pinGroup()
    {
        global $dsql;
        $id = is_array($this->param) ? (int)$this->param['id'] : (int)$this->param;
        $orderDetail = $cardnum = $cardnumList = array();
        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        global $userLogin;
        global $cfg_pointRatio;

        $userid = $userLogin->getMemberID();

        //主表信息
        $archives = $dsql->SetQuery("SELECT `id`,`oid`,`hid`,`proid`,`userid`,`pubdate`,`state`,`people`,`enddate`,`okdate`,`user` FROM `#@__shop_tuanpin`  WHERE `id` = '$id'");
        $results  = $dsql->dsqlOper($archives, "results");

        if (!empty($results)) {
            $results = $results[0];

            $orderDetail['id']      = $results['id'];
            $orderDetail['oid']     = $results['oid'];
            $orderDetail['hid']     = $results['hid'];
            $orderDetail['proid']   = $results['proid'];
            $orderDetail['userid']  = $results['userid'];
            $orderDetail['pubdate'] = $results['pubdate'];
            $orderDetail['state']   = $results['state'];
            $orderDetail['people']  = $results['people'];
            $orderDetail['enddate'] = $results['enddate'];
            $orderDetail['okdate']  = $results['okdate'];
            $orderDetail['user']    = $results['user'];

            //商品信息
            $this->param                         = $results['proid'];
            $detail                              = $this->detail(1);
            $orderDetail['product']['id']        = $detail['id'];
            $orderDetail['product']['title']     = $detail['title'];
            $orderDetail['product']['enddate']   = $detail['enddate'];
            $orderDetail['product']['litpic']    = $detail['litpic'];
            $orderDetail['product']['tuantype']  = $detail['tuantype'];
            $orderDetail['product']['subtitle']  = $detail['subtitle'];
            $orderDetail['product']['price']     = $detail['price'];
            $orderDetail['product']['pin']       = $detail['pin'];
            $orderDetail['product']['pinprice']  = $detail['pinprice'];
            $orderDetail['product']['huodongprice']  = $detail['huodongprice'];
            $orderDetail['product']['pinpeople'] = $detail['pinpeople'];
            $orderDetail['product']['confirmtype'] = $detail['confirmtype'];
            $orderDetail['product']['fromPage'] = $detail['fromPage'];
            //卖家信息
            $this->param          = $detail['store'];
            $orderDetail['store'] = $this->storeDetail(1);

            //获取拼团拼主订单信息
            $sql = $dsql->SetQuery("SELECT o.`logistic`, o.`paytype`,o.`ordernum`,o.`orderdate`,o.`orderstate`,op.`count` procount,o.`payprice`,o.`balance`,o.`point`,op.`price`,op.`speid`,`count` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` WHERE o.`userid` = '$results[userid]' and o.`pinid` = '$id'");
            $res = $dsql->dsqlOper($sql, "results");
            $res = $res[0];
            $orderDetail["procount"] = $res["procount"];
            $orderDetail["ordernum"] = $res["ordernum"];
            //总价
            $orderprice = $res["price"];
            $point      = $res["point"];
            $balance    = $res["balance"];
            $payprice   = $res["payprice"];
            $procount   = $res["procount"];
            $propolic   = $res["propolic"];
            $speid      = $res["speid"];
            $count      = $res["count"];
            $policy     = unserialize($propolic);

            $totalAmount += $orderprice * $procount;

            // $logistic = getLogisticPrice($detail['devspecification'], $orderprice, 1, $detail['volume'], $detail['weight'],'',$results['proid']);
            $logistic = $res['logistic'];

            $totalAmount               += $logistic;
            $orderDetail["logistic"]   = $logistic;
            $orderDetail["orderprice"] = $orderprice;
            $orderDetail["totalmoney"] = $totalAmount;
            $orderDetail["point"]      = $point / $cfg_pointRatio;
            $orderDetail["balance"]    = $balance;
            $orderDetail["payprice"]   = $payprice;
            $orderDetail["speid"]      = $speid;
            $orderDetail["count"]      = $count;
            $orderDetail["pros"]       = $results['proid'] . "," . $speid . "," . $count;
            $orderDetail["orderstate"] = $res["orderstate"];
            $orderDetail["orderdate"]  = $res["orderdate"];

            //前端页面把显示规格的位置显示成了副标题，接口这里把副标题的数据换成规格信息
            $skuName = array();
            $skuDetail = $this->getSkuDetail($speid);
            if($skuDetail){
                $speDetail = $skuDetail['speDetail'];
                if($speDetail){
                    foreach($speDetail as $val){
                        array_push($skuName, $val['name']);
                    }
                }
            }
            $orderDetail['product']['subtitle'] = join('；', $skuName);

            //支付方式
            $paySql    = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $res["paytype"] . "'");
            $payResult = $dsql->dsqlOper($paySql, "results");
            if (!empty($payResult)) {
                $orderDetail["paytype"] = $payResult[0]["pay_name"];
            } else {
                global $cfg_pointName;
                $payname = "";
                if ($res["paytype"] == "point,money") {
                    $payname = $cfg_pointName . "+余额";
                } elseif ($res["paytype"] == "point") {
                    $payname = $cfg_pointName;
                } elseif ($res["paytype"] == "money") {
                    $payname = "余额";
                }
                $orderDetail["paytype"] = $payname;
            }
            $orderDetail["paydate"] = $res["paydate"];

            //拼主信息
            if ($userid == $results['userid']) {
                $orderDetail["own"] = 1;
            }
            $memberList                 = getMemberDetail($results['userid']);
            $orderDetail["masterPhoto"] = $memberList['photo'];
            //参团信息
            //$results['user'] = rtrim(",",$results['user']);
            $userArr = explode(",", $results['user']);
            if (!in_array($userid, $userArr)) {
                $orderDetail["dealorder"] = 1;
            }
            foreach ($userArr as $row) {

                //获取拼团参与人的订单状态
                $sql = $dsql->SetQuery("SELECT o.`logistic`, o.`paytype`,o.`ordernum`,o.`orderdate`,o.`orderstate`,op.`count` procount,o.`payprice`,o.`balance`,o.`point`,op.`price`,op.`speid`,`count` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` WHERE o.`userid` = '$row' and o.`pinid` = '$id' AND (o.`orderstate` = 1 OR o.`orderstate` = 3)");
                $res = $dsql->dsqlOper($sql, "results");
                if($res){
                    if ($row != $results['userid']) {
                        $memberList = getMemberDetail($row);
                        $orderDetail["join"][] = $memberList['photo'];
                    }
                }

            }
            //拼团状态
            if ($results['state'] == 2) {
                $orderDetail["status"] = 3; //拼单失效
            } else {

                if ($detail['etime'] > time()) {
                    if ($results['enddate'] > time()) {
                        if ($results['people'] < $detail['huodongnumber']) {
                            $orderDetail["status"] = 0; //拼单未成功
                            $orderDetail["rest"]   = $detail['huodongnumber'] - $results['people'];

                            $hour                    = floor(($results['enddate'] - time()) % 86400 / 3600);
                            $minute                  = floor(($results['enddate'] - time()) % 86400 / 60 / 60);
                            $second                  = floor(($results['enddate'] - time()) % 86400 % 60);
                            $orderDetail["resttime"] = $hour . ":" . $minute . ":" . $second;
                        } elseif ($results['people'] == $detail['huodongnumber']) {
                            $orderDetail["status"] = 1; //拼单成功
                        }
                    } else {
                        if ($results['people'] < $detail['huodongnumber']) {
                            $orderDetail["status"] = 3; //拼单失效
                        } elseif ($results['people'] == $detail['huodongnumber']) {
                            $orderDetail["status"] = 1; //拼单成功
                        }
                    }
                } else {
                    $orderDetail["status"] = 2; //团购过期
                }
            }
        }

        return $orderDetail;
    }


    /**
     * Notes: 拼团列表
     * Ueser: Administrator
     * DateTime: 2021/3/12 17:19
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function pinList()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $title    = $this->param['title'];
                $type     = $this->param['type'];
                $pageSize = $this->param['pageSize'];
                $page     = $this->param['page'];
            }
        }

        $where = '';

        if ($title != '') {

            $where .= " AND p.`title` like '%" . $title . "%'";
        }

        if ($type) {

            $where .= " AND p.`type` = '$type'";
        }


        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT p.`id` proid,p.`title`,p.`mprice`,p.`litpic`,h.`huodongprice` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@#__shop_product` p ON h.`proid` = p.`id` where 1=1 AND `state` = 1" . $where);

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");
        $list    = array();

        if ($results) {

            foreach ($results as $k => $v) {

                $list[$k]['title']        = $v['title'];
                $list[$k]['proid']        = $v['proid'];
                $list[$k]['mprice']       = $v['mprice'];
                $list[$k]['huodongprice'] = $v['huodongprice'];
                $list[$k]['litpic']       = $v['litpic'] != "" ? getFilePath($v['litpic']) : '';

                $ypinsql = $dsql->SetQuery("SELECT SUM(`people`) ypcount FROM `#@__shop_tuanpin` WHERE `proid` = '" . $v['proid'] . "' AND `state` = 3");

                $ypinres = $dsql->dsqlOper($ypinsql, "results");

                $list[$k]['ypcount'] = (int)$ypinres[0]['ypcount'];
            }
        }

        return array("pageinfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 活动发起拼团列表
     * Ueser: Administrator
     * DateTime: 2021/5/26 15:00
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|array[]
     */
    public function pinuserList()
    {
        global $dsql;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $tid      = $this->param['tid'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        if (!empty($tid)) {
            $where = " AND p.`hid` = '$tid'";
        }

        $orderby = " ORDER BY p.`pubdate` DESC, p.`id` DESC";

        $time = time();

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $sql = $dsql->SetQuery("SELECT p.`id`,p.`people`,p.`userid`,l.`huodongnumber` pinpeople,p.`enddate` FROM `#@__shop_tuanpin` p LEFT JOIN `#@__shop_huodongsign` l ON l.`id` = p.`hid`  WHERE l.`etime`>'$time' and p.`state`=1 and p.`enddate`>'$time'" . $where);
        //总条数
        $totalCount = $dsql->dsqlOper($sql, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );
        if ($totalCount == 0) return array("state" => 100, "pageInfo" => $pageinfo, "list" => array());

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($sql . $orderby . $where, "results");
        if ($results) {
            $list = array();
            foreach ($results as $key => $val) {
                $list[$key]['id']      = $val['id'];
                $list[$key]['userid']  = $val['userid'];
                $list[$key]['now']     = time();
                $list[$key]['enddate'] = $val['enddate'];
                $list[$key]['rest']    = $val['pinpeople'] - $val['people'];

                $memberList          = getMemberDetail($val['userid']);
                $list[$key]['name']  = !empty($memberList['nickname']) ? cn_substrR($memberList['nickname'], 8) : cn_substrR($memberList['username'], 8);
                $list[$key]['photo'] = $memberList['photo'];

                $hour               = floor(($val['enddate'] - time()) % 86400 / 3600);
                $minute             = floor(($val['enddate'] - time()) % 3600 / 60);
                $second             = floor(($val['enddate'] - time()) % 60);
                $list[$key]['time'] = $hour . ":" . $minute . ":" . $second;

                $param             = array(
                    "service"  => "shop",
                    "template" => "dindan",
                    "id"       => $val['id']
                );
                $list[$key]['url'] = getUrlPath($param);
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * Notes: 商城店铺管理券
     * Ueser: Administrator
     * DateTime: 2021/5/18 15:05
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array
     */
    public function quanStoreList()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        if ($this->param) {

            $state    = (int)$this->param['state'];
            $title    = $this->param['title'];
            $page     = $this->param['page'];
            $pageSize = $this->param['pageSize'];
        }

        $uid = $userLogin->getMemberID();
        //        if(empty($shopids)) return array('state'=>200,'info'=>'格式错误');

        if ($uid < 1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageinfo = $list = array();
        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;


        //        $where = " AND `shopids` = '$shopids'";
        $where = "";

        $sql      = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = $uid");
        $storeRes = $dsql->dsqlOper($sql, "results");
        if ($storeRes) {
            $where .= " AND `shopids` = " . $storeRes[0]['id'];
        } else {
            $where .= " AND 1 = 2";
        }

        if (!empty($title)) {
            //搜索记录
            $where .= " AND `name` like '%" . $title . "%'";
        }

        if (!empty($state)) {
            if ($state == 2) {

                $where .= " AND `sent` = 0";
            } elseif ($state == 1) {

                $where .= " AND `state` = 0 AND `sent` !=0";
            } elseif ($state == 3) {

                $where .= " AND `state` = 1";
            }
        }
        $archives = $dsql->SetQuery("SELECT `id`,`name`,`shoptype`,`state`,`money`,`basic_price`,`ktime`,`etime`,`limitcount`,`received`,`number`,`promotiotype`,`promotio`,`sent` FROM `#@__shop_quan` WHERE 1=1" . $where);

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $orderby =  ' ORDER BY id DESC';
        $results = $dsql->dsqlOper($archives . $orderby . $where, "results");
        $edtime = GetMkTime(time());
        if ($results) {
            foreach ($results as $k => $v) {
                $updatesql = $dsql->SetQuery("UPDATE `#@__shop_quan` SET `state` = 1 WHERE 1 = 1 AND `etime` <= '$edtime' AND `id` = " . $v['id']);
                $updateres = $dsql->dsqlOper($updatesql, "update");
                $list[$k]['id']           = $v['id'];
                $list[$k]['name']         = $v['name'];
                $list[$k]['state']        = $v['state'];
                $list[$k]['shoptype']     = $v['shoptype'];
                $list[$k]['money']        = $v['money'];
                $list[$k]['basic_price']  = $v['basic_price'];
                $list[$k]['ktime']        = date('Y-m-d H:i:s', $v['ktime']);
                $list[$k]['etime']        = date('Y-m-d H:i:s', $v['etime']);
                $list[$k]['limit']        = $v['limitcount'];
                $list[$k]['received']     = $v['received'];
                $list[$k]['promotio']     = $v['promotio'];
                $list[$k]['sent']         = $v['sent'];
                $list[$k]['promotiotype'] = $v['promotiotype'];
                $list[$k]['number']       = $v['number'];
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_quanlist` WHERE 1=1 AND `state` = 1 AND `qid` ='" . $v['id'] . "' ");
                $quanCount = $dsql->dsqlOper($archives, "totalCount");
                $list[$k]['quanCount']       = $quanCount;

                $param           = array(
                    "service"  => "shop",
                    "template" => "detail",
                    "id"       => $v['id']
                );
                $list[$k]['url'] = getUrlPath($param);

                $param1              = array(
                    "service"  => "shop",
                    "template" => "quanDetail",
                );
                $list[$k]['quanurl'] = getUrlPath($param1);
            }
        }

        return array("pageinfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 券新增
     * Ueser: Administrator
     * DateTime: 2021/5/18 17:44
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|string
     */
    public function quanAdd()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if ($this->param) {
            $param = $this->param;

            $shopid       = (int)$param['shopid'];
            $ktime        = $param['ktime'];
            $etime        = $param['etime'];
            $shoptype     = (int)$param['shoptype'];
            $promotiotype = (int)$param['promotiotype'];
            $fid          = $param['fid'];
            $promotio     = (float)$param['promotio'];
            $basic_price  = (float)$param['basic_price'];
            $number       = (int)$param['number'];
            $limit        = (int)$param['limit'];
            $name         = $param['name'];
        }

        //        if(empty($shopid)) return array("state" => 200, "info" => '参数错误');  //该会员暂未开通商铺！
        $uid      = $userLogin->getMemberID();
        $archives = $dsql->SetQuery("SELECT `id`,`cityid` FROM `#@__shop_store` WHERE `userid` = " . $uid);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $shopid = $results[0]['id'];
            $cityid = $results[0]['cityid'];
            $where  = "";
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][0]);  //该会员暂未开通商铺！
        }

        if (empty($ktime) || empty($etime)) return array("state" => 200, "info" => '开始时间或结束时间未填写！');

        if (empty($promotio)) return array("state" => 200, "info" => '请填写优惠金额！');

        if (empty($number)) return array("state" => 200, "info" => '请填写发放量！');

        if (empty($limit)) return array("state" => 200, "info" => '请填写限领次数！');

        $ktime = strtotime($ktime);
        $etime = strtotime($etime);

        $nowtime       = time();
        $quanInsertsql = $dsql->SetQuery("INSERT INTO `#@__shop_quan` (`cityid`,`name`,`ktime`,`etime`,`shoptype`,`shopids`,`promotiotype`,`promotio`,`basic_price`,`number`,`sent`,`limitcount`,`fid`,`pubdate`) VALUES ('$cityid','$name','$ktime','$etime','$shoptype','$shopid','$promotiotype','$promotio','$basic_price','$number','$number','$limit','$fid','$nowtime')");


        $quanInsertres = $dsql->dsqlOper($quanInsertsql, "update");

        if ($quanInsertres == 'ok') {
            return '新增成功!';
        } else {
            return array("state" => 200, "info" => '新增失败！');
        }
    }

    /**
     * Notes: 券编辑
     * Ueser: Administrator
     * DateTime: 2021/5/19 9:16
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|string
     */
    public function quanEdit()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if ($this->param) {
            $param = $this->param;

            $qid          = (int)$param['qid'];
            $ktime        = $param['ktime'];
            $etime        = $param['etime'];
            $shoptype     = (int)$param['shoptype'];
            $promotiotype = (int)$param['promotiotype'];
            $fid          = $param['fid'];
            $promotio     = (float)$param['promotio'];
            $basic_price  = (float)$param['basic_price'];
            $number       = (int)$param['number'];
            $limit        = (int)$param['limit'];
            $end          = (int)$param['end'];
            $name         = $param['name'];
        }

        $uid      = $userLogin->getMemberID();
        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $uid);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
        } else {
            return array("state" => 200, "info" => $langData['shop'][4][0]);  //该会员暂未开通商铺！
        }

        $sql = $dsql->SetQuery("SELECT `id`,`number`,`received` FROM `#@__shop_quan` WHERE `id` = $qid");
        $res = $dsql->dsqlOper($sql, "results");
        if (!$res) {

            return array("state" => 200, "info" => '优惠券不存在或已经删除！');
        }

        /*券结束*/
        if ($end == 1) {

            $updatesql = $dsql->SetQuery("UPDATE `#@__shop_quan` SET `state` = 1 WHERE `id` = " . $qid);

            $updateres = $dsql->dsqlOper($updatesql, "update");

            if ($updateres == 'ok') {
                return '更新成功！';
            } else {
                return array("state" => 200, "info" => '更新失败！');
            }

            return;
        }

        if (empty($ktime) || empty($etime)) return array("state" => 200, "info" => '开始时间或结束时间未填写！');

        if (empty($promotio)) return array("state" => 200, "info" => '请填写优惠金额！');

        if (empty($number)) return array("state" => 200, "info" => '请填写发放量！');

        if (empty($limit)) return array("state" => 200, "info" => '请填写限领次数！');

        if (empty($qid)) return array("state" => 200, "info" => '参数错误！');


        $ktime = strtotime($ktime);
        $etime = strtotime($etime);

        $sent = (int)$res[0]['number'] - (int)$res[0]['received'];

        $sent      = $sent <= 0 ? $number - (int)$res[0]['received'] : $sent;

        $sent = $sent > $number ? $number : $sent;  //如果剩余量大于发放量，剩余量重置为发放量

        $updatesql = $dsql->SetQuery("UPDATE `#@__shop_quan` SET `name` = '$name',`ktime`  = '$ktime',`etime` = '$etime',`shoptype` ='$shoptype',`promotiotype` ='$promotiotype',`promotio` = '$promotio',`basic_price` = '$basic_price',`number`='$number',`sent` = '$sent',`limitcount` = '$limit',`fid` ='$fid' WHERE `id` = '$qid'");


        $updateres = $dsql->dsqlOper($updatesql, "update");

        if ($updateres == 'ok') {
            return '更新成功！';
        } else {
            return array("state" => 200, "info" => '更新失败！');
        }
    }

    /**
     * Notes: 券详情
     * Ueser: Administrator
     * DateTime: 2021/5/19 15:22
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array
     */
    public function quanDetail()
    {
        global $userLogin;
        global $dsql;
        global $langData;

        $quanDetail = array();
        $id         = $this->param;
        $id         = is_numeric($id) ? $id : $id['id'];
        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        $uid = $userLogin->getMemberID();

        if ($uid < 0) return array("state" => 200, "info" => '未登录或登录超时！');
        $quansql = $dsql->SetQuery("SELECT * FROM `#@__shop_quan` WHERE `id` ='$id'");

        $quanres    = $dsql->dsqlOper($quansql, "results");
        $quandetail = array();
        if ($quanres) {

            $quandetail['name']        = $quanres[0]['name'];
            $quandetail['money']       = $quanres[0]['money'];
            $quandetail['basic_price'] = $quanres[0]['basic_price'];
            $quandetail['ktime']       = $quanres[0]['ktime'];
            $quandetail['etime']       = $quanres[0]['etime'];
            $quandetail['shoptype']    = $quanres[0]['shoptype'];
            $quandetail['fid']         = $quanres[0]['fid'];
            $quandetail['bear']         = $quanres[0]['bear'];

            if ($quanres[0]['shoptype'] == 1) {
                $food    = $quanres[0]['fid'] != '' ? explode(',', $quanres[0]['fid']) : array();
                $foodarr = array();
                foreach ($food as $k => $v) {

                    $foodsql = $dsql->SetQuery("SELECT `title`,`litpic`,`id`,`price` FROM `#@__shop_product` WHERE `id` = " . $v);

                    $foodres = $dsql->dsqlOper($foodsql, "results");

                    if ($foodres) {
                        $foodarr[$k]['title']  = $foodres[0]['title'];
                        $foodarr[$k]['id']     = $foodres[0]['id'];
                        $foodarr[$k]['price']  = $foodres[0]['price'];
                        $foodarr[$k]['litpic'] = getFilePath($foodres[0]['litpic']);

                        $param              = array(
                            "service"  => "shop",
                            "template" => "detail",
                            "id"       => $foodres[0]['id']
                        );
                        $foodarr[$k]['url'] = getUrlPath($param);
                    }
                }
            }

            $quandetail['shopids'] = $quanres[0]['shopids'];

            $storesql = $dsql->SetQuery("SELECT `title`,`logo` FROM `#@__shop_store` WHERE `id` ='" . $quanres[0]['shopids'] . "'");

            $storeres = $dsql->dsqlOper($storesql, "results");

            $logo = '';
            if ($storeres && is_array($storeres)) {
                $logo = $storeres[0]['logo'];
            }
            $quandetail['storelogo'] = getFilePath($logo);
            if ($quanres[0]['bear'] == '1') {
                $param1                  = array(
                    "service"  => "shop",
                );
            } else {
                $param1                  = array(
                    "service"  => "shop",
                    "template" => "store-detail",
                    "id"       => $quanres[0]['shopids']
                );
            }



            /*查找当前用户有无领券*/
            $myquansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_quanlist` WHERE `qid` = '$id' AND `userid` = '$uid'");


            $myquancount = $dsql->dsqlOper($myquansql, "totalCount");

            $is_lingqu = 0;
            if ($myquancount >= $quanres[0]['limitcount']) {
                $is_lingqu = 1;
            }
            $quandetail['is_lingqu'] = $is_lingqu;
            $quandetail['storeurl']  = getUrlPath($param1);;
            $quandetail['foodarr']      = $foodarr;
            $quandetail['fid']          = $quanres[0]['fid'];
            $quandetail['pubdate']      = $quanres[0]['pubdate'];
            $quandetail['promotiotype'] = $quanres[0]['promotiotype'];
            $quandetail['promotio']     = $quanres[0]['promotio'];
            $quandetail['number']       = $quanres[0]['number'];
            $quandetail['sent']         = $quanres[0]['sent'];
            $quandetail['received']     = $quanres[0]['received'];
            $quandetail['limit']        = $quanres[0]['limitcount'];
        }
        return $quandetail;
    }

    /**
     * Notes: 券列表
     * Ueser: Administrator
     * DateTime: 2021/5/19 14:39
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function quanList()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if ($this->param) {
            $gettype        = (int)$this->param['gettype']; /*获取类型 1商品2店铺*/
            $storetype      = (int)$this->param['storetype'];/*店铺类型*/
            $quantype       = $this->param['quantype'];/*券类型*/
            $lingquancenter = (int)$this->param['lingquancenter'];/*券类型*/
            $page           = $this->param['page'];
            $pageSize       = $this->param['pageSize'];
            $sKeyword       = trim($this->param['sKeyword']);  //搜索关键字
        }
        $userid = $userLogin->getMemberID();

        // if ($userid < 0) return array("state" => 200, "info" => '登录超时，请重新登录！');

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $leftstore = $leftstr = $where = '';

        //数据共享
        //         require(HUONIAOINC."/config/shop.inc.php");
        //         $dataShare = (int)$customDataShare;
        //
        //         if(!$dataShare) {
        //             $cityid = getCityId($this->param['cityid']);
        //             if ($cityid) {
        //                 $where .= " AND q.`cityid` = " . $cityid;
        //             }
        //         }
        if ($gettype == 2) {

            /*店铺优惠券*/
            $leftstore = " LEFT JOIN `#@__shop_store` s ON q.`shopids` = s.`id`";

            $leftstr = ",s.`title`,s.`logo`";

            $where .= " AND q.`shoptype` = 0 AND q.`shopids` !=''";

            if (!empty($storetype)) {

                $where .= ' AND s.`industry` = ' . $storetype;
            }
        } elseif ($gettype == 1) {
            $where .= ' AND q.`shoptype` = 1';
        } elseif ($gettype == 3) {
            $where .= ' AND q.`bear` = 1';
        } else {
            // $where .= ' AND q.`shoptype` = 0';
        }

        /*领券中心券类型*/
        if (!empty($quantype)) {
            if ($quantype == 1) {
                $where .= " AND q.`recommend` = 1";
            } elseif ($quantype == 2) {
                $where .= " AND q.`basic_price` = 0";
            } elseif ($quantype == 3) {
                $where .= " AND q.`promotiotype` = 1";
            }
        }
        $where .= " AND q.`state` = 0";

        if($sKeyword){
            if($gettype == 2){
                $where .= " AND (q.`name` like '%".$sKeyword."%' OR s.`title` like '%".$sKeyword."%')";
            }else{
                $where .= " AND q.`name` like '%".$sKeyword."%'";
            }
        }

        $nowtime = time();
        //        if ($lingquancenter == 1) {
        $where .= " AND q.`sent` >0 AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime'";
        //        }
        $archives = $dsql->SetQuery("SELECT q.*  $leftstr FROM `#@__shop_quan` q $leftstore WHERE 1=1" . $where);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");
        $list    = array();

        if ($results) {
            foreach ($results as $k => $v) {
                $list[$k]['id']           = $v['id'];
                $list[$k]['name']         = $v['name'];
                $list[$k]['money']        = $v['money'];
                $list[$k]['basic_price']  = $v['basic_price'];
                $list[$k]['ktime']        = $v['ktime'];
                $list[$k]['etime']        = $v['etime'];
                $list[$k]['ymdktime']     = date('Y-m-d', $v['ktime']);
                $list[$k]['ymdetime']     = date('Y-m-d', $v['etime']);
                $list[$k]['shoptype']     = $v['shoptype'];
                $list[$k]['shopids']      = $v['shopids'];
                $list[$k]['fid']          = $v['fid'];
                $list[$k]['limit']        = $v['limitcount'];
                $list[$k]['number']       = $v['number'];
                $list[$k]['received']     = $v['received'];
                $list[$k]['sent']         = $v['sent'];
                $list[$k]['promotiotype'] = $v['promotiotype'];
                $list[$k]['promotio']     = $v['promotio'];
                $list[$k]['bear']         = $v['bear'];      //平台发放

                /*查找当前用户有无领券*/
                $myquansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_quanlist` WHERE `qid` = '" . $v['id'] . "' AND `userid` = '$userid'");

                $myquancount = $dsql->dsqlOper($myquansql, "totalCount");

                $is_lingqu = 0;
                if ($myquancount >= $v['limitcount']) {
                    $is_lingqu = 1;
                }
                $list[$k]['is_lingqu'] = $is_lingqu;

                /*已抢*/

                $percentage             = $v['received'] / $v['number'] * 100;
                $list[$k]['percentage'] = $percentage;
                if ($v['shoptype'] == 0 && $v['shopids']) {
                    $storesql = $dsql->SetQuery("SELECT `title`,`logo` FROM `#@__shop_store` WHERE `id` ='" . $v['shopids'] . "'");

                    $storeres = $dsql->dsqlOper($storesql, "results");

                    /*店铺产品*/

                    $prductsql = $dsql->SetQuery("SELECT `litpic`,`price` FROM `#@__shop_product` WHERE `store` = '" . $v['shopids'] . "' AND `state` = 1 ORDER BY `sales` DESC LIMIT 0,3");

                    $prductres = $dsql->dsqlOper($prductsql, "results");

                    $productarr = array();
                    if ($prductres && is_array($prductres)) {

                        foreach ($prductres as $index => $prductre) {
                            $productarr[$index]['litpic'] = getFilePath($prductre['litpic']);
                            $productarr[$index]['price']  = $prductre['price'];
                        }
                    }


                    $storename = $storeres[0]['title'];
                    $logo      = getFilePath($storeres[0]['logo']);

                    $list[$k]['shoppro']   = $productarr;
                    $list[$k]['logo']      = $logo;
                    $list[$k]['storename'] = $storename;

                    $sid = $v['shopids'];
                    if ($v['bear'] == '1') {
                        $param = array(
                            "service"  => "shop",
                        );
                    } else {
                        $param = array(
                            "service"  => "shop",
                            "template" => "store-detail",
                            "id"       => $sid
                        );
                    }

                    $url   = getUrlPath($param);

                    $list[$k]['sid'] = (int)$sid;
                    $list[$k]['url'] = $url;
                } else {

                    //                    $fidarr = $v['fid']!='' ? explode(',',$v['fid']) : array();

                    if ($v['fid'] != '') {
                        $foodsql = $dsql->SetQuery("SELECT `litpic`,`store`,`title`,`price`,`id` FROM `#@__shop_product` WHERE  FIND_IN_SET(`id` ,'" . $v['fid'] . "')");
                        $foodres = $dsql->dsqlOper($foodsql, "results");

                        if ($foodres && is_array($foodres)) {
                            $litpic = $title = $mprice = $foodid = '';
                            foreach ($foodres as $index => $foodre) {
                                //                                if ($foodre['mprice'] >= $v['basic_price']) {
                                $list[$k]['logo']      = getFilePath($foodre['litpic']);
                                $list[$k]['storename'] = $foodre['title'];
                                $list[$k]['mprice']    = $foodre['price'];
                                $foodid                = $foodre['id'];

                                //                                }
                            }

                            //                            $list[$k]['logo']       = $litpic;
                            //                            $list[$k]['storename']  = $title;
                            //                            $list[$k]['mprice']     = $mprice;
                        }

                        if ($v['bear'] == '1') {
                            $param = array(
                                "service"  => "shop",
                            );
                        } else {
                            $param = array(
                                "service"  => "shop",
                                "template" => "detail",
                                "id"       => $foodid
                            );
                        }
                        $url   = getUrlPath($param);

                        $list[$k]['pid'] = (int)$foodid;
                        $list[$k]['url'] = $url;
                    }
                }
            }
        }


        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 我的券
     * Ueser: Administrator
     * DateTime: 2021/5/20 9:36
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function myquanlist()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $getype   = (int)$this->param['getype'];
                $is_order = (int)$this->param['is_order'];
                $orderby  = (int)$this->param['orderby'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }
        $userid = $userLogin->getMemberID();

        if ($userid < 0) return array("state" => 200, "info" => '登录超时，请重新登录！');

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $where = " AND `userid` = '$userid'";
        $time  = GetMkTime(time());
        if (!empty($getype)) {
            if ($getype == 1) {
                /*未使用*/
                $where .= " AND `etime` > $time AND `state` = 0";
            } elseif ($getype == 2) {
                /*已使用*/
                $where .= " AND ((`etime` < $time AND  `state` = 0) OR `state` = 1)";
            }
        }

        $order = '';
        if (!empty($orderby)) {

            if ($orderby == 1) {

                $order = " ORDER BY `pubdate` DESC";
            } elseif ($orderby == 2) {

                $order = " ORDER BY `etime` ASC";
            }
        }

        $archives = $dsql->SetQuery("SELECT *   FROM `#@__shop_quanlist`  WHERE 1=1" . $where);

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $order . $where, "results");
        $list    = array();

        if ($results) {
            foreach ($results as $k => $v) {
                $list[$k]['id']           = $v['id'];
                $list[$k]['qid']          = $v['qid'];
                $list[$k]['userid']       = $v['userid'];
                $list[$k]['name']         = $v['name'];
                $list[$k]['money']        = $v['money'];
                $list[$k]['basic_price']  = $v['basic_price'];
                $list[$k]['ktime']        = $v['ktime'];
                $list[$k]['ymdktime']     = date('Y.m.d', $v['ktime']);
                $list[$k]['etime']        = $v['etime'];
                $list[$k]['ymdetime']     = date('Y.m.d', $v['etime']);
                $list[$k]['quantype']     = $v['quantype'];
                $list[$k]['shopids']      = $v['shopids'];
                $list[$k]['fid']          = $v['fid'];
                $list[$k]['pubdate']      = $v['pubdate'];
                $list[$k]['state']        = $v['state'];
                $list[$k]['promotiotype'] = $v['promotiotype'];
                $list[$k]['promotio']     = $v['promotio'];
                $list[$k]['bear']         = $v['bear'];

                $storeid = $v['shopids'];

                if ($v['quantype'] == 1) {
                    $fidarr = explode(',', $v['fid']);

                    $sql = $dsql->SetQuery("SELECT `store` FROM `#@__shop_product` WHERE `id` = '" . $fidarr[0] . "'");

                    $res = $dsql->dsqlOper($sql, "results");

                    $storeid = (int)$res[0]['store'];
                }

                $storesql = $dsql->SetQuery("SELECT `title`,`logo` FROM `#@__shop_store` WHERE `id` = '$storeid'");

                $storeres = $dsql->dsqlOper($storesql, "results");

                $title = $logo = '';
                if ($storeres && is_array($storeres)) {

                    $title = $storeres[0]['title'];
                    $logo  = getFilePath($storeres[0]['logo']);
                }

                $list[$k]['title'] = $title;
                $list[$k]['logo']  = $logo;
                if ($v['bear'] == '1') {
                    $param             = array(
                        "service"  => "shop",
                    );
                } else {
                    $param             = array(
                        "service"  => "shop",
                        "template" => "store-detail",
                        "id"       => $storeid
                    );
                }

                $url               = getUrlPath($param);


                $difftime = ($v['etime'] - time()) / 3600;

                $kuaiexp = 0;
                if ($difftime < 24) {
                    $kuaiexp = 1;
                }

                $list[$k]['kuaiexp'] = $kuaiexp;

                $list[$k]['url'] = $url;
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    public function getQuan()
    {
        global $dsql;
        global $userLogin;

        if (!empty($this->param)) {
            $qid = $this->param['qid'];
        }

        $uid = $userLogin->getMemberID();

        if ($uid < 0) return array("state" => 200, "info" => '未登录或登录超时！');

        if (empty($qid)) return array("state" => 200, "info" => '格式错误！');

        $quansql = $dsql->SetQuery("SELECT `id`,`ktime`,`etime`,`sent`,`limitcount`,`name`,`des`,`money`,`basic_price`,`shopids`,`fid`,`promotiotype`,`promotio`,`shoptype`,`bear` FROM `#@__shop_quan` WHERE `id` = '$qid' AND `state` = 0");
        $quanres = $dsql->dsqlOper($quansql, "results");

        if (empty($quanres)) return array("state" => 200, "info" => '手慢了！该券已被抢完！');

        if ($quanres[0]['etime'] <= time() || $quanres[0]['sent'] <= 0) return array("state" => 200, "info" => '手慢了！该券已被抢完！');

        $myquansql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_quanlist` WHERE `userid` = '$uid' AND `qid` = '$qid'");

        $myquancount = $dsql->dsqlOper($myquansql, "totalCount");
        if ($myquancount >= $quanres[0]['limitcount']) return array("state" => 200, "info" => '该券已达领取上限！');


        $pubdate      = time();
        $name         = $quanres[0]['name'];
        $des          = $quanres[0]['des'];
        $money        = $quanres[0]['money'];
        $basic_price  = $quanres[0]['basic_price'];
        $ktime        = $quanres[0]['ktime'];
        $etime        = $quanres[0]['etime'];
        $shopids      = $quanres[0]['shopids'];
        $fid          = $quanres[0]['fid'];
        $promotiotype = $quanres[0]['promotiotype'];
        $promotio     = $quanres[0]['promotio'];
        $shoptype     = $quanres[0]['shoptype'];
        $bear          = $quanres[0]['bear'];

        $sql = $dsql->SetQuery("INSERT INTO `#@__shop_quanlist` (`qid`, `userid`, `name`, `des`, `money`, `basic_price`, `ktime`,`etime`,`quantype`, `shopids`,`fid`,`pubdate`,`promotiotype`,`promotio`,`bear`) VALUES ('$qid', '$uid', '$name', '$des', '$money', '$basic_price', '$ktime','$etime','$shoptype','$shopids','$fid', '$pubdate','$promotiotype','$promotio','$bear')");
        $res = $dsql->dsqlOper($sql, "update");

        if ($res == 'ok') {
            $numbersql = $dsql->SetQuery("UPDATE `#@__shop_quan` SET `sent` = `sent` - 1,`received`= `received`+1 WHERE `id` = '$qid'");

            $dsql->dsqlOper($numbersql, "update");

            return "恭喜你！抢到了！";
        } else {
            return array("state" => 200, "info" => '暂未领到！');
        }
    }

    /**
     * Notes: 用券
     * Ueser: Administrator
     * DateTime: 2021/7/14 11:37
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|string
     */
    public function useQuan()
    {
        global $dsql;
        global $userLogin;
        global $siteCityInfo;

        $codes = $this->param['codes'];
        $now   = GetMkTime(time());
        $uid   = $userLogin->getMemberID();

        $userinfo = $userLogin->getMemberInfo();

        if ($userinfo['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '4')))  return array("state" => 200, "info" => '商家权限验证失败！');  //商家权限验证失败！

            $uid = $userinfo['companyuid'];
        }
        if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop")) && $userinfo['is_staff'] != 1) {
            return array("state" => 200, "info" => '商家权限验证失败！');
        }

        if (empty($codes)) return array("state" => 200, "info" => '请输入要消费的团购券密码！');

        $codeArr = explode(",", $codes);
        $success = 0;
        foreach ($codeArr as $key => $value) {

            $this->param['code'] = $value;
            $verify              = $this->verifyQuan();
            if (!is_array($verify)) {

                $sql = $dsql->SetQuery("UPDATE `#@__shopquan` SET `usedate` = '$now' WHERE `cardnum` = '$value'");

                $res = $dsql->dsqlOper($sql, "update");
                if ($res == "ok") {
                    $success++;

                    //查询订单信息
                    $sql = $dsql->SetQuery("SELECT o.`id`orderid,q.`cardnum`, o.`ordernum`, op.`price`, op.`count` procount, o.`amount` orderprice, o.`userid`, o.`balance`, o.`payprice`, o.`peerpay`,o.`priceinfo`,o.`shopFee`, o.`huodongtype` FROM `#@__shopquan` q LEFT JOIN `#@__shop_order` o ON o.`id` = q.`orderid` LEFT JOIN `#@__shop_order_product` op ON op.`orderid` = o.`id` WHERE q.`cardnum` = '$value'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {

                        $orderid = $ret[0]['orderid'];

                        $ordernum   = $ret[0]['ordernum'];   //订单号
                        $procount   = (int)$ret[0]['procount'];   //数量
                        $orderprice = $ret[0]['price'];      //单价
                        $balance    = $ret[0]['balance'];    //余额金额
                        $payprice   = $ret[0]['payprice'];   //支付金额
                        $userid     = $ret[0]['userid'];     //买家ID
                        $peerpay    = $ret[0]['peerpay'];     //代付
                        $shopFee    = $ret[0]['shopFee'];     //平台分成
                        $cardnum   = $ret[0]['cardnum'];   //团券订单号
                        $priceinfo  = $ret[0]['priceinfo'];   //消费信息
                        $priceinfo  = $priceinfo != '' ? unserialize($priceinfo) : array();
                        $huodongtype = $ret[0]['huodongtype'];
                        // $quan  = 0;
                        // foreach ($priceinfo as $k => $v) {
                        //     if($v['type'] == 'quan'){
                        //         $quan      = $v['amount'];
                        //     }
                        // }
                        $quan  = 0;
                        foreach ($priceinfo as $k => $v) {
                            if ($v['type'] == 'quan') {
                                $quan      = $v['amount'];
                                $bear      = $v['bear'];                    // 平台
                                $quanbody  = $v['quanname'];
                            }
                        }

                        //计算费用
                        $totalMoney  = 0;
                        $sql = $dsql->SetQuery("SELECT `price`, `count`, `logistic`, `discount`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `ret_ok_date` = 0 AND  `orderid` = $orderid");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            foreach ($ret as $key => $val) {
                                $totalMoney  += $val['price'] * $val['count'] + $val['discount'];
                            }
                        }
                        if ($bear != 1) {
                            $orderprice = $totalMoney - $quan;
                        } else {
                            $orderprice = $totalMoney;
                        }

                        //计算单价，费用除以数量
                        $orderprice = (float)sprintf('%.2f', $orderprice / $procount);

                        //更新订单状态，如果券都用掉了，就更新订单状态为已使用
                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shopquan` WHERE `orderid` = (SELECT `orderid` FROM `#@__shopquan` WHERE `cardnum` = '$value') AND `usedate` = 0");
                        $ret = $dsql->dsqlOper($sql, "totalCount");
                        if ($ret == 0) {
                            $sql = $dsql->SetQuery("UPDATE `#@__shop_order` SET `orderstate` = 3, `ret_state` = 0 WHERE `id` = '$orderid'");
                            $dsql->dsqlOper($sql, "update");
                        }

                        //如果有使用余额和第三方支付，将买家冻结的金额移除并增加日志
                        $totalPayPrice = $balance + $payprice;
                        if ($totalPayPrice > 0 && $peerpay <= 0) {

                            //减去消费会员的冻结金额
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` - '$totalPayPrice' WHERE `id` = '$userid'");
                            $dsql->dsqlOper($archives, "update");

                            //如果冻结金额小于0，重置冻结金额为0
                            $archives = $dsql->SetQuery("SELECT `freeze` FROM `#@__member` WHERE `id` = '$userid'");
                            $ret      = $dsql->dsqlOper($archives, "results");
                            if ($ret) {
                                if ($ret[0]['freeze'] < 0) {
                                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = 0 WHERE `id` = '$userid'");
                                    $dsql->dsqlOper($archives, "update");
                                }
                            }

                            //保存操作日志 支付成功后，已经记录了消费信息，这里就不需要再做一次了 by gz 20191108
                            // $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$totalPayPrice', '团购券消费：$value', '$now')");
                            // $dsql->dsqlOper($archives, "update");

                        }
                        //                        //分站
                        //                        $usersql = $dsql->SetQuery("SELECT `addr` FROM `#@__member` WHERE `id` = " . $uid);
                        //                        $userres = $dsql->dsqlOper($usersql, "results");
                        //
                        //                        $addr = $userres[0]['addr'];
                        ////
                        //                        $cityid   = getPublicParentInfo(array('tab' => 'site_area', 'id' => $addr, 'split' => '/', 'type' => 'typename', 'action' => 'addr', 'returntype' => '1'));
                        $cityid = $userinfo['cityid'];
                        $cityName = getSiteCityName($cityid);


                        //  -------------  扣除佣金  -------------------------  //
                        global $cfg_shopFee;
                        global $cfg_fzshopFee;
                        $cfg_shopFee   = !empty((float)$shopFee) ? (float)$shopFee : (float)$cfg_shopFee;
                        $cfg_fzshopFee = (float)$cfg_fzshopFee;


                        $fee = $orderprice * $cfg_shopFee / 100;
                        $fee = floor($fee * 100) / 100; // 保留2位小数，不进行四舍五入，服务商分账时，不会四舍五入
                        $fee = $fee < 0.01 ? 0 : $fee;

                        //商家剩余金额
                        $amount_ = sprintf('%.2f', $orderprice - $fee);

                        //获取transaction_id
                        $transaction_id = $paytype = '';
                        $sql = $dsql->SetQuery("SELECT `transaction_id`, `ordernum`,`id`,`amount`, `paytype` FROM `#@__pay_log` WHERE FIND_IN_SET('$ordernum',`body`) AND `state` = 1");
                        $ret            = $dsql->dsqlOper($sql, "results");
                        $pid            = '';
                        $truepayprice   = 0;
                        if ($ret) {
                            $transaction_id = $ret[0]['transaction_id'];
                            $paytype        = $ret[0]['paytype'];
                            $pid            = $ret[0]['id'];
                            $truepayprice   = $ret[0]['amount'];
                        }

                        //分销信息
                        global $cfg_fenxiaoState;
                        global $cfg_fenxiaoSource;
                        global $cfg_fenxiaoDeposit;
                        global $cfg_fenxiaoAmount;
                        include HUONIAOINC . "/config/shop.inc.php";
                        $fenXiao = (int)$customfenXiao;
                        //返还佣金
                        $bearfenyong = 0;
                        if ($cfg_fenxiaoState && $fenXiao && $huodongtype == 0) {

                            $fenxiaoparamarr = fenXiaoMoneyCalculation('shop', $ordernum);
                            // $fx_reward_ratio = $fenxiaoparamarr['product'][0]['fx_reward_ratio'];
                            // //分销金额（处理%）
                            // if (strstr($fx_reward_ratio, '%')) {
                            //     $fx_reward_ratio = $fee * (float)$fx_reward_ratio /   100;
                            // }
                            // $fx_reward_ratio = $fx_reward_ratio < 0.01 ? 0 : $fx_reward_ratio;
                            // $fenxiaoparamarr['amount'] = $fx_reward_ratio;

                            // $fenxiaoTotalPrice = $fx_reward_ratio;
                            $fenxiaoTotalPrice = $fenxiaoparamarr['totalAmount'];
                            $fenxiaoTotalPrice = (float)sprintf('%.2f', $fenxiaoTotalPrice / $procount);
                            $fenxiaoparamarr['amount'] = $fenxiaoTotalPrice;

                            (new member())->returnFxMoney("shop", $userid, $value, $fenxiaoparamarr);
                            //查询一共分销了多少佣金
                            $precipitateMoney = 0;  //计算沉淀金额
                            $_title = '商城电子券，订单号：' . $value;
                            $fenxiaomoneysql = $dsql->SetQuery("SELECT SUM(`amount`) allfenxiao FROM `#@__member_fenxiao` WHERE `ordernum` = '$_title' AND `module`= 'shop'");
                            $fenxiaomonyeres = $dsql->dsqlOper($fenxiaomoneysql, "results");
                            if (!$cfg_fenxiaoDeposit) {
                                $fenxiaoTotalPrice = $fenxiaomonyeres[0]['allfenxiao'];
                            } else {
                                //沉淀的钱 = 应该分销的钱 - 实际分销的钱
                                $precipitateMoney = $fenxiaoTotalPrice - $fenxiaomonyeres[0]['allfenxiao'];
                            }
                            //商家承担
                            if ($cfg_fenxiaoSource) {
                                //记录沉淀资金
                                if ($precipitateMoney > 0) {
                                    (new member())->recodePrecipitationMoney($uid, $ordernum, '商城电子券，订单号：' . $ordernum, $precipitateMoney, $cityid, "shop");
                                }
                                $amount_ = $amount_ -  $fenxiaoTotalPrice;
                                $bearfenyong = 2;
                            }
                            //平台承担
                            else {
                                $fee  = $fee - $fenxiaoTotalPrice;
                                $bearfenyong = 1;
                            }
                        }

                        $amount_        = $amount_ < 0.01 ? 0 : $amount_;
                        $fzFee = cityCommission($cityid, 'shop');            //获取分站佣金比例
                        //分站提成
                        $fztotalAmount_ = (float)sprintf('%.2f', $fee * (float)$fzFee / 100);

                        $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;
                        // $cityName = $siteCityInfo['name'];
                        // $cityid  = (int)$siteCityInfo['cityid'];
                        $fee -= $fztotalAmount_; //总站-=分站
                        $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` + '$fztotalAmount_' WHERE `cid` = '$cityid'");
                        $dsql->dsqlOper($fzarchives, "update");
                        $paramBusi = array(
                            "service"  => "member",
                            "template" => "orderdetail",
                            "action"   => "shop",
                            "id"       => $orderid
                        );
                        $urlParam  = serialize($paramBusi);
                        $sql       = $dsql->SetQuery("SELECT `company`, `nickname` FROM `#@__member` WHERE `id` = $uid");
                        $ret       = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $shopname = $ret[0]['company'] ? $ret[0]['company'] : $ret[0]['nickname'];
                        }
                        // $user  = $userLogin->getMemberInfo($uid);
                        // $usermoney = $user['money'];

                        // if ($bear != 1){
                        //     $amount_ -= $quan;
                        // }

                        //将费用转至商家帐户
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$amount_' WHERE `id` = '$uid'");
                        $dsql->dsqlOper($archives, "update");
                        $user  = $userLogin->getMemberInfo($uid, 1);
                        $usermoney = $user['money'];

                        //保存操作日志商家
                        $title = '商城收入：' . $shopname;
                        $info = '商城电子券收入：' . $cardnum;
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`urlParam`,`title`,`ordernum`,`balance`) VALUES ('$uid', '1', '$amount_', '$info', '$now','shop','shangpinxiaoshou','$pid','$urlParam','$title','$ordernum','$usermoney')");
                        $dsql->dsqlOper($archives, "update");

                        //保存操作日志平台
                        $info = '商城电子券收入：' . $cardnum;
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`,`ordernum`,`balance`,`bear`) VALUES ('$uid', '1', '$orderprice', '$info', '$now','$cityid','$fztotalAmount_','shop',$fee,'1','shangpinxiaoshou','$ordernum','$usermoney','$bearfenyong')");
                        //                        $dsql->dsqlOper($archives, "update");
                        $lastid = $dsql->dsqlOper($archives, "lastid");
                        substationAmount($lastid, $cityid);

                        //返积分
                        (new member())->returnPoint("shop", $userid, $orderprice, $ordernum, $amount_, $uid);

                        //工行E商通银行分账
                        if ($transaction_id) {
                            if ($truepayprice <= 0) {
                                $truepayprice = $amount_;
                            }
                            rfbpShareAllocation(array(
                                "uid"               => $uid,
                                "ordertitle"        => "商城券收入",
                                "ordernum"          => $ordernum,
                                "orderdata"         => array(),
                                "totalAmount"       => $orderprice,
                                "amount"            => $amount_,
                                "channelPayOrderNo" => $transaction_id,
                                "paytype"           => $paytype
                            ));
                        }

                        $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名

                        //微信通知
                        $param = array(
                            'type'   => "1", //区分佣金 给分站还是平台发送 1分站 2平台
                            'cityid' => $cityid,
                            'notify' => '管理员消息通知',
                            'fields' => array(
                                'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n分站获得佣金：" . sprintf("%.2f", $fztotalAmount_),
                                'date'      => date("Y-m-d H:i:s", time()),
                            )
                        );

                        $params = array(
                            'type'   => "2", //区分佣金 给分站还是平台发送 1分站 2平台
                            'cityid' => $cityid,
                            'notify' => '管理员消息通知',
                            'fields' => array(
                                'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n平台获得佣金：" . $fee . " \r\n分站获得佣金：" . sprintf("%.2f", $fztotalAmount_),
                                'date'      => date("Y-m-d H:i:s", time()),
                            )
                        );
                        //后台微信通知
                        updateAdminNotice("shop", "detail", $param);
                        updateAdminNotice("shop", "detail", $params);
                    }
                }
            }
        }

        if ($success > 0) {
            return "消费成功！";
        } else {
            return array("state" => 200, "info" => '消费失败，请检查您输入的团购券密码！');
        }
    }


    /**
     * 团购券列表
     * @return array
     */
    public function shopquanList()
    {
        global $dsql;
        global $userLogin;

        $pageinfo = $list = $orderid = array();
        $page     = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $ordernum = $this->param['ordernum'];
                $type     = $this->param['type'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        if ($type == "unuse") {
            $where .= " AND q.`usedate` = 0";
        } else {
            $where .= " AND q.`usedate` <> 0";
        }

        //订单号筛选
        if ($ordernum) {
            $where .= " AND o.`ordernum` = '$ordernum'";
        }

        //获取用户ID
        $uid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '4')))  return array("state" => 200, "info" => '商家权限验证失败!');  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }
        if ($uid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }

        $userinfo = $userDetail;
        if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop")) && $userDetail['is_staff'] != 1) {
            return array("state" => 200, "info" => '商家权限验证失败！');
        }


        $archives = $dsql->SetQuery("SELECT q.`id`, q.`cardnum`, q.`usedate`, q.`carddate`, q.`expireddate`, o.`ordernum`, q.`proid` FROM `#@__shop_order` o LEFT JOIN `#@__shopquan` q ON o.`id` = q.`orderid` LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = '$uid' $where GROUP BY q.`cardnum` ORDER BY q.`usedate` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => '暂无数据！');

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . " LIMIT $atpage, $pageSize", "results");

        if (count($results) > 0) {
            $list = array();
            foreach ($results as $key => $value) {

                $sql = $dsql->SetQuery("SELECT `id`, `title`, `price` FROM `#@__shop_product` WHERE `id` = " . $value['proid']);
                $res = $dsql->dsqlOper($sql, "results");

                if ($res) {
                    $id    = $res[0]['id'];
                    $title = $res[0]['title'];
                    $price = $res[0]['price'];
                    $param = array(
                        "service"  => "shop",
                        "template" => "detail",
                        "id"       => $id
                    );
                    $url   = getUrlPath($param);

                    $list[$key]["pro"]['title'] = $title;
                    $list[$key]["pro"]['url']   = $url;
                } else {
                    $list[$key]["pro"]['title'] = "";
                    $list[$key]["pro"]['url']   = "";
                }

                $list[$key]['id']       = $value['id'];
                $list[$key]['price']    = $price;
                $list[$key]['ordernum'] = $value['ordernum'];

                if ($type == "unuse") {
                    $list[$key]['carddate']    = $value['carddate'];
                    $list[$key]['expireddate'] = $value['expireddate'];
                } else {
                    $list[$key]['cardnum'] = $value['cardnum'];
                    $list[$key]['usedate'] = $value['usedate'];
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * Notes: 验证优惠券
     * Ueser: Administrator
     * DateTime: 2021/7/14 13:58
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|string
     */
    public function verifyQuan()
    {
        global $dsql;
        global $userLogin;

        $code = $this->param['code'];
        $now  = GetMkTime(time());

        if (!is_numeric($code)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }

        $userinfo = $userLogin->getMemberInfo();

        if ($userinfo['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '4')))  return array("state" => 200, "info" => '商家权限验证失败！');  //商家权限验证失败！

            $uid = $userinfo['companyuid'];
        }
        if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop")) && $userinfo['is_staff'] != 1) {
            return array("state" => 200, "info" => '商家权限验证失败！');
        }

        //查询券
        $archives = $dsql->SetQuery("SELECT q.`usedate`, q.`expireddate`,q.`proid` FROM `#@__shopquan` q LEFT JOIN `#@__shop_order` o ON o.`id` = q.`orderid`  LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE (o.`orderstate` = 1 OR o.`orderstate` = 2) AND q.`cardnum` = '" . $code . "' AND s.`userid` = " . $uid);

        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {

            $usedate     = $results[0]['usedate'];
            $expireddate = $results[0]['expireddate'];
            $proid       = $results[0]['proid'];

            //是否已经使用过
            if ($usedate != 0) {
                $usedate = date("Y-m-d H:i:s", $usedate);
                return array("state" => 101, "info" => '验证失败，此券已于' . $usedate . '使用过了！');

                //是否已经过期
            } elseif ($expireddate < $now) {
                return array("state" => 101, "info" => '验证失败，此券已经过期！');

                //可以使用
            } else {

                //                //获取团购信息
                $sql = $dsql->SetQuery("SELECT `id`, `title`, `price` FROM `#@__shop_product` WHERE `id` = " . $proid);
                $res = $dsql->dsqlOper($sql, "results");
                if ($res) {
                    //
                    $id    = $res[0]['id'];
                    $title = $res[0]['title'];

                    $param = array(
                        "service"  => "shop",
                        "template" => "detail",
                        "id"       => $id
                    );
                    $url   = getUrlPath($param);

                    $currency = echoCurrency(array("type" => "short"));

                    return "验证成功，项目：<a href='" . $url . "' target='_blank'>$title</a> ";
                    //                    return "验证成功";
                    //
                } else {
                    return array("state" => 101, "info" => '验证失败，商品信息不存在！');
                }
            }
        } else {
            return array("state" => 101, "info" => '密码错误，请与消费者确认提供的密码是否正确！');
        }
    }


    /**
     * Notes: 撤销优惠券
     * Ueser: Administrator
     * DateTime: 2021/7/15 13:43
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|string
     */
    public function cancelQuan()
    {
        global $dsql;
        global $userLogin;
        global $siteCityInfo;
        $ids = $this->param['ids'];

        if (empty($ids)) return array("state" => 200, "info" => '请选择要撤消的团购券密码！');

        //获取用户ID
        $uid = $userLogin->getMemberID();

        $userDetail = $userLogin->getMemberInfo();

        if ($userDetail['is_staff'] == 1) {
            if (!verificationStaff(array('module' => 'shop', 'type' => '4')))  return array("state" => 200, "info" => '商家权限验证失败！');  //商家权限验证失败！

            $uid = $userDetail['companyuid'];
        }
        if ($uid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }
        $umoney = $userDetail['money'];

        $idArr   = explode(",", $ids);
        $success = 0;
        $now     = GetMkTime(time());

        foreach ($idArr as $key => $value) {

            $archives = $dsql->SetQuery("SELECT q.`cardnum`, o.`id`, o.`orderprice`, o.`userid`, o.`procount`, o.`orderprice`, o.`balance`, o.`payprice`, o.`propolic`, o.`peerpay`,o.`shopFee`,q.`proid` FROM `#@__shopquan` q LEFT JOIN `#@__shop_order` o ON o.`id` = q.`orderid` LEFT JOIN `#@__tuan_store` s ON o.`store` = s.`id` WHERE q.`id` = '$value' AND s.`uid` = " . $uid);
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {


                $sql = $dsql->SetQuery("SELECT `id`, `title`, `price` FROM `#@__shop_product` WHERE `id` = " . $value);
                $res = $dsql->dsqlOper($sql, "results");

                $cardnum = $results[0]['cardnum'];

                $procount   = $results[0]['procount'];   //数量
                $orderprice = $res[0]['price']; //单价
                $balance    = $results[0]['balance'];    //余额金额
                $payprice   = $results[0]['payprice'];   //支付金额
                $userid     = $results[0]['userid'];     //买家ID
                $peerpay    = $results[0]['peerpay'];     //代付
                $shopFee    = $results[0]['shopFee'];     //平台抽成
                $shopFee    = $results[0]['shopFee'];     //平台抽成

                //扣除佣金
                global $cfg_tuanFee;
                global $cfg_fztuanFee;
                $cfg_tuanFee   = !empty((float)$shopFee) ? (float)$shopFee : (float)$cfg_tuanFee;
                $cfg_fztuanFee = (float)$cfg_fztuanFee;

                $fee         = $orderprice * $cfg_tuanFee / 100;
                $fee         = $fee < 0.01 ? 0 : $fee;
                $orderprice_ = sprintf('%.2f', $orderprice - $fee);

                //判断商家账户全额是否充足
                if ($peerpay <= 0) {
                    if ($umoney < $orderprice_) return array("state" => 200, "info" => '您的账户余额不足，无法撤消，请先充值！');
                }


                $cityName = $siteCityInfo['name'];
                $cityid   = (int)$siteCityInfo['cityid'];

                //分站佣金
                $fzFee = cityCommission($cityid, 'tuan');
                $fztotalAmount_ = $fee * $fzFee / 100;
                $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;

                $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` - '$fztotalAmount_' WHERE `cid` = '$cityid'");
                $dsql->dsqlOper($fzarchives, "update");

                //从商家帐户减去相应金额
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$orderprice_' WHERE `id` = '$uid'");
                $dsql->dsqlOper($archives, "update");
                $user  = $userLogin->getMemberInfo($uid, 1);
                $usermoney = $user['money'];
                //保存操作日志
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`balance`) VALUES ('$uid', '0', '$orderprice_', '撤消团购券：$cardnum', '$now','shop','tuikuan','$usermoney-$orderprice_')");
                $dsql->dsqlOper($archives, "update");

                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名

                //微信通知
                $param = array(
                    'type'   => "1", //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n分站扣除佣金 :" . sprintf("%.2f", $fztotalAmount_) . "\r\n原因：撤消团购券",
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );

                $modulename = getModuleTitle(array('name' => 'shop'));    //获取模块名

                $params = array(
                    'type'   => "2", //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn' => $cityName . "分站\r\n" . $modulename . "模块\r\n平台扣除佣金 :" . $fee . " \r\n分站扣除佣金 :" . sprintf("%.2f", $fztotalAmount_) . "\r\n原因：撤消团购券",
                        'date'      => date("Y-m-d H:i:s", time()),
                    )
                );
                //后台微信通知
                updateAdminNotice("tuan", "detail", $param);
                updateAdminNotice("tuan", "detail", $params);

                //将团购券状态更改为未使用
                $sql = $dsql->SetQuery("UPDATE `#@__tuanquan` SET `usedate` = 0 WHERE `id` = '$value'");
                $dsql->dsqlOper($sql, "update");

                //更新订单状态
                $sql = $dsql->SetQuery("UPDATE `#@__tuan_order` SET `orderstate` = 1 WHERE `id` = " . $results[0]['id']);
                $dsql->dsqlOper($sql, "update");

                //代付的不需要操作冻结金额
                if ($peerpay <= 0) {
                    //增加消费会员的冻结金额
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `freeze` = `freeze` + '$orderprice' WHERE `id` = '$userid'");
                    $dsql->dsqlOper($archives, "update");
                    $user  = $userLogin->getMemberInfo($userid, 1);
                    $usermoney = $user['freeze'];
                    //保存操作日志
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`balance`) VALUES ('$userid', '1', '$orderprice', '商城券撤消后冻结：$cardnum', '$now','shop','tuikuan','$usermoney')");
                    $dsql->dsqlOper($archives, "update");
                }
            }
        }

        return "操作成功！";
    }

    /**
     * Notes: 退款列表order-shop.js
     * Ueser: Administrator
     * DateTime: 2021/7/22 15:44
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function refundList()
    {

        global $userLogin;
        global $dsql;
        global $langData;

        $pageinfo = $list = $orderid = array();
        $page     = $pageSize = $where = "";


        $uid = $userLogin->getMemberID();

        if ($uid < 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_order` WHERE `userid` = $uid AND (`orderstate` = 6 or `orderstate` = 7) ");
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => '暂无数据！');

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage  = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . " LIMIT $atpage, $pageSize", "results");

        if ($results) {

            foreach ($results as $index => $result) {
                $list[$index][''] = $result[''];
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes:  更改配送方式审核
     * Ueser: Administrator
     * DateTime: 2021/11/5 17:39
     * Param1:
     * Param2:
     * Param3:
     * Return:
     *
     * @return array|string
     */
    public function updateShoptype()
    {
        global $dsql;
        global $langData;
        global $userLogin;

        $param  = $this->param;
        $shopid = (int)$param['sid'];
        if (empty($shopid)) return array("state" => 200, "info" => '参数错误！');


        $Sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE 1=1 AND `psaudit` = 1 AND `id` = '$shopid'");
        $Res = $dsql->dsqlOper($Sql, "results");

        if ($Res) return array("state" => 200, "info" => '已发起过审核！请勿重复发起');

        $archives = $dsql->SetQuery("UPDATE `#@__shop_store` SET `psaudit` = 1 WHERE `id` = " . $shopid);
        $results  = $dsql->dsqlOper($archives, "update");

        if ($results == 'ok') {

            return  'ok';
        } else {
            return array("state" => 200, "info" => '申请失败！');
        }
    }

    /**
     * Notes: 修改支付金额
     * Ueser: Administrator
     * DateTime: 2021/10/28 16:11
     * Param1:
     * Param2:
     * Param3:
     * Return:
     *
     * @return array|string
     */
    public function changePayprice()
    {
        global $dsql;
        global $langData;
        global $userLogin;

        $now   = GetMkTime(time());
        $uid   = $userLogin->getMemberID();

        $param = $this->param;

        $orderid      = (int)$param['orderid'];
        $totalprice   = (float)$param['totalprice'];
        $logistic     = (float)$param['logistic'];

        $proprice = $totalprice - $logistic;  //商品总金额

        $goodpricearr = $param['goodpricearr'] != '' ? json_decode($param['goodpricearr'], true) : array();

        $userinfo = $userLogin->getMemberInfo();

        if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop")) && $userinfo['is_staff'] != 1) {
            return array("state" => 200, "info" => '商家权限验证失败！');
        }

        //查询店铺ID
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = '$uid'");
        $store = (int)$dsql->getOne($sql);

        if(!$store){
            return array("state" => 200, "info" => '您还未开通商城店铺！');
        }

        if (!$goodpricearr) return array("state" => 200, "info" => '商品价格未修改！');

        $Sql = $dsql->SetQuery("SELECT `id`, `ordernum`, `point`, `userid`, `huodongtype`, `priceinfo` FROM `#@__shop_order` WHERE 1=1 AND `id` = '$orderid' AND `orderstate` = 0 AND `store` = $store");
        $Res = $dsql->dsqlOper($Sql, "results");
        if ($Res) {

            $_ordernum = $Res[0]['ordernum'];
            $_point = (int)$Res[0]['point'];  //是否用了积分
            $_userid = (int)$Res[0]['userid'];  //下单人id
            $_huodongtype = (int)$Res[0]['huodongtype'];  //是否是活动订单
            $_priceinfo = $Res[0]['priceinfo'] ? unserialize($Res[0]['priceinfo']) : array();  //费用明细

            // 会员优惠信息
            $privilege = array();
            $userinfo = $userLogin->getMemberInfo($_userid, 1);

            $auth_priceinfo = array();

            if ($userinfo['level']) {
                $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $privilege = unserialize($ret[0]['privilege']);

                    //商品优惠
                    $auth = $privilege['shop'];
                    if ($auth > 0 && $auth < 10 && !$_huodongtype) {
                        $auth_shop_price = (float)sprintf("%.2f", $proprice * (1 - $auth / 10));
                        if($auth_shop_price > 0){
                            $auth_priceinfo['auth_shop'] = array(
                                "level"  => $userinfo['level'],
                                "type"   => "auth_shop",
                                "body"   => $userinfo['levelName'] . "特权-商品原价优惠",
                                "amount" => sprintf("%.2f", $auth_shop_price)
                            );
                        }
                    }

                    // 配送费
                    $auth = $privilege['delivery'];
                    if ($logistic) {
                        $ok = false;
                        // 打折
                        if ($auth[0]['type'] == 'discount') {
                            if ($auth[0]['val'] > 0 && $auth[0]['val'] < 10) {
                                $ok = true;
                            }
                            // 计次
                        } elseif ($auth[0]['type'] == 'count') {
                            $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                            if ($auth[0]['val'] == 0 || ($auth[0]['val'] > 0 && $userinfo['delivery_count'] > 0)) {
                                $auth_delivery_isCount++;
                                $ok = true;
                            }
                        }

                        if ($ok) {
                            $auth_delivery_price = $auth[0]['type'] == 'count' ? $logistic : $logistic * (1 - $auth[0]['val'] / 10);
                            $auth_delivery_price = (float)sprintf("%.2f", $auth_delivery_price);
                            if($auth_delivery_price > 0){
                                $auth_priceinfo['auth_peisong'] = array(
                                    "level"  => $userinfo['level'],
                                    "type"   => "auth_peisong",
                                    "body"   => $userinfo['levelName'] . "特权-配送费优惠",
                                    "amount" => sprintf("%.2f", $auth_delivery_price)
                                );
                            }
                        }
                    }
                    
                }
            }

            $payprice = (float)$totalprice;  //最终要支付的费用

            //更新订单中的费用明细
            if ($_priceinfo) {
                foreach ($_priceinfo as $k => $v){
                    if($v['type'] == 'auth_shop' && $auth_priceinfo['auth_shop']){
                        $_priceinfo[$k] = $auth_priceinfo['auth_shop'];
                        $auth_amount = (float)$auth_priceinfo['auth_shop']['amount'];
                    }
                    if($v['type'] == 'auth_peisong' && $auth_priceinfo['auth_peisong']){
                        $_priceinfo[$k] = $auth_priceinfo['auth_peisong'];
                        $auth_amount = (float)$auth_priceinfo['auth_peisong']['amount'];
                    }
                    if($v['type'] == 'quan'){
                        $auth_amount = (float)$v['amount'];
                    }
                    $payprice -= $auth_amount;  //最终要支付的费用减去优惠金额
                }
            }

            $priceinfo = serialize($_priceinfo);

            //计算积分和余额要使用的值
            $totalBalance = $payprice;  //默认情况，余额支付所有费用

            //如果订单使用了积分抵扣
            $totalPoint = 0;

            global $cfg_pointRatio;
            if($_point){

                $userpoint = (int)$userinfo['point'];
                $usePoint = (float)getJifen('shop', $payprice);
                $totalPoint = $usePoint * $cfg_pointRatio;  //积分
                if ($totalPoint > $userpoint) {
                    $totalPoint = $userpoint;
                }

                $pointAmount = $totalPoint / $cfg_pointRatio;  //积分抵扣的金额
                $totalBalance -= $pointAmount;  //余额支付的费用
                
            }
            
            $ordernum = create_ordernum();  //修改价格后，需要更新订单号，否则第三方支付会出现：商户订单号重复的错误，因为一个订单如果已经发起过支付请求，再用这个订单号重新发起时，会对比之前的订单内容，由于订单金额不同了，导致第三方平台对比失败

            $archives = $dsql->SetQuery("UPDATE `#@__shop_order` SET `amount` = '$totalprice', `payprice` = '$payprice', `point` = '$totalPoint', `balance` = '$totalBalance', `ordernum` = '$ordernum', `changetype` = '1', `changeprice` = '$totalprice', `changelogistic` = '$logistic', `logistic` = '$logistic', `priceinfo` = '$priceinfo' WHERE `id` = ".$orderid);
            $results  = $dsql->dsqlOper($archives, "update");

            if ($results == 'ok') {
                foreach ($goodpricearr as $key => $value) {
                    if (is_numeric($value['id'])) {
    
                        $_price = (float)$value['price'];
    
                        $balance = $_price;
                        $point = 0;
    
                        if($_point){
    
                            $usePoint = (int)getJifen('shop', $_price);
                            $point = $usePoint * $cfg_pointRatio;  //积分
                            if ($point > $userpoint) {
                                $point = $userpoint;
                            }
                
                            $pointAmount = $point / $cfg_pointRatio;  //积分抵扣的金额
                            $balance -= $pointAmount;  //余额支付的费用
                            
                        }
    
                        $archives = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `point` = '$point', `balance` = '$balance', `payprice` = '$_price', `changeprice` = '$_price' WHERE `orderid` = ".$orderid." AND `proid` = " . $value['id']);
                        $results  = $dsql->dsqlOper($archives, "update");
                    }
                }
                
                //记录用户行为日志
                memberLog($uid, 'shop', 'order', $orderid, 'update', '修改订单金额(' . $ordernum . '=>' . $totalprice . '元)', '', '');

                return 'ok';
            }
        } else {
            return array("state" => 200, "info" => '未找到该笔订单,请核对后在试！');
        }
    }

    /**
     * Notes: 商家确认送达
     * Ueser: Administrator
     * DateTime: 2021/10/28 16:50
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function confirmDelivery()
    {
        global $dsql;
        global $langData;
        global $userLogin;

        $now   = GetMkTime(time());
        $uid   = $userLogin->getMemberID();
        $param = $this->param;

        $userinfo = $userLogin->getMemberInfo();

        if ($userinfo['userType'] == 2 && !verifyModuleAuth(array("module" => "shop")) && $userinfo['is_staff'] != 1) {
            return array("state" => 200, "info" => '商家权限验证失败！');
        }

        $oid   = (int)$param['id'];

        if (empty($oid)) return array("state" => 200, "info" => '参数错误！');

        $Sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_order` WHERE 1=1 AND `shipping` = '2' AND `id` = '$oid' AND `orderstate` = 6 AND `exp_date` != 0");
        $Res = $dsql->dsqlOper($Sql, "results");

        if ($Res) {

            $now = GetMkTime(time());
            $archives = $dsql->SetQuery("UPDATE `#@__shop_order` SET `songdatime` = '$now' WHERE `id` = " . $oid);
            $results  = $dsql->dsqlOper($archives, "update");

            if ($results == 'ok') {
                return 'ok';
            } else {
                return array("state" => 200, "info" => '操作失败！');
            }
        } else {
            return array("state" => 200, "info" => '订单错误！');
        }
    }

    /**
     * 商品列表筛选品牌
     * @return array
     */
    public function probrand()
    {
        global $dsql;
        global $langData;
        $pageinfo = $list = array();
        $typeid   = $rec = $page = $pageSize = $where = $orderby = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $title      = $this->param['title'];
                $cityid     = (int)$this->param['cityid'];
                $orderby    = (int)$this->param['orderby'];
                $typeid     = (int)$this->param['typeid'];
                $moduletype = (int)$this->param['moduletype'];
                $hottuan    = (int)$this->param['hottuan'];
                $page       = $this->param['page'];
                $pageSize   = $this->param['pageSize'];
            }
        }

        if (!empty($typeid)) {
            if ($dsql->getTypeList($typeid, "shop_type")) {
                global $arr_data;
                $arr_data = array();
                $lower    = arr_foreach($dsql->getTypeList($typeid, "shop_type"));
                $lower    = $typeid . "," . join(',', $lower);
            } else {
                $lower = $typeid;
            }
            $where .= " AND p.`type` in ($lower)";
        }

        //分类
        if (!empty($title)) {

            $where .= " AND p.`title` like '%" . $title . "%'";
        }

        if (!empty($rec)) {
            $where .= " AND `rec` = 1";
        }

        if ($moduletype == 4) {
            /*送到家*/
            //            $where .= " AND (FIND_IN_SET('2',`typesales`) or FIND_IN_SET('4',`typesales`) or FIND_IN_SET('3',`typesales`))";
            $where .= " AND !FIND_IN_SET('1',`typesales`)";
        }

        if (!empty($hottuan)) {

            if ($hottuan == 1) {
                $where .= " AND `promotype` = 1";
            }
        }

        switch ($orderby) {
                //默认
            case 0:
                $orderby = " ORDER BY p.`sort` DESC, p.`id` DESC";
                break;
                //销量降序
            case 1:
                $orderby = " ORDER BY p.`sales` DESC, p.`sort` DESC, p.`id` DESC";
                break;
                //销量升序
            case 2:
                $orderby = " ORDER BY p.`sales` ASC, p.`sort` DESC, p.`id` DESC";
                break;
                //价格升序
            case 3:
                $orderby = " ORDER BY p.`price` ASC, p.`sort` DESC, p.`id` DESC";
                break;
                //价格降序
            case 4:
                $orderby = " ORDER BY p.`price` DESC, p.`sort` DESC, p.`id` DESC";
                break;
                //时间降序
            case 5:
                $orderby = " ORDER BY p.`pubdate` DESC, p.`sort` DESC, p.`id` DESC";
                break;
                //人气降序
            case 6:
                $orderby = " ORDER BY p.`click` DESC, p.`sort` DESC, p.`id` DESC";
                break;
            case 7:
                $orderby = " ORDER BY p.`upshelftime` ASC";
                break;
            case 8:
                $orderby = " ORDER BY p.`upshelftime` DESC";
                break;
            case 9:
                $orderby = " ORDER BY p.`inventory` DESC";
                break;
            case 10:
                $orderby = " ORDER BY p.`inventory` ASC";
                break;
            case 11:
                $orderby = " ORDER BY `juli` ASC";
                break;
            case 12:
                $orderby = " ORDER BY `hp` DESC";
                break;
            default:
                $orderby = " ORDER BY p.`sort` DESC, p.`id` DESC";
                break;
        }

        if (!empty($cityid)) {
            $where .= " AND s.`cityid` = $cityid";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT b.`id`, b.`title` FROM `#@__shop_product` p LEFT JOIN `#@__shop_brand` b ON p.`brand` = b.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1 = 1 AND b.`id` is not null" . $where . " GROUP BY p.`brand` ");
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $orderby, "results");
        $list    = array();

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']    = $val['id'];
                $list[$key]['title'] = $val['title'];
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    public function  getrefund()
    {
        global $dsql;
        global $langData;

        $page     = $this->param['page'];
        $pageSize = $this->param['pageSize'];
        $id = $this->param['id'];
        $proid = $this->param['proid'];
        $historysql = $dsql->SetQuery("SELECT `ret_negotiate` FROM `#@__shop_order_product` WHERE `orderid` ='$id' AND `proid` = '$proid'");
        $historyres = $dsql->dsqlOper($historysql, 'results');
        $his = array();
        if ($historyres) {
            $reg = unserialize($historyres[0]['ret_negotiate']);
            array_multisort(array_column($reg['refundinfo'], 'datetime'), SORT_DESC, $reg['refundinfo']);
            $his = $reg;
        }
        return array("list" => $his);
    }
    /**
     *商圈列表
     */
    public function circleList()
    {
        global $dsql;
        global $langData;
        $pageinfo = $list = array();
        $page     = $pageSize = $where = "";
        // $cityid = getCityId();

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => '格式错误！');
            } else {
                $search   = $this->param['search'];
                $addrid   = $this->param['addrid'];
                $hot      = $this->param['hot'];
                $orderby  = $this->param['orderby'];
                $lng      = $this->param['lng'];
                $lat      = $this->param['lat'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        //数据共享
        require(HUONIAOINC . "/config/tuan.inc.php");
        $dataShare = (int)$customDataShare;

        if (!$dataShare) {
            $cityid = getCityId($this->param['cityid']);
            //遍历区域
            if ($cityid) {
                $where .= " AND `cid` = " . $cityid;
            }
        }

        if (!empty($hot)) {
            $where .= " and `hot` = '$hot'";
        }

        if (!empty($addrid)) {
            $where .= " and `qid` = '$addrid'";
        }

        if (!empty($search)) {
            $where .= " and `name` like '%$search%'";
        }

        //查询距离
        if ((!empty($lng)) && (!empty($lat))) {
            $select = "(2 * 6378.137* ASIN(SQRT(POW(SIN(3.1415926535898*(" . $lat . "-`lat`)/360),2)+COS(3.1415926535898*" . $lat . "/180)* COS(`lat` * 3.1415926535898/180)*POW(SIN(3.1415926535898*(" . $lng . "-`lng`)/360),2))))*1000 AS distance,";
        } else {
            $select = "";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__site_city_circle` WHERE 1 = 1" . $where);
        //print_R($archives);exit;
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => '暂无数据！');

        $pageinfo = array(
            "page"       => $page,
            "pageSize"   => $pageSize,
            "totalPage"  => $totalPage,
            "totalCount" => $totalCount
        );

        $sql     = $dsql->SetQuery("SELECT `id`,`name`,`qid`,`lng`,`lat`,`openStart`,`openEnd`,`tel`," . $select . "`litpic` FROM `#@__site_city_circle` WHERE 1=1 $where ORDER BY `id` ASC");
        $atpage  = $pageSize * ($page - 1);
        $where   = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($sql . $where, "results");
        $list    = array();
        if (count($results) > 0) {
            foreach ($results as $key => $value) {
                $list[$key]["id"]        = $value["id"];
                $list[$key]["name"]      = $value["name"];
                $list[$key]["openStart"] = $value["openStart"];
                $list[$key]["openEnd"]   = $value["openEnd"];
                $list[$key]["tel"]       = $value["tel"];
                $list[$key]["lng"]       = $value["lng"];
                $list[$key]["lat"]       = $value["lat"];
                $list[$key]["litpic"]    = !empty($value["litpic"]) ? getFilePath($value["litpic"]) : '/static/images/404.jpg';
                $list[$key]['distance']  = $value['distance'] > 1000 ? sprintf("%.1f", $value['distance'] / 1000) . $langData['siteConfig'][13][23] : sprintf("%.1f", $value['distance']) . $langData['siteConfig'][13][22];  //距离   //千米  //米

                if (!empty($value['qid'])) {
                    $addrName = getParentArr("site_area", $value['qid']);
                    global $data;
                    $data                   = "";
                    $addrArr                = array_reverse(parent_foreach($addrName, "typename"));
                    $addrArr                = count($addrArr) > 2 ? array_splice($addrArr, 1) : $addrArr;
                    $list[$key]['addrname'] = $addrArr;

                    global $data;
                    $data               = "";
                    $addrArr            = array_reverse(parent_foreach($addrName, "id"));
                    $list[$key]['city'] = count($addrArr) > 2 ? $addrArr[1] : $addrArr[0];
                } else {
                    $list[$key]['addrname'] = "";
                    $list[$key]['city']     = "";
                }

                //商家个数
                $archives               = $dsql->SetQuery("SELECT `id` FROM `#@__tuan_store` WHERE `cityid`='$cityid' and `state` = 1 and find_in_set(" . $value['id'] . ", `circle`) ");
                $totalCount             = $dsql->dsqlOper($archives, "totalCount");
                $list[$key]['storenum'] = $totalCount;

                $param = array(
                    "service"  => "tuan",
                    "template" => "sqdetail",
                    "id"       => $value['id']
                );
                $url   = getUrlPath($param);

                $list[$key]['url'] = $url;
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 商圈详情
     */
    public function circleDetail()
    {
        global $dsql;
        global $userLogin;
        $circleDetail = array();
        $id           = $this->param;
        $id           = is_numeric($id) ? $id : $id['id'];
        $uid          = $userLogin->getMemberID();
        $cityid       = getCityId();

        if (!is_numeric($id)) {
            return array("state" => 200, "info" => '格式错误！');
        }

        $archives = $dsql->SetQuery("SELECT `id`,`cid`,`qid`,`name`,`openStart`,`openEnd`,`tel`,`lng`, `lat`, `litpic`, `address` FROM `#@__site_city_circle` WHERE `id` = '$id'");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $circleDetail["id"]        = $results[0]['id'];
            $circleDetail["cid"]       = $results[0]['cid'];
            $circleDetail["name"]      = $results[0]['name'];
            $circleDetail["openStart"] = $results[0]['openStart'];
            $circleDetail["openEnd"]   = $results[0]['openEnd'];
            $circleDetail["tel"]       = $results[0]['tel'];
            $circleDetail["lng"]       = $results[0]['lng'];
            $circleDetail["lat"]       = $results[0]['lat'];
            $circleDetail["litpic"]    = $results[0]['litpic'] ? getFilePath($results[0]['litpic']) : '';
            $circleDetail["address"]   = $results[0]['address'];
            //商家个数
            $archives                 = $dsql->SetQuery("SELECT `id` FROM `#@__tuan_store` WHERE `cityid`='$cityid' and `state` = 1 and  find_in_set(" . $results[0]['id'] . ", `circle`) ");
            $totalCount               = $dsql->dsqlOper($archives, "totalCount");
            $circleDetail['storenum'] = $totalCount;

            $addrName = getParentArr("site_area", $results[0]['qid']);
            global $data;
            $data                     = "";
            $addrArr                  = array_reverse(parent_foreach($addrName, "typename"));
            $addrArr                  = count($addrArr) > 2 ? array_splice($addrArr, 1) : $addrArr;
            $circleDetail['addrname'] = $addrArr;
        }
        return $circleDetail;
    }

    /**
     * 自行/快递退货
     */
    public function selfreturn()
    {
        global $dsql;
        global $userLogin;
        $id         = $this->param;
        $id         = is_numeric($id) ? $id : $id['id'];
        $proid      = (int)$this->param['proid'];
        $self       = (int)$this->param['self'];    // 2自行  1快递
        $expcompany = $this->param['exp-company'] ? $this->param['exp-company'] : '';
        $expnumber  = $this->param['exp-number'] ? $this->param['exp-number'] : '';
        $delivery   = $this->param['delivery'] ? (int)$this->param['delivery'] : 0;         // 已送达
        $archives = $dsql->SetQuery("SELECT `ret_negotiate` FROM `#@__shop_order_product`   WHERE `orderid` = '$id' AND `proid` = '$proid'");
        $results = $dsql->dsqlOper($archives, "results");
        $now = GetMkTime(time());
        if ($delivery == 1) {
            $ret_negotiate = unserialize($results[0]['ret_negotiate']);
            $refundinfo                 = array();
            if ($ret_negotiate) {
                $refundinfo['selftype']     = 2;            //  1待送达  2已送达
                array_push($ret_negotiate['refundinfo'], $refundinfo);
            } else {
                $ret_negotiate['refundinfo'][1] = $refundinfo;
            }
            $ret_negotiatestr = serialize($ret_negotiate);
            $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `ret_negotiate` = '$ret_negotiatestr',`user_expoktime` = '$now',`selftype` = 2 WHERE `orderid` ='$id' AND `proid` = '$proid' ");
            $dsql->dsqlOper($orderOpera, "update");
            return '操作成功！';
        } else {
            if ($self == 2)    //自行
            {
                $ret_negotiate = unserialize($results[0]['ret_negotiate']);
                $refundinfo                 = array();
                if ($ret_negotiate) {
                    $refundinfo['selftype']     = 1;            //  1待送达  2已送达
                    $refundinfo['typestatus']   = 0;     // 0买家   1卖家   2客服

                    array_push($ret_negotiate['refundinfo'], $refundinfo);
                } else {
                    $ret_negotiate['refundinfo'][1] = $refundinfo;
                }
                $ret_negotiatestr = serialize($ret_negotiate);
                $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `ret_negotiate` = '$ret_negotiatestr',`user_exptype` = '2',`selftype` = 1 WHERE `orderid` ='$id' AND `proid` = '$proid' ");
                $dsql->dsqlOper($orderOpera, "update");
                return '操作成功！';
            } elseif ($self == 1) {     //快递
                $ret_negotiate = unserialize($results[0]['ret_negotiate']);

                $refundinfo                 = array();
                if ($ret_negotiate) {
                    $now = GetMkTime(time());

                    $refundinfo['expcompany']     = $expcompany;
                    $refundinfo['expnumber']     = $expnumber;
                    $refundinfo['typestatus']   = 0;
                    $refundinfo['typename']     = '快递寄出';
                    $refundinfo['datetime']     = $now;

                    array_push($ret_negotiate['refundinfo'], $refundinfo);
                } else {
                    $ret_negotiate['refundinfo'][1] = $refundinfo;
                }
                $ret_negotiatestr = serialize($ret_negotiate);
                $now = GetMkTime(time());
                $orderOpera = $dsql->SetQuery("UPDATE `#@__shop_order_product` SET `ret_negotiate` = '$ret_negotiatestr',`user_expcompany`= '$expcompany',`user_expnumber`='$expnumber',`user_exptime` = '$now',`user_exptype` = '1' WHERE `orderid` ='$id' AND `proid` = '$proid' ");
                $dsql->dsqlOper($orderOpera, "update");
                return '操作成功！';
            }
        }


        return $this->param;
    }

    /**
     * 活动商品展示
     */
    public function huodongOpen()
    {
        global $dsql;
        global $userLogin;
        $id         = $this->param;
        $pagetype    = $this->param['pagetype'];
        include HUONIAOINC . "/config/shop.inc.php";
        $huodongshopopen = explode(",", $custom_huodongshopopen);
        $dataShare = (int)$customDataShare;
        $shop = array();
        $where = ' 1 = 1';
        if ($pagetype == 1) {
            $where =  '`shoptype` = 1';
        }
        if ($pagetype == 2) {
            $where = '(`shoptype` = 2 OR `shoptype` = 0)';
        }

        $cityid = getCityId($this->param['cityid']);

        if (!$dataShare) {
            if ($cityid) {
                $where .= " AND s.`cityid` = " . $cityid;
            }
        }

        if ($pagetype == 1) {
            if ($cityid) {
                $where .= " AND s.`cityid` = " . $cityid;
            }
        }

        if (in_array('1', $huodongshopopen)) {     //准点抢
            $archives = $dsql->SetQuery("SELECT p.`typesales`,p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND h.`state` =1  AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND s.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` = 1 AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where  LIMIT 10");
            $qiang = $dsql->dsqlOper($archives, "results");
            $list = array();
            foreach ($qiang as $k => $v) {
                $typesalesarr = $v['typesales'] != '' ? explode(',', $v['typesales']) : array();
                $is_daodian = 0;
                if (in_array('1', $typesalesarr)) {
                    $is_daodian = 1;
                }
                $list[$k]['is_daodian']   = $is_daodian;
                $list[$k]['id'] = $v['id'];
                $list[$k]['huodongprice'] = $v['huodongprice'];
                $list[$k]['huodongsales'] = $v['huodongsales'];
                $list[$k]['huodongnumber'] = $v['huodongnumber'];
                $list[$k]['title']        = $v['title'];
                $list[$k]['subtitle']     = $v['subtitle'];
                $list[$k]['sales']        = $v['sales'];
                $list[$k]['hid']          = $v['hid'];
                $list[$k]['litpic']       = getFilePath($v['litpic']);
                $list[$k]['huodongstate'] = 1;
                $list[$k]['state']        = $v['state'];
                $list[$k]['mprice']       = $v['mprice'];
                $list[$k]['ktime']        = date("m-d H:i:s", $v['ktime']);
                $list[$k]['ktimestr']     = $v['ktime'];
                $list[$k]['etimestr']     = $v['etime'];
                $list[$k]['etime']        = date("m-d H:i:s", $v['etime']);
                $list[$k]['click']        = $v['click'];
                $list[$k]['huodongtimestate'] = 1;
                $list[$k]['huodonginventory'] = $v['huodonginventory'];

                $param    = array(
                    "service"  => "shop",
                    "template" => "detail",
                    "id"       => $v['id']
                );
                $urlParam = getUrlPath($param);

                $list[$k]['url'] = $urlParam;
            }

            $archivesr = $dsql->SetQuery("SELECT p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND h.`state` =1  AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` = 1 AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where");
            $qiangCount = $dsql->dsqlOper($archivesr, "totalCount");

            if (!empty($list)) {
                $shop[1][] = $list;
            }
        }
        if (in_array('2', $huodongshopopen)) {     //准点秒
            $archives = $dsql->SetQuery("SELECT p.`typesales`,p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND h.`state` =1 AND s.`state` = 1 AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` = 2 AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where LIMIT 10");
            $miao = $dsql->dsqlOper($archives, "results");
            $list = array();
            foreach ($miao as $k => $v) {
                $typesalesarr = $v['typesales'] != '' ? explode(',', $v['typesales']) : array();
                $is_daodian = 0;
                if (in_array('1', $typesalesarr)) {
                    $is_daodian = 1;
                }
                $list[$k]['is_daodian']   = $is_daodian;
                $list[$k]['id'] = $v['id'];
                $list[$k]['huodongprice'] = $v['huodongprice'];
                $list[$k]['huodongsales'] = $v['huodongsales'];
                $list[$k]['huodongnumber'] = $v['huodongnumber'];
                $list[$k]['title']        = $v['title'];
                $list[$k]['subtitle']     = $v['subtitle'];
                $list[$k]['sales']        = $v['sales'];
                $list[$k]['hid']          = $v['hid'];
                $list[$k]['litpic']       = getFilePath($v['litpic']);
                $list[$k]['huodongstate'] = 1;
                $list[$k]['state']        = $v['state'];
                $list[$k]['mprice']       = $v['mprice'];
                $list[$k]['ktime']        = date("m-d H:i:s", $v['ktime']);
                $list[$k]['ktimestr']     = $v['ktime'];
                $list[$k]['etimestr']     = $v['etime'];
                $list[$k]['etime']        = date("m-d H:i:s", $v['etime']);
                $list[$k]['click']        = $v['click'];
                $list[$k]['huodongtimestate'] = 1;
                $list[$k]['huodonginventory'] = $v['huodonginventory'];

                $param    = array(
                    "service"  => "shop",
                    "template" => "detail",
                    "id"       => $v['id']
                );
                $urlParam = getUrlPath($param);

                $list[$k]['url'] = $urlParam;
            }

            $archivesr = $dsql->SetQuery("SELECT p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND h.`state` =1  AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` = 2 AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where ");
            $miaocount = $dsql->dsqlOper($archivesr, "totalCount");
            if (!empty($miao)) {
                $shop[2] = $list;
            }
        }
        if (in_array('3', $huodongshopopen)) {     //砍价
            $bargainsql = $dsql->SetQuery("SELECT p.`typesales`,p.`id`,p.`title` ,p.`litpic`,p.`mprice`,p.`price`,p.`sales`,h.`huodongprice`,h.`huodonginventory`,h.`huodongsales` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE p.`state` = 1 AND s.`state` = 1 AND h.`huodongtype` = 3 AND h.`state` = 1  AND h.`ktime`<= " . GetMkTime(time()) . " AND  h.`etime` >= " . GetMkTime(time()) . " AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where  GROUP BY h.`proid`  DESC LIMIT 10");

            $bar = $dsql->dsqlOper($bargainsql, "results");
            $list = array();
            foreach ($bar as $k => $v) {
                $typesalesarr = $v['typesales'] != '' ? explode(',', $v['typesales']) : array();
                $is_daodian = 0;
                if (in_array('1', $typesalesarr)) {
                    $is_daodian = 1;
                }
                $list[$k]['is_daodian']       = $is_daodian;
                $list[$k]['id']               = $v['id'];
                $list[$k]['title']            = $v['title'];
                $list[$k]['mprice']           = $v['mprice'];
                $list[$k]['price']            = $v['price'];
                $list[$k]['sales']            = $v['sales'] ? $v['sales'] : $v['huodongsales'];
                $list[$k]['floorprice']       = $v['huodongprice'];
                $list[$k]['litpic']           = $v['litpic'] != '' ? getFilePath($v['litpic']) : '';
                $list[$k]['huodonginventory'] = $v['huodonginventory'];
                $isself      = 0;
                $kanjiastate = 0;
                if ($uid > 0) {
                    $isselfsql = $dsql->SetQuery("SELECT `id`,`state` FROM `#@__shop_bargaining` WHERE `userid` = '$uid' AND `proid` = '" . $v['id'] . "' AND (`state` =0 OR `state` = 1)");
                    $isselfres = $dsql->dsqlOper($isselfsql, "results");

                    if ($isselfres) {
                        $kanjiastate = $isselfres[0]['state'];
                        $isself      = 1;
                    }
                }
                $list[$k]['isself']      = $isself;
                $list[$k]['kanjiastate'] = $kanjiastate;

                $param    = array(
                    "service"  => "shop",
                    "template" => "detail",
                    "id"       => $v['id']
                );
                $urlParam = getUrlPath($param);

                $list[$k]['url'] = $urlParam;
            }

            $bargainsqlr = $dsql->SetQuery("SELECT p.`id`,p.`title` ,p.`litpic`,p.`mprice`,p.`price`,p.`sales`,h.`huodongprice`,h.`huodonginventory`,h.`huodongsales` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON  h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE p.`state` = 1 AND h.`huodongtype` = 3 AND h.`state` = 1  AND h.`ktime`<= " . GetMkTime(time()) . " AND  h.`etime` >= " . GetMkTime(time()) . " AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where  GROUP BY h.`proid`  DESC ");
            $barcount = $dsql->dsqlOper($bargainsqlr, "totalCount");
            $shop[3] = $list;
        }

        if ($custom_shopopen == 4 && $customshopCheck == 1) {   //热门商品,本地团购类

            $param    = array(
                "service"  => "shop",
                "template" => "detail",
                "id"       => "%id%"
            );
            $urlParam = getUrlPath($param);

            //热门团购
            $archives = $dsql->SetQuery("SELECT p.`id`, p.`type`,p.`smallCount`,p.`packingCount`,p.`kstime`,p.`ketime`,p.`title`,p.`subtitle`, p.`store`, p.`mprice`, p.`price`, p.`sales`, p.`click`, p.`inventory`, p.`litpic`, p.`flag`, p.`btime`, p.`etime`, p.`state`, p.`pubdate`, p.`upshelftime`,  p.`specification`,p.`logistic`,p.`spePics`,p.`speFiled`,p.`speCustom` ,p.`floorprice`, p.`fx_reward`,p.`typesales`,p.`availableweek`,p.`availabletime`,s.`lng`,s.`lat` FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`promotype` = 1 AND p.`state` = 1 AND s.`state` = 1 AND s.`cityid` = " . $cityid . " AND $where  ORDER BY p.`sort` DESC ,p.`id`  DESC LIMIT 10 ");
            $hottuan = $dsql->dsqlOper($archives, "results");
            $list = array();
            foreach ($hottuan as $key => $val) {
                $list[$key]['id']           = $val['id'];
                $list[$key]['title']        = $val['title'];
                $list[$key]['store']        = $val['store'];
                $list[$key]['price']        = $val['price'];
                $list[$key]['price']        = $val['price'];
                $list[$key]['sales']        = $val['sales'];
                $list[$key]['mprice']       = $val['mprice'];
                $list[$key]['litpic']       = getFilePath($val['litpic']);
                $list[$key]['subtitle']     = $val['subtitle'];
                $list[$key]['logistic']     = $val['logistic'];
                $list[$key]['inventory']    = $val['inventory'];
                $list[$key]['floorprice']   = $val['floorprice'];
                $list[$key]['smallCount']   = $val['smallCount'];
                $list[$key]['packingCount'] = $val['packingCount'];
                $list[$key]['shopunit']     = $val['shopunit'];
                $list[$key]['typesales']    = $val['typesales'];
                $archives = $dsql->SetQuery("SELECT `openFree` FROM `#@__shop_logistictemplate` WHERE `id` = " . $val['logistic']);
                $lresults  = $dsql->dsqlOper($archives, "results");   //包邮
                $youhave = 0;
                if ($lresults[0]['openFree'] == 1) {
                    $youhave = 1;
                }
                $list[$key]["youhave"] = $youhave;

                /*营业日*/
                $day = array('1' => '周一', '2' => '周二', '3' => '周三', '4' => '周四', '5' => '周五', '6' => '周六', '7' => '周日',);

                $daystr = '';
                $availableweek = $val['availableweek'] != '' ? explode(',', $val['availableweek']) : array();
                if ($availableweek) {

                    for ($i = 1; $i <= 7; $i++) {
                        if (in_array($i, $availableweek)) {
                            $daystr .= $day[$i] . ' ';
                        }
                    }
                }
                $list[$key]['daystr']     = $daystr;
                $list[$key]['daystrarr']  = $availableweek;

                $typesalesarr = $val['typesales'] != '' ? explode(',', $val['typesales']) : array();

                $is_daodian = 0;
                //                if (in_array('1',$typesalesarr)) {
                //                    $is_daodian = 1;
                //                }
                if ($val['typesales'] == 1) {
                    $is_daodian = 1;
                }
                $list[$key]['is_daodian']   = $is_daodian;
                //                $list[$key]['typesalesarr'] = $val['typesales']!='' ? unserialize($val['typesales']) : array() ;
                $list[$key]['typesalesarr'] = $typesalesarr;

                //图集
                $pics    = $val['pics'];
                $picsArr = array();
                if (!empty($pics)) {
                    $pics = explode(',', $pics);
                    foreach ($pics as $k => $v) {
                        array_push($picsArr, getFilePath($v));
                    }
                }
                $list[$key]['imgGroup'] = $picsArr;

                $rec   = 0;
                $tejia = 0;
                $hot   = 0;
                $panic = 0;
                $flag  = explode(",", $val['flag']);
                if (in_array(0, $flag)) {
                    $rec = 1;
                }
                if (in_array(1, $flag)) {
                    $tejia = 1;
                }
                if (in_array(2, $flag)) {
                    $hot = 1;
                }
                if (in_array(3, $flag)) {
                    $panic = 1;

                    $list[$key]['btime'] = $val['btime'];
                    $list[$key]['etime'] = $val['etime'];
                }
                if (in_array(4, $flag)) {
                    $panic = 2;

                    $list[$key]['kstime'] = $val['kstime'];
                    $list[$key]['ketime'] = $val['ketime'];
                }

                if ($limited == 4) { //限时抢购状态
                    if (time() < $time - 3600) { //大于现在的时间
                        $list[$key]['states'] = 1; //查看详情
                    } else {
                        $list[$key]['states'] = 2; //立即抢购
                    }
                    if (date('Ymd', $val['btime']) == date('Ymd')) {
                        $list[$key]['statestime'] = date('H:i', $val['btime']);
                        $list[$key]['statesname'] = '今天';
                    } else {
                        $list[$key]['statestime'] = date('H:i', $val['btime']);
                        $list[$key]['statesname'] = '明天';
                    }
                }

                $list[$key]['rec']   = $rec;
                $list[$key]['tejia'] = $tejia;
                $list[$key]['hot']   = $hot;
                $list[$key]['panic'] = $panic;

                // $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_common` WHERE `pid` = ".$val['id']);
                $sql                   = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `type` = 'shop-order' AND `aid` = " . $val['id'] . " AND `pid` = 0");
                $comment               = $dsql->dsqlOper($sql, "totalCount");
                $list[$key]['comment'] = $comment;

                if ($u == 1) {
                    $list[$key]['state']   = $val['state'];
                    $list[$key]['pubdate'] = $val['pubdate'];
                    $list[$key]['upshelftime'] = $val['upshelftime'];
                }

                $list[$key]['url'] = str_replace("%id%", $val['id'], $urlParam);


                //规格自定义图片
                $spePicPx = 0;
                $spePics  = $val['spePics'] ? unserialize($val['spePics']) : array();

                //已有规格自定义字段
                $speFiled = $val['speFiled'] ? unserialize($val['speFiled']) : array();

                //新建自定义规格
                $speCustom = $val['speCustom'] ? unserialize($val['speCustom']) : array();


                //规格值
                // $specifiIds    = array();
                // $speArr        = array();
                // $guige         = array();
                // $specifiList   = $val['specification'];
                // if (!empty($specifiList)) {
                //     $specifiArr = explode("|", $specifiList);
                //     foreach ($specifiArr as $k_ => $v_) {
                //         $value = explode(",", $v_);
                //         $ids   = explode("-", $value[0]);

                //         $spe = hnSortArr(explode('-', $value[0]));
                //         //数字、字母、中文混合排序
                //         // collator_sort(collator_create('zh_CN'),$spe);
                //         $speArr[$k_]['spe']   = join("-", $spe);
                //         $speArr[$k_]['price'] = explode("#", $value[1]);
                //         array_push($guige, explode("#", $value[1]));
                //         foreach ($ids as $key_ => $val_) {
                //             if (!in_array($val_, $specifiIds)) {
                //                 array_push($specifiIds, $val_);
                //             }
                //         }
                //     }
                // }

                // $guiPrice = array();        //现价
                // $guiyuanPrice = array();           //原价
                // foreach ($guige as $gkey => $gvalue) {
                //     array_push($guiPrice, $gvalue[1]);
                //     array_push($guiyuanPrice, $gvalue[0]);
                // }
                // if (!empty($guiPrice) && !empty($guiyuanPrice)) {
                //     $list[$key]['guiPrice'] = min($guiPrice);               //xianjia
                //     $list[$key]['guiPrice'] = min($guiyuanPrice);       //yuanjia
                //     $list[$key]['mprice']   = min($guiyuanPrice);
                //     $list[$key]['price']   = min($guiPrice);
                // }

                // $list[$key]['specification'] = $speArr;
                // $list[$key]['specifiList']   = $specifiList;

                //规格值
                // $speArr        = array();
                // $guige         = array();
                // $specifiIds    = array();
                // $specifiList   = $val['specification'];
                // if (!empty($specifiList)) {
                //     $specifiArr = json_decode($specifiList, true) ?: array();
                //     foreach ($specifiArr as $k_ => $v_) {
                //         $ids   = is_string($v_['speids']) ? array($v_['speids']) : $v_['speids'];
                //         $speArr[$k_]['spe']   = $v_['speids'];
                //         $speArr[$k_]['price'] = $v_['price'];

                //         array_push($guige, array($v_['mprice'], $v_['price']));
                //     }
                // }
                $this->param = $val['id'];
                $product_detail = $this->detail(1);
                $_specification = $product_detail['specification'];
                $list[$key]['specification'] = $_specification;
                
                //提取多规则中的价格
                $specification = array();
                $guige = array();
                $specifiIds    = array();
                if($_specification && is_array($_specification)){
                    foreach($_specification as $gval){
                        $_gmprice = (float)$gval['price'][0];
                        $_gprice = (float)$gval['price'][1];
                        $_gid = (int)$gval['id'];

                        array_push($guige, array($_gmprice, $_gprice));

                        if (!in_array($_gid, $specifiIds)) {
                            array_push($specifiIds, $_gid);
                        }
                    }
                }

                $guiPrice = array();        //现价
                $guiyuanPrice = array();           //原价
                foreach ($guige as $gkey => $gvalue) {
                    array_push($guiPrice, $gvalue[1]);
                    array_push($guiyuanPrice, $gvalue[0]);
                }
                if (!empty($guiPrice) && !empty($guiyuanPrice)) {
                    $list[$key]['guiPrice'] = min($guiPrice);               //xianjia
                    $list[$key]['guiPrice'] = min($guiyuanPrice);       //yuanjia
                    $list[$key]['mprice']   = min($guiyuanPrice);
                    $list[$key]['price']   = min($guiPrice);
                }

                //遍历所选分类ID
                $typeid = $val['type'];

                //遍历所选分类ID
                global $data;
                $data    = "";
                $proType = getParentArr("shop_type", $typeid);

                global $data;
                $data  = "";
                $proId = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
                // $proId = array_slice($proId, 0, count($proType));

                //根据分类ID，获取分类属性值
                $itemid1 = 0;
                if (count($proId) > 0) {
                    foreach ($proId as $k => $v) {
                        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `spe` != '' AND `id` = " . $v);
                        $results  = $dsql->dsqlOper($archives, "results");
                        if ($results) {
                            $itemid1 = $v;
                        }
                    }
                }

                $typename    = '';
                $archives    = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $typeid);
                $typeResults = $dsql->dsqlOper($archives, "results");
                if ($typeResults) {
                    $typename = $typeResults[0]['typename'];
                }

                if ($typeid != 0) {
                    $archives    = $dsql->SetQuery("SELECT `typename`, `spe` FROM `#@__shop_type` WHERE `id` = " . $itemid1);
                    $typeResults = $dsql->dsqlOper($archives, "results");
                    if ($typeResults) {
                        if ($typeResults[0]['spe']) {
                            $spe = explode(",", $typeResults[0]['spe']);
                            foreach ($spe as $key_ => $val_) {
                                $archives_1 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `id` = " . $val_ . " ORDER BY `weight` ASC");
                                $results_1  = $dsql->dsqlOper($archives_1, "results");
                                if ($results_1) {
                                    $speItem = array();
                                    foreach ($results_1 as $key_1 => $val_1) {

                                        //自定义字段
                                        $speList = $speFiled[$val_1['id']];
                                        if ($speFiled && $speList) {
                                            foreach ($speList as $k_s => $v_s) {
                                                $val_s = str_replace('custom_' . $val_1['id'] . '_', '', $v_s);

                                                //颜色
                                                if ($results_1[0]['typename'] == "颜色") {

                                                    $imgurl = '';
                                                    if ($spePics) {
                                                        $imgurl = getFilePath($spePics[$spePicPx]);
                                                        $spePicPx++;
                                                    }

                                                    array_push($speItem, array(
                                                        'id'   => $v_s,
                                                        'name' => $val_s,
                                                        'pic'  => $imgurl
                                                    ));

                                                    //普通类型
                                                } else {
                                                    array_push($speItem, array(
                                                        'id'   => $v_s,
                                                        'name' => $val_s
                                                    ));
                                                }
                                            }
                                        }


                                        $archives_2 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `parentid` = " . $val_1['id'] . " ORDER BY `weight` ASC");
                                        $results_2  = $dsql->dsqlOper($archives_2, "results");
                                        if ($results_2) {
                                            $i = 0;
                                            foreach ($results_2 as $key_2 => $val_2) {
                                                if (in_array($val_2['id'], $specifiIds)) {

                                                    //颜色
                                                    if ($results_1[0]['typename'] == "颜色") {

                                                        $imgurl = '';
                                                        if ($spePics) {
                                                            $imgurl = getFilePath($spePics[$spePicPx]);
                                                            $spePicPx++;
                                                        }

                                                        array_push($speItem, array(
                                                            'id'   => $val_2['id'],
                                                            'name' => $val_2['typename'],
                                                            'pic'  => $imgurl
                                                        ));

                                                        //普通类型
                                                    } else {
                                                        array_push($speItem, array(
                                                            'id'   => $val_2['id'],
                                                            'name' => $val_2['typename']
                                                        ));
                                                    }

                                                    // $speItem[$i]['name'] = $val_2['typename'];
                                                    // $speItem[$i]['id'] = $val_2['id'];
                                                    // $i++;
                                                } else {

                                                    //颜色
                                                    if ($results_1[0]['typename'] == "颜色" && $spePics) {
                                                        $spePicPx++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    if ($speItem) {
                                        array_push($specification, array(
                                            'id'       => $results_1[0]['id'],
                                            'typename' => $results_1[0]['typename'],
                                            'itemtype' => '0', /*自定义*/
                                            'item'     => $speItem
                                        ));

                                        // $specification[$key_]['id'] = $results_1[0]['id'];
                                        // $specification[$key_]['typename'] = $results_1[0]['typename'];
                                        // $specification[$key_]['item'] = $speItem;
                                    }
                                }
                            }
                        }
                    }
                }

                if ($speCustom) {
                    foreach ($speCustom as $k => $v) {
                        $custom = array();
                        if ($v) {
                            foreach ($v as $k_ => $v_) {
                                array_push($custom, array(
                                    'id'   => $v_,
                                    'name' => $v_
                                ));
                            }
                        }
                        array_push($specification, array(
                            'id'       => $k,
                            'typename' => $k,
                            'itemtype' => '1', /*自定义*/
                            'item'     => $custom
                        ));
                    }
                }

                $list[$key]["typeid"]           = $typeid;
                $list[$key]["typename"]         = $typename;
                $list[$key]["specificationArr"] = $specification;

                //商家信息
                $sql = $dsql->SetQuery("SELECT `id`, `title`, `domaintype`, `addrid`,`lng`,`lat` FROM `#@__shop_store` WHERE `id` = " . $val['store']);
                $res = $dsql->dsqlOper($sql, "results");
                if (!empty($res)) {
                    $list[$key]["storeTitle"] = $res[0]['title'];
                    $param                    = array(
                        "service"  => "shop",
                        "template" => "store-detail",
                        "id"       => "%id%"
                    );
                    $storeurlParam            = getUrlPath($param);
                    $url                      = "";
                    if ($res[0]['domaintype'] == 1) {
                        $domainInfo = getDomain('shop', 'shop_store', $res[0]['id']);
                        $url        = "http://" . $domainInfo['domain'];
                    } else {
                        $url = str_replace("%id%", $res[0]['id'], $storeurlParam);
                    }
                    $list[$key]['storeurl'] = $url;
                    global $data;
                    $data                  = "";
                    $addrName              = getParentArr("site_area", $res[0]['addrid']);
                    $addrName              = array_reverse(parent_foreach($addrName, "typename"));
                    $list[$key]['alladdr'] = $addrName;
                    $list[$key]['addr']    = $addrName[0] . $addrName[1];
                    $julishop = oldgetDistance($res[0]['lng'], $res[0]['lat'], $userlng, $userlat) / 1000;

                    $list[$key]['julishop'] = $julishop;
                }

                /*查看参加了哪些活动*/
                $endtime = GetMkTime(time());
                $huodongsql = $dsql->SetQuery("SELECT `huodongtype`,`ktime`,`etime`,`changci`,`huodongtype`,`huodongnumber`,`huodongprice`FROM `#@__shop_huodongsign` WHERE `proid` = '" . $val['id'] . "' AND `state` != 2 AND `etime` > '$endtime' GROUP BY `huodongtype`");

                $huodongres               = $dsql->dsqlOper($huodongsql, "results");

                if ($huodongres) {

                    $list[$key]['huodongktime']     = (int)$huodongres[0]['ktime'];
                    $list[$key]['huodongprice']     =  sprintf('%.2f', $huodongres[0]['huodongprice']);
                    $list[$key]['huodongetime']     = (int)$huodongres[0]['etime'];
                    $list[$key]['huodongechangci']  = (int)$huodongres[0]['changci'];
                    $huodongtype                    = (int)$huodongres[0]['huodongtype'];
                    $list[$key]['huodongnumber']    = (float)$huodongres[0]['huodongnumber'];

                    if ((int)$huodongres[0]['huodongtype'] == 1) {
                        $changcisql = $dsql->SetQuery("SELECT `title` FROM `#@__shopsessionsite` WHERE `id` = '" . $res[0]['changci'] . "'");

                        $changcires = $dsql->dsqlOper($changcisql, "results");

                        if ($changcires) {

                            $list[$key]['changcititle'] = date(
                                "Y-m-d",
                                $res[0]['ktime']
                            ) . ' ' . $changcires[0]['title'];
                            $list[$key]['changcinem']   = $changcires[0]['title'];
                        }
                    }
                }
                $list[$key]['huodongarr'] = $huodongres ? join(',', array_column($huodongres, "huodongtype")) : array();

                if ($huodongtype == 4) {
                    /*拼团活动*/
                    $pinSql = $dsql->SetQuery("SELECT `people` FROM `#@__shop_tuanpin` WHERE 1=1 AND `proid` = '" . $val['id'] . "' AND `state` = 0");
                    $pinRes = $dsql->dsqlOper($pinSql, "results");

                    $list[$key]['people']       = (int)$pinRes[0]['people'];
                }

                //验证是否已经收藏
                $params                = array(
                    "module" => "shop",
                    "temp"   => "detail",
                    "type"   => "add",
                    "id"     => $val['id'],
                    "check"  => 1
                );
                $collect               = checkIsCollect($params);
                $list[$key]['collect'] = $collect == "has" ? 1 : 0;


                /*查看可用哪些券*/
                $nowtime = GetMkTime(time());
                $shopquansql = $dsql->SetQuery("SELECT `promotiotype`,`promotio` FROM `#@__shop_quan` WHERE (`shopids` = '" . $val['store'] . "' or FIND_IN_SET('" . $val['id'] . "',`fid`)) AND `sent` >0 AND `state` = 0 AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime' ");
                $shopquanres = $dsql->dsqlOper($shopquansql, "results");

                $quanhave = $lijian = 0;
                if (!empty($shopquanres) && is_array($shopquanres)) {
                    $quanhave = 1;
                    $lijian   = $shopquanres[0]['promotiotype'] == 0 ? ($shopquanres[0]['promotio']) : ($val['mprice'] * $shopquanres[0]['promotio'] / 10);
                }
                $list[$key]["quanhave"] = $quanhave;
                $list[$key]["lijian"]   = $lijian;
            }


            $archivesr = $dsql->SetQuery("SELECT p.`id`, p.`type`,p.`smallCount`,p.`packingCount`,p.`kstime`,p.`ketime`,p.`title`,p.`subtitle`, p.`store`, p.`mprice`, p.`price`, p.`sales`, p.`click`, p.`inventory`, p.`litpic`, p.`flag`, p.`btime`, p.`etime`, p.`state`, p.`pubdate`, p.`upshelftime`,  p.`specification`,p.`logistic`,p.`spePics`,p.`speFiled`,p.`speCustom` ,p.`floorprice`, p.`fx_reward`,p.`typesales`,p.`availableweek`,p.`availabletime`,s.`lng`,s.`lat` FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`promotype` = 1 AND s.`state` = 1 AND s.`cityid` = " . $cityid . " AND $where ORDER BY p.`sort` DESC ,p.`id`  DESC ");
            $hottuanCount = $dsql->dsqlOper($archivesr, "totalCount");

            if (!empty($hottuan)) {
                $shop[4] = $list;
            }
        }

        if ($custom_shopopen == 4 && $customshopCheck == 2) {   //热门商品,电商类   6

            $param    = array(
                "service"  => "shop",
                "template" => "detail",
                "id"       => "%id%"
            );
            $urlParam = getUrlPath($param);

            $archives = $dsql->SetQuery("SELECT p.`id`, p.`type`,p.`smallCount`,p.`packingCount`,p.`kstime`,p.`ketime`,p.`title`,p.`subtitle`, p.`store`, p.`mprice`, p.`price`, p.`sales`, p.`click`, p.`inventory`, p.`litpic`, p.`flag`, p.`btime`, p.`etime`, p.`state`, p.`pubdate`, p.`upshelftime`,  p.`specification`,p.`logistic`,p.`spePics`,p.`speFiled`,p.`speCustom` ,p.`floorprice`, p.`fx_reward`,p.`typesales`,p.`availableweek`,p.`availabletime`,s.`lng`,s.`lat` FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`promotype` != 1 AND p.`state` = 1 AND $where AND s.`state` = 1 ORDER BY p.`sales` DESC LIMIT 10 ");
            $hotshop = $dsql->dsqlOper($archives, "results");
            $list = array();
            foreach ($hotshop as $key => $val) {

                $list[$key]['id']           = $val['id'];
                $list[$key]['title']        = $val['title'];
                $list[$key]['store']        = $val['store'];
                $list[$key]['price']        = $val['price'];
                $list[$key]['price']        = $val['price'];
                $list[$key]['sales']        = $val['sales'];
                $list[$key]['mprice']       = $val['mprice'];
                $list[$key]['litpic']       = getFilePath($val['litpic']);
                $list[$key]['subtitle']     = $val['subtitle'];
                $list[$key]['logistic']     = $val['logistic'];
                $list[$key]['inventory']    = $val['inventory'];
                $list[$key]['floorprice']   = $val['floorprice'];
                $list[$key]['smallCount']   = $val['smallCount'];
                $list[$key]['packingCount'] = $val['packingCount'];
                $list[$key]['shopunit']     = $val['shopunit'];
                $list[$key]['typesales']    = $val['typesales'];
                $archives = $dsql->SetQuery("SELECT `openFree` FROM `#@__shop_logistictemplate` WHERE `id` = " . $val['logistic']);
                $lresults  = $dsql->dsqlOper($archives, "results");   //包邮
                $youhave = 0;
                if ($lresults[0]['openFree'] == 1) {
                    $youhave = 1;
                }
                $list[$key]["youhave"] = $youhave;

                /*营业日*/
                $day = array('1' => '周一', '2' => '周二', '3' => '周三', '4' => '周四', '5' => '周五', '6' => '周六', '7' => '周日',);

                $daystr = '';
                $availableweek = $val['availableweek'] != '' ? explode(',', $val['availableweek']) : array();
                if ($availableweek) {

                    for ($i = 1; $i <= 7; $i++) {
                        if (in_array($i, $availableweek)) {
                            $daystr .= $day[$i] . ' ';
                        }
                    }
                }
                $list[$key]['daystr']     = $daystr;
                $list[$key]['daystrarr']  = $availableweek;

                $typesalesarr = $val['typesales'] != '' ? explode(',', $val['typesales']) : array();

                $is_daodian = 0;
                //                if (in_array('1',$typesalesarr)) {
                //                    $is_daodian = 1;
                //                }

                if ($val['typesales'] == 1) {
                    $is_daodian = 1;
                }
                $list[$key]['is_daodian']   = $is_daodian;
                //                $list[$key]['typesalesarr'] = $val['typesales']!='' ? unserialize($val['typesales']) : array() ;
                $list[$key]['typesalesarr'] = $typesalesarr;

                //图集
                $pics    = $val['pics'];
                $picsArr = array();
                if (!empty($pics)) {
                    $pics = explode(',', $pics);
                    foreach ($pics as $k => $v) {
                        array_push($picsArr, getFilePath($v));
                    }
                }
                $list[$key]['imgGroup'] = $picsArr;

                $rec   = 0;
                $tejia = 0;
                $hot   = 0;
                $panic = 0;
                $flag  = explode(",", $val['flag']);
                if (in_array(0, $flag)) {
                    $rec = 1;
                }
                if (in_array(1, $flag)) {
                    $tejia = 1;
                }
                if (in_array(2, $flag)) {
                    $hot = 1;
                }
                if (in_array(3, $flag)) {
                    $panic = 1;

                    $list[$key]['btime'] = $val['btime'];
                    $list[$key]['etime'] = $val['etime'];
                }
                if (in_array(4, $flag)) {
                    $panic = 2;

                    $list[$key]['kstime'] = $val['kstime'];
                    $list[$key]['ketime'] = $val['ketime'];
                }

                if ($limited == 4) { //限时抢购状态
                    if (time() < $time - 3600) { //大于现在的时间
                        $list[$key]['states'] = 1; //查看详情
                    } else {
                        $list[$key]['states'] = 2; //立即抢购
                    }
                    if (date('Ymd', $val['btime']) == date('Ymd')) {
                        $list[$key]['statestime'] = date('H:i', $val['btime']);
                        $list[$key]['statesname'] = '今天';
                    } else {
                        $list[$key]['statestime'] = date('H:i', $val['btime']);
                        $list[$key]['statesname'] = '明天';
                    }
                }

                $list[$key]['rec']   = $rec;
                $list[$key]['tejia'] = $tejia;
                $list[$key]['hot']   = $hot;
                $list[$key]['panic'] = $panic;

                // $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_common` WHERE `pid` = ".$val['id']);
                $sql                   = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `type` = 'shop-order' AND `aid` = " . $val['id'] . " AND `pid` = 0");
                $comment               = $dsql->dsqlOper($sql, "totalCount");
                $list[$key]['comment'] = $comment;

                if ($u == 1) {
                    $list[$key]['state']   = $val['state'];
                    $list[$key]['pubdate'] = $val['pubdate'];
                    $list[$key]['upshelftime'] = $val['upshelftime'];
                }

                $list[$key]['url'] = str_replace("%id%", $val['id'], $urlParam);


                //规格自定义图片
                $spePicPx = 0;
                $spePics  = $val['spePics'] ? unserialize($val['spePics']) : array();

                //已有规格自定义字段
                $speFiled = $val['speFiled'] ? unserialize($val['speFiled']) : array();

                //新建自定义规格
                $speCustom = $val['speCustom'] ? unserialize($val['speCustom']) : array();


                //规格值
                // $specification = array();
                // $specifiIds    = array();
                // $speArr        = array();
                // $specifiList   = $val['specification'];
                // if (!empty($specifiList)) {
                //     $specifiArr = explode("|", $specifiList);
                //     foreach ($specifiArr as $k_ => $v_) {
                //         $value = explode(",", $v_);
                //         $ids   = explode("-", $value[0]);

                //         $spe = hnSortArr(explode('-', $value[0]));
                //         //数字、字母、中文混合排序
                //         // collator_sort(collator_create('zh_CN'),$spe);
                //         $speArr[$k_]['spe']   = join("-", $spe);
                //         $speArr[$k_]['price'] = explode("#", $value[1]);

                //         foreach ($ids as $key_ => $val_) {
                //             if (!in_array($val_, $specifiIds)) {
                //                 array_push($specifiIds, $val_);
                //             }
                //         }
                //     }
                // }
                // $list[$key]['specification'] = $speArr;
                // $list[$key]['specifiList']   = $specifiList;

                //规格值
                // $speArr        = array();
                // $guige         = array();
                // if (!empty($specifiList)) {
                    //     $specifiArr = json_decode($specifiList, true) ?: array();
                    //     foreach ($specifiArr as $k_ => $v_) {
                        //         $ids   = is_string($v_['speids']) ? array($v_['speids']) : $v_['speids'];
                //         $speArr[$k_]['spe']   = $v_['speids'];
                //         $speArr[$k_]['price'] = $v_['price'];
                
                //         array_push($guige, array($v_['mprice'], $v_['price']));
                //     }
                // }
                // $guiPrice = array();        //现价
                // $guiyuanPrice = array();           //原价
                // foreach ($guige as $gkey => $gvalue) {
                //     array_push($guiPrice, $gvalue[1]);
                //     array_push($guiyuanPrice, $gvalue[0]);
                // }
                // if (!empty($guiPrice) && !empty($guiyuanPrice)) {
                    //     $list[$key]['guiPrice'] = min($guiPrice);               //xianjia
                    //     $list[$key]['guiPrice'] = min($guiyuanPrice);       //yuanjia
                    //     $list[$key]['mprice']   = min($guiyuanPrice);
                    //     $list[$key]['price']   = min($guiPrice);
                    // }
                    
                $specifiList   = $val['specification'];
                $list[$key]['specifiList']   = $specifiList;

                $this->param = $val['id'];
                $product_detail = $this->detail(1);
                $_specification = $product_detail['specification'];
                $list[$key]['specification'] = $_specification;
                
                //提取多规则中的价格
                $specification = array();
                $guige = array();
                $specifiIds    = array();
                if($_specification && is_array($_specification)){
                    foreach($_specification as $gval){
                        $_gmprice = (float)$gval['price'][0];
                        $_gprice = (float)$gval['price'][1];
                        $_gid = (int)$gval['id'];

                        array_push($guige, array($_gmprice, $_gprice));

                        if (!in_array($_gid, $specifiIds)) {
                            array_push($specifiIds, $_gid);
                        }
                    }
                }

                $guiPrice = array();        //现价
                $guiyuanPrice = array();           //原价
                foreach ($guige as $gkey => $gvalue) {
                    array_push($guiPrice, $gvalue[1]);
                    array_push($guiyuanPrice, $gvalue[0]);
                }
                if (!empty($guiPrice) && !empty($guiyuanPrice)) {
                    $list[$key]['guiPrice'] = min($guiPrice);               //xianjia
                    $list[$key]['guiPrice'] = min($guiyuanPrice);       //yuanjia
                    $list[$key]['mprice']   = min($guiyuanPrice);
                    $list[$key]['price']   = min($guiPrice);
                }

                //遍历所选分类ID
                $typeid = $val['type'];

                //遍历所选分类ID
                global $data;
                $data    = "";
                $proType = getParentArr("shop_type", $typeid);

                global $data;
                $data  = "";
                $proId = array_reverse(parent_foreach(getParentArr("shop_type", $typeid), "id"));
                // $proId = array_slice($proId, 0, count($proType));

                //根据分类ID，获取分类属性值
                $itemid1 = 0;
                if (count($proId) > 0) {
                    foreach ($proId as $k => $v) {
                        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_type` WHERE `spe` != '' AND `id` = " . $v);
                        $results  = $dsql->dsqlOper($archives, "results");
                        if ($results) {
                            $itemid1 = $v;
                        }
                    }
                }

                $typename    = '';
                $archives    = $dsql->SetQuery("SELECT `typename` FROM `#@__shop_type` WHERE `id` = " . $typeid);
                $typeResults = $dsql->dsqlOper($archives, "results");
                if ($typeResults) {
                    $typename = $typeResults[0]['typename'];
                }

                if ($typeid != 0) {
                    $archives    = $dsql->SetQuery("SELECT `typename`, `spe` FROM `#@__shop_type` WHERE `id` = " . $itemid1);
                    $typeResults = $dsql->dsqlOper($archives, "results");
                    if ($typeResults) {
                        if ($typeResults[0]['spe']) {
                            $spe = explode(",", $typeResults[0]['spe']);
                            foreach ($spe as $key_ => $val_) {
                                $archives_1 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `id` = " . $val_ . " ORDER BY `weight` ASC");
                                $results_1  = $dsql->dsqlOper($archives_1, "results");
                                if ($results_1) {
                                    $speItem = array();
                                    foreach ($results_1 as $key_1 => $val_1) {

                                        //自定义字段
                                        $speList = $speFiled[$val_1['id']];
                                        if ($speFiled && $speList) {
                                            foreach ($speList as $k_s => $v_s) {
                                                $val_s = str_replace('custom_' . $val_1['id'] . '_', '', $v_s);

                                                //颜色
                                                if ($results_1[0]['typename'] == "颜色") {

                                                    $imgurl = '';
                                                    if ($spePics) {
                                                        $imgurl = getFilePath($spePics[$spePicPx]);
                                                        $spePicPx++;
                                                    }

                                                    array_push($speItem, array(
                                                        'id'   => $v_s,
                                                        'name' => $val_s,
                                                        'pic'  => $imgurl
                                                    ));

                                                    //普通类型
                                                } else {
                                                    array_push($speItem, array(
                                                        'id'   => $v_s,
                                                        'name' => $val_s
                                                    ));
                                                }
                                            }
                                        }


                                        $archives_2 = $dsql->SetQuery("SELECT `id`, `typename` FROM `#@__shop_specification` WHERE `parentid` = " . $val_1['id'] . " ORDER BY `weight` ASC");
                                        $results_2  = $dsql->dsqlOper($archives_2, "results");
                                        if ($results_2) {
                                            $i = 0;
                                            foreach ($results_2 as $key_2 => $val_2) {
                                                if (in_array($val_2['id'], $specifiIds)) {

                                                    //颜色
                                                    if ($results_1[0]['typename'] == "颜色") {

                                                        $imgurl = '';
                                                        if ($spePics) {
                                                            $imgurl = getFilePath($spePics[$spePicPx]);
                                                            $spePicPx++;
                                                        }

                                                        array_push($speItem, array(
                                                            'id'   => $val_2['id'],
                                                            'name' => $val_2['typename'],
                                                            'pic'  => $imgurl
                                                        ));

                                                        //普通类型
                                                    } else {
                                                        array_push($speItem, array(
                                                            'id'   => $val_2['id'],
                                                            'name' => $val_2['typename']
                                                        ));
                                                    }

                                                    // $speItem[$i]['name'] = $val_2['typename'];
                                                    // $speItem[$i]['id'] = $val_2['id'];
                                                    // $i++;
                                                } else {

                                                    //颜色
                                                    if ($results_1[0]['typename'] == "颜色" && $spePics) {
                                                        $spePicPx++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    if ($speItem) {
                                        array_push($specification, array(
                                            'id'       => $results_1[0]['id'],
                                            'typename' => $results_1[0]['typename'],
                                            'itemtype' => '0', /*自定义*/
                                            'item'     => $speItem
                                        ));

                                        // $specification[$key_]['id'] = $results_1[0]['id'];
                                        // $specification[$key_]['typename'] = $results_1[0]['typename'];
                                        // $specification[$key_]['item'] = $speItem;
                                    }
                                }
                            }
                        }
                    }
                }

                if ($speCustom) {
                    foreach ($speCustom as $k => $v) {
                        $custom = array();
                        if ($v) {
                            foreach ($v as $k_ => $v_) {
                                array_push($custom, array(
                                    'id'   => $v_,
                                    'name' => $v_
                                ));
                            }
                        }
                        array_push($specification, array(
                            'id'       => $k,
                            'typename' => $k,
                            'itemtype' => '1', /*自定义*/
                            'item'     => $custom
                        ));
                    }
                }

                $list[$key]["typeid"]           = $typeid;
                $list[$key]["typename"]         = $typename;
                $list[$key]["specificationArr"] = $specification;

                //商家信息
                $sql = $dsql->SetQuery("SELECT `id`, `title`, `domaintype`, `addrid`,`lng`,`lat` FROM `#@__shop_store` WHERE `id` = " . $val['store']);
                $res = $dsql->dsqlOper($sql, "results");
                if (!empty($res)) {
                    $list[$key]["storeTitle"] = $res[0]['title'];
                    $param                    = array(
                        "service"  => "shop",
                        "template" => "store-detail",
                        "id"       => "%id%"
                    );
                    $storeurlParam            = getUrlPath($param);
                    $url                      = "";
                    if ($res[0]['domaintype'] == 1) {
                        $domainInfo = getDomain('shop', 'shop_store', $res[0]['id']);
                        $url        = "http://" . $domainInfo['domain'];
                    } else {
                        $url = str_replace("%id%", $res[0]['id'], $storeurlParam);
                    }
                    $list[$key]['storeurl'] = $url;
                    global $data;
                    $data                  = "";
                    $addrName              = getParentArr("site_area", $res[0]['addrid']);
                    $addrName              = array_reverse(parent_foreach($addrName, "typename"));
                    $list[$key]['alladdr'] = $addrName;
                    $list[$key]['addr']    = $addrName[0] . $addrName[1];
                    $julishop = oldgetDistance($res[0]['lng'], $res[0]['lat'], $userlng, $userlat) / 1000;

                    $list[$key]['julishop'] = $julishop;
                }

                /*查看参加了哪些活动*/
                $endtime = GetMkTime(time());
                $huodongsql = $dsql->SetQuery("SELECT `huodongtype`,`ktime`,`etime`,`changci`,`huodongtype`,`huodongnumber`,`huodongprice` FROM `#@__shop_huodongsign` WHERE `proid` = '" . $val['id'] . "' AND `state` != 2 AND `etime` > '$endtime' GROUP BY `huodongtype`");

                $huodongres               = $dsql->dsqlOper($huodongsql, "results");

                if ($huodongres) {

                    $list[$key]['huodongktime']     = (int)$huodongres[0]['ktime'];
                    $list[$key]['huodongprice']     =  sprintf('%.2f', $huodongres[0]['huodongprice']);
                    $list[$key]['huodongetime']     = (int)$huodongres[0]['etime'];
                    $list[$key]['huodongechangci']  = (int)$huodongres[0]['changci'];
                    $huodongtype                    = (int)$huodongres[0]['huodongtype'];
                    $list[$key]['huodongnumber']    = (float)$huodongres[0]['huodongnumber'];

                    if ((int)$huodongres[0]['huodongtype'] == 1) {
                        $changcisql = $dsql->SetQuery("SELECT `title` FROM `#@__shopsessionsite` WHERE `id` = '" . $res[0]['changci'] . "'");

                        $changcires = $dsql->dsqlOper($changcisql, "results");

                        if ($changcires) {

                            $list[$key]['changcititle'] = date(
                                "Y-m-d",
                                $res[0]['ktime']
                            ) . ' ' . $changcires[0]['title'];
                            $list[$key]['changcinem']   = $changcires[0]['title'];
                        }
                    }
                }
                $list[$key]['huodongarr'] = $huodongres ? join(',', array_column($huodongres, "huodongtype")) : array();

                if ($huodongtype == 4) {
                    /*拼团活动*/
                    $pinSql = $dsql->SetQuery("SELECT `people` FROM `#@__shop_tuanpin` WHERE 1=1 AND `proid` = '" . $val['id'] . "' AND `state` = 0");
                    $pinRes = $dsql->dsqlOper($pinSql, "results");

                    $list[$key]['people']       = (int)$pinRes[0]['people'];
                }

                //验证是否已经收藏
                $params                = array(
                    "module" => "shop",
                    "temp"   => "detail",
                    "type"   => "add",
                    "id"     => $val['id'],
                    "check"  => 1
                );
                $collect               = checkIsCollect($params);
                $list[$key]['collect'] = $collect == "has" ? 1 : 0;


                /*查看可用哪些券*/
                $nowtime = GetMkTime(time());
                // $shopquansql = $dsql->SetQuery("SELECT `promotiotype`,`promotio` FROM `#@__shop_quan` WHERE (`shopids` = '" . $val['store'] . "' or FIND_IN_SET('" . $val['id'] . "',`fid`)) AND `sent` >0 AND `state` = 0 AND `basic_price` <= '" . $val['mprice'] . "'");
                $shopquansql = $dsql->SetQuery("SELECT `promotiotype`,`promotio` FROM `#@__shop_quan` WHERE (`shopids` = '" . $val['store'] . "' or FIND_IN_SET('" . $val['id'] . "',`fid`)) AND `sent` >0 AND `state` = 0  AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime' ");
                $shopquanres = $dsql->dsqlOper($shopquansql, "results");

                $quanhave = $lijian = 0;
                if ($shopquanres && is_array($shopquanres)) {
                    $quanhave = 1;
                    $lijian   = $shopquanres[0]['promotiotype'] == 0 ? ($shopquanres[0]['promotio']) : ($val['mprice'] * $shopquanres[0]['promotio'] / 10);
                }
                $list[$key]["quanhave"] = $quanhave;
                $list[$key]["lijian"]   = $lijian;
            }

            $archivesr = $dsql->SetQuery("SELECT p.`id`, p.`type`,p.`smallCount`,p.`packingCount`,p.`kstime`,p.`ketime`,p.`title`,p.`subtitle`, p.`store`, p.`mprice`, p.`price`, p.`sales`, p.`click`, p.`inventory`, p.`litpic`, p.`flag`, p.`btime`, p.`etime`, p.`state`, p.`pubdate`, p.`upshelftime`,  p.`specification`,p.`logistic`,p.`spePics`,p.`speFiled`,p.`speCustom` ,p.`floorprice`, p.`fx_reward`,p.`typesales`,p.`availableweek`,p.`availabletime`,s.`lng`,s.`lat` FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE p.`promotype` != 1 AND p.`state` = 1 AND s.`state` = 1 AND $where ORDER BY p.`sales` DESC");
            $hotshopCount = $dsql->dsqlOper($archivesr, "totalCount");

            if (!empty($hotshop)) {
                $shop[6] = $list;
            }
        }
        if (in_array('4', $huodongshopopen)) {     //拼团特惠
            $archives = $dsql->SetQuery("SELECT p.`typesales`,p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND h.`state` =1  AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND s.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` = 4  AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where LIMIT 10");
            $tuanres = $dsql->dsqlOper($archives, "results");
            $list = array();
            foreach ($tuanres as $k => $v) {

                $typesalesarr = $v['typesales'] != '' ? explode(',', $v['typesales']) : array();
                $is_daodian = 0;
                if (in_array('1', $typesalesarr)) {
                    $is_daodian = 1;
                }
                $list[$k]['is_daodian']       = $is_daodian;
                $list[$k]['id'] = $v['id'];
                $list[$k]['huodongprice'] = $v['huodongprice'];
                $list[$k]['huodongsales'] = $v['huodongsales'];
                $list[$k]['huodongnumber'] = $v['huodongnumber'];
                $list[$k]['title']        = $v['title'];
                $list[$k]['subtitle']     = $v['subtitle'];
                $list[$k]['sales']        = $v['sales'];
                $list[$k]['hid']          = $v['hid'];
                $list[$k]['litpic']       = getFilePath($v['litpic']);
                $list[$k]['huodongstate'] = 1;
                $list[$k]['state']        = $v['state'];
                $list[$k]['mprice']       = $v['mprice'];
                $list[$k]['ktime']        = date("m-d H:i:s", $v['ktime']);
                $list[$k]['ktimestr']     = $v['ktime'];
                $list[$k]['etimestr']     = $v['etime'];
                $list[$k]['etime']        = date("m-d H:i:s", $v['etime']);
                $list[$k]['click']        = $v['click'];
                $list[$k]['huodongtimestate'] = 1;
                $list[$k]['huodonginventory'] = $v['huodonginventory'];

                $param    = array(
                    "service"  => "shop",
                    "template" => "detail",
                    "id"       => $v['id']
                );
                $urlParam = getUrlPath($param);

                $list[$k]['url'] = $urlParam;
            }

            $archivesr = $dsql->SetQuery("SELECT p.`id`,p.`title`,p.`sales`,p.`subtitle`,p.`litpic`,p.`mprice`,h.`state`,h.`ktime`,h.`etime`,h.`id` hid,h.`huodongtype`,h.`click`,h.`huodongprice` ,h.`huodongsales`,h.`huodonginventory`,h.`huodongnumber` FROM `#@__shop_huodongsign` h  LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1  AND h.`state` =1  AND h.`ktime`<= '" . GetMkTime(time()) . "' AND h.`etime` >= '" . GetMkTime(time()) . "' AND p.`state` = 1 AND s.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` = 4 AND ((p.`promotype` = 1 AND s.`cityid` = " . $cityid . ") OR p.`promotype` != 1) AND $where");
            $tuanrescount = $dsql->dsqlOper($archivesr, "totalCount");
            if (!empty($tuanres)) {
                $shop[5] = $list;
            }
        }

        $pageinfo = array(
            "qiangCount"        => (int)$qiangCount,            //抢购
            "miaoCount"         => (int)$miaocount,             //  秒杀
            "kanCount"          => (int)$barcount,              //砍价
            "tuangouCount"      => (int)$hottuanCount,          //热门商品团购
            "dianshopCount"     => (int)$hotshopCount,          //热门商品电商
            "tehuiCount"        => (int)$tuanrescount           //拼团特惠
        );
        if (empty($shop)) {
            return array("state" => 200, "info" => '暂无数据！');
        }
        return array("pageinfo" => $pageinfo, "list" => $shop);
    }

    /**
     * 修改平台配送方式
     */
    public function editPeisong()
    {
        global $dsql;
        $id         = $this->param['id'];
        $archives = $dsql->SetQuery("UPDATE `#@__shop_store` SET `psaudit` = '1' WHERE `id` ='$id'");
        $dsql->dsqlOper($archives, "update");
        return '提交成功!';
    }


    /**
     *运费计算
     */
    public function getLogisticPrice()
    {
        global $dsql;
        global $userLogin;
        $userid = $userLogin->getMemberID();
        $pros = $this->param['pros'];
        $count = $this->param['count'];
        $addressid = $this->param['addressid'];
        $sid   = $this->param['sid'];
        $confirmtype = (int)$this->param['confirmtype'];
        $logicityid = 0;
        if (!empty($addressid)) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = $userid AND `id` = $addressid");
            $userAddr = $dsql->dsqlOper($archives, "results");

            if ($userAddr && is_array($userAddr)) {
                if (!$userAddr[0]['addrid'] == 0) {
                    $addrName = getParentArr("site_area", $userAddr[0]['addrid']);
                    $addrIdArr = array_reverse(parent_foreach($addrName, "id"));

                    $logicityid = $addrIdArr[1];
                }
            }

            $lng     = $userAddr[0]['lng'];
            $lat     = $userAddr[0]['lat'];
        }

        $pros = explode("|", $pros);
        $logistic = 0;
        $nowtime = GetMkTime(time());
        $foodquanarr   = array();

        $data = array();
        $slng = $slat = '';

        foreach ($pros as $key => $value) {
            //pro[0]商品ID，pro[1]规格，pro[2]数量
            $pro = explode(",", $value);

            $this->param = $pro[0];
            $detail = $this->detail(1);
            $price = $detail['price'];

            $slng = $detail['store']['lng'];
            $slat = $detail['store']['lat'];

            if ($detail['specification']) {
                foreach ($detail['specification'] as $k => $v) {

                    if ($v['id'] == $pro[1]) {
                        $price = $v['price'][1];
                    }
                }
            }

            if (!empty($detail['hid'])) {
                $price = $detail['huodongprice'];
                if ($detail['pinspecification']) {
                    foreach ($detail['pinspecification'] as $k => $v) {

                        if ($v['id'] == $pro[1]) {
                            $price = $v['price'][1];
                        }
                    }
                }
            }

            $juli = oldgetDistance($lng, $lat, $detail['store']['lng'], $detail['store']['lat']) / 1000;
            //物流
            $logisticArr = getLogisticPrice($detail['devspecification'], $price, $pro[2], $detail['volume'], $detail['weight'], $addressid, $pro[0], $juli, 1);
            $logistic = $logisticArr['logistic'];
            $logistictype = $logisticArr['logistictype'];
            $storeorderamount = sprintf("%.2f", $price * $pro[2]);
            /*店铺券*/
            $storesql = $dsql->SetQuery("SELECT `id`,`name`,`basic_price`,`promotiotype`,`promotio`,`qid`,`quantype`,`etime`,`bear` FROM `#@__shop_quanlist` WHERE `state` = 0 AND `quantype` = 0 AND `userid`  ='$userid'  AND (`shopids` = '" . $sid . "' or `bear` = 1)AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime' AND `basic_price` <= '$storeorderamount'");

            $storeres = $dsql->dsqlOper($storesql, "results");
            $mlogistic = $logistic;
            if (!empty($storeres)) {
                $quanarr = $storeres;
            } else {
                $quanarr = array();
            }
            $foodsql = $dsql->SetQuery("SELECT `id`,`name`,`basic_price`,`promotiotype`,`promotio`,`qid`,`quantype`,`etime` FROM `#@__shop_quanlist` WHERE `state` = 0 AND `quantype` = 1 AND `userid`  ='$userid' AND FIND_IN_SET('" . $pro[0] . "',`fid`)  AND `ktime`<= '$nowtime' AND `etime`>= '$nowtime'");
            $foodres =  $dsql->dsqlOper($foodsql, "results");
            $quanid = array();

            $needmoney = 0;
            if ($foodres) {
                $needmoney = ($price * $pro[2]);
                if (!empty($foodquanarr)) {

                    $quanid = array_column($foodquanarr, 'id');
                }
                if (!in_array($foodres[0]['id'], $quanid)) {
                    $foodres[0]['needmoney'] = $needmoney;
                    array_push($foodquanarr, $foodres[0]);
                } else {
                    $quankey = array_search($fdv['id'], $quanid);
                    $foodquanarr[$quankey]['needmoney'] += $needmoney;
                }
            }

            //规格名
            $speInfo = array();
            $speArr  = explode("-", $pro[1]);
            foreach ($speArr as $k => $v) {
                foreach ($detail['specificationArr'] as $kk => $vv) {
                    $typename = $vv['typename'];
                    foreach ($vv['item'] as $kkk => $vvv) {
                        if ($vvv['id'] == $v) {
                            array_push($speInfo, $typename . "：" . $vvv['name']);
                        }
                    }
                }
            }

            array_push($data, array(
                "id"         => $pro[0],
                "proid"      => $pro[0],
                "speid"      => $pro[1],
                "specation"  => join("$$$", $speInfo),
                "count"      => $pro[2],
                "volume"     => $detail['volume'],
                "weight"     => $detail['weight'],
                "orderid"    => $detail['orderid'],
                "price"      => $price,
                "logistic"   => $logistic,
                "logisticId" => $detail['logisticId'],
                "blogisticId" => $detail['blogisticId'],
                "typesales"  => $detail['typesales'],
                "logistictype" => $logistictype  //由计算运费方法返回
                // "logistictype" => !strstr($detail['typesales'], 3) && $confirmtype == 2 ? 1 : $confirmtype  //如果不支持平台配置，confirmtype重置为1，用于合并计算运费中的规则
            ));
        }
        foreach ($foodquanarr as $food => $foodv) {
            if ($foodv['needmoney'] >= $foodv['basic_price']) {
                array_push($quanarr, $foodv);
            } else {
                $foodv['nousetype'] = 2;
                $quanarr = $quanarr;
            }
        }
        $userinfo = $userLogin->getMemberInfo();
        //会员优惠
        $sql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = " . $userinfo['level']);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret && is_array($ret)) {

            $privilege = unserialize($ret[0]['privilege']);
        }

        $delivery_count = $userinfo['delivery_count'];
        $needCount      = 1;
        //会员运费
        if ($userinfo['level']) {
            $delivery_fee = $logistic;
            $auth = $privilege['delivery'];
            if ($delivery_fee) {
                $ok = false;
                // 打折
                if ($auth[0]['type'] == 'discount') {
                    if ($auth[0]['val'] > 0 && $auth[0]['val'] < 10) {
                        $ok = true;
                    }
                    // 计次
                } elseif ($auth[0]['type'] == 'count') {
                    $userinfo['delivery_count'] = $userinfo['delivery_count'] < 0 ? 0 : $userinfo['delivery_count'];
                    if ($auth[0]['val'] == 0 || ($auth[0]['val'] > 0 && $userinfo['delivery_count'] - $key > 0)) {
                        $auth_delivery_isCount++;
                        $ok = true;
                    }
                }

                if ($ok) {
                    $auth_delivery_price = $auth[0]['type'] == 'count' ? $delivery_fee : $delivery_fee * (1 - $auth[0]['val'] / 10);
                    $logistic = sprintf("%.2f", $logistic - $auth_delivery_price);
                }
            }
        }

        $orderList = array(array(
            'store' => $sid,
            'sid' => $sid,
            'lng' => $slng,
            'lat' => $slat,
            'list' => $data
        ));
        $orderLogistic  = calculationOrderLogistic($orderList, array('0' => $logicityid), $addressid, array('returnType' => 1));

        $logisticError = $orderLogistic['error'];
        $logisticData = $orderLogistic['data'];

        $logistic = 0;  //运费总额
        $free = 1;  //是否免运费
        foreach ($logisticData as $key => $val) {
            $val = is_numeric($val) && $val > 0 ? (float)$val : 0;
            $logistic += $val;
        }

        if ($confirmtype == 0) {
            $logistic = 0;
            $mlogistic = 0;
        }

        //当运费为0时，判断是否为免运费了
        if($logistic == 0){
            foreach ($logisticError as $key => $val) {
                if($val){
                    $free = 0;
                }
            }
        }else{
            $free = 0;
        }

        $loquan = array([
            'logistic' => $logistic,
            'mlogistic' => $logistic,
            'free' => $free,
            'logistictype' => (int)$logistictype,
            'quanarr'  => $quanarr
        ]);
        return $loquan;
    }


    public function serachType()
    {
        global $dsql;
        global $userLogin;
        $param = $this->param;
        $typearr = array();
        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_type` WHERE `typename` like '%" . $param['typename'] . "%' ");
        $res = $dsql->dsqlOper($archives, "results");
        foreach ($res as $key => $value) {
            $partype = array();
            $proType = getParentArr("shop_type", (int)$value['id']);
            array_push($partype, $proType[0]);
            if ($proType[1]['lower']) {
                array_push($partype, $proType[1]['lower'][0]);
            }
            if ($proType[1]['lower'][1]['lower']) {
                array_push($partype, $proType[1]['lower'][1]['lower'][0]);
            }
            if ($proType[1]['lower'][1]['lower'][1]['lower']) {
                array_push($partype, $proType[1]['lower'][1]['lower'][1]['lower'][0]);
            }
            array_push($typearr, $partype);
        }
        $type = array();
        foreach ($typearr as $ku => $kv) {
            foreach ($kv as $ky => $kl) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_type` WHERE `parentid` =" . $kl['id']);
                $res = $dsql->dsqlOper($archives, "totalCount");
                $kv[$ky]["lower"] = $res;
            }
            array_push($type, $kv);
        }
        return $type;
    }


    /**
     * 删除信息
     * @return array
     */
    public function del()
    {
        return array("state" => 200, "info" => '删除接口已禁用！');

        global $dsql;
        global $userLogin;

        $id = $this->param['id'];

        if (!is_numeric($id)) return array("state" => 200, "info" => '格式错误！');

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__shop_product` p LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` WHERE s.`userid` = $uid AND p.`id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $archives = $dsql->SetQuery("DELETE FROM `#@__shop_product` WHERE `id` = " . $id);
            $dsql->dsqlOper($archives, "update");

            $this->updateStorePcount($results[0]['store']);

            return array("state" => 100, "info" => '删除成功！');
        } else {
            return array("state" => 101, "info" => '信息不存在，或已经删除！');
        }
    }


    /**
     * 最新的砍价记录 n 条
     */
    public function kanjiaMessage()
    {
        global $dsql;
        $now = time();
        $sql = $dsql->SetQuery("select b.`userid`,b.`enddate`,concat(left(m.`nickname`,2),'****') as 'name' from `#@__shop_bargaining` b LEFT JOIN `#@__member` m ON m.`id`=b.`userid` where b.`oid`!=0 and b.`state`=1 order by b.`enddate` desc limit 20");
        $arrList = $dsql->getArrList($sql);
        if (!is_array($arrList) || empty($arrList)) {
            return array("state" => 200, "info" => "暂无数据");
        }
        foreach ($arrList as &$item) {
            $item['enddate'] = FloorTime(($now - $item['enddate']), 3);
        }
        unset($item);
        return $arrList;
    }


    /**
     * 更新商家表中的商品数量
     */
    public function updateStorePcount($store = 0){
        global $dsql;
        $store = $store ? (int)$store : (int)$this->param['store'];
        if($store){

            $sql = $dsql->SetQuery("SELECT count(*) totalCount FROM `#@__shop_product` WHERE `store` = $store AND `state` = 1");
            $ret = $dsql->dsqlOper($sql, "results");
            if($ret){
                $pcount = $ret[0]['totalCount'];
                $sql = $dsql->SetQuery("UPDATE `#@__shop_store` SET `pcount` = $pcount WHERE `id` = $store");
                $dsql->dsqlOper($sql, "update");
            }

        }
    }


    /**
     * 获取拼团分类
     */
    public function getPintuanType(){
        global $dsql;

        $now = GetMkTime(time());
        $where = '';
        $archives = $dsql->SetQuery(" SELECT p.`type` FROM `#@__shop_huodongsign` h LEFT JOIN `#@__shop_product` p ON h.`proid` = p.`id` LEFT JOIN `#@__shop_store` s ON p.`store` = s.`id` WHERE 1= 1 AND p.`state` = 1 AND h.`state` =1 AND h.`ktime`<= '$now' AND h.`etime` >= '$now' AND p.`state` = 1 AND h.`state` = 1 AND h.`huodongtype` =4 ");
        $res = $dsql->dsqlOper($archives, "results");
        $typearr = array();
        $typee = array();
        if (!empty($res)){
            foreach ($res as $kk=>$vv){
                array_push($typee,$vv['type']);
            }
            $untype = array_unique($typee);
            foreach ($untype as $key=>$value){
                $proType= getParentArr("shop_type", (int)$value);
                $typearr[$key]['id']       = $proType[1]['lower'][0]['id'];
                $typearr[$key]['parentid'] = $proType[1]['lower'][0]['parentid'];
                $typearr[$key]['typename'] = $proType[1]['lower'][0]['typename'];
                $typearr[$key]['weight']   = $proType[1]['lower'][0]['weight'];
            }
        }

        $count = array();
        foreach ($typearr as $key => &$_data) {
            $count[$key] = $_data['weight'];
        }
        unset($_data); // 释放引用变量

        // 按数量从多到少排序
        array_multisort($count, SORT_ASC, $typearr);

        return $typearr;
    }


    /**
     * 获取拼团分类
     */
    public function payreturn(){
        global $dsql;
        global $userLogin;

        //获取用户ID
        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => '登录超时，请重新登录！');
        }

        $ordernum = $this->param['ordernum'];

        $return = array();

        if(!empty($ordernum)){

			//根据支付订单号查询支付结果
            if(strstr($ordernum, ',')){
                $archives = $dsql->SetQuery("SELECT `body`, `amount`, `state` FROM `#@__pay_log` WHERE `ordertype` = 'shop' AND `body` = '$ordernum'");
            }else{
                $archives = $dsql->SetQuery("SELECT `body`, `amount`, `state` FROM `#@__pay_log` WHERE `ordertype` = 'shop' AND `ordernum` = '$ordernum'");
            }
			$payDetail  = $dsql->dsqlOper($archives, "results");
			if($payDetail){

				$state = $payDetail[0]['state'];

                $totalPayPrice = $payDetail[0]['amount'];

				if($state == 1){
					$orderListArr = array();
					$totalAmount = 0;
					$totalPoint = 0;
					$totalBalance = 0;
					$i = 0;
					$ids = explode(",", $payDetail[0]['body']);
					//查询订单号
                    if (count($ids) == 1){
                        //查询订单详细信息
                        $archives = $dsql->SetQuery("SELECT `id`, `store`, `address`, `people`, `contact`, `note`, `logistic`, `amount`,`balance`,`point`,`payprice`,`paytype`,`userid`,`peerpay` FROM `#@__shop_order` WHERE `ordernum` = '$ids[0]' AND (`userid` = $userid or `peerpay` = $userid)");
                        $detailOrder  = $dsql->dsqlOper($archives, "results");
                        if ($detailOrder){
                            $param = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "orderdetail",
                                "module"   => "shop",
                                "id"       => $detailOrder[0]['id']
                            );
                            $return['orderUrl'] = getUrlPath($param);

                            $isPeerpay = 0;  //是否代付
                            if((int)$detailOrder[0]['peerpay'] == $userid){
                                $isPeerpay = 1;
                            }
                            $return['isPeerpay'] = $isPeerpay;

                        }else{
                            return array("state" => 200, "info" => '权限错误，该订单号不是您的订单！');
                        }
                    }else{
                        $paramorder = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "order",
                            "module"   => "shop"
                        );
                        $return['orderUrl'] = getUrlPath($paramorder);
                    }
					// if($detailOrder[0]['balance']){
					// 		$totalPrice = $detailOrder[0]['balance'];
					// }
					// if($detailOrder[0]['payprice'] !='0'){
					// 	$totalPrice = $detailOrder[0]['payprice'];
					// }
					//查询订单详细信息
				    $archives = $dsql->SetQuery("SELECT `wechat_subscribe` FROM `#@__member` WHERE `id` =".$detailOrder[0]['userid']);
					$meminfo  = $dsql->dsqlOper($archives, "results");
					$wechat_subscribe = $meminfo[0]['wechat_subscribe'];			//	是否关注公众号
					$pay_namearr = array();
					if ($detailOrder[0]['balance'] != '') {
						array_push($pay_namearr, "余额支付");
					}

					if ($$detailOrder[0]['point'] != '') {
						array_push($pay_namearr, "积分支付");
					}
					if ($$detailOrder[0]['paytype']  == 'wxpay') {
						array_push($pay_namearr, "微信支付");
					}
					if ($$detailOrder[0]['paytype'] == 'alipay') {
						array_push($pay_namearr, "支付宝支付");
					}


					if ($pay_namearr) {
						$pay_name = join(',', $pay_namearr);
					}

					foreach ($ids as $key => $value) {

						//查询订单详细信息
						$archives = $dsql->SetQuery("SELECT `id`, `store`, `address`, `people`, `contact`, `note`, `logistic`, `amount`, `changetype`, `changeprice`, `balance`, `point` FROM `#@__shop_order` WHERE `ordernum` = '$value' AND `userid` = $userid");
						$orderDetail  = $dsql->dsqlOper($archives, "results");
						if($orderDetail){
							$orderDetail = $orderDetail[0];

                            $totalPoint    += $orderDetail['point'];
                            $totalBalance  += $orderDetail['balance'];

							//查询订单商品
							$sql = $dsql->SetQuery("SELECT `proid`, `specation`, `price`, `count`, `logistic`, `discount`, `point`, `balance`, `payprice`, `changeprice` FROM `#@__shop_order_product` WHERE `orderid` = ".$orderDetail['id']);
							$ret = $dsql->dsqlOper($sql, "results");
							if($ret){

								$orderListArr[$i]['orderid']  = $orderDetail['id'];
								$orderListArr[$i]['ordernum'] = $value;

								//店铺信息
								$storeHandels = new handlers($service, "storeDetail");
								$storeConfig  = $storeHandels->getHandle($orderDetail['store']);
								if(is_array($storeConfig) && $storeConfig['state'] == 100){
									$storeConfig  = $storeConfig['info'];
									if(is_array($storeConfig)){

										$orderListArr[$i]['store'] = array(
											"id"     => $storeConfig['id'],
											"title"  => $storeConfig['title'],
											"domain" => $storeConfig['domain'],
											"qq"     => $storeConfig['qq']
										);

									}else{
										$orderListArr[$i]['store'] = array(
											"id"     => 0,
											"title"  => $langData['shop'][4][37]  //官方直营
										);
									}
								}else{
									$orderListArr[$i]['store'] = array(
										"id"     => 0,
										"title"  => $langData['shop'][4][37]  //官方直营
									);
								}


								//订单配送信息
								$orderListArr[$i]['address'] = $orderDetail['address'];
								$orderListArr[$i]['people']  = $orderDetail['people'];
								$orderListArr[$i]['contact'] = $orderDetail['contact'];
								$orderListArr[$i]['note']    = $orderDetail['note'];
								$orderListArr[$i]['logistic']    = $orderDetail['logistic'];

								$proDetail = array();
								$p = 0;
								foreach($ret as $k => $v){

									//查询商品详细信息
									$detailHandels = new handlers($service, "detail");
									$detailConfig  = $detailHandels->getHandle($v['proid']);
									if(is_array($detailConfig) && $detailConfig['state'] == 100){
										$detailConfig  = $detailConfig['info'];
										if(is_array($detailConfig)){

											$proDetail[$p]['id']        = $detailConfig['id'];
											$proDetail[$p]['title']     = $detailConfig['title'];
											$proDetail[$p]['litpic']    = $detailConfig['litpic'];
											$proDetail[$p]['specation'] = $v['specation'];
											$proDetail[$p]['price']     = $v['price'];
											$proDetail[$p]['count']     = $v['count'];
											$proDetail[$p]['logistic']  = $v['logistic'];
											$proDetail[$p]['discount']  = $v['discount'];
											$proDetail[$p]['point']     = $v['point'];
											$proDetail[$p]['balance']   = $v['balance'];
											$proDetail[$p]['payprice']  = $v['payprice'];
											$p++;

											//单价 * 数量 + 运费 + 折扣
                                            if($v['changeprice'] > 0){
                                                $totalAmount += $v['changeprice'];
                                            }else{
                                                $totalAmount += $v['price'] * $v['count'] + $v['logistic'] + $v['discount'];
                                            }
//											$totalPayPrice += $v['payprice'];

										}
									}
								}

								$orderListArr[$i]['product'] = $proDetail;
								$i++;

							}

						}
					}
					
					$return['payname'] = $pay_name;
					$return['totalPrice'] = $totalAmount;
					$return['wechat_subscribe'] = $wechat_subscribe;
					$return['orderListArr'] = $orderListArr;
					$return['totalPoint'] = $totalPoint;
					$return['totalBalance'] = sprintf("%.2f", $totalBalance);
					$return['totalPayPrice'] = sprintf("%.2f", $totalPayPrice);
				}

				$return['state'] = $state;

                return $return;


			//支付订单不存在
			}else{
				return array("state" => 200, "info" => '订单不存在！');
			}

		}else{
			return array("state" => 200, "info" => '订单号不得为空！');
		}



    }



}
