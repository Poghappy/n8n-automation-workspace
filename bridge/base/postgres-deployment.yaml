#! postgres-deployment.yaml
# Generated code, do not edit
apiVersion: apps/v1
kind: Deployment
metadata:
    name: postgres
    namespace: n8n-
    labels:
        com.docker.compose.project: n8n-
        com.docker.compose.service: postgres
spec:
    replicas: 1
    selector:
        matchLabels:
            com.docker.compose.project: n8n-
            com.docker.compose.service: postgres
    strategy:
        type: Recreate
    template:
        metadata:
            labels:
                com.docker.compose.project: n8n-
                com.docker.compose.service: postgres
                com.docker.compose.network.n8n-network: "true"
        spec:
            restartPolicy: unless-stopped
            containers:
                - name: n8n-postgres
                  image: postgres:15-alpine
                  imagePullPolicy: IfNotPresent
                  env:
                    - name: POSTGRES_DB
                      value: "n8n"
                    - name: POSTGRES_NON_ROOT_PASSWORD
                      value: "dD1beZM+UxZFhnibkDG7CA=="
                    - name: POSTGRES_NON_ROOT_USER
                      value: "n8n_user"
                    - name: POSTGRES_PASSWORD
                      value: "dD1beZM+UxZFhnibkDG7CA=="
                    - name: POSTGRES_USER
                      value: "n8n"
                  securityContext:
                    readOnlyRootFilesystem: true
                  livenessProbe:
                    exec:
                        command:
                            - /bin/sh
                            - -c
                            - pg_isready -U n8n -d n8n
                    periodSeconds: 10
                    initialDelaySeconds: 30
                    timeoutSeconds: 5
                    failureThreshold: 5
                  ports:
                    - name: postgres-5432
                      containerPort: 5432
                  volumeMounts:
                    - name: var-lib-postgresql-data
                      mountPath: /var/lib/postgresql/data
                    - name: docker-entrypoint-initdb-d
                      mountPath: /docker-entrypoint-initdb.d
                      readOnly: true
            volumes:
                - name: var-lib-postgresql-data
                  persistentVolumeClaim:
                    claimName: postgres-postgres-data
                - name: docker-entrypoint-initdb-d
                  hostPath:
                    path: /Users/zhiledeng/Documents/augment-projects/N8N-自动化/database/init
                  readOnly: true
