<?php if (!defined('HUONIAOINC')) exit('Request Error!');
/**
 * 会员模块API接口
 *
 * @version        $Id: member.class.php 2015-6-11 上午10:19:21 $
 * @package        HuoNiao.Handlers
 * @copyright      Copyright (c) 2013 - 2018, HuoNiao, Inc.
 * @link           https://www.ihuoniao.cn/
 */

class member
{


    private $param;  //参数
    public static $langData;

    /**
     * 构造函数
     *
     * @param string $action 动作名
     */
    public function __construct($param = array())
    {
        $this->param = $param;
        $this->temp = array();
        global $langData;
        self::$langData = $langData;
    }

    /**
     * 基本参数
     * @return array
     */
    public function config()
    {

        global $cfg_basehost;          //系统主域名
        global $cfg_secureAccess;

        global $cfg_userSubDomain;     //个人会员
        global $cfg_busiSubDomain;     //企业会员

        $params = !empty($this->param) && !is_array($this->param) ? explode(',', $this->param) : "";

        //个人会员
        // $userDomainInfo = getDomain('member', 'user');
        // $userChannelDomain = $userDomainInfo['domain'];
        // if($cfg_userSubDomain == 0){
        //  $userChannelDomain = "http://".$userChannelDomain;
        // }elseif($cfg_userSubDomain == 1){
        //  $userChannelDomain = "http://".$userChannelDomain.".".$cfg_basehost;
        // }elseif($cfg_userSubDomain == 2){
        //  $userChannelDomain = "http://".$cfg_basehost."/".$userChannelDomain;
        // }

        //企业会员
        // $busiDomainInfo = getDomain('member', 'busi');
        // $busiChannelDomain = $busiDomainInfo['domain'];
        // if($cfg_busiSubDomain == 0){
        //  $busiChannelDomain = "http://".$busiChannelDomain;
        // }elseif($cfg_busiSubDomain == 1){
        //  $busiChannelDomain = "http://".$busiChannelDomain.".".$cfg_basehost;
        // }elseif($cfg_busiSubDomain == 2){
        //  $busiChannelDomain = "http://".$cfg_basehost."/".$busiChannelDomain;
        // }

        // include HUONIAOINC.'/siteModuleDomain.inc.php';
        // $userChannelDomain = $userDomain;
        // $busiChannelDomain = $busiDomain;

        //个人会员
        $userDomainInfo = getDomain('member', 'user');
        $userChannelDomain = $userDomainInfo['domain'];
        if ($cfg_userSubDomain == 0) {
            $userChannelDomain = $cfg_secureAccess . $userChannelDomain;
        } elseif ($cfg_userSubDomain == 1) {
            $userChannelDomain = $cfg_secureAccess . $userChannelDomain . "." . str_replace("www.", "", $cfg_basehost);
        } elseif ($cfg_userSubDomain == 2) {
            $userChannelDomain = $cfg_secureAccess . $cfg_basehost . "/" . $userChannelDomain;
        }

        // $siteDomainInc .= "\$userDomain = '".$userChannelDomain."';\r\n";

        //企业会员
        $busiDomainInfo = getDomain('member', 'busi');
        $busiChannelDomain = $busiDomainInfo['domain'];
        if ($cfg_busiSubDomain == 0) {
            $busiChannelDomain = $cfg_secureAccess . $busiChannelDomain;
        } elseif ($cfg_busiSubDomain == 1) {
            $busiChannelDomain = $cfg_secureAccess . $busiChannelDomain . "." . str_replace("www.", "", $cfg_basehost);
        } elseif ($cfg_busiSubDomain == 2) {
            $busiChannelDomain = $cfg_secureAccess . $cfg_basehost . "/" . $busiChannelDomain;
        }

        // $siteDomainInc .= "\$busiDomain = '".$busiChannelDomain."';\r\n";

        $return = array();
        if (!empty($params) > 0) {

            foreach ($params as $key => $param) {
                if ($param == "userDomain") {
                    $return['userDomain'] = $userChannelDomain;
                } elseif ($param == "busiDomain") {
                    $return['busiDomain'] = $busiChannelDomain;
                }
            }
        } else {
            $return['userDomain'] = $userChannelDomain;
            $return['busiDomain'] = $busiChannelDomain;
        }

        return $return;
    }


    /**
     * 会员信息详情
     * @param $uid          int         指定会员ID，如不指定则查询当前登录人的信息
     * @param $isloginUser  booblean    强制获取用户的重要敏感信息
     * @param $simple       booblean    输出用户的基本信息，不查询任何其他表
     * @return array
     */
    public function detail($uid = 0, $isloginUser = false, $simple = false)
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $installModuleArr;
        global $HN_memory;
        global $cfg_secureAccess;
        global $cfg_basehost;
        $detail = array();
        $id = $uid ? $uid : (is_array($this->param) ? $this->param['id'] : $this->param);
        $id = (int)$id;

        $simple = $simple ? $simple : (is_array($this->param) ? $this->param['simple'] : 0);
        $simple = (int)$simple;

        $userid = $userLogin->getMemberID();

        //不指定ID时，获取当前登录用户的信息
        if(!$id && $userid > 0){
            $id = $userid;
        }

        $shop   = 0;  //是否查询会员开通店铺信息
        $friend = 0;  //是否验证是否为好友
        $from   = 0;  //与哪个会员验证是否为好友

        $_param = $this->param;
        
        if (is_array($_param) && ($_param['shop'] || $_param['friend'] || $_param['from'] || $_param['userkey'])) {

            $shop = (int)$_param['shop'];
            $friend = (int)$_param['friend'];
            $from = (int)$_param['from'];

            if (isset($_param['userkey'])) {
                $userkey = $_param['userkey'];
                $RenrenCrypt = new RenrenCrypt();
                $userinfo = $RenrenCrypt->php_decrypt(base64_decode($userkey));
                $userinfo = explode('@@@@', $userinfo);

                $openid = $userinfo[0];
                $session_key = $userinfo[1];

                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `wechat_mini_openid` = '$openid'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $id = $ret[0]['id'];
                } else {
                    $id = $id['id'];
                }
            } else {
                $id = $_param['id'];
            }
        }

        $id = (int)$id;

        if ($id <= 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `state` = 1 AND `mtype` != 0 AND `mtype` != 3 AND `id` = " . $id);
        $results = $dsql->dsqlOper($archives, "results");
        if ($results && is_array($results)) {

            $detail['userid'] = $results[0]['id'];

            //验证会员是否已经登录，如果没有登录，将不输出重要信息
            if ($userid == $id || $isloginUser) {
                $RenrenCrypt = new RenrenCrypt();
                $detail['userid_encode'] = base64_encode($RenrenCrypt->php_encrypt($results[0]['id'] . '&' . $results[0]['password']));

                $detail['idcardFront'] = $results[0]['idcardFront'];
                $detail['idcardBack'] = $results[0]['idcardBack'];
                $detail['idcardFrontSource'] = $results[0]['idcardFront'] ? getAttachemntFile($results[0]['idcardFront']) : '';
                $detail['idcardBackSource'] = $results[0]['idcardBack'] ? getAttachemntFile($results[0]['idcardBack']) : '';
            }

            global $cfg_cookiePre;
            $detail['cookiePre'] = $cfg_cookiePre . 'login_user';

            $detail['userType'] = (int)$results[0]['mtype'];
            $detail['level'] = (int)$results[0]['level'];
            $detail['certifyState'] = (int)$results[0]['certifyState'];
            $detail['nation'] = $results[0]['nation'];

            $levelName = $langData['siteConfig'][21][31];   //普通会员
            $levelIcon = "";

            $privilege = array();
            //查询
            if ($results[0]['level'] && !$simple) {
                $sql = $dsql->SetQuery("SELECT `name`, `icon`,`privilege` FROM `#@__member_level` WHERE `id` = " . $results[0]['level']);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $levelName = $ret[0]['name'];
                    $privilege = $ret[0]['privilege'] != '' ? unserialize($ret[0]['privilege']) : array();
                    $levelIcon = empty($ret[0]['icon']) ? "" : getAttachemntFile($ret[0]['icon']);
                }
            }

            $detail['licenseState'] = $results[0]['licenseState'];
            $detail['promotion'] = (float)$results[0]['promotion'];
            $detail['birthday'] = $results[0]['birthday'];
            $detail['iphome'] = getIpHome($results[0]['lastloginipaddr']);

            //验证会员是否已经登录，如果没有登录，将不输出重要信息
            if ($userid == $id || $isloginUser) {
                $detail['privilege'] = $privilege;
                $detail['expired'] = (int)$results[0]['expired'];
                $detail['username'] = $results[0]['username'];
                $detail['realname'] = $results[0]['realname'];
                $detail['delivery_count'] = $results[0]['delivery_count'];
                $detail['pwd'] = $results[0]['password'] ? 1 : 0;  //如果密码不为空，则输出1，如果没有设置过密码，输出0

                $detail['certifyInfo'] = $results[0]['certifyInfo'];
                $detail['idcard'] = preg_replace('/([0-9]{5})[0-9]{11}(.*?)/is', "$1*************$2", $results[0]['idcard']);
                $detail['paypwdCheck'] = $results[0]['paypwdCheck'];
                $detail['email'] = $results[0]['email'];
                $detail['emailEncrypt'] = preg_replace('/([0-9a-zA-Z]{3})(.*?)@(.*?)/is', "$1***@$3", $results[0]['email']);
                $detail['emailCheck'] = $results[0]['emailCheck'];
                $detail['areaCode'] = empty($results[0]['areaCode']) ? "86" : $results[0]['areaCode'];
                $_phone = $results[0]['phone'];
                $_phone = $_phone ? preg_replace('/(\'|\")/', '', str_replace(PHP_EOL, '', trim($_phone))) : $_phone;
                $detail['phone'] = $_phone;
                $detail['phoneEncrypt'] = preg_replace('/(1[34578]{1}[0-9])[0-9]{4}([0-9]{4})/is', "$1****$2", $_phone);
                $detail['phoneCheck'] = $results[0]['phoneCheck'];
                $detail['phoneBindTime'] = (int)$results[0]['phoneBindTime'];
                $detail['qq'] = $results[0]['qq'];

                if(!$simple){
                    $sql = $dsql->SetQuery("SELECT count(log.`id`) totalCount FROM `#@__member_letter_log` log LEFT JOIN `#@__member_letter` l ON l.`id` = log.`lid` WHERE log.`state` = 0 AND l.`type` = 0 AND log.`uid` = $id");
                    $msgnum = $dsql->dsqlOper($sql, "results");
                    $msgnum = $msgnum && is_array($msgnum) ? $msgnum[0]['totalCount'] : 0;
                }

                $detail['message']  = (int)$msgnum;

                $detail['regtime']          = date("Y-m-d H:i:s", $results[0]['regtime']);
                $detail['regtimeold']       = $results[0]['regtime'];
                $detail['regip']            = $results[0]['regip'];
                $detail['regipaddr']        = $results[0]['regipaddr'];
                $detail['lastlogintime']    = $results[0]['lastlogintime'] ? date("Y-m-d H:i:s", $results[0]['lastlogintime']) : "";
                $detail['lastloginip']      = $results[0]['lastloginip'];
                $detail['lastloginipaddr']  = $results[0]['lastloginipaddr'];
                $detail['tempbg']           = $results[0]['tempbg'];
                $detail['pctempbg']         = $results[0]['pctempbg'];
                $detail['mtempbgurl']       = $results[0]['mtempbgurl'];
                $detail['is_editname']      = $results[0]['is_editname'];
                $detail['noawardlegoutime'] = $results[0]['noawardlegoutime'];
                $detail['is_noawardlegou']  = $results[0]['is_noawardlegou'];

                $BeginDate                  = date('Y-m-01', strtotime(date("Y-m-d"))); //本月第一天
                $overDate                   = date('Y-m-d', strtotime("$BeginDate +1 month -1 day")); //本月最后一天
                $overDate                   = GetMkTime($overDate);  //本月第一天
                $BeginDate                  = GetMkTime($BeginDate);  //本月最后一天

                if(!$simple){
                    //查询本月消费金使用情况
                    $Sumsql = $dsql->SetQuery("SELECT SUM(`amount`)bonusPrice FROM `#@__member_bonus` WHERE `userid` = '$userid'  AND `date` >= $BeginDate AND `date` <= $overDate AND `type` = 0");
                    $bonusSum = $dsql->dsqlOper($Sumsql, "results");
                    $bonusPrice = 0;
                    if(is_array($bonusSum)){
                        $bonusPrice = (float)$bonusSum[0]['bonusPrice'];
                    }

                    //额度;
                    $configPay = $dsql->SetQuery("SELECT `pay_config` FROM `#@__site_payment` WHERE `pay_code` = 'huoniao_bonus'");
                    $Payconfig = $dsql->dsqlOper($configPay, "results");
                    $monBonus = 0;
                    if ($Payconfig) {
                        $monBonus = unserialize($Payconfig[0]['pay_config']);
                        $monBonus = (float)$monBonus[0]['value'];
                    }

                    $detail['usebonus'] = (float)$bonusPrice;  //本月已用消费金
                    $detail['monBonus'] = (float)$monBonus;
                    $detail['surplusbonus'] = sprintf("%.2f", $monBonus - $bonusPrice); //本月剩余消费金额度

                    //查询退回的订单
                    $tui = $dsql->SetQuery("SELECT SUM(`amount`)amount  FROM `#@__member_bonus` WHERE `userid` = '$userid' AND `date` >= $BeginDate AND `date` <= $overDate  AND `info` like '%消费金退款%' ");
                    $tuisql = $dsql->dsqlOper($tui, "results");
                    $detail['usebonus']    -= $tuisql[0]['amount'] ? $tuisql[0]['amount'] : 0;
                    $detail['surplusbonus']  += $tuisql[0]['amount'] ? $tuisql[0]['amount'] : 0;
                }
                

                //昵称、头像是否在审核中
                $detail['nickname_audit'] = $results[0]['nickname_audit'];
                $detail['nickname_state'] = $results[0]['nickname_state'];
                $detail['photo_audit'] = $results[0]['photo_audit'] ? getAttachemntFile($results[0]['photo_audit']) : '';
                $detail['photo_state'] = $results[0]['photo_state'];
            }

            $detail['money']            = (float)$results[0]['money'];
            $detail['freeze']           = (float)$results[0]['freeze'];
            $detail['bonus']            = (float)$results[0]['bonus'];             //会员消费金
            global $cfg_pointState;
            $detail['point']            = $cfg_pointState ? (int)$results[0]['point'] : 0;

            $detail['levelName'] = $levelName;
            $detail['levelIcon'] = $levelIcon;

            if ($results[0]['mtype'] == 2) {
                $detail['nickname'] = !empty($results[0]['company']) ? $results[0]['company'] : $results[0]['nickname'];
                $detail['person'] = $results[0]['realname'];
            } else {
                $detail['nickname'] = $results[0]['nickname'];
            }
            // $detail['photo'] = strstr($results[0]['photo'], 'http') ? $results[0]['photo'] : ($userid == $id || $isloginUser ? getFilePath($results[0]['photo']) : getAttachemntFile($results[0]['photo']));
            $detail['photo'] = $results[0]['photo'] ? (strstr($results[0]['photo'], 'http') ? $results[0]['photo'] : getFilePath($results[0]['photo'])) : getAttachemntFile('/static/images/noPhoto_100.jpg');
            $detail['photoSource'] = $results[0]['photo'];
            $detail['sex'] = $results[0]['sex'];
            $detail['wechat_subscribe'] = $results[0]['wechat_subscribe'];
            $detail['online']           = isApp() ? 1 : $results[0]['online'];  //APP端临时不判断是否离线

            //区域
            $detail['cityid']           = $results[0]['cityid'];
            $detail['addrid']           = $results[0]['addr'];
            $detail['description']      = str_replace(array("\r\n", "\r", "\n"), "<br />", $results[0]['description']);

            if(!$simple){
                global $data;
                $data = "";
                $addrArr = getParentArr("site_area", $results[0]['addr']);
                if ($addrArr) {
                    $addrArr = array_reverse(parent_foreach($addrArr, "typename"));
                    $detail['addrName'] = join(" > ", $addrArr);
                } else {
                    $detail['addrName'] = "";
                }
            }

            //移动端新版DIY需要用到的数据 by gz 20230530
            if (($userid == $id || $isloginUser)) {

                //最后一次开通的会员信息
                //当expired和last_expired都是0时，说明该用户未开通过会员
                $last_levelName = '';
                if ($results[0]['last_level'] && !$simple) {
                    $sql = $dsql->SetQuery("SELECT `name`, `icon`,`privilege` FROM `#@__member_level` WHERE `id` = " . $results[0]['last_level']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $last_levelName = $ret[0]['name'];
                    }
                }
                $detail['last_levelName'] = $last_levelName;  //等级名称
                $detail['last_expired'] = (int)$results[0]['last_expired'];  //过期时间
                
                //如果expired为0，但是last_expired不为0时，说明以前开通过会员，但是已经过期了，这里针对不同的情况进行显示内容
                $levelValidity = '';

                //未过期
                if($detail['expired']){
                    $levelValidity = '权益到期：' . date('Y/m/d', $detail['expired']);
                }
                //已过期
                elseif($detail['last_expired']){
                    $levelValidity = '已过期' . ceil((GetMkTime(time()) - $detail['last_expired']) / 86400) . '天';
                }
                $detail['levelValidity'] = $levelValidity;  //会员权益说明文字


                //通过指定参数显示特定数据
                $need_data = isset($this->param['need_data']) ? $this->param['need_data'] : '';
                if($need_data){
                    
                    // 优惠券：quan
                    // 收藏：collect
                    // 足迹：footPrint
                    // 粉丝：fans
                    // 关注：follow
                    // 发布：fabu
                    // 签到：qiandao
                    // 赞：zan
                    $need_data_arr = explode(',', $need_data);

                    //查询优惠券数量
                    if(in_array('quan', $need_data_arr)){
                        $quanCount = 0;

                        $this->param = array(
                            'gettype' => 1,
                            'pageSize' => 1
                        );
                        $userQuanList = $this->userQuanList();
                        if($userQuanList && is_array($userQuanList) && $userQuanList['pageInfo']){
                            $quanCount = (int)$userQuanList['pageInfo']['totalCount1'] + (int)$userQuanList['pageInfo']['totalCount2'];
                        }

                        $detail['quan'] = $quanCount;
                    }

                    //查询收藏数量
                    if(in_array('collect', $need_data_arr)){
                        $collectCount = 0;

                        $this->param = array(
                            'pageSize' => 1
                        );
                        $collectList = $this->collectList();
                        if($collectList && is_array($collectList) && $collectList['pageInfo']){
                            $collectCount = (int)$collectList['pageInfo']['totalCount'];
                        }

                        $detail['collect'] = $collectCount;
                    }

                    //查询足迹数量
                    if(in_array('footPrint', $need_data_arr)){
                        $totalCount = 0;

                        //多表查询涉及到足迹功能的表
                        $footPrintModule = array('house', 'live', 'article', 'tieba', 'pension', 'car', 'job', 'huodong', 'business', 'info', 'shop', 'travel', 'renovation', 'homemaking', 'tuan', 'education', 'sfcar', 'task');
                        $footPrintTable = array();
                        foreach($footPrintModule as $val){
                            if (in_array($val, $installModuleArr) || $val == 'business') {
                                array_push($footPrintTable, "SELECT `id` FROM `#@__{$val}_historyclick` WHERE `uid` = $id");
                            }
                        }

                        $sql = $dsql::SetQuery("SELECT COUNT(*) AS totalCount FROM (".join(' UNION ALL ', $footPrintTable).") AS totalCount");
                        $collectCount = (int)$dsql->getOne($sql);

                        $detail['footPrint'] = $collectCount;
                    }

                    //查询粉丝数量
                    if(in_array('fans', $need_data_arr)){
                        $fansCount = 0;

                        $this->param = array(
                            'uid' => $id,
                            'pageSize' => 1
                        );
                        $fansList = $this->follow();
                        if($fansList && is_array($fansList) && $fansList['pageInfo']){
                            $fansCount = (int)$fansList['pageInfo']['totalCount'];
                        }

                        $detail['fans'] = $fansCount;
                    }

                    //查询关注数量
                    if(in_array('follow', $need_data_arr)){
                        $followCount = 0;

                        $this->param = array(
                            'uid' => $id,
                            'type' => 'follow',
                            'pageSize' => 1
                        );
                        $followList = $this->follow();
                        if($followList && is_array($followList) && $followList['pageInfo']){
                            $followCount = (int)$followList['pageInfo']['totalCount'];
                        }

                        $detail['follow'] = $followCount;
                    }

                    //查询发布数量
                    if(in_array('fabu', $need_data_arr)){
                        $fabuCount = (int)$this->fabuStatistics();
                        $detail['fabu'] = $fabuCount;
                    }

                    //签到
                    if(in_array('qiandao', $need_data_arr)){

                        $qiandaoData = array();

                        global $cfg_pointName;
                        global $cfg_qiandao_state;        //签到功能状态  0关闭 1开启
                        global $cfg_qiandao_firstReward;  //首次签到
                        global $cfg_qiandao_reward;       //日常签到
                        global $cfg_qiandao_lianqian;     //连续签到
                        global $cfg_qiandao_zongqian;     //总签到

                        $qiandaoData['state'] = (int)$cfg_qiandao_state;

                        if($cfg_qiandao_state) {
                        
                            //统计登录会员总签到天数
                            $totalCount = 0;
                            $sql = $dsql->SetQuery("SELECT `id`, `date` FROM `#@__member_qiandao` WHERE `uid` = $id ORDER BY `date` DESC");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $totalCount = count($ret);
                            }
                            $qiandaoData['total'] = (int)$totalCount;

                            //统计连续签到天数
                            $dateArr = array();
                            if ($ret) {
                                foreach ($ret as $key => $value) {
                                    array_push($dateArr, $value['date']);
                                }
                            }
                            $lianqianCount = (int)getContinueDay($dateArr);
                            $qiandaoData['lianqian'] = $lianqianCount;

                            //判断是否已经签到
                            $today = 0;
                            if ($ret) {
                                $lastQiandao = GetMkTime(date("Y-m-d", $ret[0]['date']));
                                $_today = GetMkTime(date("Y-m-d", time()));

                                if ($lastQiandao == $_today) {
                                    $today = 1;
                                }
                            }
                            $qiandaoData['today'] = $today;

                            $tips = "签到得" . $cfg_qiandao_reward . $cfg_pointName;  //默认提示

                            //没有签到过的，并且设置了首次签到奖励
                            if($totalCount == 0 && $cfg_qiandao_firstReward){
                                $tips = "首次签到赚" . $cfg_qiandao_firstReward . $cfg_pointName;
                            }
                            else{

                                //已经有签到记录的，分别根据连签奖励和总签奖励进行显示，以天数少的优先
                                $needDay1 = 0;  //还需要连续签到几天
                                $reward1 = 0;  //连续签到奖励的积分
                                $needDay2 = 0;  //还需要总签到几天
                                $reward2 = 0;  //总签到奖励的积分

                                $lianqian = unserialize($cfg_qiandao_lianqian);
                                if($lianqian && is_array($lianqian)){
                                    array_multisort(array_column($lianqian, 'day'), SORT_DESC, $lianqian);
                                }
                                $zongqian = unserialize($cfg_qiandao_zongqian);
                                if($zongqian && is_array($zongqian)){
                                    array_multisort(array_column($zongqian, 'day'), SORT_DESC, $zongqian);
                                }

                                //遍历连签数据
                                foreach($lianqian as $val){
                                    $day = (int)$val['day'];  //需要签到的天数
                                    $reward = (int)$val['reward'];  //奖励的值

                                    if($lianqianCount < $day){
                                        $needDay1 = $day - $lianqianCount;
                                        $reward1 = $reward;
                                    }
                                }

                                //遍历总签数据
                                foreach($zongqian as $val){
                                    $day = (int)$val['day'];  //需要签到的天数
                                    $reward = (int)$val['reward'];  //奖励的值

                                    if($totalCount < $day){
                                        $needDay2 = $day - $totalCount;
                                        $reward2 = $reward;
                                    }
                                }
                                
                                //需要连续签到的天数小于等于总签到天数时，优先显示连续签到奖励
                                if($needDay1 <= $needDay2){
                                    $tips = ($lianqianCount <= 1 ? ($today ? "今日已签到" : "今日未签到") : "已签到" . $lianqianCount . "天") . "，连签" . $needDay1 . "天赚" . $reward1 . $cfg_pointName . "。";
                                }
                                elseif($needDay2){
                                    $tips = ($totalCount <= 1 ? ($today ? "今日已签到" : "今日未签到") : "已签到" . $totalCount . "天") . "，再签" . $needDay2 . "天赚" . $reward2 . $cfg_pointName . "。";
                                }
                                else{
                                    $tips = ($today ? "今日已签到" : "今日未签到") . "，已签到" . $totalCount . "天。";
                                }

                            }

                            $qiandaoData['tips'] = $tips;

                        }

                        $detail['qiandao'] = $qiandaoData;
                        
                    }

                    //查询赞的数量
                    if(in_array('zan', $need_data_arr)){
                        $zanCount = 0;

                        $this->param = array(
                            'u' => 1,
                            'pageSize' => 1
                        );
                        $zanList = $this->upList();
                        if($zanList && is_array($zanList) && $zanList['pageInfo']){
                            $zanCount = (int)$zanList['pageInfo']['totalCount'];
                        }

                        $detail['zan'] = $zanCount;
                    }



                }

                
            }

            $is_staff = 0;
            $autharr  = array();
            if ($results[0]['mtype'] == 2) {
                $detail['company'] = $results[0]['company'];
                $detail['address'] = $results[0]['address'];

                $detail['license'] = $results[0]['license'];
                $detail['licenseSource'] = $results[0]['license'] ? getAttachemntFile($results[0]['license']) : '';

                //验证会员是否已经登录，如果没有登录，将不输出重要信息
                if ($userid == $id || $isloginUser) {
                    $detail['licenseState'] = (int)$results[0]['licenseState'];
                    $detail['licenseInfo'] = $results[0]['licenseInfo'];
                }

                // 商家类型
                if(!$simple){
                    $sql = $dsql->SetQuery("SELECT `id`, `type`, `expired`, `state`, `package`, `hidePackage`, `sortPackage`, `diancan_state`, `dingzuo_state`, `paidui_state`, `maidan_state` FROM `#@__business_list` WHERE `uid` = " . $id . " AND `state` != 4");
                    $res = $dsql->dsqlOper($sql, "results");
                    if ($res) {
                        $busiId = $res[0]['id'];
                        $busiType = $res[0]['type'];
                        $busiState = $res[0]['state'];
                        $busiExpired = $res[0]['expired'];
                        $memberPackage = $res[0]['package'];
                        $hidePackage = $res[0]['hidePackage'];
                        $sortPackage = $res[0]['sortPackage'];
                        $diancan_state = $res[0]['diancan_state'];
                        $dingzuo_state = $res[0]['dingzuo_state'];
                        $paidui_state = $res[0]['paidui_state'];
                        $maidan_state = $res[0]['maidan_state'];
                    } else {
                        $busiId = 0;
                        $busiType = 0;
                        $busiState = 0;
                        $busiExpired = 0;
                        $memberPackage = '';
                        $hidePackage = '';
                        $sortPackage = '';
                        $diancan_state = 0;
                        $dingzuo_state = 0;
                        $paidui_state = 0;
                        $maidan_state = 0;
                    }
                    $detail['busiId'] = $busiId;
                    $detail['busiType'] = $busiType;

                    //验证会员是否已经登录，如果没有登录，将不输出重要信息
                    if ($userid == $id || $isloginUser) {
                        $detail['busiState'] = $busiState;
                        $detail['busiExpired'] = $busiExpired;

                        $hidePackage = explode(',', $hidePackage);
                        $detail['hidePackage'] = $hidePackage;
                    }

                    //商家主页链接
                    $param = array(
                        'service' => 'business',
                        'template' => 'detail',
                        'id' => $busiId
                    );
                    $detail['companyUrl'] = getUrlPath($param);
                }
            } elseif(!$simple) {
                
                $staffsql = $dsql->SetQuery("SELECT s.`id`,s.`auth`,l.`uid` FROM `#@__staff` s LEFT JOIN `#@__business_list` l ON s.`sid` = l.`id` WHERE  s.`uid` = '$id'");
                $staffres = $dsql->dsqlOper($staffsql, "results");
                if ($staffres && is_array($staffres)) {
                    $is_staff = 1;
                    $staffid  = $staffres[0]['id'];
                    $autharr  = $staffres[0]['auth'] != '' ? unserialize($staffres[0]['auth']) : array();

                    $companyuid = $staffres[0]['uid'];
                }

                $hidePackage = array();

                $detail['hidePackage']  = $hidePackage;
            }

            $detail['userType'] = $detail['busiState'] ? $detail['userType'] : 1;  //如果商家状态为0，则会员类型为普通会员
            $detail['companyuid'] = (int)$companyuid;
            $detail['is_staff']   = $is_staff;
            $detail['autharr']    = $autharr;
            $detail['staffid']    = (int)$staffid;


            //验证会员是否已经登录，如果没有登录，将不输出重要信息
            if ($userid == $id || $isloginUser) {
                $total = 100;
                //验证支付密码
                if (empty($results[0]['paypwd'])) {
                    $total -= 20;
                }
                //验证实名
                if ($results[0]['mtype'] == 1 && $results[0]['certifyState'] != 1) {
                    $total -= 20;
                } elseif ($results[0]['mtype'] == 2 && $results[0]['licenseState'] != 1) {
                    $total -= 20;
                }
                //验证手机
                if ($results[0]['phoneCheck'] != 1) {
                    $total -= 20;
                }
                //验证邮箱
                if ($results[0]['emailCheck'] != 1) {
                    $total -= 20;
                }
                //验证密保问题
                if(!$simple){
                    $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_security` WHERE `uid` = " . $id);
                    $security = $dsql->dsqlOper($archives, "totalCount");
                    if ($security < 1) {
                        $total -= 20;
                        $detail['question']  = 0;
                    } else {
                        $detail['question']  = 1;
                    }
                }

                $detail['security'] = $total;
            }

            //融云Token
            // $rongCloudToken = getRongCloudToken($id, $detail['nickname'], $detail['photo']);
            // $detail['rongCloudToken'] = is_array($rongCloudToken) ? 0 : $rongCloudToken;
            if ($userid == $id) {
                $detail['wechat_conn'] = $results[0]['wechat_conn'];
                $detail['wechat_openid'] = $results[0]['wechat_openid'];
                $detail['wechat_mini_openid'] = $results[0]['wechat_mini_openid'];
                $detail['alipay_conn'] = $results[0]['alipay_conn'];
                $detail['realname']    = $results[0]['realname'];
            }

            // 获取交友会员id
            $dating_uid = 0;
            if (in_array('dating', $installModuleArr) && !$simple) {
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__dating_member` WHERE `userid` = '$id' AND `type` = 0 ORDER BY `id` ASC");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $dating_uid = $ret[0]['id'];
                }
            }
            $detail['dating_uid'] = $dating_uid;

            $detail['zhaopin_company'] = (int)$results[0]['zhaopin_company'];  //是否已经入驻城市招聘企业 1:未入驻 2:已入驻
            $detail['zhaopin_resume'] = (int)$results[0]['zhaopin_resume'];  //是否已经入驻城市招聘企业 1:未入驻 2:已入驻

            ksort($detail);
        }


        //验证两人是否为好友
        if ($friend) {

            $userid = $from ? $from : $userid;

            $isfriend = 0;
            $sql = $dsql->SetQuery("SELECT `delfrom`, `delto` FROM `#@__member_friend` WHERE ((`fid` = $userid AND `tid` = $id) OR (`fid` = $id AND `tid` = $userid)) AND `state` = 1 AND `delfrom` = 0 AND `delto` = 0");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $delfrom = $ret[0]['delfrom'];
                $delto = $ret[0]['delto'];
                if (!$delfrom && !$delto) {
                    $isfriend = 1;
                }
            }
            $detail['isfriend'] = $isfriend;
        }


        //查询会员开通的店铺信息
        if ($shop && $detail['userType'] == 2 && !$simple) {

            $shopList = array();
            global $installModuleArr;  //已安装模块

            //商家信息
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__business_list` WHERE `uid` = " . $id . " ORDER BY `id` DESC");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $sid = $results[0]['id'];
                $configHandels = new handlers('business', "storeDetail");
                $ret = $configHandels->getHandle($sid);
                if ($ret['state'] == 100) {
                    array_push($shopList, array(
                        'module' => 'business',
                        'type' => 'store',
                        'title' => $ret['info']['title'],
                        'note' => join('、', $ret['info']['tag_shopArr']),
                        'url' => $ret['info']['url'],
                    ));
                }
            }

            //自媒体
            if (in_array('article', $installModuleArr)) {
                //自媒体信息
                $configHandels = new handlers('article', "selfmediaDetail");
                $ret = $configHandels->getHandle(array("uid" => $id));
                if ($ret['state'] == 100 && $ret['info']['state']) {
                    array_push($shopList, array(
                        'module' => 'article',
                        'type' => 'selfmedia',
                        'title' => $ret['info']['ac_name'],
                        'note' => $ret['info']['ac_profile'],
                        'url' => $ret['info']['url'],
                    ));
                }
            }

            //二手车
            if (in_array('car', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__car_store` WHERE `userid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('car', "storeDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'car',
                            'type' => 'store',
                            'title' => $ret['info']['title'],
                            'note' => $ret['info']['tag'],
                            'url' => $ret['info']['url'],
                        ));
                    }
                }
            }

            //二手车
            if (in_array('homemaking', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__homemaking_store` WHERE `userid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('homemaking', "storeDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'homemaking',
                            'type' => 'store',
                            'title' => $ret['info']['title'],
                            'note' => $ret['info']['tag'],
                            'url' => $ret['info']['url'],
                        ));
                    }
                }
            }

            //房产中介
            if (in_array('house', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__house_zjcom` WHERE `userid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('house', "zjComDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'house',
                            'type' => 'store',
                            'title' => $ret['info']['title'],
                            'note' => $ret['info']['address'],
                            'url' => $ret['info']['url'],
                        ));
                    }
                }
            }

            //分类信息
            if (in_array('info', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__infoshop` WHERE `uid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('info', "storeDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'info',
                            'type' => 'store',
                            'title' => $ret['info']['member']['company'],
                            'note' => $ret['info']['note'],
                            'url' => $ret['info']['domain'],
                        ));
                    }
                }
            }

            //招聘企业
            if (in_array('job', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__job_company` WHERE `userid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('job', "companyDetail");
                    $ret = $configHandels->getHandle(array('id' => $sid));
                    if ($ret['state'] == 100) {

                        array_push($shopList, array(
                            'module' => 'job',
                            'type' => 'store',
                            'title' => $ret['info']['title'],
                            'note' => $ret['info']['address'],
                            'url' => $ret['info']['url'],
                            'item' => array(
                                array(
                                    'title' => '在招职位：' . $ret['info']['post_count'] . '个',
                                    'url' => $ret['info']['url']
                                ),
                                $wage = array(
                                    'title' => '平均薪资：' . $ret['info']['salary_avg'],
                                    'url' => $ret['info']['url']
                                )
                            )
                        ));
                    }
                }
            }

            //商城店铺
            if (in_array('shop', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('shop', "storeDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'shop',
                            'type' => 'store',
                            'title' => $ret['info']['title'],
                            'note' => $ret['info']['project'],
                            'url' => $ret['info']['domain'],
                        ));
                    }
                }
            }

            //团购店铺
            if (in_array('tuan', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__tuan_store` WHERE `uid` = " . $id);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['id'];
                    $configHandels = new handlers('tuan', "storeDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'tuan',
                            'type' => 'store',
                            'title' => $ret['info']['member']['company'],
                            'note' => $ret['info']['typename'],
                            'url' => $ret['info']['url'],
                        ));
                    }
                }
            }

            //外卖店铺
            if (in_array('waimai', $installModuleArr)) {
                $archives = $dsql->SetQuery("SELECT `shopid` FROM `#@__waimai_shop_manager` WHERE `userid` = " . $id . " ORDER BY `id` ASC");
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $sid = $results[0]['shopid'];
                    $configHandels = new handlers('waimai', "storeDetail");
                    $ret = $configHandels->getHandle($sid);
                    if ($ret['state'] == 100) {
                        array_push($shopList, array(
                            'module' => 'waimai',
                            'type' => 'store',
                            'title' => $ret['info']['shopname'],
                            'note' => $ret['info']['address'],
                            'url' => $ret['info']['url'],
                        ));
                    }
                }
            }

            //自助建站
            if (in_array('website', $installModuleArr)) {
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__website` where `userid` = " . $id);
                $res = $dsql->dsqlOper($sql, "results");
                if (!empty($res[0]['id'])) {
                    $param = array(
                        "service"      => "website",
                        "template"     => "site" . $res[0]['id']
                    );
                    $url = getUrlPath($param);

                    array_push($shopList, array(
                        'module' => 'website',
                        'type' => 'store',
                        'title' => '企业站点',
                        'note' => '点击访问企业主页',
                        'url' => $url,
                    ));
                }
            }

            $detail['shopList'] = $shopList;
        }


        //获取个人主页相关的数据
        if($_REQUEST['from'] == 'homepage'){
            $homepageData = array();
            $sql = $dsql->SetQuery("SELECT m.`id`, m.`nickname`, m.`mtype`,m.`state`, m.`company`, m.`level`, m.`photo`, m.`sex`,m.`birthday`,m.`qq`, m.`phone`,m.`regtime`,l.`name` level_name, l.`icon` level_icon, a.`typename` addr, count(mes.`id`) totalMessage, (SELECT count(f.`id`) FROM `#@__member_follow` f LEFT JOIN `#@__member` m1 ON m1.`id` = f.`tid` WHERE f.`fid` = $id AND m1.id != '' AND m1.`mtype`!=0) as totalFans, (SELECT count(f.`id`) FROM `#@__member_follow` f LEFT JOIN `#@__member` m2 ON m2.`id` = f.`fid`  WHERE f.`tid` = $id  AND m2.`id` != '' AND m2.`mtype`!=0) as totalFollow ,(SELECT count(`id`) FROM `#@__member_visitor` WHERE `tid` =$id) as totalVisitor FROM `#@__member` m LEFT JOIN `#@__member_level` l ON l.`id` = m.`level` LEFT JOIN `#@__site_area` a ON a.`id` = m.`addr` LEFT JOIN `#@__member_message` mes ON mes.`tid` = m.`id` WHERE m.`id` = $id");
            $ret = $dsql->dsqlOper($sql, "results");
            if($ret){
                $data = $ret[0];

                $regtime    = (int)((time() - $data['regtime']) / 31104000);
                $totalMessage = (int)$data['totalMessage'];
                $totalFans    = (int)$data['totalFans'];
                $totalFollow  = (int)$data['totalFollow'];
                $totalVisitor = (int)$data['totalVisitor'];

                $homepageData['regtime'] = $regtime;
                $homepageData['regtime_'] = $data['regtime'];
                $homepageData['totalMessage'] = $totalMessage;
                $homepageData['totalFans'] = $totalFans;
                $homepageData['totalFollow'] = $totalFollow;
                $homepageData['totalVisitor'] = $totalVisitor;


                //判断当前登录会员是否已经关注过要访问的会员
                $isfollow = 0;
                $userid     = $userLogin->getMemberID();
                $memberModule = $userLogin->getMemberModule($id);
                $homepageData['userModulearr'] = $memberModule;
                
                if ($userid > 0) {
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = $userid AND `fid` = $id"); //新版个人中心不再判断关注来源
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {
                        $isfollow = 1;
                    }
                }
                $homepageData['isfollow'] = 1;

                //简历地址
                if (in_array("job", $installModuleArr)) {
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__job_resume` WHERE `userid` = $id");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {
                        $resumeid = $ret[0]['id'];
                        $param = array(
                            "service" => "job",
                            "template" => "resume",
                            "id" => $resumeid
                        );
                        $homepageData['resumeUrl'] = getUrlPath($param);
                    }
                }

                //交友地址
                if (in_array("dating", $installModuleArr)) {
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__dating_member` WHERE `userid` = $id");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {
                        $datingid = $ret[0]['id'];
                        $param = array(
                            "service" => "dating",
                            "template" => "u",
                            "id" => $datingid
                        );
                        $homepageData['datingUrl'] = getUrlPath($param);
                    }
                }

                $detailHandels  = new handlers('member', "fabuCount");
                $detailConfig   = $detailHandels->getHandle(array("uid" => $id));
                $detailConfig   = $detailConfig['state'] == 100 ? $detailConfig['info'] : array();

                $modulename     = $detailConfig ? array_column($detailConfig, 'title', 'modulename') : array();
                $usercountall   = $detailConfig ? array_column($detailConfig, 'countall', 'modulename') : array();
                $allcount       = $detailConfig ? array_sum($usercountall) : 0;
                if ((is_array($memberModule) && is_array($memberModule['userModulearr']) && !in_array('circle', $memberModule['userModulearr'])) || !isMobile()) {
                    if ($qmodule == '') {
                        $fmodule = array_keys(array_filter($usercountall));
                        $qmodule = $fmodule[0] ? $fmodule[0] :  '';
                    }
                } else {
                    $qmodule = $qmodule ? $qmodule : '';
                }
                $homepageData['module'] = $qmodule;
                $homepageData['detailConfig'] = $detailConfig;
                $homepageData['modulename'] = $modulename;
                $homepageData['usercountall'] = $usercountall;
                $homepageData['allcount'] = $allcount;

                //房产经济人
                if (in_array("house", $installModuleArr)) {
                    $housesql  = $dsql->SetQuery("SELECT `id` FROM `#@__house_zjuser` WHERE `userid` = $id AND `state` = 1");
                    $houseres  = $dsql->dsqlOper($housesql, "results");
                    if ($houseres) {
                        $param = array(
                            "service"     => "house",
                            "template"    => "broker-detail",
                            "id"          => $houseres[0]['id']
                        );
                    }
                }
                $is_zjuer = empty($houseres) ? 0 : 1;

                $homepageData['is_zjuer'] = $is_zjuer;
                $homepageData['zjuerurl'] = $param ? getUrlPath($param) : 'javascript:;';
                $homepageData['housecount'] = $usercountall['house'];

                //自媒体
                if (in_array("article", $installModuleArr)) {
                    $param = array();
                    $articlesql = $dsql->SetQuery("SELECT `id` FROM `#@__article_selfmedia` WHERE `userid` = $id AND `state` = 1");
                    $articleres = $dsql->dsqlOper($articlesql, "results");

                    $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__articlelist_all` WHERE `admin` = $id AND `arcrank` = 1  AND `del` =0");
                    $result = $dsql->dsqlOper($sql, "results");
                    $param = array(
                        "service"     => "article",
                        "template"    => "mddetail",
                        "id"          => $articleres[0]['id']
                    );
                }
                $is_selfmedia = empty($articleres) ? 0 : 1;
                
                $homepageData['is_selfmedia'] = $is_selfmedia;
                $homepageData['selfmediaurl'] = getUrlPath($param);
                $homepageData['selfmediacount'] = (int)$result[0]['countall'];
                $homepageData['selfmediaid'] = (int)$result[0]['id'];

                //家教
                if (in_array("education", $installModuleArr)) {
                    $param = array();
                    $educationsql = $dsql->SetQuery("SELECT `id` FROM `#@__education_tutor` WHERE `userid` = $id AND `state` = 1");
                    $educationres = $dsql->dsqlOper($educationsql, "results");
                    $param = array(
                        "service"     => "education",
                        "template"    => "tutor-detail",
                        "id"          => $educationres[0]['id']
                    );
                }
                $is_tutor = empty($educationres) ? 0 : 1;
                
                $homepageData['is_tutor'] = $is_tutor;
                $homepageData['tutorurl'] = getUrlPath($param);
                $homepageData['educationcount'] = $usercountall['education'];

                $usertagarr = array_count_values(explode(',', $is_zjuer . "," . $is_selfmedia . "," . $is_tutor));

                if ($usertagarr['1'] == 1) {
                    $homepageData['on_usertag'] = 1;
                }

                //圈子统计
                if (in_array('circle', $installModuleArr)) {
                    require(HUONIAOINC . "/config/circle.inc.php");
                    //点赞
                    $circlesql  = $dsql->SetQuery("SELECT sum(`zan`) zanall,(SELECT count(`id`) FROM `#@__circle_dynamic_all`WHERE `userid` = $id  AND `state` = 1 AND `zan`> $customhot ) as hotall FROM `#@__circle_dynamic_all` WHERE `userid` = $id  AND `state` = 1");
                    $circleres  = $dsql->dsqlOper($circlesql, "results");
                    $zanall = $circleres['0']['zanall'];
                    $hotall = $circleres['0']['hotall'];
                }
                $homepageData['hotall'] = (int)$hotall;
                $homepageData['zanall'] = (int)$zanall;

                // 家装
                $homepageData['pctempbg'] = $detail['pctempbg'];
                $homepageData['mtempbgurl'] = getFilePath($detail['mtempbgurl']);

                //简历
                $rsumeid = 0;
                if (in_array('job', $installModuleArr)) {
                    $rsumesql = $dsql->SetQuery("SELECT `id` FROM `#@__job_resume` WHERE `userid` = $id");
                    $rsumeres = $dsql->dsqlOper($rsumesql, "results");
                    if ($rsumeres) {
                        $rsumeid = $rsumeres[0]['id'];
                    }
                }
                $homepageData['rsumeid'] = (int)$rsumeid;

                //IP属地，这里根据最后一次登录IP地址获取
                $ipaddr = '';
                $sql = $dsql->SetQuery("SELECT `ipaddr` FROM `#@__member_login` WHERE `userid` = $id ORDER BY `id` DESC LIMIT 1");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $ipaddr = $ret[0]['ipaddr'];
                }
                $homepageData['iphome'] = getIpHome($ipaddr);
            }
            
            $detail['homepageData'] = $homepageData;
        }


        return $detail;
    }


    //统计当前登录用户发布的信息数量
    public function fabuStatistics(){
        
        global $dsql;
        global $userLogin;
        global $langData;
        global $installModuleArr;

        $userid = $userLogin->getMemberID();

        if($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！

        //统计需要查询的模块和表
        $tableData = array();
        
        //贴吧
        if (in_array('tieba', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('tieba_list'),
                'param' => " AND l.`uid` = $userid AND l.`del` = 0"
            ));
        }
        
        //资讯
        if (in_array('article', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('articlelist_all'),
                'param' => " AND l.`admin` = $userid AND l.`del` = 0"
            ));
        }
        
        //圈子
        if (in_array('circle', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('circle_dynamic_all'),
                'param' => " AND l.`userid` = $userid"
            ));
        }
        
        //分类信息
        if (in_array('info', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('infolist'),
                'param' => " AND l.`userid` = $userid AND l.`del` = 0"
            ));
        }
        
        //房产
        if (in_array('house', $installModuleArr)) {

            //个人身份
            array_push($tableData, array(
                'table' => array("house_sale", "house_zu", "house_xzl", "house_sp", "house_cf", "house_cw"),
                'param' => " AND l.`usertype` = 0 AND l.`userid` = $userid"
            ));

            //经纪人身份
            array_push($tableData, array(
                'table' => array("house_sale", "house_zu", "house_xzl", "house_sp", "house_cf", "house_cw"),
                'join' => " LEFT JOIN `#@__house_zjuser` z ON z.`id` = l.`userid`",
                'param' => " AND l.`usertype` = 1 AND z.`userid` = $userid"
            ));

        }
        
        //招聘简历
        if (in_array('job', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('job_resume'),
                'param' => " AND l.`userid` = $userid AND l.`del` = 0"
            ));
        }
        
        //活动
        if (in_array('huodong', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('huodong_list'),
                'param' => " AND l.`uid` = $userid"
            ));
        }
        
        //投票
        if (in_array('vote', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('vote_list'),
                'param' => " AND l.`admin` = $userid"
            ));
        }
        
        //汽车
        if (in_array('car', $installModuleArr)) {

            //个人身份
            array_push($tableData, array(
                'table' => array('car_list'),
                'param' => " AND l.`usertype` = 0 AND l.`userid` = $userid"
            ));

            //经销商身份
            array_push($tableData, array(
                'table' => array('car_list'),
                'join' => " LEFT JOIN `#@__car_store` s ON s.`id` = l.`userid`",
                'param' => " AND l.`usertype` = 1 AND s.`userid` = $userid"
            ));

        }
        
        //旅游，只统计视频的攻略
        if (in_array('travel', $installModuleArr)) {

            //视频个人身份
            array_push($tableData, array(
                'table' => array('travel_video'),
                'param' => " AND l.`usertype` = 0 AND l.`userid` = $userid"
            ));

            //视频商家身份
            array_push($tableData, array(
                'table' => array('travel_video'),
                'join' => " LEFT JOIN `#@__travel_store` s ON s.`id` = l.`userid`",
                'param' => " AND l.`usertype` = 1 AND s.`userid` = $userid"
            ));

            //攻略个人身份
            array_push($tableData, array(
                'table' => array('travel_strategy'),
                'param' => " AND l.`usertype` = 0 AND l.`userid` = $userid"
            ));

            //攻略商家身份
            array_push($tableData, array(
                'table' => array('travel_strategy'),
                'join' => " LEFT JOIN `#@__travel_store` s ON s.`id` = l.`userid`",
                'param' => " AND l.`usertype` = 1 AND s.`userid` = $userid"
            ));

        }
        
        //顺风车
        if (in_array('sfcar', $installModuleArr)) {
            array_push($tableData, array(
                'table' => array('sfcar_list'),
                'param' => " AND l.`userid` = $userid"
            ));
        }


        //组合sql
        if(!$tableData) return array("state" => 200, "info" => "没有要统计的数据");

        $sqlStr = array();
        foreach($tableData as $val){
            $table = $val['table'];
            $join = isset($val['join']) ? $val['join'] : '';
            $param = $val['param'];

            foreach($table as $v){
                array_push($sqlStr, "SELECT l.`id` FROM `#@__{$v}` l {$join} WHERE 1 = 1 {$param}");
            }
        }

        $sql = $dsql::SetQuery("SELECT COUNT(*) AS totalCount FROM (".join(' UNION ALL ', $sqlStr).") AS totalCount");
        $totalCount = (int)$dsql->getOne($sql);

        return $totalCount;


    }


    //用户模块信息
    public function memberModule()
    {
        global $dsql;
        global $userLogin;
        global $cfg_member_card;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $cfg_member_card = (int)$cfg_member_card;

        $id = $this->param['id'];

        $detail = array();
        $archives = $dsql->SetQuery("SELECT `sortPackage`, `hidePackage`, `mtype` FROM `#@__member` WHERE `state` = 1 AND `mtype` != 0 AND `mtype` != 3 AND `id` = " . $id);
        $results = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $user_sortPackage = $results[0]['sortPackage'];
            $user_hidePackage = $results[0]['hidePackage'];

            $user_moduleList = array();
            $user_hidePackage = explode(',', $user_hidePackage);
            $user_sortPackageArr = explode(',', $user_sortPackage);

            $moduleList = getModuleList();

            //需要在会员中心显示的模块，后面如有新增，需要在这里添加模块标识！
            if (isMobile()) {
                $userModule = array('article', 'house', 'info', 'job', 'tieba', 'huodong', 'live', 'pension', 'education', 'car', 'dating', 'vote', 'circle', 'sfcar', 'renovation', 'marry');
            } else {
                $userModule = array('article', 'house', 'info', 'job', 'tieba', 'huodong', 'live', 'pension', 'education', 'car', 'dating', 'vote', 'circle', 'sfcar', 'renovation', 'marry', 'travel');
            }
            if ($moduleList) {
                foreach ($moduleList as $key => $value) {
                    $_name = $value['name'];
                    if (in_array($_name, $userModule)) {

                        //设置隐藏的，不显示，否则判断是否在排序中，如果在则显示，否则均隐藏
                        $user_show = $user_hidePackage && in_array($_name, $user_hidePackage) ? 0 : ($user_sortPackageArr && in_array($_name, $user_sortPackageArr) ? 1 : $cfg_member_card);

                        //电脑端不受该功能控制
                        $user_show = isMobile() ? $user_show : 1;

                        //主页链接
                        $homepage = '';
                        $homepage_hn = '';

                        //媒体号主页
                        if ($_name == 'article') {
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__article_selfmedia` WHERE `state` = 1 AND `userid` = " . $id);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $param = array(
                                    'service' => $_name,
                                    'template' => 'mddetail',
                                    'id' => $ret[0]['id']
                                );
                                $homepage = getUrlPath($param);
                            }

                            //二手主页
                        } elseif ($_name == 'info') {
                            if ($results[0]['mtype'] == 2) {
                                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__business_list` WHERE `state` = 1 AND `uid` = " . $id);
                                $ret = $dsql->dsqlOper($sql, "results");
                                if ($ret) {
                                    $param = array(
                                        'service' => $_name,
                                        'template' => 'business',
                                        'id' => $ret[0]['id']
                                    );
                                    $homepage = getUrlPath($param);
                                } else {
                                    //个人主页
                                    $homepage = $cfg_secureAccess . $cfg_basehost . '/user-' . $id . '.html';
                                }
                            } else {
                                //个人主页
                                $homepage = $cfg_secureAccess . $cfg_basehost . '/user-' . $id . '.html';
                            }

                            //经纪人主页
                        } elseif ($_name == 'house') {
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__house_zjuser` WHERE `state` = 1 AND `userid` = " . $id);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $param = array(
                                    'service' => $_name,
                                    'template' => 'broker-detail',
                                    'id' => $ret[0]['id']
                                );
                                $homepage = getUrlPath($param);
                            }

                            //家教主页
                        } elseif ($_name == 'education') {
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__education_teacher` WHERE `state` = 1 AND `userid` = " . $id);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $param = array(
                                    'service' => $_name,
                                    'template' => 'teacher-detail',
                                    'id' => $ret[0]['id']
                                );
                                $homepage = getUrlPath($param);
                            }

                            //交友
                        } elseif ($_name == 'dating') {

                            //会员主页
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__dating_member` WHERE `type` = 0 AND `state` = 1 AND `userid` = " . $id);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $param = array(
                                    'service' => $_name,
                                    'template' => 'u',
                                    'id' => $ret[0]['id']
                                );
                                $homepage = getUrlPath($param);
                            }

                            //红娘主页
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__dating_member` WHERE `type` = 1 AND `state` = 1 AND `userid` = " . $id);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $param = array(
                                    'service' => $_name,
                                    'template' => 'hn_detail',
                                    'id' => $ret[0]['id']
                                );
                                $homepage_hn = getUrlPath($param);
                            }
                        }

                        array_push($user_moduleList, array(
                            'name' => $_name,
                            'title' => $value['title'],
                            'show' => $user_show,
                            'homepage' => $homepage,
                            'homepage_hn' => $homepage_hn
                        ));
                    }
                }
            }


            //模块排序
            if ($user_moduleList && $user_sortPackage) {

                $storeList = array();  //排序后的模块数据
                $storeArr = $user_moduleList;  //现有模块数据

                //先按指定模块的数据排序
                $user_sortPackage = explode(',', $user_sortPackage);
                foreach ($user_sortPackage as $key => $value) {
                    foreach ($storeArr as $k => $v) {
                        if ($value == $v['name']) {
                            array_push($storeList, $v);
                            unset($storeArr[$k]);
                        }
                    }
                }

                //把剩余不存在指定的模块数据添加到排序后的模块数据
                if ($storeArr) {
                    foreach ($storeArr as $key => $value) {
                        array_push($storeList, $value);
                    }
                }

                //重新把最新的模块排序数据覆盖
                $user_moduleList = $storeList;
            }
            $detail['userModuleList']   = $user_moduleList;
            $nosow = array_merge(array_diff(array_column($user_moduleList, 'show', 'name'), array(0)));
            $detail['userModulearr']    = array_keys($nosow);
        }

        return $detail;
    }


    //企业用户套餐信息
    public function memberPackage()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        global $cfg_BusinessJoinConfig;

        $id = (int)$this->param['id'];
        $id = $id ? $id : $userLogin->getMemberID();

        if($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！        

        /*查询用户是不是员工*/
        $userinfo = $userLogin->getMemberInfo($id);

        $is_staff = 0;
        if (is_array($userinfo) && $userinfo['is_staff'] == 1) {
            $id = $userinfo['companyuid'];
            $is_staff = $userinfo['is_staff'];

            $auth = $userinfo['autharr'] != '' ? $userinfo['autharr'] : array();
        }
        $detail = array();
        $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `state` = 1 AND `mtype` != 0 AND `mtype` != 3 AND `id` = " . $id);
        $results = $dsql->dsqlOper($archives, "results");
        if ($results) {

            if ($results[0]['mtype'] == 2) {

                // 商家类型
                $sql = $dsql->SetQuery("SELECT `id`, `type`, `expired`, `state`, `package`, `hidePackage`, `sortPackage`, `diancan_state`, `dingzuo_state`, `paidui_state`, `maidan_state` FROM `#@__business_list` WHERE `uid` = " . $id . " AND `state` != 4");
                $res = $dsql->dsqlOper($sql, "results");
                if ($res) {
                    $busiId = $res[0]['id'];
                    $busiType = $res[0]['type'];
                    $busiState = $res[0]['state'];
                    $busiExpired = $res[0]['expired'];
                    $memberPackage = $res[0]['package'];
                    $hidePackage = $res[0]['hidePackage'];
                    $sortPackage = $res[0]['sortPackage'];
                    $diancan_state = $res[0]['diancan_state'];
                    $dingzuo_state = $res[0]['dingzuo_state'];
                    $paidui_state = $res[0]['paidui_state'];
                    $maidan_state = $res[0]['maidan_state'];
                } else {
                    $busiId = 0;
                    $busiType = 0;
                    $busiState = 0;
                    $busiExpired = 0;
                    $memberPackage = '';
                    $hidePackage = '';
                    $sortPackage = '';
                    $diancan_state = 0;
                    $dingzuo_state = 0;
                    $paidui_state = 0;
                    $maidan_state = 0;
                }

                $hidePackage = explode(',', $hidePackage);


                //只有自己可见
                // if($id == $userid){
                //查询已开通的套餐内容
                $time = time();
                $detail['package'] = array();
                $businessJoinConfig = $cfg_BusinessJoinConfig;

                if ($businessJoinConfig) {
                    $memberPackage = unserialize($memberPackage);

                    $packageArr = array();
                    $modulesArr = array();

                    if ($memberPackage) {

                        //先判断套餐是否过期
                        if ($memberPackage['package'] > -1) {

                            //如果没有过期
                            if ($memberPackage['expired'] > $time) {
                                $packageArr = $businessJoinConfig['package'][$memberPackage['package']];
                                $packageArr['id'] = $memberPackage['package'];
                                $packageArr['expired'] = $memberPackage['expired'];

                                $modulesArr = $packageArr['listContent'] ? $packageArr['listContent'] : array();
                            } else {
                                $packageArr = $businessJoinConfig['package'][$memberPackage['package']];
                                $packageArr['id'] = $memberPackage['package'];
                                $packageArr['expired'] = $memberPackage['expired'];
                            }
                        } else {
                            $packageArr['id'] = -1;
                            $packageArr['title'] = $langData['siteConfig'][49][52];  //自选套餐
                        }

                        //套餐外的自选服务
                        $itemArr = array();
                        $item = $memberPackage['item'];
                        if ($item) {
                            //兼容老数据
                            if(isset($item['name'])){
                                $item = array($item);
                            }
                            foreach ($item as $key => $value) {
                                if ($value && $value['expired'] && $value['expired'] > $time) {

                                    //商家特权
                                    if ($businessJoinConfig['privilege'][$value['name']]) {

                                        $arr = array(
                                            'name' => $value['name'],
                                            'expired' => (int)$value['expired'],
                                            'title' => $businessJoinConfig['privilege'][$value['name']]['title'],
                                            'note' => $businessJoinConfig['privilege'][$value['name']]['note'],
                                            'price' => (float)$businessJoinConfig['privilege'][$value['name']]['price'],
                                            'mprice' => (float)$businessJoinConfig['privilege'][$value['name']]['mprice']
                                        );

                                        if ($value['name'] == 'diancan') {
                                            $arr['state'] = (int)$diancan_state;
                                        } elseif ($value['name'] == 'dingzuo') {
                                            $arr['state'] = (int)$dingzuo_state;
                                        } elseif ($value['name'] == 'paidui') {
                                            $arr['state'] = (int)$paidui_state;
                                        } elseif ($value['name'] == 'maidan') {
                                            $arr['state'] = (int)$maidan_state;
                                        }

                                        $itemArr['privilege'][] = $arr;

                                        //行业店铺
                                    } elseif ($businessJoinConfig['store'][$value['name']]) {
                                        $itemArr['store'][] = array(
                                            'name' => $value['name'],
                                            'expired' => (int)$value['expired'],
                                            'title' => $businessJoinConfig['store'][$value['name']]['title'],
                                            'note' => $businessJoinConfig['store'][$value['name']]['note'],
                                            'price' => (float)$businessJoinConfig['store'][$value['name']]['price'],
                                            'mprice' => (float)$businessJoinConfig['store'][$value['name']]['mprice'],
                                        );
                                    }

                                    array_push($modulesArr, $value['name']);
                                }
                            }
                        }

                        $packageArr['item'] = $itemArr;

                        //老数据兼容
                    } elseif ($busiType && $busiExpired && $busiExpired > $time) {

                        $packageArr = $businessJoinConfig['package'][$busiType];
                        $packageArr['id'] = $busiType;
                        $packageArr['expired'] = $busiExpired;
                        $modulesArr = $packageArr['listContent'];
                    }

                    //提取所有套餐和自选的服务模块
                    $homepageList = array();
                    $moduleList = array();
                    $modules = array();
                    if ($modulesArr) {
                        $modulesArr = array_unique($modulesArr);
                        if ($modulesArr) {
                            foreach ($modulesArr as $k => $v) {

                                //                                    if($is_staff ==1){
                                //
                                //                                        if(array_key_exists($v,$auth)){
                                //
                                //                                            array_push($moduleList, $v);
                                //                                        }
                                //                                    }else{

                                array_push($moduleList, $v);
                                //                                    }


                                if ($businessJoinConfig['privilege'][$v]) {

                                    $_expired = $busiExpired;
                                    $_price = $businessJoinConfig['package'][$busiType]['price'];
                                    $_mprice = $businessJoinConfig['package'][$busiType]['mprice'];

                                    //如果有自选套餐
                                    if ($itemArr) {
                                        foreach ($itemArr as $k_ => $v_) {
                                            if ($v_['name'] == $v) {
                                                $_expired = $v_['expired'];
                                                $_price = $v_['price'];
                                                $_mprice = $v_['mprice'];
                                            }
                                        }
                                    }

                                    $temp = '';
                                    if ($v == 'dingzuo') {
                                        $temp = 'dingzuo-online';
                                    } else {
                                        $temp = $v;
                                    }
                                    $param = array(
                                        'service' => 'business',
                                        'template' => $temp,
                                        'id' => $busiId
                                    );
                                    $homepage = getUrlPath($param);

                                    $homepageList[$v] = $homepage;

                                    $arr = array(
                                        'name'  => $v,
                                        'title' => $businessJoinConfig['privilege'][$v]['title'],
                                        'note'  => $businessJoinConfig['privilege'][$v]['note'],
                                        'expired'  => $_expired,
                                        'price'  => $_price,
                                        'mprice'  => $_mprice,
                                        'homepage' => $homepage
                                    );

                                    if ($v == 'diancan') {
                                        $arr['state'] = $diancan_state;
                                    } elseif ($v == 'dingzuo') {
                                        $arr['state'] = $dingzuo_state;
                                    } elseif ($v == 'paidui') {
                                        $arr['state'] = $paidui_state;
                                    } elseif ($v == 'maidan') {
                                        $arr['state'] = $maidan_state;
                                    }

                                    $modules['privilege'][] = $arr;
                                }
                                if ($businessJoinConfig['store'][$v]) {

                                    //店铺主页链接
                                    $sid = 0;
                                    $homepage = '';
                                    $custom = '';

                                    //信息资讯
                                    if ($v == 'article') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__article_selfmedia` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'mddetail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //房产
                                    } elseif ($v == 'house') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__house_zjcom` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //二手信息
                                    } elseif ($v == 'info') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__infoshop` WHERE `state` = 1 AND `uid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'business',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //招聘
                                    } elseif ($v == 'job') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__job_company` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'company',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //商城
                                    } elseif ($v == 'shop') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //外卖
                                    } elseif ($v == 'waimai') {

                                        $sql = $dsql->SetQuery("SELECT m.`shopid` FROM `#@__waimai_shop_manager` m LEFT JOIN `#@__waimai_shop` s ON s.`id` = m.`shopid` WHERE s.`status` = 1 AND s.`del` = 0 AND m.`userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'shop',
                                                'id' => $ret[0]['shopid']
                                            );
                                            $sid = $ret[0]['shopid'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //团购
                                    } elseif ($v == 'tuan') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__tuan_store` WHERE `state` = 1 AND `uid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //同城活动
                                    } elseif ($v == 'huodong') {

                                        $param = array(
                                            'service' => 'business',
                                            'template' => 'huodong',
                                            'id' => $id
                                        );
                                        $sid = $id;
                                        $homepage = getUrlPath($param);

                                        //直播
                                    } elseif ($v == 'live') {

                                        $homepage = $cfg_secureAccess . $cfg_basehost . '/user/' . $id . '#live';

                                        //养老
                                    } elseif ($v == 'pension') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pension_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //教育
                                    } elseif ($v == 'education') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__education_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //旅游
                                    } elseif ($v == 'travel') {

                                        $sql = $dsql->SetQuery("SELECT `id`, `bind_module` FROM `#@__travel_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);

                                            $custom = $ret[0]['bind_module'] ? explode(',', $ret[0]['bind_module']) : array();
                                        }

                                        //婚嫁
                                    } elseif ($v == 'marry') {

                                        $sql = $dsql->SetQuery("SELECT `id`, `bind_module` FROM `#@__marry_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);

                                            $custom = $ret[0]['bind_module'] ? explode(',', $ret[0]['bind_module']) : array();
                                        }

                                        //家政
                                    } elseif ($v == 'homemaking') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__homemaking_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //汽车
                                    } elseif ($v == 'car') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__car_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //装修
                                    } elseif ($v == 'renovation') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__renovation_store` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'company-detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //交友
                                    } elseif ($v == 'dating') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__dating_member` WHERE `type` = 2 AND `state` = 1 AND `userid` = $id");
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                'service' => $v,
                                                'template' => 'store_detail',
                                                'id' => $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }

                                        //自助建站
                                    } elseif ($v == 'website') {

                                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__website` WHERE `state` = 1 AND `userid` = " . $id);
                                        $ret = $dsql->dsqlOper($sql, "results");
                                        if ($ret) {
                                            $param = array(
                                                "service" => "website",
                                                "template" => "site" . $ret[0]['id']
                                            );
                                            $sid = $ret[0]['id'];
                                            $homepage = getUrlPath($param);
                                        }
                                    }

                                    $homepageList[$v] = $homepage;

                                    $_expired = $busiExpired;
                                    $_price = $businessJoinConfig['package'][$busiType]['price'];
                                    $_mprice = $businessJoinConfig['package'][$busiType]['mprice'];

                                    //如果有自选套餐
                                    if ($itemArr) {
                                        foreach ($itemArr as $k_ => $v_) {
                                            if ($v_['name'] == $v) {
                                                $_expired = $busiExpired;
                                                $_price = $businessJoinConfig['package'][$busiType]['price'];
                                                $_mprice = $businessJoinConfig['package'][$busiType]['mprice'];
                                            }
                                        }
                                    }

                                    if ($is_staff == 1) {

                                        if (array_key_exists($v, $auth)) {

                                            $modules['store'][] = array(
                                                'name'     => $v,
                                                'title'    => $businessJoinConfig['store'][$v]['title'],
                                                'note'     => $businessJoinConfig['store'][$v]['note'],
                                                'expired'  => $_expired,
                                                'price'    => $_price,
                                                'mprice'   => $_mprice,
                                                'icon'     => $businessJoinConfig['store'][$v]['icon'],
                                                'homepage' => $homepage,
                                                'custom'   => $custom,
                                                'sid'      => $sid,
                                                'show'     => in_array($v, $hidePackage) ? 0 : 1
                                            );
                                        }
                                    } else {
                                        $modules['store'][] = array(
                                            'name'     => $v,
                                            'title'    => $businessJoinConfig['store'][$v]['title'],
                                            'note'     => $businessJoinConfig['store'][$v]['note'],
                                            'expired'  => $_expired,
                                            'price'    => $_price,
                                            'mprice'   => $_mprice,
                                            'icon'     => $businessJoinConfig['store'][$v]['icon'],
                                            'homepage' => $homepage,
                                            'custom'   => $custom,
                                            'sid'      => $sid,
                                            'show'     => in_array($v, $hidePackage) ? 0 : 1
                                        );
                                    }
                                }
                            }
                        }
                    }

                    //获取是否开通招聘店铺
                    if (in_array("job", $installModuleArr)) {
                        $sql = $dsql->SetQuery("SELECT `id`, `combo_enddate` FROM `#@__job_company` WHERE `userid` = " . $id);
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $param = array(
                                "service" => "job",
                                "template" => "company",
                                "id" => $ret[0]['id']
                            );
                            $sid = $ret[0]['id'];
                            $homepage = getUrlPath($param);

                            $homepageList['job'] = $homepage;

                            $modules['store'][] = array(
                                'name'     => 'job',
                                'title'    => getModuleTitle(array('name' => 'job')),
                                'note'     => '',
                                'expired'  => $ret[0]['combo_enddate'],
                                'price'    => 0,
                                'mprice'   => 0,
                                'icon'     => '',
                                'homepage' => $homepage,
                                'custom'   => '',
                                'sid'      => $sid,
                                'show'     => 1
                            );
                        }
                    }
                    

                    //模块排序
                    if ($modules['store'] && $sortPackage) {

                        $storeList = array();  //排序后的模块数据
                        $storeArr = $modules['store'];  //现有模块数据

                        //先按指定模块的数据排序
                        $sortPackage = explode(',', $sortPackage);
                        foreach ($sortPackage as $key => $value) {
                            foreach ($storeArr as $k => $v) {
                                /*员工权限 模块筛选 cxc 2021-06-17*/
                                if ($value == $v['name']) {
                                    if ($is_staff == 1) {
                                        if (array_key_exists($v['name'], $auth)) {
                                            array_push($storeList, $v);
                                            unset($storeArr[$k]);
                                        }
                                    } else {

                                        array_push($storeList, $v);
                                        unset($storeArr[$k]);
                                    }
                                }
                            }
                        }
                        //把剩余不存在指定的模块数据添加到排序后的模块数据
                        if ($storeArr) {
                            foreach ($storeArr as $key => $value) {
                                /*员工权限 模块筛选 cxc 2021-06-17*/
                                if ($is_staff == 1) {
                                    if (array_key_exists($value['name'], $auth)) {
                                        array_push($storeList, $value);
                                    }
                                } else {
                                    array_push($storeList, $value);
                                }
                            }
                        }
                        //重新把最新的模块排序数据覆盖
                        $modules['store'] = $storeList;
                    }
                    $packageArr['modules'] = $modules;
                    $packageArr['moduleList'] = $moduleList;
                    $packageArr['homepageList'] = $homepageList;

                    //合并系统套餐和自选套餐的所有内容


                    $detail['package'] = $packageArr;
                }
                // }

            }
        }
        //        echo "<pre>";
        //        var_dump($detail);die;
        return $detail;
    }


    //站内消息
    public function message()
    {
        global $dsql;
        global $userLogin;
        $pageinfo = $list = array();
        $state = $notice = $page = $pageSize = $im = $type = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //格式错误！
            } else {
                $state    = $this->param['state'];
                $notice   = (int)$this->param['notice'];
                $im       = (int)$this->param['im'];
                $type     = $this->param['type'];
                $page     = (int)$this->param['page'];
                $pageSize = (int)$this->param['pageSize'];
            }
        }

        $uid = $this->param['userid'] ? $this->param['userid'] : $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT log.`id`, log.`state`, l.`title`, l.`date`, l.`body`, l.`urlParam` FROM `#@__member_letter_log` log LEFT JOIN `#@__member_letter` l ON l.`id` = log.`lid` WHERE log.`uid` = " . $uid);

        if ($type == 'tongji') {
            //点赞未读
            $_archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_up_all` WHERE `isread` = 0 and `uid` = " . $uid);
            $upunread = $dsql->dsqlOper($_archives, "totalCount");

            //评论未读
            $where_ = " AND `userid` = '$uid'";
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1" . $where_);
            $ret = $dsql->dsqlOper($sql, "results");
            $sidList = array();
            foreach ($ret as $k => $v) {
                array_push($sidList, $v['id']);
            }
            if (!empty($sidList)) {
                $whereC = " AND  (`sid` in(" . join(',', $sidList) . ") or (`masterid` = '$uid' AND `sid` = '0'))";
            } else {
                $whereC = " AND  `masterid` = '$uid' AND `sid` = '0'";
            }

            $_archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `isread` = 0 " . $whereC);
            $commentunread = $dsql->dsqlOper($_archives, "totalCount");
        }

        //未读
        $unread     = $dsql->dsqlOper($archives . " AND log.`state` = 0", "totalCount");
        //已读
        $read       = $dsql->dsqlOper($archives . " AND log.`state` = 1", "totalCount");

        $where = "";
        if ($state != "") {
            $where = " AND log.`state` = '$state'";
        }
        
        //总条数
        $totalCount = $dsql->dsqlOper($archives.$where, "totalCount");

        if ($totalCount == 0 && $type != 'tongji') return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($state !== "") {
            if ($state == 0) {
                $totalPage = ceil($unread / $pageSize);
            } elseif ($state == 1) {
                $totalPage = ceil($read / $pageSize);
            }
        }

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "unread" => $unread,
            "read" => $read
        );

        //统计IM未读消息数量
        if ($im) {
            $im = 0;

            //读即时通讯服务器
            // $handels = new handlers("siteConfig", "getImFriendList");
            // $return  = $handels->getHandle(array("userid" => $uid, "type" => "temp", "tongji" => 1));
            // if($return['state'] == 100){
            //     foreach ($return['info'] as $key => $value) {
            //         $im += (int)$value['lastMessage']['unread'];
            //     }
            // }

            //读本地
            $sql = $dsql->SetQuery("SELECT `im_unread_count` FROM `#@__member` WHERE `id` = $uid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $im = (int)$ret[0]['im_unread_count'];
            }

            $pageinfo['im'] = $im;
        }

        //如果只是获取统计信息，则不需要获取消息列表
        if ($type == "tongji") {
            $pageinfo['upunread'] = $upunread;
            $pageinfo['commentunread'] = $commentunread;

            $pageinfo['total'] = $pageinfo['unread'] + $pageinfo['im'] + $pageinfo['upunread'] + $pageinfo['commentunread']; //汇总,APP端使用
            return array("pageInfo" => $pageinfo);
        }

        $atpage = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . $where . " ORDER BY log.`id` DESC LIMIT $atpage, $pageSize", "results");

        $uinfo = $userLogin->getMemberInfo();
        if ($results && is_array($results)) {

            global $cfg_miniProgramId;

            foreach ($results as $key => $val) {
                $list[$key]['date']  = date("Y-m-d H:i:s", $val['date']);
                $list[$key]['timestamp']  = $val['date'];
                $list[$key]['state'] = $val['state'];
                $list[$key]['title'] = $val['title'];
                $list[$key]['id']    = $val['id'];
                $list[$key]['body']    = strstr($val['body'], 'first') && strstr($val['body'], 'remark') ? json_decode($val['body'], true) : $val['body'];

                $urlParam = $val['urlParam'] ? unserialize($val['urlParam']) : '';
                if ($urlParam != '' && is_string($urlParam) && strstr($urlParam, 'wxMiniprogram://') > -1) {

                    if(!strstr($urlParam, $cfg_miniProgramId) && !isWxMiniprogram()){
                        $urlParam = str_replace('wxMiniprogram://', 'wxMiniprogram://' . $cfg_miniProgramId . '/', $urlParam);
                    }

                    $list[$key]['url'] = $urlParam;
                } else {
                    if ($uinfo['userType'] == 2) {
                        $param = array(
                            "service"     => "member",
                            "template"    => "message_detail",
                            "id"          => $val['id']
                        );
                    } else {
                        $param = array(
                            "service"     => "member",
                            "type"        => "user",
                            "template"    => "message_detail",
                            "id"          => $val['id']
                        );
                    }
                    $list[$key]['url'] = getUrlPath($param);
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    //查询未通知的新消息
    public function getNewNotice()
    {

        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //查询消息通知
        $sql = $dsql->SetQuery("SELECT count(`id`) c FROM `#@__member_letter_log` WHERE `uid` = $uid AND `notice` = 0");
        $ret = $dsql->dsqlOper($sql, "results");
        $hasnew = $ret[0]['c'];

        return $hasnew;
    }


    //清除未通知的新消息
    public function clearNewNotice()
    {

        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //查询消息通知
        $sql = $dsql->SetQuery("UPDATE `#@__member_letter_log` SET `notice` = 1 WHERE `uid` = $uid");
        $ret = $dsql->dsqlOper($sql, "update");
        if ($ret == "ok") {
            return true;
        }
    }


    //删除站内信
    public function delMessage()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id = $this->param['id'];

        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][18]); //没有要删除的信息！

        $archives = $dsql->SetQuery("DELETE FROM `#@__member_letter_log` WHERE `id` in (" . $id . ") AND `uid` = '$uid'");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($uid, 'member', 'message', 0, 'delete', '删除指定站内信', '', $archives);

        return self::$langData['siteConfig'][21][136]; //"删除成功！";

    }


    //更新站内信状态为已读
    public function updateMessageState()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $archives = $dsql->SetQuery("UPDATE `#@__member_letter_log` SET `state` = 1 WHERE `uid` = '$uid'");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($uid, 'member', 'message', 0, 'update', '更新站内信为已读', '', $archives);

        return self::$langData['siteConfig'][20][244];  //操作成功

    }


    //清空站内信
    public function clearMessage()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $archives = $dsql->SetQuery("DELETE FROM `#@__member_letter_log` WHERE `uid` = '$uid'");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($uid, 'member', 'message', 0, 'delete', '清空站内信', '', $archives);

        return self::$langData['siteConfig'][21][136];  //已清空

    }


    //全部消息已读
    public function readAllMessage()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_km_accesskey_id;
        global $cfg_km_accesskey_secret;

        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //站内信
        $archives = $dsql->SetQuery("UPDATE `#@__member_letter_log` SET `state` = 1 WHERE `uid` = '$uid'");
        $dsql->dsqlOper($archives, "update");

        //点赞
        $this->param = array('type' => 'zan');
        $this->updateRead();

        //评论
        $this->param = array('type' => 'commt');
        $this->updateRead();

        //聊天

        //本地
        $sql = $dsql->SetQuery("UPDATE `#@__member` SET `im_unread_count` = 0 WHERE `id` = $uid");
        $dsql->dsqlOper($sql, "update");

        //清除im聊天的统计表数据
        $sql = $dsql->SetQuery("UPDATE `#@__member_chat_count` SET `unread` = 0 WHERE `tid` = ".$uid);
        $dsql->dsqlOper($sql, "update");

        //远程
        /*$params = array(
            'action' => 'readAllMessage',
            'uid' => $uid
        );
        $request = new SendRequest_($cfg_km_accesskey_id, $cfg_km_accesskey_secret);
        $ret = $request->curl('/chat/chat.php', $params, 'urlencoded', 'POST');*/

        return self::$langData['siteConfig'][20][244];  //操作成功

    }


    //设置站内信为已读
    public function setMessageRead()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id = $this->param['id'];

        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][19]); //没有要操作的信息！

        $archives = $dsql->SetQuery("UPDATE `#@__member_letter_log` SET `state` = 1 WHERE `id` in (" . $id . ") AND `uid` = '$uid'");
        $dsql->dsqlOper($archives, "update");

        return self::$langData['siteConfig'][33][24]; //"设置成功！";

    }


    //验证用户身份
    public function authentication()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $id = $userLogin->getMemberID();

        if ($id == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $param = $this->param;
        $do    = $param['do'];
        $opera = $param['opera'];

        $uinfo = $userLogin->getMemberInfo();

        //使用手机验证
        if ($do == "authPhone") {

            if ($uinfo['phoneCheck'] != 1) return array("state" => 200, "info" => $langData['siteConfig'][21][32]);    //您的手机暂未认证，请使用其它方式验证！

            $areaCode = $uinfo['areaCode'];
            $archives = $dsql->SetQuery("SELECT `international` FROM `#@__sitesms` WHERE `state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $international = $results[0]['international'];
                if (!$international) {
                    $areaCode = "";
                }
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][3]); //短信平台未配置，发送失败！
            }

            $phone   = $areaCode . $uinfo['phone'];
            $vdimgck = $param['vdimgck'];

            //验证输入的验证码
            $archives = $dsql->SetQuery("SELECT `id`, `pubdate` FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'auth' AND `user` = '$phone' AND `code` = '$vdimgck'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][99]);    //验证码输入错误，请重试！
            } else {

                //5分钟有效期
                $now = GetMkTime(time());
                if ($now - $results[0]['pubdate'] > 300) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);   //验证码已过期，请重新获取！

                //验证通过删除发送的验证码
                $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'auth' AND `user` = '$phone' AND `code` = '$vdimgck'");
                $dsql->dsqlOper($archives, "update");

                //执行接下来的操作
                $this->doAuthOpera($id, $opera);

                return self::$langData['siteConfig'][33][23]; //"验证通过！";
            }

            //使用邮箱验证
        } elseif ($do == "authEmail") {

            if ($uinfo['emailCheck'] != 1) return array("state" => 200, "info" => $langData['siteConfig'][21][34]);   //您的邮箱暂未认证，请使用其它方式验证！

            $email   = $uinfo['email'];
            $vdimgck = $param['vdimgck'];

            //验证输入的验证码
            $archives = $dsql->SetQuery("SELECT `id`, `pubdate` FROM `#@__site_messagelog` WHERE `type` = 'email' AND `lei` = 'auth' AND `user` = '$email' AND `code` = '$vdimgck'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][99]);    //验证码输入错误，请重试！
            } else {

                //5分钟有效期
                $now = GetMkTime(time());
                if (round(($now - $results[0]['pubdate']) / 3600) > 24) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);   //验证码已过期，请重新获取！

                //验证通过删除发送的验证码
                $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'email' AND `lei` = 'auth' AND `user` = '$email' AND `code` = '$vdimgck'");
                $dsql->dsqlOper($archives, "update");

                //执行接下来的操作
                $this->doAuthOpera($id, $opera);

                return self::$langData['siteConfig'][33][23]; //"验证通过！";
            }

            //使用安全保护问题
        } elseif ($do == "authQuestion") {

            if ($uinfo['question'] == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][35]);   //您还没有启用安全保护问题，请使用其它方式验证！

            $answer   = $param['answer'];

            //验证输入的验证码
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_security` WHERE `uid` = '$id' AND `answer` = '$answer'");
            $results  = $dsql->dsqlOper($archives, "totalCount");
            if ($results == 0) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][103]);   //您输入的答案不正确，请重试！
            } else {

                //执行接下来的操作
                $this->doAuthOpera($id, $opera);

                return self::$langData['siteConfig'][33][23]; //"验证通过！";
            }
        }
    }

    public function doAuthOpera($id, $type)
    {

        if (empty($type)) return;

        global $dsql;

        //重置支付密码
        if ($type == "paypwd") {
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `paypwd` = '', `paypwdCheck` = 0 WHERE `id` = '$id'");
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($id, 'member', '', 0, 'update', '重置支付密码', '', $archives);

            //修改手机号码
        } elseif ($type == "changePhone") {
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `phone` = '', `phoneCheck` = 0 WHERE `id` = '$id'");
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($id, 'member', '', 0, 'update', '修改手机号码前清除手机和认证状态', '', $archives);

            //修改邮箱
        } elseif ($type == "changeEmail") {
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `email` = '', `emailCheck` = 0 WHERE `id` = '$id'");
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($id, 'member', '', 0, 'update', '修改邮箱前清除邮箱和认证状态', '', $archives);

            //修改安全保护问题
        } elseif ($type == "changeQuestion") {
            $archives = $dsql->SetQuery("DELETE FROM `#@__member_security` WHERE `uid` = '$id'");
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($id, 'member', '', 0, 'delete', '修改密保问题前先删除密保问题', '', $archives);
        }
    }

    //修改基本资料
    public function updateProfile()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_memberCityid;
        $return = array();
        $id = $userLogin->getMemberID();
        $uinfo = $userLogin->getMemberInfo();
        if ($id == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $param    = $this->param;
        $sex      = (int)$param['sex'];
        $qq       = (int)$param['qq'];
        $addr     = (int)$param['addr'];
        $nation   = $param['nation'] ? filterSensitiveWords($param['nation']) : '';
        $birthday = $param['birthday'];
        $birthday = !empty($birthday) ? GetMkTime($birthday) : 0;

        //昵称修改权限
        global $cfg_nicknameEditState;
        global $cfg_nicknameEditInfo;
        global $cfg_nicknameEditAudit;
        $nicknameEditState = (int)$cfg_nicknameEditState;
        $nicknameEditInfo = $cfg_nicknameEditInfo ? $cfg_nicknameEditInfo : "功能维护中，暂停使用！";
        $nicknameEditAudit = (int)$cfg_nicknameEditAudit;

        $params = ", `nation` = '$nation'";

        if ($qq) {
            $params .= ", `qq` = '$qq'";
        }
        if ($addr) {
            $params .= ", `addr` = '$addr'";

            //如果是手动更新会员所属分站，修改区域，同时更新cityid字段
            if (!$cfg_memberCityid) {
                $cityInfoArr = getPublicParentInfo(array('tab' => 'site_area', 'id' => $addr));
                $cityInfoArr = explode(',', $cityInfoArr);
                $_cityid      = (int)$cityInfoArr[0];

                $params .= ", `cityid` = '$_cityid'";
            }
        }
        if ($birthday) {
            $params .= ", `birthday` = '$birthday'";
        }

        if ($uinfo['userType'] == 2) {
            $company = trim(filterSensitiveWords(!empty($param['company']) ? $param['company'] : $param['nickname']));
            $address = trim(filterSensitiveWords($param['address']));
            $nickname = trim(filterSensitiveWords($param['nickname']));

            //查询是否重名
            if ($company) {
                // $params .= ", `company` = '$company'";

                $sql = $dsql->SetQuery("SELECT count(`id`) totalCount FROM `#@__member` WHERE `company` = '$company' AND `id` != $id");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret && $ret[0]['totalCount'] > 0) {
                    return array("state" => 200, "info" => $langData['siteConfig'][20][614]); //公司名称已存在，请确认后重试，或者联系网站客服申诉！;
                }

                $params .= ", `company` = '$company'";
            }
            if ($nickname && $uinfo['nickname'] != $nickname) {


                if ($nicknameEditState) {
                    return array("state" => 200, "info" => $nicknameEditInfo);
                }

                if ($nicknameEditAudit) {
                    $params .= ", `nickname_audit` = '$nickname', `nickname_state` = '审核中'";
                } else {
                    $params .= ", `nickname` = '$nickname'";
                }
            }
            if ($address) {
                $params .= ", `address` = '$address'";
            }
        } else {

            if ($param['nickname']) {

                if ($nicknameEditState) {
                    return array("state" => 200, "info" => $nicknameEditInfo);
                }

                $nickname = trim(filterSensitiveWords($param['nickname']));

                //查询是否重名
                $sql = $dsql->SetQuery("SELECT count(`id`) totalCount FROM `#@__member` WHERE `nickname` = '$nickname' AND `id` != $id");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret && $ret[0]['totalCount'] > 0) {
                    return array("state" => 200, "info" => $langData['siteConfig'][20][615]); //昵称被占用，请换一个！;
                }
            }

            if ($nickname && $uinfo['nickname'] != $nickname) {

                if ($nicknameEditState) {
                    return array("state" => 200, "info" => $nicknameEditInfo);
                }

                if ($nicknameEditAudit) {
                    $params .= ", `nickname_audit` = '$nickname', `nickname_state` = '审核中'";
                } else {
                    $params .= ", `nickname` = '$nickname'";
                }
            }
        }

        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `sex` = '$sex'" . $params . " WHERE `id` = " . $id);
        $results = $dsql->dsqlOper($archives, "update");
        if ($results == "ok") {

            //记录用户行为日志
            memberLog($id, 'member', '', 0, 'update', '修改基本资料', '', $archives);

            return self::$langData['siteConfig'][20][229]; //"修改成功！";
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][20]); //修改失败！
        }
    }

    //小程序端原生页面更新头像
    public function updateProfilePhoto()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_avatarEditState;
        global $cfg_avatarEditInfo;
        global $cfg_avatarEditAudit;
        $avatarEditState = (int)$cfg_avatarEditState;
        $avatarEditInfo = $cfg_avatarEditInfo ? $cfg_avatarEditInfo : "功能维护中，暂停使用！";
        $avatarEditAudit = (int)$cfg_avatarEditAudit;

        if ($avatarEditState) {
            return array("state" => 200, "info" => $avatarEditInfo);
        }

        $id = $userLogin->getMemberID();
        if ($id == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $param = $this->param;
        $photo = trim($param['photo']);
        if ($photo == '') return array("state" => 200, "info" => "头像路径不得为空！");

        if ($avatarEditAudit) {
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `photo_audit` = '$photo', `photo_state` = '审核中' WHERE `id` = '$id'");
            $dsql->dsqlOper($archives, "update");
            $photo = getAttachemntFile($photo);
            return array("state" => 100, "info" => "保存成功！", "photo_audit" => $photo, "photo_state" => "审核中");
        } else {
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `photo` = '$photo', `photo_audit` = '', `photo_state` = '' WHERE `id` = '$id'");
            $dsql->dsqlOper($archives, "update");
            return array("state" => 100, "info" => "保存成功！");
        }
    }


    //找回密码
    public function backpassword()
    {
        global $dsql;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $cfg_webname;
        global $cfg_geetest;
        global $langData;
        $param = $this->param;

        if (empty($param)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'

        $type     = $param['type'];    //类型，1邮箱，2手机
        $email    = $param['email'];    //邮箱
        $areaCode = $param['areaCode']; //区域代码
        $phone    = $param['phone'];    //手机
        $vericode = $param['vericode']; //验证码
        $vdimgck  = $param['vdimgck'];  //手机验证码
        $isend    = $param['isend'];

        //如果没有开启了极验
        if (!$cfg_geetest) {
            if (strtolower($vericode) != $_SESSION['huoniao_vdimg_value'] && !$isend) return array("state" => 200, "info" => $langData['siteConfig'][21][22]);   //图形验证错误，请重试！
        }

        $ip = GetIP();
        $now = GetMkTime(time());
        $RenrenCrypt = new RenrenCrypt();

        //邮箱
        if ($type == 1) {

            if (empty($email)) return array("state" => 200, "info" => $langData['siteConfig'][21][36]);    //请输入邮箱地址！
            $archives = $dsql->SetQuery("SELECT `id`, `password` FROM `#@__member` WHERE `email` = '$email'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) return array("state" => 200, "info" => $langData['siteConfig'][20][79]);     //该邮箱地址没有注册过会员！

            $pwd = $results[0]['password'];
            $pwd = empty($pwd) ? $now : substr($pwd, 0, 10);

            //验证输入的验证码
            $archives = $dsql->SetQuery("SELECT `id`, `pubdate` FROM `#@__site_messagelog` WHERE `type` = 'email' AND `lei` = 'fpwd' AND `user` = '" . $email . "' AND `code` = '$vdimgck'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][99]);    //验证码输入错误，请重试！
            } else {

                //5分钟有效期
                if ($now - $results[0]['pubdate'] > 300) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);    //验证码已过期，请重新获取！

                //验证通过删除发送的验证码
                $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'email' AND `lei` = 'fpwd' AND `user` = '" . $email . "' AND `code` = '$vdimgck'");
                $dsql->dsqlOper($archives, "update");

                $data = base64_encode($RenrenCrypt->php_encrypt("1$$" . $email . "$$" . $ip . "$$" . $now . "$$" . $pwd));
                return $cfg_secureAccess . $cfg_basehost . "/resetpwd.html?data=" . $data;
            }


            //手机
        } elseif ($type == 2) {

            if (empty($areaCode)) return array("state" => 200, "info" => $langData['siteConfig'][21][39]);  //请选择区域代码！
            if (empty($phone)) return array("state" => 200, "info" => $langData['siteConfig'][20][239]);    //请输入手机号
            $archives = $dsql->SetQuery("SELECT `id`, `password` FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND `phone` = '$phone'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) return array("state" => 200, "info" => $langData['siteConfig'][20][77]);   //该手机号码没有注册过会员！

            $now = GetMkTime(time());

            $pwd = $results[0]['password'];
            $pwd = empty($pwd) ? $now : substr($pwd, 0, 10);

            $areaCode = (int)$areaCode;

            //非国际版不需要验证区域码
            $acode = $areaCode;
            $archives = $dsql->SetQuery("SELECT `international` FROM `#@__sitesms` WHERE `state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $international = $results[0]['international'];
                if (!$international) {
                    $acode = "";
                }
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][3]); //短信平台未配置，发送失败！
            }


            //验证输入的验证码
            $archives = $dsql->SetQuery("SELECT `id`, `pubdate` FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'fpwd' AND `user` = '" . $acode . $phone . "' AND `code` = '$vdimgck'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][99]);    //验证码输入错误，请重试！
            } else {

                //5分钟有效期
                if ($now - $results[0]['pubdate'] > 300) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);    //验证码已过期，请重新获取！

                //验证通过删除发送的验证码
                $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'fpwd' AND `user` = '" . $acode . $phone . "' AND `code` = '$vdimgck'");
                $dsql->dsqlOper($archives, "update");

                $data = base64_encode($RenrenCrypt->php_encrypt("2$$" . $phone . "$$" . $ip . "$$" . $now . "$$" . $pwd));
                return $cfg_secureAccess . $cfg_basehost . "/resetpwd.html?data=" . $data;
            }
        }
    }


    //重置密码
    public function resetpwd()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $param = $this->param;

        $data = $param['data'];    //安全验证数据
        $npwd = $param['npwd'];    //新密码

        if (empty($data)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][21]); //非法请求！


        //验证安全链接
        $RenrenCrypt = new RenrenCrypt();
        $data = $RenrenCrypt->php_decrypt(base64_decode($data));

        $dataArr = explode("$$", $data);
        if (count($dataArr) != 5) return array("state" => 200, "info" => self::$langData['siteConfig'][33][21]); //非法请求！
        if (empty($dataArr[0]) || empty($dataArr[4])) return array("state" => 200, "info" => self::$langData['siteConfig'][33][21]); //非法请求！

        if ($dataArr[0] == 1) {
            $archives = $dsql->SetQuery("SELECT `id`, `password` FROM `#@__member` WHERE (`mtype` = 1 || `mtype` = 2) AND `email` = '" . $dataArr[1] . "'");
        } elseif ($dataArr[0] == 2) {
            $archives = $dsql->SetQuery("SELECT `id`, `password` FROM `#@__member` WHERE (`mtype` = 1 || `mtype` = 2) AND `phone` = '" . $dataArr[1] . "'");
        }
        $results  = $dsql->dsqlOper($archives, "results");
        if (!$results) return array("state" => 200, "info" => '会员不存在！');
        $old = $results[0]['password'];

        $now = GetMkTime(time());
        if ($now - $dataArr[3] > 24 * 3600) return array("state" => 200, "info" => $langData['siteConfig'][21][40]);    //重置链接超时，请重新获取！

        if (empty($old)) {
            if ($dataArr[4] != $dataArr[3]) return array("state" => 200, "info" => self::$langData['siteConfig'][33][21]); //非法请求！
        } else {
            if ($dataArr[4] != substr($old, 0, 10)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][21]); //非法请求！
        }


        //新密码
        if (empty($npwd)) return array("state" => 200, "info" => $langData['siteConfig'][21][41]);   //请输入新密码！
        // preg_match('/^.{5,}$/', $npwd, $matchPassword);
        // if (!$matchPassword) return array("state" => 200, "info" => $langData['siteConfig'][21][42]);   //新密码太过简单，请重新输入，最少5位！
        $validatePassword = validatePassword($npwd);
        if($validatePassword != 'ok'){
            return array ('state' => 200, 'info' => $validatePassword);
        }

        $ret  = $dsql->dsqlOper($archives, "results");
        $uid = $ret[0]['id'];

        $newPass = $userLogin->_getSaltedHash($npwd);

        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `password` = '$newPass' WHERE `id` = " . $uid);
        $results = $dsql->dsqlOper($archives, "update");
        if ($results == "ok") {

            //记录用户行为日志
            memberLog($id, 'member', '', 0, 'update', '重置登录密码', '', $archives);

            return self::$langData['siteConfig'][20][560]; //密码重置成功！
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][22]); //密码重置失败！
        }
    }



    //修改用户信息
    public function updateAccount()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;
        include HUONIAOINC . '/config/siteConfig.inc.php';
        $return = array();
        $id = $userLogin->getMemberID();
        if ($id == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $param = $this->param;
        $do = $param['do'];

        //修改昵称
        if ($do == "nick") {

            global $cfg_nicknameEditState;
            global $cfg_nicknameEditInfo;
            global $cfg_nicknameEditAudit;
            $nicknameEditState = (int)$cfg_nicknameEditState;
            $nicknameEditInfo = $cfg_nicknameEditInfo ? $cfg_nicknameEditInfo : "功能维护中，暂停使用！";
            $nicknameEditAudit = (int)$cfg_nicknameEditAudit;
            if ($nicknameEditState) {
                return array("state" => 200, "info" => $nicknameEditInfo);
            }

            // if($nicknameEditAudit){
            //     $params .= ", `nickname_audit` = '$nickname', `nickname_state` = '审核中'";
            // }else{
            //     $params .= ", `nickname` = '$nickname'";
            // }

            $name = trim(filterSensitiveWords($param['name']));
            if (empty($name) || $name == "undefined") return array("state" => 200, "info" => $langData['siteConfig'][20][87]);   //请输入新昵称
            $name = cn_substrR($name, 20);

            $memberInfo = $userLogin->getMemberInfo();

            if ($memberInfo['nickname'] == $nickname) {
                return array("state" => 200, "info" => "昵称没有变化");
            }

            if ($memberInfo['userType'] == 2) {

                //查询是否重名
                $sql = $dsql->SetQuery("SELECT count(`id`) totalCount FROM `#@__member` WHERE (`company` = '$name' OR `nickname` = '$name') AND `id` != $id");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret && $ret[0]['totalCount'] > 0) {
                    return array("state" => 200, "info" => $langData['siteConfig'][20][614]); //公司名称已存在，请确认后重试，或者联系网站客服申诉！;
                }

                if ($nicknameEditAudit) {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `nickname_audit` = '$name', `nickname_state` = '审核中' WHERE `id` = " . $id);
                } else {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `nickname` = '$name', `company` = '$name' WHERE `id` = " . $id);
                }
            } else {

                //查询是否重名
                $sql = $dsql->SetQuery("SELECT count(`id`) totalCount FROM `#@__member` WHERE `nickname` = '$name' AND `id` != $id");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret && $ret[0]['totalCount'] > 0) {
                    return array("state" => 200, "info" => $langData['siteConfig'][20][615]); //昵称被占用，请换一个！;
                }

                if ($nicknameEditAudit) {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `nickname_audit` = '$name', `nickname_state` = '审核中' WHERE `id` = " . $id);
                } else {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `nickname` = '$name' WHERE `id` = " . $id);
                }
            }

            $results = $dsql->dsqlOper($archives, "update");
            if ($results == "ok") {

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '修改昵称', '', $archives);

                return self::$langData['siteConfig'][20][229]; //"修改成功！";
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][20]); //修改失败！
            }

            //修改密码
        } elseif ($do == "password") {

            $userinfo = $userLogin->getMemberInfo();
            $u_pwd = $userinfo['pwd'];

            $old = $param['old'];
            $new = $param['new'];
            $confirm = $param['confirm'];

            if (($u_pwd && (empty($old) || $old == "undefined")) || empty($new) || $new == "undefined" || empty($confirm) || $confirm == "undefined") return array("state" => 200, "info" => self::$langData['siteConfig'][21][45]); //请输入完整！

            $validatePassword = validatePassword($new);
            if($validatePassword != 'ok'){
                return array ('state' => 200, 'info' => $validatePassword);
            }
            // if (strlen($new) < 6) return array("state" => 200, "info" => $langData['siteConfig'][21][42]);   //新密码太过简单，请重新输入，最少5位！

            $archives = $dsql->SetQuery("SELECT `password` FROM `#@__member` WHERE `id` = " . $id);
            $results = $dsql->dsqlOper($archives, "results");
            $uinfo = $results[0];

            if ($u_pwd) {
                $hash = $userLogin->_getSaltedHash($old, $uinfo['password']);
                if ($hash != $uinfo['password']) return array("state" => 200, "info" => $langData['siteConfig'][21][43]);   //您输入的当前密码不正确，请确认后重试！
            }

            if ($new != $confirm) return array("state" => 200, "info" => $langData['siteConfig'][21][44]);   //两次输入的新密码不一致，请重新输入！
            $newPass = $userLogin->_getSaltedHash($new);

            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `password` = '$newPass' WHERE `id` = " . $id);
            $results = $dsql->dsqlOper($archives, "update");
            if ($results == "ok") {

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '修改登录密码', '', $archives);

                return self::$langData['siteConfig'][20][229]; //"修改成功！";
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][20]); //修改失败！
            }

            //设置支付密码
        } elseif ($do == "paypwdAdd") {

            $pay1 = $param['pay1'];
            $pay2 = $param['pay2'];

            if (empty($pay1) || $pay1 == "undefined" || empty($pay2) || $pay2 == "undefined") return array("state" => 200, "info" => $langData['siteConfig'][21][45]);   //请输入完整！

            if (strlen($pay1) < 6) return array("state" => 200, "info" => $langData['siteConfig'][21][46]);   //支付密码太过简单，请重新输入！

            $paypwd = $userLogin->_getSaltedHash($pay1);

            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `paypwd` = '$paypwd', `paypwdCheck` = 1 WHERE `id` = " . $id);
            $results = $dsql->dsqlOper($archives, "update");
            if ($results == "ok") {

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '设置支付密码', '', $archives);

                return self::$langData['siteConfig'][33][24]; //"设置成功！";
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][25]); //设置失败！
            }

            //修改支付密码
        } elseif ($do == "paypwdEdit") {

            $old = $param['old'];
            $new = $param['new'];
            $confirm = $param['confirm'];

            if (empty($old) || $old == "undefined" || empty($new) || $new == "undefined" || empty($confirm) || $confirm == "undefined") return array("state" => 200, "info" => $langData['siteConfig'][21][45]);   //请输入完整！

            if (strlen($new) < 6) return array("state" => 200, "info" => $langData['siteConfig'][21][47]);    //新的支付密码太过简单，请重新输入！

            $archives = $dsql->SetQuery("SELECT `paypwd` FROM `#@__member` WHERE `id` = " . $id);
            $results = $dsql->dsqlOper($archives, "results");
            $uinfo = $results[0];

            $hash = $userLogin->_getSaltedHash($old, $uinfo['paypwd']);
            if ($hash != $uinfo['paypwd']) return array("state" => 200, "info" => $langData['siteConfig'][21][43]);   //您输入的当前密码不正确，请确认后重试！

            if ($new != $confirm) return array("state" => 200, "info" => $langData['siteConfig'][21][44]);   //两次输入的新密码不一致，请重新输入！
            $newPass = $userLogin->_getSaltedHash($new);

            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `paypwd` = '$newPass' WHERE `id` = " . $id);
            $results = $dsql->dsqlOper($archives, "update");
            if ($results == "ok") {

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '修改支付密码', '', $archives);

                return self::$langData['siteConfig'][20][229]; //"修改成功！";
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][20]); //修改失败！
            }

            //实名认证
        } elseif ($do == "certify") {

            $memberInfo    = $userLogin->getMemberInfo();
            $realname = trim($param['realname']);
            $idcard   = trim($param['idcard']);
            $front    = $param['front'];
            $back     = $param['back'];
            $license  = $param['license'];

            $realname = cn_substrR($realname, 20);
            $idcard = cn_substrR($idcard, 18);

            if (empty($realname) || $realname == "undefined" || empty($idcard) || $idcard == "undefined" || empty($front) || $front == "undefined" || empty($back) || $back == "undefined") return array("state" => 200, "info" => $langData['siteConfig'][21][45]);   //请输入完整！

            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `idcard` = '$idcard' AND `id` != " . $id);
            $results = $dsql->dsqlOper($archives, "totalCount");
            global $cfg_hotline;
            if ($results > 0) return array("state" => 200, "info" => $langData['siteConfig'][21][52]);    //您输入的身份证号码已经被其他帐号绑定！

            global $cfg_cardState;
            if ($cfg_cardState == 1) { //$cfg_cardState  身份证识别开关

                //提取身份证照片中的姓名和号码
                $cardRes = getIdentCardPositive(remoteImageCompressParam(getFilePath($front, true)));
                if ($cardRes['error_code'] == 0 && $cardRes['result']['idcardno']) {
                    $_idcard = $cardRes['result']['idcardno'];
                    $_realname = $cardRes['result']['name'];
                }else{
                    return array("state" => 200, "info" => "身份信息正面解析失败，请重新上传清晰有效的身份证照片");
                }

                if($_realname != $realname){
                    return array("state" => 200, "info" => "身份证照片中的姓名和您填写的姓名不一致");
                }

                if($_idcard != $idcard){
                    return array("state" => 200, "info" => "身份证照片中的身份证号码和您填写的号码不一致");
                }

                //提取身份证有效期
                $datetime = date('Ymd',time());
                $cardRes = getIdentCardContrary(remoteImageCompressParam(getFilePath($back, true)));
                if ($cardRes['error_code'] == 0 && $cardRes['result']['image_status'] == 'normal') {
                    $start_date = $cardRes['result']['start_date'];
                    $end_date = $cardRes['result']['end_date'];
                    if ($end_date  && ($end_date < $datetime)){
                        return array("state" => 200, "info" => "身份证件已过期，请上传最新的身份证照片");
                    }
                }else{
                    return array("state" => 200, "info" => "身份信息反面解析失败，请重新上传清晰有效的身份证照片");
                }

                $isIdCheck = getIdCheck($idcard, $realname);    //验证身份证号以及姓名是否匹配
                if ($isIdCheck['error_code'] == 0) {
                    if (!$isIdCheck['result']['isok']) {     //true 通过匹配   false  不匹配
                        return array("state" => 200, "info" => '身份信息不匹配，请核实填写的姓名和身份证号码是否正确!');
                    } else {
                        //企业
                        if ($memberInfo['userType'] == 2) {
                            if (empty($license)) return array("state" => 200, "info" => $langData['siteConfig'][20][109]);   //请上传营业执照！

                            $archives = $dsql->SetQuery("SELECT `licenseState` FROM `#@__member` WHERE `id` = " . $id);
                            $results = $dsql->dsqlOper($archives, "results");
                            $uinfo = $results[0];
                            if ($uinfo['licenseState'] == 1) return array("state" => 200, "info" => $langData['siteConfig'][21][48]);   //您的企业认证已经通过审核！
                            if ($uinfo['licenseState'] == 3) return array("state" => 200, "info" => $langData['siteConfig'][21][49]);   //您的企业认证信息已经提交，请等待工作人员审核！
                        }

                        //个人
                        if ($memberInfo['userType'] == 1) {
                            $archives = $dsql->SetQuery("SELECT `certifyState` FROM `#@__member` WHERE `id` = " . $id);
                            $results = $dsql->dsqlOper($archives, "results");
                            $uinfo = $results[0];
                            if ($uinfo['certifyState'] == 1) return array("state" => 200, "info" => $langData['siteConfig'][21][50]);   //您的实名认证已经通过审核！
                            if ($uinfo['certifyState'] == 3) return array("state" => 200, "info" => $langData['siteConfig'][21][51]);   //您的实名认证信息已经提交，请等待工作人员审核！
                        }

                        $birthday = 0;
                        $sex = 1;
                        $birthAndGender = getBirthAndGenderFromIdCard($idcard);  //根据身份证号码获取出生日期和性别
                        if($birthAndGender){
                            $birthday = GetMkTime($birthAndGender['birthday']);
                            $sex = (int)$birthAndGender['gender'];
                        }

                        if ($memberInfo['userType'] == 1) {
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `realname` = '$realname', `idcard` = '$idcard', `idcardFront` = '$front', `idcardBack` = '$back', `certifyState` = 1, `birthday` = '$birthday', `sex` = '$sex' WHERE `id` = " . $id);
                        }
                        if ($memberInfo['userType'] == 2) {
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `realname` = '$realname', `idcard` = '$idcard', `idcardFront` = '$front', `idcardBack` = '$back', `license` = '$license', `certifyState` = 3, `licenseState` = 1, `birthday` = '$birthday', `sex` = '$sex' WHERE `id` = " . $id);
                        }
                        $results = $dsql->dsqlOper($archives, "update");
                        if ($results == "ok") {

                            //记录用户行为日志
                            memberLog($id, 'member', '', 0, 'update', '实名认证', '', $archives);

                            //微信通知
                            $cityName = $siteCityInfo['name'];
                            $cityid  = $siteCityInfo['cityid'];
                            $param = array(
                                'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                                'cityid' => $cityid,
                                'notify' => '管理员消息通知',
                                'fields' => array(
                                    'contentrn'  => $cityName . "分站\r\n申请实名认证\r\n用户昵称：" . $memberInfo['nickname'] . "\r\n用户ID：" . $id,
                                    'date' => date("Y-m-d H:i:s", time()),
                                )
                            );
                            updateAdminNotice("member", "certify", $param);
                            return $langData['siteConfig'][26][73];   //审核通过
                        } else {
                            return array("state" => 200, "info" => self::$langData['siteConfig'][33][25]); //设置失败！
                        }
                    }
                }else{
                    return array("state" => 200, "info" => "身份证实名错误，认证失败，错误码：". $isIdCheck['error_code']);
                }
            } else {
                //企业
                if ($memberInfo['userType'] == 2) {
                    if (empty($license)) return array("state" => 200, "info" => $langData['siteConfig'][20][109]);   //请上传营业执照！

                    $archives = $dsql->SetQuery("SELECT `licenseState` FROM `#@__member` WHERE `id` = " . $id);
                    $results = $dsql->dsqlOper($archives, "results");
                    $uinfo = $results[0];
                    if ($uinfo['licenseState'] == 1) return array("state" => 200, "info" => $langData['siteConfig'][21][48]);   //您的企业认证已经通过审核！
                    if ($uinfo['licenseState'] == 3) return array("state" => 200, "info" => $langData['siteConfig'][21][49]);   //您的企业认证信息已经提交，请等待工作人员审核！
                }

                //个人
                if ($memberInfo['userType'] == 1) {
                    $archives = $dsql->SetQuery("SELECT `certifyState` FROM `#@__member` WHERE `id` = " . $id);
                    $results = $dsql->dsqlOper($archives, "results");
                    $uinfo = $results[0];
                    if ($uinfo['certifyState'] == 1) return array("state" => 200, "info" => $langData['siteConfig'][21][50]);   //您的实名认证已经通过审核！
                    if ($uinfo['certifyState'] == 3) return array("state" => 200, "info" => $langData['siteConfig'][21][51]);   //您的实名认证信息已经提交，请等待工作人员审核！
                }


                if ($memberInfo['userType'] == 1) {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `realname` = '$realname', `idcard` = '$idcard', `idcardFront` = '$front', `idcardBack` = '$back', `certifyState` = 3 WHERE `id` = " . $id);
                }
                if ($memberInfo['userType'] == 2) {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `realname` = '$realname', `idcard` = '$idcard', `idcardFront` = '$front', `idcardBack` = '$back', `license` = '$license', `certifyState` = 3, `licenseState` = 3 WHERE `id` = " . $id);
                }

                $results = $dsql->dsqlOper($archives, "update");
                if ($results == "ok") {

                    //记录用户行为日志
                    memberLog($id, 'member', '', 0, 'update', '实名认证', '', $archives);

                    //微信通知
                    $cityName = $siteCityInfo['name'];
                    $cityid  = $siteCityInfo['cityid'];
                    $param = array(
                        'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                        'cityid' => $cityid,
                        'notify' => '管理员消息通知',
                        'fields' => array(
                            'contentrn'  => $cityName . "分站\r\n申请实名认证\r\n用户昵称：" . $memberInfo['nickname'] . "\r\n用户ID：" . $id,
                            'date' => date("Y-m-d H:i:s", time()),
                        )
                    );
                    updateAdminNotice("member", "certify", $param);

                    return $langData['siteConfig'][21][53];   //提交成功，请等待工作人员审核！
                    //                    return $langData['siteConfig'][26][73];   //提交成功，请等待工作人员审核！
                } else {
                    return array("state" => 200, "info" => self::$langData['siteConfig'][33][25]); //设置失败！
                }
            }
            //获取实名认证信息
        } elseif ($do == "getCerfityData") {

            $return = array();
            $archives = $dsql->SetQuery("SELECT `mtype`, `certifyState`, `certifyInfo`, `realname`, `idcard`, `idcardFront`, `idcardBack`, `license`, `licenseState`, `licenseInfo` FROM `#@__member` WHERE `id` = " . $id);
            $results = $dsql->dsqlOper($archives, "results");
            $uinfo = $results[0];

            if ($uinfo['mtype'] == 1) {
                if ($uinfo['certifyState'] == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][54]);   //获取失败，您还未提交实名认证信息！
                if ($uinfo['certifyState'] == 2) return array("state" => 200, "info" => $uinfo['certifyInfo']);
            }

            if ($uinfo['mtype'] == 2) {
                if ($uinfo['licenseState'] == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][55]);   //获取失败，您还未提交公司认证信息！
                if ($uinfo['licenseState'] == 2) return array("state" => 200, "info" => $uinfo['licenseInfo']);

                $return['license'] = getFilePath($uinfo['license']);
            }

            $return['realname'] = $uinfo['realname'];
            $return['idcard']   = $uinfo['idcard'];
            $return['front']    = getFilePath($uinfo['idcardFront']);
            $return['back']     = getFilePath($uinfo['idcardBack']);
            return $return;

            //手机绑定
        } elseif ($do == "chphone") {

            //小程序端通过原生获取手机号码的功能
            $phoneData = $param['phoneData'];
            if ($phoneData) {

                //微信小程序端
                if(isWxMiniprogram()){
                    global $cfg_miniProgramAppid;
                    global $cfg_miniProgramAppsecret;

                    $phoneData = json_decode(urldecode($phoneData), true);
                    $phone_code = str_replace(' ', '+', $phoneData['code']);

                    if (!$phone_code) {
                        return array("state" => 200, "info" => "参数[code]传递失败，请检查后重试！");
                    }
                    
                    //旧方法
                    //从基础库 2.21.2 开始，对该能力进行了安全升级，以下是新版本组件使用指南。（旧版本组件目前可以继续使用，但建议开发者使用新版本组件，以增强小程序安全性）另外，新版本组件不再需要提前调用wx.login进行登录。

                    // $phone_encryptedData = str_replace(' ', '+', $phoneData['encryptedData']);
                    // $phone_iv = str_replace(' ', '+', $phoneData['iv']);

                    // //根据手机号码信息解密手机
                    // $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $cfg_miniProgramAppid . "&secret=" . $cfg_miniProgramAppsecret . "&js_code=" . $phone_code . "&grant_type=authorization_code";

                    // $curl = curl_init();
                    // curl_setopt($curl, CURLOPT_URL, $url);
                    // curl_setopt($curl, CURLOPT_HEADER, 0);
                    // curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
                    // curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //证书检查
                    // $result = curl_exec($curl);
                    // curl_close($curl);

                    // $data = json_decode($result);
                    // $data = objtoarr($data);

                    // //失败
                    // if (isset($data['errcode'])) {
                    //     return array("state" => 200, "info" => "ErrCode:" . $data['errcode'] . "，ErrMsg:" . $data['errmsg']);
                    // }

                    // $session_key = $data['session_key'];  //获取session_key

                    // //解密手机号
                    // $areaCode = $phone = '';
                    // include_once HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
                    // $pc = new WXBizDataCrypt($cfg_miniProgramAppid, $session_key);
                    // $errCode = $pc->decryptData($phone_encryptedData, $phone_iv, $data);

                    // if ($errCode == 0) {
                    //     $data = json_decode($data);
                    //     $data = objtoarr($data);
                    //     $areaCode = $data['countryCode'];  //区号
                    //     $phone = $data['purePhoneNumber'];  //手机号
                    // }

                    //新方法
                    //https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/user-info/phone-number/getPhoneNumber.html
                    //获取接口调用凭据
                    include_once(HUONIAOROOT."/include/class/WechatJSSDK.class.php");
                    $jssdk = new WechatJSSDK($cfg_miniProgramAppid, $cfg_miniProgramAppsecret);
                    $token = $jssdk->getWxminiAccessToken();

                    $result = hn_curl('https://api.weixin.qq.com/wxa/business/getuserphonenumber?access_token='.$token, array('code' => $phone_code), 'json');

                    $data = json_decode($result);
                    $data = objtoarr($data);

                    //失败
                    if ($data['errcode']) {
                        return array("state" => 200, "info" => "ErrCode:" . $data['errcode'] . "，ErrMsg:" . $data['errmsg']);
                    }

                    $phone_info = $data['phone_info'];
                    $areaCode = $phone_info['countryCode'];  //区号
                    $phone = $phone_info['purePhoneNumber'];  //手机号

                    if (empty($phone))  return array("state" => 200, "info" => "手机号码解析失败，请重试，错误信息：" . $errCode);
                }

                //抖音小程序端
                elseif(isByteMiniprogram()){

                    loadPlug("payment");
                    $payment  = get_payment("bytemini");

                    $appid = $payment['appid'];
                    $appsecret = $payment['appsecret'];

                    //手机号码信息
                    $phoneData = json_decode(urldecode($phoneData), true);
                    $phone_code = str_replace(' ', '+', $phoneData['code']);
                    $phone_encryptedData = str_replace(' ', '+', $phoneData['encryptedData']);
                    $phone_iv = str_replace(' ', '+', $phoneData['iv']);

                    //根据手机号码信息解密手机
                    $url = "https://developer.toutiao.com/api/apps/v2/jscode2session";
                    $data = '{
                        "appid": "' . $appid . '",
                        "secret": "' . $appsecret . '",
                        "code": "' . $phone_code . '"
                    }';

                    $curl = curl_init();
                    curl_setopt($curl, CURLOPT_URL, $url);
                    curl_setopt($curl, CURLOPT_POST, 1);
                    curl_setopt($curl, CURLOPT_TIMEOUT, 5);
                    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
                    curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);
                    $httpHeader = array();
                    $httpHeader[] = 'Content-Type: Application/json';
                    curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
                    curl_setopt($curl, CURLOPT_HTTPHEADER, $httpHeader);
                    curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
                    $result = curl_exec($curl);
                    curl_close($curl);

                    $data = json_decode($result);
                    $data = objtoarr($data);

                    //失败
                    if (isset($data['err_no']) && $data['err_no'] != 0) {
                        return array("state" => 200, "info" => "ErrCode:" . $data['err_no'] . "，ErrMsg:" . $data['err_tips']);
                    }

                    // print_r($data);die;

                    $data = $data['data'];
                    $session_key = $data['session_key'];

                    // var_dump($appid, $session_key, $phone_encryptedData, $phone_iv, $data);

                    //解密手机号
                    $areaCode = $phone = '';
                    include HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
                    $pc = new WXBizDataCrypt($appid, $session_key);
                    $errCode = $pc->decryptData($phone_encryptedData, $phone_iv, $data);

                    // var_dump($errCode, $data);die;

                    if ($errCode == 0) {
                        $data = json_decode($data);
                        $data = objtoarr($data);
                        $areaCode = $data['countryCode'];  //区号
                        $phone = $data['purePhoneNumber'];  //手机号
                    }

                    if (empty($phone))  return array("state" => 200, "info" => "手机号码解析失败，请重试，错误信息：" . $errCode);

                }

            } else {
                $areaCode = (int)$param['areaCode'];
                // $areaCode = $areaCode == '86' ? '' : $areaCode;
                $phone    = $param['phone'];
                $vdimgck  = $param['vdimgck'];
                global $cfg_hotline;

                $archives = $dsql->SetQuery("SELECT `international` FROM `#@__sitesms` WHERE `state` = 1");
                $results = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $international = $results[0]['international'];
                    if (!$international) {
                        $areaCode = "";
                    }
                } else {
                    return array("state" => 200, "info" => self::$langData['siteConfig'][33][3]); //短信平台未配置，发送失败！
                }
            }

            //if(!preg_match("/1[34578]{1}\d{9}$/", $phone)){
            //return array("state" => 200, "info" => '请输入正确的手机号码！');
            //}

            //判断手机号码是否已经被绑定
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND `phone` = '$phone' AND `phoneCheck` = 1 AND (`areaCode` = '$areaCode' OR `areaCode` = '') AND `id` <> $id");
            $results  = $dsql->dsqlOper($archives, "totalCount");
            if ($results > 0) {
                // 修改其他账号的手机号绑定
                $changeUidByPhone = $param['changeUidByPhone'];
                if ($changeUidByPhone) {
                    $RenrenCrypt = new RenrenCrypt();
                    $changeUidByPhone = $RenrenCrypt->php_decrypt(base64_decode($changeUidByPhone));
                    $changeUidByPhone = (int)$changeUidByPhone;
                }
                if ($changeUidByPhone && $changeUidByPhone != $id) {
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND `phone` = '$phone' AND `id` = $changeUidByPhone");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if (!$ret) {
                        $changeUidByPhone = 0;
                    }
                } else {
                    $changeUidByPhone = 0;
                }
                // 未已确认操作
                if (empty($changeUidByPhone)) {
                    $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'verify' AND `user` = '" . $areaCode . $phone . "'");
                    $dsql->dsqlOper($archives, "update");
                    return array("state" => 200, "info" => $langData['siteConfig'][21][56]);   //您输入的手机号码已经被其他帐号绑定！
                }
            }

            //小程序端通过原生获取手机号码的功能
            if ($phoneData) {

                //更新用户状态
                $now = GetMkTime(time());
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `areaCode` = '$areaCode', `phone` = '$phone', `phoneCheck` = 1, `phoneBindTime` = '$now' WHERE `id` = '$id'");
                $dsql->dsqlOper($archives, "update");

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '账号绑定手机(小程序端)', '', $archives);

                // 同手机号账户解绑
                if ($changeUidByPhone) {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `phone` = '', `phoneCheck` = 0 WHERE `id` = '$changeUidByPhone'");
                    $dsql->dsqlOper($archives, "update");
                }

                return self::$langData['siteConfig'][33][23]; //"验证通过！";

            } else {

                //验证输入的验证码
                $archives = $dsql->SetQuery("SELECT `id`, `pubdate` FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'verify' AND `user` = '" . $areaCode . $phone . "' AND `code` = '$vdimgck'");
                $results  = $dsql->dsqlOper($archives, "results");
                if (!$results) {
                    return array("state" => 200, "info" => $langData['siteConfig'][20][99]);   //验证码输入错误，请重试！
                } else {

                    //5分钟有效期
                    $now = GetMkTime(time());
                    if ($now - $results[0]['pubdate'] > 300) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);   //验证码已过期，请重新获取！

                    //验证通过删除发送的验证码
                    $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'verify' AND `user` = '" . $areaCode . $phone . "' AND `code` = '$vdimgck'");
                    $dsql->dsqlOper($archives, "update");

                    //更新用户状态
                    $now = GetMkTime(time());
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `areaCode` = '$areaCode', `phone` = '$phone', `phoneCheck` = 1, `phoneBindTime` = '$now' WHERE `id` = '$id'");
                    $dsql->dsqlOper($archives, "update");

                    //记录用户行为日志
                    memberLog($id, 'member', '', 0, 'update', '账号绑定手机', '', $archives);

                    // 同手机号账户解绑
                    if ($changeUidByPhone) {
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `phone` = '', `phoneCheck` = 0 WHERE `id` = '$changeUidByPhone'");
                        $dsql->dsqlOper($archives, "update");
                    }

                    return self::$langData['siteConfig'][33][23]; //"验证通过！";
                }
            }

            //邮箱绑定
        } elseif ($do == "chemail") {

            $email = $param['email'];
            global $cfg_hotline;
            global $cfg_secureAccess;
            global $cfg_basehost;
            global $cfg_webname;

            if (!CheckEmail($email)) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][57]);   //请输入正确的邮箱地址！
            }

            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `email` = '$email' AND `id` <> $id");
            $results  = $dsql->dsqlOper($archives, "totalCount");
            if ($results > 0) return array("state" => 200, "info" => $langData['siteConfig'][21][58]);  //您输入的邮箱已经被其他帐号绑定！

            $ip = GetIP();
            $now = GetMkTime(time());
            global $cfg_webname;

            //URL地址加密
            $RenrenCrypt = new RenrenCrypt();
            $data = base64_encode($RenrenCrypt->php_encrypt($id . "$$" . $ip . "$$" . $now));

            $link = $cfg_secureAccess . $cfg_basehost . "/index.php?service=member&template=bindemail&data=" . $data;

            //获取邮件内容
            $cArr = getInfoTempContent("mail", '会员-手机邮箱绑定-发送验证码', array("link" => $link));
            $title = $cArr['title'];
            $content = $cArr['content'];

            if ($title == "" && $content == "") {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][4]); //邮件通知功能未开启，发送失败！
            }

            // $title = $cfg_webname."-邮箱绑定";
            // $content = "请点击下面的链接完成绑定<br /><a href='".$link."'>".$link."</a><br />（如果点击链接没反应，请复制激活链接，粘贴到浏览器地址栏后访问）<br /><br />为了保障您帐号的安全性，请在 48小时内完成绑定，此链接将在您绑定过后失效！<br />激活邮件将在您激活一次后失效。<br /><br />".$cfg_webname."<br />".date("Y-m-d", time())."<br /><br />如您错误的收到了此邮件，请不要点击绑定按钮。<br />这是一封系统自动发出的邮件，请不要直接回复。";

            $replay = sendmail($email, $title, $content);

            if (!empty($replay)) {
                messageLog("email", "bind", $email, $title, addslashes($content), $id, 1);
                return array("state" => 200, "info" => $langData['siteConfig'][21][37]);  //邮件发送失败，请稍候重试！
            } else {
                //更新用户状态
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `email` = '$email' WHERE `id` = '$id'");
                $dsql->dsqlOper($archives, "update");

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '账号绑定邮箱', '', $archives);

                messageLog("email", "bind", $email, $title, addslashes($content), $id, 0);
                return $langData['siteConfig'][21][38];   //邮件发送成功，请在24小时内点击邮件中的链接继续操作！
            }

            //设置安全保护问题
        } elseif ($do == "question") {

            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_security` WHERE `uid` = '$id'");
            $results  = $dsql->dsqlOper($archives, "totalCount");
            if ($results > 0) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][59]);   //您已经设置过安全保护问题！
            }

            $q1     = $param['q1'];
            $q2     = $param['q2'];
            $answer = $param['answer'];

            if (empty($q1)) return array("state" => 200, "info" => $langData['siteConfig'][21][60]);  //请选择问题一！
            if (empty($q2)) return array("state" => 200, "info" => $langData['siteConfig'][21][61]);  //请选择问题二！
            if (empty($answer)) return array("state" => 200, "info" => $langData['siteConfig'][21][62]);  //请输入您的问题答案！

            $question = $q1 . "$$" . $q2;

            $archives = $dsql->SetQuery("INSERT INTO `#@__member_security` (`uid`, `question`, `answer`) VALUES ('$id', '$question', '$answer')");
            $return = $dsql->dsqlOper($archives, "update");
            if ($return == "ok") {

                //记录用户行为日志
                memberLog($id, 'member', '', 0, 'update', '设置密保问题', '', $archives);

                return self::$langData['siteConfig'][33][24]; //"设置成功！";
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][63]);   //设置失败，请刷新页面重试！
            }
        }
    }


    //安全体检
    public function riskAdvicePolicy()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $return = array();
        $id = $userLogin->getMemberID();

        if ($id == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `state` = 1 AND `id` = " . $id);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $total = 100;
            //验证支付密码
            if (empty($results[0]['paypwd'])) {
                $return['paypwd'] = "false";
            } else {
                $return['paypwd'] = "ok";
            }
            //验证实名
            if ($results[0]['mtype'] == 1 && $results[0]['certifyState'] != 1) {
                $return['certifyState'] = "false";
            } elseif ($results[0]['mtype'] == 2 && $results[0]['licenseState'] != 1) {
                $return['certifyState'] = "false";
                $return['licenseState'] = "false";
            } else {
                $return['certifyState'] = "ok";
                if ($results[0]['mtype'] == 2) {
                    $return['licenseState'] = "ok";
                }
            }
            //验证手机
            if ($results[0]['phoneCheck'] != 1) {
                $return['phoneCheck'] = "false";
            } else {
                $return['phoneCheck'] = "ok";
            }
            //验证邮箱
            if ($results[0]['emailCheck'] != 1) {
                $return['emailCheck'] = "false";
            } else {
                $return['emailCheck'] = "ok";
            }
            //验证密保问题
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_security` WHERE `uid` = " . $id);
            $security = $dsql->dsqlOper($archives, "totalCount");
            if ($security < 1) {
                $return['security'] = "false";
            } else {
                $return['security'] = "ok";
            }
        }
        return $return;
    }

    /**
     * 账单详情
     */
    public function billDetail()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointRatio;
        $id = $this->param;
        $id = isset($id['id']) ? $id['id'] : $id;
        $uid = $userLogin->getMemberID();
        if ($uid < 1) return array("state" => 200, "info" => '请先去登录!');
        if (empty($id) && !is_numeric($id)) return array("state" => 200, "info" => '格式错误');
        $btable = substr($id, 0, 3);  // 取得表名
        $bid    = substr($id, 3);
        $data = array();

        $sql = "";
        // 第三方支付
        if ($btable == "log") {
            $sql = $dsql->SetQuery("select  '' tuikuan,l.`param_data` param, l.`body` urlParam, l.`ordertype` ordertype, l.`amount` amount, l.`paytype` paytype, '0' type,'0' montype,l.`pubdate` pubdate, '' ctype, l.`ordernum` ordernum from `#@__pay_log` l where l.`uid`=$uid AND `id`=$bid");
        }
        // 余额支付
        elseif ($btable == "mon") {
            $sql = $dsql->SetQuery("select l.`tuikuanparam` tuikuan,l.`info` param, l.`urlParam` urlParam, l.`ordertype` ordertype, l.`amount` amount, 'money' paytype, l.`type` type, l.`montype` montype, l.`date` pubdate, l.`ctype` ctype,l.`ordernum` ordernum from `#@__member_money` l where l.`userid`=$uid AND l.`id`=$bid");
        }
        // 消费金支付
        elseif ($btable == "bon") {
            $sql = $dsql->SetQuery("select '' tuikuan,''body, l.`info` param,l.`param` urlParam , l.`ordertype` ordertype, l.`amount` amount, 'huoniao_bonus' paytype,l.`type` type, l.`montype` montype,l.`date` pubdate, l.`ctype` ctype, l.`ordernum` ordernum from `#@__member_bonus` l where l.`userid`=$uid AND l.`id`=$bid");
        }
        // 初次结果封装
        $ret = $dsql->dsqlOper($sql, "results");

        if (empty($ret) || empty($ret[0])) {  // 无数据，直接返回
            return array("data" => $data);
        }

        // 1. 封装title
        if ($btable == "log") {
            $param = unserialize($ret[0]['param']);
            $data['title'] = $param['subject'];
        } else {
            $data['title'] = $ret[0]['param'];
        }
        // 2.封装ordertype
        $data['ordertype'] = $ret[0]['ordertype'];
        // 3.封装paytype
        $data['paytype']   = getPaymentName($ret[0]['paytype']);

        if ($btable == 'mon' && $ret[0]['ctype'] == 'chongzhi') {
            //有订单号说明是在线充值，需要查询pay_log
            if ($ret[0]['ordernum']) {

                $paylogSql = $dsql->SetQuery("SELECT `paytype`, `transaction_id`, `icbc_orderid`, `primaryTransactionId` FROM `#@__pay_log` WHERE `ordernum` = '" . $ret[0]['ordernum'] . "'");
                $paylogRet = $dsql->dsqlOper($paylogSql, "results");
                if ($paylogRet) {
                    $data['paytype']   = getPaymentName($paylogRet[0]['paytype']);
                    $data['transaction_id']   = $paylogRet[0]['transaction_id'];
                    $data['icbc_orderid']   = $paylogRet[0]['icbc_orderid'];
                    $data['primaryTransactionId']   = $paylogRet[0]['primaryTransactionId'];
                } else {
                    $data['paytype']   = '';
                }
            } else {
                $data['paytype']   = '';
            }
        }

        // 4.封装date
        $data['date']      = date("Y-m-d H:i:s", $ret[0]['pubdate']);
        // 5.封装type
        $data['type']      = $ret[0]['type'];
        // 6.封装ctype
        $data['ctype']     = $ret[0]['ctype'];
        // 7.封装store
        $data['store']     = array();
        // 8.封装ordernum
        $data['ordernum']  = $ret[0]['ordernum'];
        // 8.封装url
        $data['url'] = "";
        // 9.封装金额
        $data['amount']  = sprintf('%.2f', $ret[0]['amount']);
        // 10.退款相关
        $data['tuikuan'] = $ret[0]['tuikuan'] ? unserialize($ret[0]['tuikuan']) : array();
        // 11.充值或提现
        $data['montype'] = $ret[0]['montype']; // 金额分类 1-充值，2提现

        // m1.商家买单处理，获取store
        if ($data['ordertype'] == "business" && strstr($data['title'], "商家买单")) {
            $sql2 = $dsql->SetQuery("select o.`sid`,l.`title` bname from `#@__business_maidan_order` o LEFT JOIN `#@__business_list` l ON o.`sid`= l.`id` where o.`ordernum`='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            if ($ret2 && $ret2[0]) {
                $param = array(
                    "service"     => "business",
                    "template"    => "detail",
                    "id"          => $ret2[0]['sid']
                );
                $store = array(
                    'name' => $ret2[0]['bname'],
                    'url' => getUrlPath($param)
                );
                $data['store'] = $store;
            }
        }
        // m2.团购秒杀，更新url
        if ($data['ordertype'] == "tuan") {
            $sql2 = $dsql->SetQuery("select * from `#@__pay_log` where uid=$uid AND ordernum='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            if ($ret2 && $ret2[0]) {
                $param = unserialize($ret2[0]['param_data']);
                $data['url']   = $param['orderurl'];
            }
        }
        // m3.直播消费（url）
        if ($data['ordertype'] == "live") {
            // 查询live_payorder表
            $sql2 = $dsql->SetQuery("select * from `#@__live_payorder` where user_id=$uid AND order_id='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            $urlParam = array(
                'service' => 'live',
                'template' => 'detail',
                'id'    => $ret2[0]['live_id']
            );
            $data['url'] = getUrlPath($urlParam);
        }
        // m4.文章资讯打赏（更新url）；m5.圈子打赏更新url；m6.贴吧打赏更新url；m8.付费视频更新url
        if ($data['ordertype'] == "article" || $data['ordertype'] == "circle" || $data['ordertype'] == "tieba" || $data['ordertype'] == "video") {
            // 资讯打赏时查询收入
            $sql2 = $dsql->SetQuery("select * from `#@__member_money` where showtype=0 AND type=1 AND ordernum='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            $urlParam = $ret2[0]['urlParam'];
            if ($urlParam) {
                $urlParam = unserialize($urlParam);
                $data['url'] = getUrlPath($urlParam);
            }
        }
        // m7.外卖、跑腿更新title、url
        if ($data['ordertype'] == "waimai") {
            $urlParam = unserialize($ret[0]['urlParam']);
            // 跑腿订单，查询paotui_order
            if ($urlParam['module'] == "paotui") {
                $sql2 = $dsql->SetQuery("select l.* from `#@__paotui_order` l where ordernum='" . $data['ordernum'] . "'");
                $ret2 = $dsql->dsqlOper($sql2, "results");
                if ($ret2 && $ret2[0]) {
                    $urlParam = array(
                        'service' => 'member',
                        'type'    => 'user',
                        'template' => 'orderdetail',
                        'action' => 'paotui',
                        'id'    => $ret2[0]['id']
                    );
                    $data['url']   = getUrlPath($urlParam);
                }
            }
            // 外卖，查询 waimai_order_all 以及 waimai_shop表
            else {
                $sql2 = $dsql->SetQuery("select l.`id`,l.`food` from `#@__waimai_order` l where ordernum='" . $data['ordernum'] . "'");
                $ret2 = $dsql->dsqlOper($sql2, "results");
                $food = unserialize($ret2[0]['food']);
                if (is_array($food)) {
                    $data['title'] = $food[0]['title'] . "...等" . count($food) . "件商品";
                    $urlParam = array(
                        'service' => 'member',
                        'type'    => 'user',
                        'template' => 'orderdetail',
                        'action' => 'waimai',
                        'id'    => $ret2[0]['id']
                    );
                    $data['url']   = getUrlPath($urlParam);
                }
            }
        }
        // m8.房产经纪人套餐更新Url
        $house_buy_meal_flag = false; // 记录触发条件
        if ($btable == "mon" && $data['ordertype'] == "house" && $data['ctype'] == "jingjirentaocan") {  // 余额表
            $house_buy_meal_flag = true;
        }
        if (($btable == "bon" || $btable == "log") && $data['ordertype'] == "house") {  // 消费金或log表
            $urlParam = unserialize($ret[0]['urlParam']);
            if ($urlParam['type'] == "buymeal") {
                $house_buy_meal_flag = true;
            }
        }
        if ($house_buy_meal_flag) {   // 直接跳到经纪人套餐记录列表
            $urlParam = array(
                'service' => 'member',
                'type'    => 'user',
                'template' => 'house_mymeal'
            );
            $data['url']   = getUrlPath($urlParam);
        }
        // m9.（余额方式）分类信息刷新；m10（余额方式）顺风车刷新置顶
        if ($btable == "mon" && ($data['ordertype'] == "info" || $data['ordertype'] == "sfcar")) {
            $urlParam = unserialize($ret[0]['urlParam']);
            $data['url']   = getUrlPath($urlParam);
        }
        // m11.旅游更新Url
        if ($data['ordertype'] == "travel") {
            $sql2 = $dsql->SetQuery("select l.* from `#@__travel_order` l LEFT JOIN `#@__travel_store` s ON l.`store` = s.`id` where ordernum='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            if ($ret2 && $ret2[0]) {
                $urlParam = array(
                    'service' => 'member',
                    'type'    => 'user',
                    'template' => 'orderdetail-travel',
                    'id' => $ret2[0]['id']
                );
                $data['url']   = getUrlPath($urlParam);
            }
        }
        // m12家政服务更新url
        if ($data['ordertype'] == 'homemaking') {
            $sql2 = $dsql->SetQuery("select l.* from `#@__homemaking_order` l where ordernum='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            if ($ret2 && $ret2[0]) {
                $urlParam = array(
                    'service' => 'member',
                    'type'    => 'user',
                    'template' => 'orderdetail-homemaking',
                    'id' => $ret2[0]['id']
                );
                $data['url']   = getUrlPath($urlParam);
            }
        }
        // m13.积分商城兑换
        if ($data['ordertype'] == "integral") {
            $sql2 = $dsql->SetQuery("select l.* from `#@__integral_order` l where ordernum='" . $data['ordernum'] . "'");
            $ret2 = $dsql->dsqlOper($sql2, "results");
            if ($ret2 && $ret2[0]) {
                $urlParam = array(
                    'service' => 'integral',
                    'template' => 'detail',
                    'id' => $ret2[0]['proid']
                );
                $data['url']   = getUrlPath($urlParam);
            }
        }
        // m~end. 最后尝试统一获取url、以及ctype、montype
        if (empty($data['url'])) {
            if (!empty($ret[0]['urlParam'])) {
                $urlParam = unserialize($ret[0]['urlParam']);
                $ctype = $urlParam['ctype'] ? $urlParam['ctype'] : "";
                if (!empty($ctype)) {
                    $data['ctype'] = $ctype;
                }
                $montype = $urlParam['montype'] ? $urlParam['montype'] : "";
                if (!empty($montype)) {
                    $data['montype'] = $montype;
                }
                // 拼接url。所需参数：模块名（module）、[用户类型](utype)，[子模块名](act)，模板名(template)，信息ID(aid、id)。
                // 如果有子模块，可以拼接到template中，也就是只需要module、type、template、id
                $ser    =  $urlParam['service'] ?  $urlParam['service'] : ($urlParam['module'] ?  $urlParam['module'] : ""); // 模块名
                $type   = $urlParam['type'] ? $urlParam['type'] : ($urlParam['utype'] ?  $urlParam['utype'] : "");  // 用户类型
                // 特殊的type
                if ($type == "refreshTop" || $type == 'fabu') {
                    $type = "";
                }
                if ($ser == "house" && $type == "fabuPay") {
                    $type = "sale";
                }
                if ($type == "fabuPay") {
                    $type = "";
                }
                // 会员升级，跳转充值记录
                if ($type == "upgrade" && $data['ordertype'] == "member") {
                    $data['url']   = getUrlPath(array("service" => "member", "type" => "user", "template" => "opendetail"));
                }
                // 加入分销商
                if ($urlParam['ordertype'] == "fenxiaoJoinPay") {
                    $data['url']   = getUrlPath(array("service" => "member", "type" => "user", "template" => "fenxiao"));
                }
                // 入驻商家
                if ($type == "join_pay") {
                    $data['url']   = getUrlPath(array("service" => "member", "type" => "business", "template" => "index"));
                }
                $act =  $urlParam['act'] ?  $urlParam['act'] : ($urlParam['template'] ?  $urlParam['template'] : "detail");  // 子模块名
                // 特殊的act
                if ($ser == "job") {
                    $act = "job";
                }
                $template = $urlParam['action'] ?  $urlParam['action'] : "";   // 模板名
                // 特殊的template
                if ($ser == "house" && !strstr($act, "detail")) {
                    $template = "detail";
                }
                $id     = $urlParam['aid'] ?  $urlParam['aid'] : ($urlParam['id'] ?  $urlParam['id'] : 0);

                if ($urlParam['url']) {
                    $data['url']   = getUrlPath($urlParam['url']);
                } else {
                    $urlParam = array(); // 重置变量
                    if (!empty($ser)) {
                        $urlParam['service'] = $ser;
                    }
                    if (!empty($type)) {
                        $urlParam['type'] = $type;
                    }
                    if (!empty($act)) {
                        $urlParam['act'] = $act;
                    }
                    if (!empty($template)) {
                        $urlParam['template'] = $template;
                    }

                    if (!empty($id)) {  // 应该存在信息Id，否则不生成url
                        $urlParam['id'] = $id;
                        $data['url']   = getUrlPath($urlParam);
                    }
                }
            }
        }
        return $data;
    }

    /**
     * 账单统计
     */
    public function billSummary()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();
        // 1.验证登录
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }
        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'] ? $this->param['type'] : $_REQUEST['type']; // 1:收入 0：支出
                $paytype  = $this->param['paytype'];  // 支付方式
                $price    = $this->param['price'];    // 价格，一个字符串（最低价，最高价），其中一个没有时部分为"",两个都没有时不传此参数
                $ordertype = $this->param['ordertype'];  // 对应表中的ordertype
            }
        }
        // 2.条件处理

        // 通用支付（排除余额、消费金）
        $log_sql = "select 'log' sq, l.`uid` uid,l.`ordertype` ordertype, l.`ordernum` ordernum, l.`paytype` paytype, l.`pubdate` pubdate, l.`amount` amount, l.`param_data` param, '0' type, m.`username` username,m.`nickname` nickname from `#@__pay_log` l LEFT JOIN `#@__member` m ON l.`uid`=m.`id` LEFT JOIN `#@__site_area` a ON m.`cityid`=a.`id`  where l.`uid`=$uid AND l.`state`=1 AND l.`paytype`!='huoniao_bonus' AND l.`paytype`!='money' AND l.`paytype`!='point,money' AND l.`paytype`!='integral' AND l.`paytype`!='' AND l.`body` not like '%deposit%'";

        // 余额
        $money_sql = "select 'money' sq,l.`userid` uid, l.`ordertype` ordertype, l.`ordernum` ordernum, 'money' paytype, l.`date` pubdate,l.`amount` amount, l.`info` param, l.`type` type, m.`username` username,m.`nickname` nickname from `#@__member_money` l LEFT JOIN `#@__member` m ON l.`userid`=m.`id` LEFT JOIN `#@__site_area` a ON m.`cityid`=a.`id` where l.`userid`=$uid AND l.`showtype`=0";

        // 消费金
        $bonus_sql = "select 'bonus' sq, l.`userid` uid, l.`ordertype` ordertype, l.`ordernum` ordernum, 'huoniao_bonus' paytype, l.`date` pubdate, l.`amount` amount, l.`info` param, l.`type` type, m.`username` username,m.`nickname` nickname from `#@__member_bonus` l LEFT JOIN `#@__member` m ON l.`userid`=m.`id` where l.`userid`=$uid";

        // 全部sql
        $allSql = $dsql->SetQuery("SELECT * FROM (" . $log_sql . " UNION ALL " . $money_sql . " UNION ALL " . $bonus_sql . ") as alls ");
        // 支付方式
        $orther_flag = false;
        if ($paytype && $paytype == "money") {  // 余额
            $allSql = $dsql->SetQuery("SELECT * FROM (" . $money_sql . ") as alls ");
        } elseif ($paytype && $paytype == "huoniao_bonus") {  // 消费金
            $allSql = $dsql->SetQuery("SELECT * FROM (" . $bonus_sql . ") as alls ");
        } elseif ($paytype && $paytype != "") {  // 其他支付
            $orther_flag = true;
            $allSql = $dsql->SetQuery("SELECT * FROM (" . $log_sql . ") as alls ");
        }

        // 增加条件
        $twehre = " WHERE `amount`!=0";

        if ($orther_flag) {
            $twehre .= " AND `paytype`= '$paytype'";
        }
        // 收支类型
        if ($type != "") {
            $twehre .= " AND `type`= $type";
        }

        // ordertype
        if ($ordertype != "") {
            $twehre .= " AND `ordertype` = '$ordertype'";
        }

        //价格筛选
        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $twehre .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $twehre .= " AND `amount` > " . $price_s;
            } else {
                $twehre .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }

        $allSql .= $twehre;
        //        die($allSql);

        //查询会员所有记录
        $data = array();
        $sql = $dsql->SetQuery($allSql);
        $ret = $dsql->dsqlOper($sql, "results", "ASSOC", '', 0);
        if ($ret) {
            //            if(empty($paytype)){
            //                // 不使用union all ，使用程序拼接其他两个sql，共3个sql
            //                $allSql2 = $dsql->SetQuery("SELECT * FROM (".$log_sql.") as alls ".$twehre);
            //                $ret2 = $dsql->dsqlOper($allSql2, "results");
            //                if($ret2){
            //                    foreach ($ret2 as $k => $v){
            //                        $ret[] = $v;
            //                    }
            //                }
            //                $allSql3 = $dsql->SetQuery("SELECT * FROM (".$bonus_sql.") as alls ".$twehre);
            //                $ret3 = $dsql->dsqlOper($allSql3, "results");
            //                if($ret3){
            //                    foreach ($ret3 as $k => $v){
            //                        $ret[] = $v;
            //                    }
            //                }
            //            }
            foreach ($ret as $key => $value) {
                $date = date('Y-m', $value['pubdate']);
                if (!$data[$date]) {
                    $data[$date] = array();
                }

                $data[$date][] = array('type' => $value['type'], 'amount' => $value['amount']);
            }
        }
        $list = array();
        if ($data) {
            foreach ($data as $key => $value) {
                $expenditure = $income = 0;
                foreach ($value as $k => $v) {
                    if ($v['type'] == 1) {
                        $income += $v['amount'];
                    } else {
                        $expenditure += $v['amount'];
                    }
                }
                $list[$key] = array(
                    'income' => (float)sprintf('%.2f', $income),
                    'expenditure' => (float)sprintf('%.2f', $expenditure)
                );
            }
            ksort($list);  // 重新排序
        }
        return $list;
    }

    /**
     * 账单记录
     */
    public function bill()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $type = $page = $pageSize = 0;
        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'] ? $this->param['type'] : $_REQUEST['type']; // 1:收入 0：支出
                $paytype  = $this->param['paytype'];  // 支付方式
                $price    = $this->param['price'];    // 价格，一个字符串（最低价，最高价），其中一个没有时部分为"",两个都没有时不传此参数
                $ordertype = $this->param['ordertype'];  // 对应表中的ordertype
                $starttime = $this->param['starttime'];
                $endtime  = $this->param['endtime'];
                $date     = $this->param['date'];
                $page     = $this->param['page'];    // 页数
                $pageSize = $this->param['pageSize'];  // 每页大小
            }
        }

        $uid = $userLogin->getMemberID();    // 登录用户ID

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $typeallarr = array('money' => '余额支付');
        $archives = $dsql->SetQuery("SELECT `id`, `pay_code`, `pay_name`, `pay_desc` FROM `#@__site_payment` WHERE `state` = 1 ORDER BY `weight`, `id` DESC");
        $results = $dsql->dsqlOper($archives, "results");
        if ($results) {
            foreach ($results as $key => $val) {
                $typeallarr[$val['pay_code']] = $val['pay_name'];
            }
        }

        // 通用支付（排除余额、消费金）
        $log_sql = "select 'log' sq,l.`id` id,'' ctype, l.`uid` uid,l.`ordertype` ordertype, l.`ordernum` ordernum, l.`paytype` paytype, l.`pubdate` pubdate, l.`amount` amount, l.`param_data` param, l.`body`, '0' type, m.`username` username,m.`nickname` nickname from `#@__pay_log` l LEFT JOIN `#@__member` m ON l.`uid`=m.`id` LEFT JOIN `#@__site_area` a ON m.`cityid`=a.`id`  where l.`uid`=$uid AND l.`state`=1 AND l.`paytype`!='huoniao_bonus' AND l.`paytype`!='money' AND l.`paytype`!='point,money' AND l.`paytype`!='integral' AND l.`paytype`!='' AND l.`body` not like '%deposit%'";

        // 余额
        $money_sql = "select 'mon' sq, l.`id` id,l.`ctype` ctype,l.`userid` uid, l.`ordertype` ordertype, l.`ordernum` ordernum, 'money' paytype, l.`date` pubdate,l.`amount` amount, l.`info` param, 'body', l.`type` type, m.`username` username,m.`nickname` nickname from `#@__member_money` l LEFT JOIN `#@__member` m ON l.`userid`=m.`id` LEFT JOIN `#@__site_area` a ON m.`cityid`=a.`id` where l.`userid`=$uid AND l.`showtype`=0";

        // 消费金
        $bonus_sql = "select 'bon' sq, l.`id` id, '' ctype, l.`userid` uid, l.`ordertype` ordertype, l.`ordernum` ordernum, 'huoniao_bonus' paytype, l.`date` pubdate, l.`amount` amount, l.`info` param, 'body', l.`type` type, m.`username` username,m.`nickname` nickname from `#@__member_bonus` l LEFT JOIN `#@__member` m ON l.`userid`=m.`id` where l.`userid`=$uid";

        // 全部sql
        $allSql = $dsql->SetQuery("SELECT * FROM (" . $log_sql . " UNION ALL " . $money_sql . " UNION ALL " . $bonus_sql . ") as alls ");
        // 支付方式
        $orther_flag = false;
        if ($paytype == "money") {  // 余额
            $allSql = $dsql->SetQuery("SELECT * FROM (" . $money_sql . ") as alls ");
        } elseif ($paytype == "huoniao_bonus") {  // 消费金
            $allSql = $dsql->SetQuery("SELECT * FROM (" . $bonus_sql . ") as alls ");
        } elseif ($paytype != "") {  // 其他支付
            $orther_flag = true;
            $allSql = $dsql->SetQuery("SELECT * FROM (" . $log_sql . ") as alls ");
        }

        // 增加条件
        $twehre = " WHERE `amount`!=0";

        if ($orther_flag) {
            $twehre .= " AND `paytype`= '$paytype'";
        }
        // 收支类型
        if ($type != "") {
            $twehre .= " AND `type`= $type";
        }
        //时间筛选
        if ($starttime != "") {
            $twehre .= " AND `pubdate` >= $starttime";
        }

        if ($endtime != "") {
            $twehre .= " AND `pubdate` < $endtime";
        }

        //月份筛选
        if ($date) {
            $date_s = GetMkTime($date);
            $date_e = strtotime("+1 month", $date_s);
            $twehre .= " AND `pubdate` >= $date_s AND `pubdate` < $date_e";
        }

        // ordertype
        if ($ordertype != "") {
            $twehre .= " AND `ordertype` = '$ordertype'";
        }

        //价格筛选
        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $twehre .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $twehre .= " AND `amount` > " . $price_s;
            } else {
                $twehre .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }

        $allSql .= $twehre;
        //    die($allSql);

        //总条数
        $totalCount = $dsql->dsqlOper($allSql, "totalCount", "ASSOC", '', 0);
        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        //总页数
        $totalPage = ceil($totalCount / $pageSize);

        //总收入总支出
        $totalAdd = $totalLess = 0;
        //总收入金额
        $allsqlam     = $dsql->SetQuery("SELECT SUM(`amount`) allamount FROM (" . $allSql . ") as alls WHERE type=1");
        $totalAdd   = $dsql->dsqlOper($allsqlam, "results", "ASSOC", '', 0);
        $totalAdd = (float)sprintf('%.2f', $totalAdd[0]['allamount']);

        //总支出
        $allsqlsm     = $dsql->SetQuery("SELECT SUM(`amount`) allamount FROM (" . $allSql . ") as alls WHERE type=0");
        $totalLess   = $dsql->dsqlOper($allsqlsm, "results", "ASSOC", '', 0);
        $totalLess = (float)sprintf('%.2f', $totalLess[0]['allamount']);

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "totalAdd" => $totalAdd,
            "totalLess" => $totalLess
        );

        // 计算分页 limit，并查询数据
        $atpage = $pageSize * ($page - 1);
        $allSql .= " order by pubdate desc,id desc limit $atpage, $pageSize";

        $listSql = $dsql->SetQuery($allSql);
        $results = $dsql->dsqlOper($listSql, "results", "ASSOC", '', 0);

        if ($results) {
            foreach ($results as $key => $val) {
                // 调试
                $list[$key]['id'] = $val['sq'] . $val['id'];  // 拼接的唯一id，用于Detail识别

                // 1.ordertype
                $list[$key]['ordertype'] = $val['ordertype'];

                // 2.订单号
                $list[$key]['ordernum'] = $val['ordernum'] ? $val['ordernum'] : "无";


                // 4.处理title标题
                // 通用支付
                if ($val['sq'] == "log") {
                    $param = $val['param'];
                    $arr = unserialize($param);
                    $subject = strip_tags($arr['subject']);

                    //如果取消到数据，用模块信息代替
                    if (!$subject) {

                        //从body中提取
                        $body = $val['body'] ? unserialize($val['body']) : $val['body'];
                        if (is_array($body)) {
                            $subject = $body['title'];
                        } else {
                            $moduleName = getModuleTitle(array('name' => $val['ordertype']));
                            if ($moduleName) {
                                $subject = $moduleName . '消费';
                            } else {
                                $subject = $val['ordernum'] ? $val['ordernum'] : $val['ordertype'];
                            }
                        }
                    }

                    $list[$key]['title'] = $subject;
                }
                // 余额支付，消费金
                else {
                    $list[$key]['title'] = strip_tags($val['param']);
                }

                // 5.金额变化
                $list[$key]['type'] = $val['type'];
                $list[$key]['amount'] = $val['amount'];

                // 6.处理时间
                $list[$key]['date'] = date("Y-m-d H:i:s", $val['pubdate']);

                // 7.支付方式
                $list[$key]['paytype'] = $typeallarr[$val['paytype']];
                // 8.订单号
                $list[$key]['ordernum'] = $val['ordernum'];

                // 9.ctype
                $list[$key]['ctype']  = $val['ctype'];
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 交易明细
     * @return array
     */
    public function record()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $type = $page = $pageSize = 0;
        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'] ? $this->param['type'] : $_REQUEST['type'];
                $price    = $this->param['price'];
                $ctype    = $this->param['ctype'];
                $ordertype = $this->param['ordertype'];
                $date     = $this->param['date'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id`,`date`, `type`, `amount`, `info`,`ctype`,`ordertype`,`ordernum`,`urlparam`,`balance` FROM `#@__member_money` WHERE `userid` = " . $uid);

        $where = " AND `showtype` = 0";
        if ($ctype != "") {
            $where .= " AND `ctype` = '$ctype'";
        }

        if ($ordertype != "") {
            $where .= " AND `ordertype` = '$ordertype'";
        }

        if ($type != '') {
            $where .= " AND `type` = '$type'";
        }
        //价格筛选
        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $where .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $where .= " AND `amount` > " . $price_s;
            } else {
                $where .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }

        //月份筛选
        if ($date) {
            $date_s = GetMkTime($date);
            $date_e = strtotime("+1 month", $date_s);
            $where .= " AND `date` >= $date_s AND `date` < $date_e";
        }

        //总条数
        $totalCount = $dsql->dsqlOper($archives . $where, "totalCount");
        //总收入
        $add = $dsql->SetQuery("SELECT SUM(`amount`) AS amount FROM `#@__member_money` WHERE `userid` = " . $uid . " AND `type` = 1 AND `showtype` = 0");
        $totalAdd = $dsql->dsqlOper($add, "results");
        //总支出
        $less = $dsql->SetQuery("SELECT SUM(`amount`) AS amount FROM `#@__member_money` WHERE `userid` = " . $uid . " AND `type` = 0");
        $totalLess = $dsql->dsqlOper($less, "results");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "totalAdd" => (float)$totalAdd[0]['amount'],
            "totalLess" => (float)$totalLess[0]['amount']
        );

        $atpage = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . $where . " ORDER BY `date` DESC, `id` desc LIMIT $atpage, $pageSize", "results");
        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['date']     = date("Y-m-d H:i:s", $val['date']);
                $list[$key]['type']     = $val['type'];
                $list[$key]['amount']   = $val['amount'];
                $list[$key]['info']     = strip_tags($val['info']);
                $list[$key]['id']       = $val['id'];
                $list[$key]['ctype']    = $val['ctype'];
                $list[$key]['balance']    = $val['balance'];
                $list[$key]['ordertype'] = $val['ordertype'];
                $is_open  = 1;
                // if(($val['ctype'] =='xiaoshou' || $val['ctype'] =='shangpinxiaoshou' || $val['ctype'] =='tuikuan') && $val['ordernum'] =='' || $val['ordertype'] =='' || ($val['ctype'] =='yongjin' && $val['urlparam'] =='')){
                //     $is_open  = 0;
                // }
                $list[$key]['is_open']  = $is_open;
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }
    //消费金明细
    public function bonus()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $type = $page = $pageSize = 0;
        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'] ? $this->param['type'] : $_REQUEST['type'];
                $price    = $this->param['price'];
                $ctype    = $this->param['ctype'];
                $ordertype = $this->param['ordertype'];
                $date     = $this->param['date'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id`,`date`, `type`, `amount`, `info`,`ordertype`,`ordernum`,`balance` FROM `#@__member_bonus` WHERE `userid` = " . $uid);

        //        $where = " AND `showtype` = 0";
        //        if($ctype != ""){
        //            $where .= " AND `ctype` = '$ctype'";
        //        }

        if ($ordertype != "") {
            $where .= " AND `ordertype` = '$ordertype'";
        }

        if ($type != '') {
            $where .= " AND `type` = '$type'";
        }
        //价格筛选
        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $where .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $where .= " AND `amount` > " . $price_s;
            } else {
                $where .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }

        //月份筛选
        if ($date) {
            $date_s = GetMkTime($date);
            $date_e = strtotime("+1 month", $date_s);
            $where .= " AND `date` >= $date_s AND `date` < $date_e";
        }

        //总条数
        $totalCount = $dsql->dsqlOper($archives . $where, "totalCount");
        //总收入
        $add = $dsql->SetQuery("SELECT SUM(`amount`) AS amount FROM `#@__member_bonus` WHERE `userid` = " . $uid . " AND `type` = 1 ");
        $totalAdd = $dsql->dsqlOper($add, "results");
        //总支出
        $less = $dsql->SetQuery("SELECT SUM(`amount`) AS amount FROM `#@__member_bonus` WHERE `userid` = " . $uid . " AND `type` = 0");
        $totalLess = $dsql->dsqlOper($less, "results");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "totalAdd" => (float)$totalAdd[0]['amount'],
            "totalLess" => (float)$totalLess[0]['amount']
        );

        $atpage = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . $where . " ORDER BY `date` DESC LIMIT $atpage, $pageSize", "results");
        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['date']        = date("Y-m-d H:i:s", $val['date']);
                $list[$key]['type']        = $val['type'];
                $list[$key]['amount']      = $val['amount'];
                $list[$key]['info']        = strip_tags($val['info']);
                $list[$key]['id']          = $val['id'];
                //                $list[$key]['ctype']     = $val['ctype'];
                $list[$key]['balance']     = $val['balance'];
                $list[$key]['ordertype']   = $val['ordertype'];
                if (strpos($val['info'], '充') !== false) {
                    $list[$key]['typee']       = '2';
                }
                $is_open  = 1;
                // if(($val['ctype'] =='xiaoshou' || $val['ctype'] =='shangpinxiaoshou' || $val['ctype'] =='tuikuan') && $val['ordernum'] =='' || $val['ordertype'] =='' || ($val['ctype'] =='yongjin' && $val['urlparam'] =='')){
                //     $is_open  = 0;
                // }
                $list[$key]['is_open']  = $is_open;
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    //消费金明细汇总
    public function bonusSummary()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $list = array();

        $where = '';
        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $price      = $this->param['price'];
                $ctype      = $this->param['ctype'];
                $ordertype  = $this->param['ordertype'];
            }
        }

        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $where .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $where .= " AND `amount` > " . $price_s;
            } else {
                $where .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }
        //        if($ctype!=''){
        //            $where .= " AND `ctype` = '$ctype'";
        //        }
        if ($ordertype != '') {
            $where .= " AND `ordertype` = '$ordertype'";
        }

        //查询会员所有记录
        $data = array();
        $sql = $dsql->SetQuery("SELECT `type`, `amount`, `date` FROM `#@__member_bonus` WHERE `userid` = " . $uid . $where);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            foreach ($ret as $key => $value) {
                $date = date('Y-m', $value['date']);
                if (!$data[$date]) {
                    $data[$date] = array();
                }

                $data[$date][] = array('type' => $value['type'], 'amount' => $value['amount']);
            }
        }

        if ($data) {
            foreach ($data as $key => $value) {
                $expenditure = $income = 0;
                foreach ($value as $k => $v) {
                    if ($v['type'] == 1) {
                        $income += $v['amount'];
                    } else {
                        $expenditure += $v['amount'];
                    }
                }
                $list[$key] = array(
                    'income' => (float)sprintf('%.2f', $income),
                    'expenditure' => (float)sprintf('%.2f', $expenditure)
                );
            }
        }

        return $list;
    }



    /**
     * 交易明细汇总
     * @return array
     */
    public function recordSummary()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $list = array();

        $where = ' AND `showtype` = 0';
        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $price      = $this->param['price'];
                $ctype      = $this->param['ctype'];
                $ordertype  = $this->param['ordertype'];
            }
        }

        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $where .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $where .= " AND `amount` > " . $price_s;
            } else {
                $where .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }
        if ($ctype != '') {
            $where .= " AND `ctype` = '$ctype'";
        }
        if ($ordertype != '') {
            $where .= " AND `ordertype` = '$ordertype'";
        }

        //查询会员所有记录
        $data = array();
        $sql = $dsql->SetQuery("SELECT `type`, `amount`, `date` FROM `#@__member_money` WHERE `userid` = " . $uid . $where);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            foreach ($ret as $key => $value) {
                $date = date('Y-m', $value['date']);
                if (!$data[$date]) {
                    $data[$date] = array();
                }

                $data[$date][] = array('type' => $value['type'], 'amount' => $value['amount']);
            }
        }

        if ($data) {
            foreach ($data as $key => $value) {
                $expenditure = $income = 0;
                foreach ($value as $k => $v) {
                    if ($v['type'] == 1) {
                        $income += $v['amount'];
                    } else {
                        $expenditure += $v['amount'];
                    }
                }
                $list[$key] = array(
                    'income' => (float)sprintf('%.2f', $income),
                    'expenditure' => (float)sprintf('%.2f', $expenditure)
                );
            }
        }

        return $list;
    }


    /**
     * 积分明细
     * @return array
     */
    public function point()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $type = $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'];
                $ctype     = $this->param['ctype'];
                $price    = $this->param['point'];
                $date     = $this->param['date'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `date`, `type`, `amount`, `info`,`ctype`,`balance` FROM `#@__member_point` WHERE `userid` = " . $uid);

        $where = "";
        if ($type != "") {
            $where = " AND `type` = '$type'";
        }

        if ($ctype != '') {
            $where = " AND `ctype` = '$ctype'";
        }

        //价格筛选
        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $where .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $where .= " AND `amount` > " . $price_s;
            } else {
                $where .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }

        //月份筛选
        if ($date) {
            $date_s = GetMkTime($date);
            $date_e = strtotime("+1 month", $date_s);
            $where .= " AND `date` >= $date_s AND `date` < $date_e";
        }

        //总条数
        $totalCount = $dsql->dsqlOper($archives . $where, "totalCount");
        //总收入
        $add = $dsql->SetQuery("SELECT SUM(`amount`) AS amount FROM `#@__member_point` WHERE `userid` = " . $uid . " AND `type` = 1");
        $totalAdd = $dsql->dsqlOper($add, "results");
        //总支出
        $less = $dsql->SetQuery("SELECT SUM(`amount`) AS amount FROM `#@__member_point` WHERE `userid` = " . $uid . " AND `type` = 0");
        $totalLess = $dsql->dsqlOper($less, "results");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "totalAdd" => (int)$totalAdd[0]['amount'],
            "totalLess" => (int)$totalLess[0]['amount']
        );

        $atpage = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . $where . " ORDER BY `date` DESC LIMIT $atpage, $pageSize", "results");

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['date']   = date("Y-m-d H:i:s", $val['date']);
                $list[$key]['type']   = $val['type'];
                $list[$key]['amount'] = floatval($val['amount']);
                $list[$key]['info']   = $val['info'];
                $list[$key]['balance']   = $val['balance'];
                $list[$key]['ctype']  = $val['ctype'];
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 积分明细汇总
     * @return array
     */
    public function pointSummary()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $list = array();

        $where = '';
        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $price      = $this->param['point'];
                $ctype      = $this->param['ctype'];
                $ordertype  = $this->param['ordertype'];
            }
        }

        if ($price) {
            $priceArr = explode(',', $price);
            $price_s = (float)sprintf('%.2f', $priceArr[0]);
            $price_e = (float)sprintf('%.2f', $priceArr[1]);
            if (!$price_s) {
                $where .= " AND `amount` < " . $price_e;
            } elseif (!$price_e) {
                $where .= " AND `amount` > " . $price_s;
            } else {
                $where .= " AND `amount` BETWEEN " . $price_s . " AND " . $price_e;
            }
        }
        if ($ctype != '') {
            $where .= " AND `ctype` = '$ctype'";
        }
        if ($ordertype != '') {
            $where .= " AND `ordertype` = '$ordertype'";
        }

        //查询会员所有记录
        $data = array();
        $sql = $dsql->SetQuery("SELECT `type`, `amount`, `date` FROM `#@__member_point` WHERE `userid` = " . $uid . $where);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            foreach ($ret as $key => $value) {
                $date = date('Y-m', $value['date']);
                if (!$data[$date]) {
                    $data[$date] = array();
                }

                $data[$date][] = array('type' => $value['type'], 'amount' => $value['amount']);
            }
        }

        if ($data) {
            foreach ($data as $key => $value) {
                $expenditure = $income = 0;
                foreach ($value as $k => $v) {
                    if ($v['type'] == 1) {
                        $income += $v['amount'];
                    } else {
                        $expenditure += $v['amount'];
                    }
                }
                $list[$key] = array(
                    'income' => (float)sprintf('%.2f', $income),
                    'expenditure' => (float)sprintf('%.2f', $expenditure)
                );
            }
        }

        return $list;
    }


    /**
     * 被打赏记录
     * @return array
     */
    public function reward()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $page     = $this->param['page'];
                $date     = $this->param['date'];
                $soure    = $this->param['soure'];
                $type     = $this->param['type'];
                $price    = $this->param['price'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $wherrtype = $where = $whrersoure =  '';
        if ($type == 2) {
            $wherrtype = " AND r.`gift_id` = 0 ";
        }
        if ($soure != 'live' && $soure != '') {
            $whrersoure  = " AND `module` = '" . $soure . "'";

            if ($type == 1) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！
            }
        }

        $membersql = "(SELECT '' hid,`uid` reward_userid,`amount`,'' settle ,`date`,''num,''gift_id, `module`,`aid`,'member' rewardtype FROM `#@__member_reward` WHERE `state` = 1 AND `touid` = $uid " . $whrersoure . ")";
        // $livesql   = "(SELECT r.`id` hid, r.`reward_userid`, p.`amount`, p.`settle`, r.`date`, r.`num`, r.`gift_id`,''module, r.`live_id` aid, 'live' rewardtype FROM `#@__live_reward` r LEFT JOIN `#@__livelist` l  ON l.`id` = r.`live_id` LEFT JOIN `#@__live_payorder` p
        //    ON p.`live_id` = r.`live_id` LEFT JOIN `#@__live_member` m ON m.`aid` = r.`live_id` WHERE m.`uid` = $uid AND p.`status` = 1 AND r.`payid` = p.`order_id` ".$wherrtype.")";
        $livesql   = "(SELECT r.`id` hid, r.`reward_userid`, p.`amount`, p.`settle`, r.`date`, r.`num`, r.`gift_id`,''module, r.`live_id` aid, 'live' rewardtype FROM `#@__livelist` l LEFT JOIN `#@__live_reward` r  ON l.`id` = r.`live_id` LEFT JOIN `#@__live_payorder` p
       ON p.`live_id` = r.`live_id`  WHERE l.`user` = $uid AND p.`status` = 1 AND r.`payid` = p.`order_id` " . $wherrtype . ")";

        $hongbaosql = "(SELECT '' hid,`recv_user` reward_userid,`recv_money` amount,'' settle ,l.`date`, ''num,''gift_id, '' module,hb.`live_id` aid ,'hongbao' rewardtype FROM `#@__live_hrecv_list` l LEFT JOIN `#@__live_hongbao` hb ON l.`hid` =  hb.`id` WHERE `recv_user` = $uid )";
        $allsql = $dsql->SetQuery("SELECT * FROM (" . $membersql . " UNION ALL " . $livesql . " UNION ALL " . $hongbaosql . ") as alls WHERE 1 = 1");
        if ($type == 1 || $soure == 'live') {
            if ($type == 1) {
                $wheresoure = " AND `gift_id` > 0";
                $allsql = $dsql->SetQuery("SELECT * FROM " . $livesql . " as alls WHERE  1 = 1" . $wheresoure);
            } elseif ($type == 2) {
                $wheresoure = " AND `gift_id` = 0";
                $allsql = $dsql->SetQuery("SELECT * FROM (" . $livesql . " UNION ALL " . $hongbaosql . ")as alls WHERE  1 = 1" . $wheresoure);
            }
        }
        if ($soure != 'live' && $soure != '') {
            $allsql = $dsql->SetQuery("SELECT * FROM " . $membersql . " as alls  WHERE  1 = 1");
        }
        if ($date != '') {
            $startime = strtotime($date);
            $month    = date('m', $startime);
            $year     = date('y', $startime);
            $d        = date('t', $startime);
            $endtime  = mktime(23, 59, 59, $month, $d, $year);
            $where .= " AND `date` >= '" . $startime . "' AND `date` <= '" . $endtime . "'";
        }
        if ($price != '') {
            $pricearr = explode(',', $price);
            $s_price = (float)$pricearr[0];
            $e_price = (float)$pricearr[1];

            if (empty($s_price)) {
                $where .= " AND `amount` < " . $e_price;
            } elseif (empty($e_price)) {
                $where .= " AND `amount` > " . $s_price;
            } else {
                $where .= " AND `amount` BETWEEN " . $s_price  . " AND " . $e_price;
            }
        }

        //总条数
        $totalCount = $dsql->dsqlOper($allsql . $where, "totalCount");
        //总金额
        $allsqlmm     = $dsql->SetQuery("SELECT SUM(`amount`) allamount FROM (" . $membersql . " UNION ALL " . $livesql . " UNION ALL " . $hongbaosql . ") as alls WHERE 1 = 1");
        $totalmoney   = $dsql->dsqlOper($allsqlmm . $where, "results");



        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "totalmoney" => (float)sprintf('%.2f', $totalmoney[0]['allamount'])
        );

        $atpage = $pageSize * ($page - 1);
        //         var_dump($allsql.$where);die;
        $results = $dsql->dsqlOper($allsql . $where . " ORDER BY `date` DESC LIMIT $atpage, $pageSize", "results");
        if ($results) {
            include HUONIAOROOT . '/include/config/settlement.inc.php';
            global $cfg_liveFee;
            foreach ($results as $key => $val) {
                $nickname = $langData['siteConfig'][21][65];  //匿名
                $liveurl = $livetitle = '';
                if ($val['rewardtype'] != 'member') {
                    $sql = $dsql->SetQuery("SELECT `title` FROM `#@__livelist` WHERE `id` = " . $val['aid']);
                    $ret = $dsql->dsqlOper($sql, "results");

                    if ($ret && is_array($ret)) {
                        $livetitle = $ret[0]['title'];
                        $param = array(
                            "service"     => 'live',
                            "template"    => "h_detail",
                            "id"      => $val['aid']
                        );
                        $liveurl = getUrlPath($param);
                    }
                }
                if ($val['rewardtype'] == 'member') {
                    $list[$key]['id'] = (int)$val['aid'];
                    $list[$key]['type'] = 0;
                    $title = $url = "";

                    $dbtab = $val['module'] . "list";
                    if ($val['module'] == 'tieba') {
                        $dbtab = 'tieba_list';
                    } elseif ($val['module'] == 'circle') {
                        $dbtab = 'circle_dynamic_all';
                    }

                    if ($val['module'] == 'circle') {
                        $sql = $dsql->SetQuery("SELECT `content` title FROM `#@__" . $dbtab . "` WHERE `id` = " . $val['aid']);
                    } else {
                        $sql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $dbtab . "` WHERE `id` = " . $val['aid']);
                    }
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {
                        $title = $ret[0]['title'];

                        $param = array(
                            "service"     => $val['module'],
                            "template"    => $val['module'] == 'circle' ? 'blog_detail' : 'detail',
                            "id"      => $val['aid']
                        );
                        $url = getUrlPath($param);
                    }
                    $list[$key]['title'] = $title;
                    $list[$key]['url'] = $url;


                    if ($val['reward_userid'] != -1) {
                        $userinfo = $userLogin->getMemberInfo($val['reward_userid']);
                        $list[$key]['userinfo'] = $userinfo;
                        $nickname = !is_array($userinfo) ? $langData['siteConfig'][21][65] : $userinfo['nickname'];
                    }

                    $list[$key]['amount']   = sprintf('%.2f', $val['amount']);
                    $list[$key]['date']     = date("Y-m-d H:i:s", $val['date']);
                    $modulename = '';

                    switch ($val['module']) {
                        case 'article':
                            $modulename = getModuleTitle(array('name' => 'article'));  //信息资讯
                            break;
                        case 'circle':
                            $modulename = getModuleTitle(array('name' => 'circle'));  //圈子动态
                            break;
                        case 'tieba':
                            $modulename = getModuleTitle(array('name' => 'tieba'));  //贴吧社区
                            break;
                        case 'chat':
                            $modulename = '在线聊天';
                            break;
                        case 'dating':
                            $modulename = getModuleTitle(array('name' => 'dating'));  //互动交友
                            break;
                        default:
                            $modulename = '';

                            break;
                    }
                    $list[$key]['module']   =  $modulename;
                } elseif ($val['rewardtype'] == 'live') {
                    $list[$key]['url']     = $liveurl;
                    $list[$key]['id']      = (int)$val['aid'];
                    //                    $list[$key]['num']     = $val['num'];
                    //                    $list[$key]['gift_id'] = $val['gift_id'];

                    //用户信息
                    $userinfo = $userLogin->getMemberInfo($val['reward_userid']);
                    $nickname = !is_array($userinfo) ? $langData['siteConfig'][21][65] : $userinfo['nickname'];
                    //                    $list[$key]['userinfo'] = $userinfo;

                    //礼物信息
                    $sql_ = $dsql->SetQuery("SELECT `gift_name`, `gift_litpic` FROM `#@__live_gift` WHERE `id` = {$val['gift_id']}");
                    $ret_ = $dsql->dsqlOper($sql_, "results");
                    //                    $list[$key]['gift_name']   = $ret_[0]['gift_name'];


                    if ($val['gift_id'] > 0) {
                        $list[$key]['type'] = 1;
                        $title = "直播:" . $nickname . "在" . $livetitle . "中送了" . $val['num'] . "个" . $ret_[0]['gift_name'];
                        $list[$key]['title'] = $title;
                    } else {
                        $list[$key]['type'] = 0;
                        $title = "直播:" . $nickname . "在" . $livetitle . "打赏了" . sprintf('%.2f', $val['amount']) . "元";
                        $list[$key]['title'] = $title;
                    }
                    //佣金
                    if ($val['settle'] > 0) {
                        $list[$key]['amount'] = sprintf('%.2f', $val['settle']);
                        $list[$key]['fee'] = sprintf('%.2f', ($val['settle'] / $val['amount'] * 100)) . '%';
                    } else {
                        $liveFee = 100 - $cfg_liveFee;
                        $list[$key]['amount'] = sprintf('%.2f', $val['amount'] * $liveFee / 100);
                        $list[$key]['fee'] = $liveFee . '%';
                    }
                    $list[$key]['module']   = getModuleTitle(array('name' => 'live'));
                } else {
                    $list[$key]['id']      = (int)$val['aid'];
                    $list[$key]['url']     = $liveurl;
                    $userinfo = $userLogin->getMemberInfo($val['reward_userid']);
                    $nickname = !is_array($userinfo) ? $langData['siteConfig'][21][65] : $userinfo['nickname'];
                    $list[$key]['type'] = 0;
                    $title = "直播:" . $livetitle . '中获得红包';
                    $list[$key]['title'] = $title;
                    $list[$key]['amount'] = sprintf('%.2f', $val['amount']);
                    $list[$key]['module']   = getModuleTitle(array('name' => 'live'));
                }
                $list[$key]['reward_userid'] = (int)$val['reward_userid'];
                $list[$key]['user'] = $nickname;
                $list[$key]['date'] = date("Y-m-d H:i:s", $val['date']);
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 登录记录
     * @return array
     */
    public function loginrecord()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid = $userLogin->getMemberID();

        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_login` WHERE `userid` = " . $uid . " ORDER BY `logintime` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['time'] = date("Y-m-d H:i:s", $val['logintime']);
                $ip = explode(':', $val['loginip']);
                $list[$key]['ip']   = $ip[0];
                $list[$key]['addr'] = $val['ipaddr'];
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 自定义封面图片列表
     * @return array
     */
    public function customCoverBg()
    {
        global $dsql;
        global $userLogin;
        $pageinfo = $typeList = $list = array();
        $loadtype = $typeid = $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $loadtype = $this->param['loadtype'];
                $typeid   = $this->param['typeid'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $where = "";
        if (!empty($typeid)) {
            if ($typeid == "rec") {
                $where = " AND `rec` = 1";
            } else {
                $where = " AND `typeid` = $typeid";
            }
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_coverbg` WHERE 1 = 1" . $where . " ORDER BY `id` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");


        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']     = $val['id'];
                $list[$key]['title']  = $val['title'];
                $list[$key]['litpic'] = getFilePath($val['litpic']);
                $list[$key]['big']    = getFilePath($val['big']);
            }
        }

        if ($loadtype) {
            $typeList = $dsql->getTypeList(0, "member_coverbg_type");
        }

        return array("pageInfo" => $pageinfo, "typeList" => $typeList, "list" => $list);
    }


    //更新自定义封面图片
    public function updateCoverBg()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $return = array();
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id             = $this->param['id'];
        $type           = $this->param['type'];
        $mtempbgurl     = $this->param['mtempbgurl'];
        $set  = "";
        if ($type == "pc") {

            $set = " `pctempbg` = '" . $id . "'";
            if (empty($id)) return array("state" => 200, "info" => $langData['siteConfig'][21][66]);   //请选择要设置的图片！


        } elseif ($type == "m") {
            $set = " `mtempbgurl` = '" . $mtempbgurl . "'";
            if (empty($mtempbgurl)) return array("state" => 200, "info" => $langData['siteConfig'][21][66]);   //请选择要设置的图片！

        } else {
            $set =  " `tempbg` = '" . $id . "'";
            if (empty($id)) return array("state" => 200, "info" => $langData['siteConfig'][21][66]);   //请选择要设置的图片！
        }

        $archives = $dsql->SetQuery("UPDATE `#@__member` SET " . $set . "  WHERE `id` = '$uid'");
        $dsql->dsqlOper($archives, "update");
        return "ok";
    }


    /**
     * 收货地址
     * @return array
     */
    public function address()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $list = array();

        $uid = $userLogin->getMemberID();
        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_address` WHERE `uid` = " . $uid . " ORDER BY `default` DESC, `id` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        $pageinfo = array("totalCount" => $totalCount);

        $results = $dsql->dsqlOper($archives . $where, "results");

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']      = $val['id'];
                $list[$key]['addrid']  = $val['addrid'];
                $list[$key]['addrids'] = "";

                if ($val['addrid'] == 0) {
                    $list[$key]['addrid']  = $langData['siteConfig'][21][67];   //未知
                } else {
                    $addrName = getParentArr("site_area", $val['addrid']);
                    global $data;
                    $data = "";
                    $addrNameArr = array_reverse(parent_foreach($addrName, "typename"));
                    $list[$key]['addrname']  = join(" ", $addrNameArr);

                    global $data;
                    $data = "";
                    $addrIdArr = array_reverse(parent_foreach($addrName, "id"));
                    $list[$key]['addrids']  = join(" ", $addrIdArr);
                }

                $list[$key]['address']  = $val['address'];
                $list[$key]['person']   = $val['person'];
                $list[$key]['areaCode'] = $val['areaCode'];
                $list[$key]['mobile']   = $val['mobile'];
                $list[$key]['tel']      = $val['tel'];
                $list[$key]['lng']      = $val['lng'];
                $list[$key]['lat']      = $val['lat'];
                $list[$key]['lnglat']   = $val['lng'] . ',' . $val['lat'];
                $list[$key]['default']  = $val['default'];
            }
        }

        // array_multisort(array_column($list, 'default'), SORT_DESC, $list);

        return array("pageInfo" => $pageinfo, "list" => $list);
    }



    /**
     * 添加收货地址
     * @return array
     */
    public function addressAdd()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $uid = $userLogin->getMemberID();
        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id      = (int)$this->param['id'];
        $addrid  = (int)$this->param['addrid'];
        $address = $this->param['address'];
        $person  = $this->param['person'];
        $areaCode = (int)$this->param['areaCode'];
        $mobile  = $this->param['mobile'];
        $tel     = $this->param['tel'];
        $lnglat  = $this->param['lnglat'];
        $default = (int)$this->param['default'];
        $module = $this->param['module'];
        if (!empty($lnglat)) {
            $lnglat = explode(",", $lnglat);
            $lng = $lnglat[0];
            $lat = $lnglat[1];
            $where = ", `lng` = '$lng', `lat` = '$lat'";
        }elseif(isMobile() && empty($lnglat)){

            if(!$module){
                return array("state" => 200, "info" => "请选择所在地区的定位！");
            }
            
        }

        if (empty($addrid)) return array("state" => 200, "info" => $langData['siteConfig'][21][68]);  //请选择所在区域！
        if (empty($address)) return array("state" => 200, "info" => $langData['siteConfig'][21][69]);  //请输入详细地址！
        if (empty($person)) return array("state" => 200, "info" => $langData['siteConfig'][21][70]);  //请输入收货人姓名！
        if (empty($mobile) && empty($tel)) return array("state" => 200, "info" => $langData['siteConfig'][21][71]);  //手机号码和固定电话至少输入一项

        //验证手机号码格式
        if($mobile && $areaCode == 86){
            preg_match('/0?(13|14|15|16|17|18|19)[0-9]{9}$/', $mobile, $matchPhone);
            if (!$matchPhone) {
                return array("state" => 200, "info" => '手机号码格式错误！');
            }
        }

        //判断经纬度，是否真正属于该城市，google地图不做判断
        global $cfg_map;
        if (!empty($lnglat) && $cfg_map != 1) {
            $siteConfigHandels = new handlers("siteConfig", "getPublicParentInfo");
            $siteConfig = $siteConfigHandels->getHandle(array('tab' => 'site_area', 'id' => $addrid));
            $siteConfigHandels2 = new handlers("siteConfig", "getLocationByGeocoding");
            $siteConfig2 = $siteConfigHandels2->getHandle(array('location' => $lat . "," . $lng));
            if ($siteConfig['state'] == 100 && $siteConfig2['state'] == 100) {

                $addrCity0 = $siteConfig['info']['names'][0];  //取得addrid所在的省份(直辖市的情况)
                $addrCity1 = $siteConfig['info']['names'][1];  //取得addrid所在的城市
                $latlngName = $siteConfig2['info']['name'];  //坐标的名称，国外地址一般没有这个名称，如果为空，则不判断
                $latlngCity = $siteConfig2['info']['city'];
                if ($latlngName != '' && strstr($addrCity0, $latlngCity) === false && strstr($latlngCity, $addrCity0) === false && strstr($addrCity1, $latlngCity) === false && strstr($latlngCity, $addrCity1) === false) {
                    return array("state" => 200, "info" => "地图位置与所选区域不在一个城市，请确认后重试！");
                }
            }
        }

        $address = cn_substrR($address, 100);
        $person  = cn_substrR($person, 25);
        $mobile  = !empty($mobile) ? cn_substrR($mobile, 11) : "";
        $tel     = !empty($tel) ? cn_substrR($tel, 100) : "";

        if ($default == 1) {
            $archives = $dsql->SetQuery("UPDATE `#@__member_address` SET `default` = 0 WHERE  `uid` = '$uid' AND `id` != " . $id);
            $results  = $dsql->dsqlOper($archives, "update");
        }
        if (empty($id)) {
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_address` (`uid`, `addrid`, `address`, `person`, `areaCode`, `mobile`, `tel`, `lng`, `lat`,`default`) VALUES ('$uid', '$addrid', '$address', '$person', '$areaCode', '$mobile', '$tel', '$lng', '$lat','$default')");
            $return = $dsql->dsqlOper($archives, "lastid");
            if (is_numeric($return)) {

                //记录用户行为日志
                memberLog($uid, 'member', 'address', $return, 'insert', '添加收货地址(' . $return . '=>' . $person . ')', '', $archives);

                return $return;
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][72]);  //操作失败，请重试！
            }
        } else {
            $archives = $dsql->SetQuery("UPDATE `#@__member_address` SET `addrid` = '$addrid', `address` = '$address', `person` = '$person', `areaCode` = '$areaCode', `mobile` = '$mobile', `tel` = '$tel',`default` = '$default' $where WHERE `uid` = '$uid' AND `id` = " . $id);
            $return = $dsql->dsqlOper($archives, "update");
            //            if($return == "ok"){
            //                return '操作成功！';
            //            }else{
            //                return array("state" => 200, "info" => $langData['siteConfig'][21][72]);  //操作失败，请重试！
            //            }

            //            $return = $dsql->dsqlOper($archives, "lastid");
            if ($return) {

                //记录用户行为日志
                memberLog($uid, 'member', 'address', $id, 'update', '更新收货地址(' . $id . '=>' . $person . ')', '', $archives);

                return $id;
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][72]);  //操作失败，请重试！
            }
        }
    }


    //删除收货地址
    public function addressDel()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $return = array();
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id = $this->param['id'];
        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][26]); //请选择要删除的信息！

        $archives = $dsql->SetQuery("DELETE FROM `#@__member_address` WHERE `uid` = '$uid' AND `id` = '$id'");
        $return = $dsql->dsqlOper($archives, "update");
        if ($return == "ok") {

            //记录用户行为日志
            memberLog($uid, 'member', 'address', $id, 'delete', '删除收货地址(' . $id . ')', '', $archives);

            return "ok";
        } else {
            array("state" => 200, "info" => self::$langData['siteConfig'][33][27]); //删除失败，请重试！
        }
    }


    //解绑社交帐号
    public function unbindConnect()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $return = array();
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id = htmlspecialchars(RemoveXSS($_POST['id']));
        if (empty($id)) return array("state" => 200, "info" => $langData['siteConfig'][21][73]);   //请选择要解绑的社交帐号！

        $wechat_openid = $id == "wechat" ? ", `wechat_openid` = ''" : "";

        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `" . $id . "_conn` = '' " . $wechat_openid . " WHERE `id` = '$uid'");
        $return = $dsql->dsqlOper($archives, "update");
        if ($return == "ok") {

            //记录用户行为日志
            memberLog($uid, 'member', '', 0, 'update', '解绑社交账号(' . $id . ')', '', $archives);

            return "ok";
        } else {
            array("state" => 200, "info" => $langData['siteConfig'][21][72]);   //操作失败，请重试！
        }
    }



    /**
     * 添加、删除、判断收藏信息
     * @return array
     */
    public function collect()
    {
        global $dsql;
        global $userLogin;

        $module = $this->param['module'];
        $temp   = $this->param['temp'];
        $id     = $this->param['id'];
        $type   = $this->param['type'];
        $check  = $this->param['check'];

        $userid = $userLogin->getMemberID();

        if (!empty($module) && !empty($temp) && !empty($id) && $userid > -1) {

            //多个ID
            if (strstr($id, ",")) {
                $id = explode(",", $id);

                foreach ($id as $k => $v) {

                    //新增收藏，先验证是否已经收藏过
                    if ($type == "add") {
                        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_collect` WHERE `module` = '$module' AND `action` = '$temp' AND `aid` = '$v' AND `userid` = '$userid'");


                        $return = $dsql->dsqlOper($archives, "totalCount");

                        if ($return == 0) {
                            $archives = $dsql->SetQuery("INSERT INTO `#@__member_collect` (`module`, `action`, `aid`, `userid`, `pubdate`) VALUES ('$module', '$temp', '$v', '$userid', " . GetMkTime(time()) . ")");
                            $cid = $dsql->dsqlOper($archives, "lastid");

                            //记录用户行为日志
                            memberLog($userid, 'member', 'collect', 0, 'insert', '添加收藏信息(' . $cid . '=>' . $module . '=>' . $temp . '=>' . $v . ')', '', $archives);
                        }

                        //删除收藏
                    } elseif ($type == "del") {
                        $archives = $dsql->SetQuery("DELETE FROM `#@__member_collect` WHERE `module` = '$module' AND `action` = '$temp' AND `aid` = '$v' AND `userid` = '$userid'");
                        $dsql->dsqlOper($archives, "update");

                        //记录用户行为日志
                        memberLog($userid, 'member', 'collect', 0, 'delete', '删除收藏信息(' . $module . '=>' . $temp . '=>' . $v . ')', '', $archives);
                    }
                }
                return "ok";
            } else {
                //新增收藏，先验证是否已经收藏过
                if ($type == "add") {
                    $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_collect` WHERE `module` = '$module' AND `action` = '$temp' AND `aid` = '$id' AND `userid` = '$userid'");
                    $return = $dsql->dsqlOper($archives, "totalCount");

                    if ($return == 0) {
                        if ($check == 1) {
                            return "no";
                        }
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_collect` (`module`, `action`, `aid`, `userid`, `pubdate`) VALUES ('$module', '$temp', '$id', '$userid', " . GetMkTime(time()) . ")");
                        $cid = $dsql->dsqlOper($archives, "lastid");

                        //记录用户行为日志
                        memberLog($userid, 'member', 'collect', 0, 'insert', '添加收藏信息(' . $cid . '=>' . $module . '=>' . $temp . '=>' . $id . ')', '', $archives);
                    } else {
                        return "has";
                    }
                    return "ok";

                    //删除收藏
                } elseif ($type == "del") {
                    $archives = $dsql->SetQuery("DELETE FROM `#@__member_collect` WHERE `module` = '$module' AND `action` = '$temp' AND `aid` = '$id' AND `userid` = '$userid'");
                    $dsql->dsqlOper($archives, "update");

                    //记录用户行为日志
                    memberLog($userid, 'member', 'collect', 0, 'delete', '删除收藏信息(' . $module . '=>' . $temp . '=>' . $id . ')', '', $archives);

                    return "ok";
                }
            }
        }
    }


    //收藏列表
    public function collectList()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $module = $temp = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $module   = $this->param['module'];
                $contype  = $this->param['contype'];
                $type     = $this->param['type'];
                $temp     = $this->param['temp'];  // template、action
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        if ($contype != '') {
            if ($contype == 1) {
                $where .= " AND c.`action` = 'detail' AND c.`module` not in ('awardlegou','car','sfcar','tieba','info')";
            } elseif ($contype == 2) {
                $where .= " AND c.`action` !='shop' AND c.`action` !='business' AND `action` !='store-detail' AND c.`action` !='store'";
            } else {
                $where .= " AND (c.`action` like '%store%' or c.`action` like '%shop%' or c.`action` like '%business%')";
            }
        }
        $leftsql = '';

        if ($type != '') {
            if ($module == 'info') {
                $where .= " AND  find_in_set(c.`action`,'$type')";
            } elseif ($module == 'sfcar') {

                /*顺风车 我是车主or我要用车*/

                $leftsql = " LEFT JOIN `#@__sfcar_list` sl ON c.`aid` = sl.`id` ";

                if ($type == '1') {
                    $where .= " AND sl.`type` = 0";
                } else {
                    $where .= " AND sl.`type` = 1";
                }
            } elseif ($module == 'marry') {

                $where .= " AND c.`action` like '%$type%'";
            } else {

                $where .= " AND c.`action` = '$type'";
            }
        }

        $uid = $userLogin->getMemberID();
        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        if (!empty($module)) {
            $where .= " AND c.`module` = '$module'";
        }

        if (!empty($temp)) {
            $where .= " AND c.`action` = '$temp'";
        }
        $where .= " AND c.`module` IN(SELECT `name` FROM `#@__site_module`)";
        $archives = $dsql->SetQuery("SELECT c.`id`, c.`aid`, c.`module`, c.`action`, c.`pubdate` FROM `#@__member_collect` c $leftsql WHERE c.`userid` = " . $uid . $where);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $results = $dsql->dsqlOper($archives . " ORDER BY `id` DESC LIMIT $atpage, $pageSize", "results");
        if ($results) {

            global $handler;
            $handler = true;

            foreach ($results as $key => $val) {

                $module = $val['module'];
                $action = $val['action'];

                $list[$key]['id']         = $val['id'];
                $list[$key]['module']     = $val['module'];
                $list[$key]['modulename'] = getModuleTitle(array('name' => $val['module']));
                $list[$key]['aid'] = $val['aid'];

                $collecttype = 0; //商品
                if (strpos($val['action'], 'store') !== false) {
                    $collecttype = 1; //店铺
                }
                if ($module == 'job' && $action == 'job') {
                    $collecttype = 1; //职位
                }
                if ($module == 'job' && $action == 'company') {
                    $collecttype = 2; //公司
                }
                if ($module == 'job' && $action == 'resume') {
                    $collecttype = 3; //简历
                }

                if ($module == 'zhaopin' && $action == 'post') {
                    $collecttype = 1; //城市招聘 职位
                }
                if ($module == 'zhaopin' && $action == 'resume') {
                    $collecttype = 3; //城市招聘 简历
                }

                if ($module == 'homemaking' && $action == 'nanny-detail') {
                    $collecttype = 2; //服务人员
                }

                /*旅游单独判断*/
                if ($module == 'travel') {
                    if ($action == 'hotel-detail') {
                        $collecttype = 1; /*酒店*/
                    } elseif ($action == 'agency-detail') {
                        $collecttype = 2;/*游玩*/
                    } elseif ($action == 'strategy-detail') {
                        $collecttype = 3;/*旅游攻略*/
                    } elseif ($action == 'rentcar-detail') {
                        $collecttype = 4;/*租车*/
                    } elseif ($action == 'video-detail') {
                        $collecttype = 5;/*旅游视频*/
                    } elseif ($action == 'visa-detail') {
                        $collecttype = 6;/*旅游签证*/
                    } else {
                        $collecttype = 0;/*店铺*/
                    }
                }
                $table = $str = '';
                if ($module == 'marry') {
                    if (strpos($action, "planmeal-detail") !== false) {
                        $table = '#@__marry_planmeal';
                        $str = 'type';
                        $collecttype = 0; //套餐
                    } elseif (strpos($action, "store-detail") !== false) {
                        $collecttype = 1;/*商家*/
                    } elseif (strpos($action, "hotel-detail") !== false) {
                        $collecttype = 2;/*酒店*/
                    } elseif (strpos($action, 'plancase-detail') !== false) {
                        $table = '#@__marry_plancase';
                        $str = 'typeid';
                        $collecttype = 3;/*案例*/
                    }

                    if ($table && $str) {

                        $archives = $dsql->SetQuery("SELECT `" . $str . "` FROM `" . $table . "` WHERE `id` = " . $val['aid']);
                        $typeresult = $dsql->dsqlOper($archives, "results");

                        $list[$key]['typeid'] = $typeresult[0]['type'];
                    }
                }

                $list[$key]['pubdate'] = date("Y-m-d H:i:s", $val['pubdate']);
                //主要用于获取信息URL，具体值以模板名称、模块的class文件、URL规则为主
                $act = $action;
                //                $act = $act == "loupan_detail" ? "loupan-detail" : $act;
                //                $act = $act == "sale_detail" ? "sale-detail" : $act;
                //                $act = $act == "zu_detail" ? "zu-detail" : $act;
                //                $act = $act == "xzl_detail" ? "xzl-detail" : $act;
                //                $act = $act == "sp_detail" ? "sp-detail" : $act;
                //                $act = $act == "cf_detail" ? "cf-detail" : $act;


                $param = array(
                    "service"     => $module,
                    "template"    => $act,
                    "id"          => $val['aid']
                );

                //主要用于读取信息详细信息，具体值以模块的class文件为主
                $act = $action;
                if ($module == 'house') {
                    $template = '';
                    switch ($act) {
                        case 'loupan_detail':
                            $act = 'loupanDetail';
                            $collecttype = 0; /*楼盘*/
                            $template = 'loupan-detail';
                            break;
                        case 'sale_detail':
                            $act = 'saleDetail';
                            $collecttype = 1;/*二手房*/
                            $template = 'sale-detail';
                            break;
                        case 'zu_detail':
                            $act = 'zuDetail';
                            $collecttype = 2;/*租房*/
                            $template = 'zu-detail';
                            break;
                        case 'xzl_detail':
                            $act = 'xzlDetail';/*写字楼*/
                            $template = 'xzl-detail';
                            $collecttype = 3;
                            break;
                        case 'sp_detail':
                            $act = 'spDetail';/*商铺*/
                            $template = 'sp-detail';
                            $collecttype = 4;
                            break;
                        case 'cf_detail':
                            $act = 'cfDetail';/*厂房*/
                            $template = 'cf-detail';
                            $collecttype = 5;
                            break;
                        case 'community_detail':
                            $act = 'communityDetail';/*小区*/
                            $template = 'community-detail';
                            $collecttype = 6;
                            break;
                        case 'cw_detail':
                            $act = 'cwDetail';/*车位*/
                            $template = 'cw-detail';
                            $collecttype = 7;
                            break;
                    }

                    $param = array(
                        "service"     => $module,
                        "template"    => $template,
                        "id"          => $val['aid']
                    );
                }

                if ($module == 'info') {
                    $template = 'detail';
                    if ($act == 'shop' || $act == 'business') {
                        $act = 'storeDetail';
                        $template = 'business';
                        $collecttype = 1;
                    }
                    $param = array(
                        "service"     => $module,
                        "template"    => $template,
                        "id"          => $val['aid']
                    );
                }

                $list[$key]['collecttype'] = $collecttype;
                //                $act = $act == "sale_detail" ? "saleDetail" : $act;
                //                $act = $act == "zu_detail" ? "zuDetail" : $act;
                //                $act = $act == "xzl_detail" ? "xzlDetail" : $act;
                //                $act = $act == "sp_detail" ? "spDetail" : $act;
                //                $act = $act == "cf_detail" ? "cfDetail" : $act;
                $act = $act == "store-detail" ? "storeDetail" : $act;
                $act = $act == "case-detail" ? "diaryDetail" : $act;
                $act = $act == "company-detail" ? "storeDetail" : $act;
                $act = $act == "designer-detail" ? "teamDetail" : $act;
                $act = $module == "waimai" ? "storeDetail" : $act;
                $act = $act == "nanny-detail" ? "nannyDetail" : $act;
                //婚嫁plan-detail
                $act = $act == "plan-detail" ? "storeDetail" : $act;
                $act = $act == "hotelfield-detail" ? "hotelfieldDetail" : $act;
                $act = $act == "hotel-detail" ? "hotelDetail" : $act;
                $act = $act == "plancase-detail" ? "plancaseDetail" : $act;
                $act = $act == "planmeal-detail" ? "planmealDetail" : $act;
                $act = $act == "rental-detail" ? "rentalDetail" : $act;
                $act = $act == "host-detail" ? "hostDetail" : $act;
                $act =  $module == "marry" && $act == "detail" ? "storeDetail" : $act;
                //对婚嫁公司进行处理
                if ($module == "marry" && strpos($act, "store-detail") !== false) {
                    $act = "storeDetail";
                } elseif ($module == "marry" && strpos($act, "planmeal-detail") !== false) {
                    $act = "planmealDetail";
                }
                //旅游
                if ($module == "travel" && $act != "store-detail") {
                    $actArr = explode('-', $act);
                    $act = $actArr[0] . $actArr[1];
                }
                //教育
                if ($module == "education" && $act != "store-detail" && $act != "detail") {
                    $actArr = explode('-', $act);
                    $act = $actArr[0] . $actArr[1];
                }
                //商家
                if ($module == 'business' && $action == 'detail') {
                    $act = 'storeDetail';
                }
                //乐购
                if ($module == 'awardlegou' && $action == 'detail') {
                    $act = 'proDetail';
                }
                /*招聘求职*/
                if ($module == 'job' && $action == "resume") {
                    $act = 'resumeDetail';
                }

                /*城市招聘 职位详情*/
                if ($module == 'zhaopin' && $action == "post") {
                    $act = 'postDetail';
                }
                /*城市招聘 简历详情*/
                if ($module == 'zhaopin' && $action == "resume") {
                    $act = 'resumeDetail';
                }

                /*婚嫁*/
                if ($module == 'marry' && $act == 'hotelDetail') {
                    $act = 'storeDetail';
                    $param = array(
                        "service"     => $module,
                        "template"    => 'hotel_detail',
                        "id"          => $val['aid']
                    );
                }

                $handels = new handlers($module, $act);
                $detail  = $handels->getHandle(array('id' => $val['aid'], 'typeid' => $list[$key]['typeid'], 'gettype' => 1));

                //                if($module == 'job' && $action == 'job'){
                //                    var_dump($detail);die;
                //                }
                if (is_array($detail) && $detail['state'] == 100) {
                    $detail  = $detail['info'];
                    if (is_array($detail)) {
                        $list[$key]['detail'] = $detail;

                        //装修公司
                        if ($action == "company-detail") {
                            $list[$key]['detail']['title'] = $detail['company'];
                        }

                        //设计师
                        if ($action == "designer-detail") {
                            $list[$key]['detail']['title'] = $detail['name'];
                        }

                        //简历
                        if ($action == "resume") {
                            $list[$key]['detail']['title'] = $detail['name'];
                        }

                        //外卖
                        if ($action == "waimai") {
                            $list[$key]['detail']['title'] = $detail['shopname'];
                        }

                        //婚嫁 套餐
                        if ($module == "marry" && $action == "planmeal-detail") {
                            $param = array(
                                "service"     => $module,
                                "template"    => $act,
                                "id"          => $detail['id'],
                                "typeid"      => $detail['type']
                            );
                        } elseif ($module == "marry" && strpos($action, "store-detail") !== false) {
                            $actionArr = explode("|", $action);
                            $param = array(
                                "service"     => $module,
                                "template"    => "store-detail",
                                "id"          => $detail['id'],
                                "istype"      => $actionArr[1],
                                "typeid"      => $actionArr[2],
                            );
                        } elseif ($module == "marry" && strpos($action, "planmeal-detail") !== false) {
                            $actionArr = explode("|", $action);
                            $param = array(
                                "service"     => $module,
                                "template"    => "planmeal-detail",
                                "id"          => $detail['id'],
                                "typeid"      => $actionArr[1],
                                "istype"      => $actionArr[2],
                                "businessid"  => $actionArr[3]
                            );
                        }

                        if (!$detail['url']) {
                            $list[$key]['detail']['url'] = getUrlPath($param);
                        }
                    }
                } else {
                    $handels = new handlers($module, $action . "Detail");
                    $detail  = $handels->getHandle(array('id' => $val['aid'], 'gettype' => 1));
                    if ($module == "job" && $action == "job") { //新版招聘
                        $jobClass = new job(array("id" => $val['aid']));
                        $jobClass->right = true;
                        $res = $jobClass->postDetailAll();
                        $jobClass->right = false;
                        if ($res['state'] != 200) {
                            $list[$key]['detail'] = $res;
                        }
                    }

                    if (is_array($detail) && $detail['state'] == 100) {
                        $detail  = $detail['info'];
                        if (is_array($detail)) {
                            $list[$key]['detail'] = $detail;
                            if ($module == "job" && $action == "company") {
                                if ($detail['pcount'] > 0) {
                                    $sql = $dsql::SetQuery("select `title` from `#@__job_post` where `company`={$detail['id']} and `off`=0 and `del`=0 limit 1");
                                    $list[$key]['detail']['first_ptitle'] = $dsql->getOne($sql);
                                } else {
                                    $list[$key]['detail']['first_ptitle'] = "";
                                }
                            }

                            //装修公司
                            if ($action == "company-detail") {
                                $list[$key]['detail']['title'] = $detail['company'];
                            }

                            //设计师
                            if ($action == "designer-detail") {
                                $list[$key]['detail']['title'] = $detail['name'];
                            }

                            //简历
                            if ($action == "resume") {
                                $list[$key]['detail']['title'] = $detail['name'];
                            }

                            //外卖
                            if ($action == "waimai") {
                                $list[$key]['detail']['title'] = $detail['shopname'];
                            }

                            if (!$detail['url']) {
                                $list[$key]['detail']['url'] = getUrlPath($param);
                            }
                        }
                    }
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    //删除收藏
    public function delCollect()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $id = $this->param['id'];


        if (empty($id)) return array("state" => 200, "info" => '没有要删除的信息！');

        $archives = $dsql->SetQuery("DELETE FROM `#@__member_collect` WHERE `id` in (" . $id . ") AND `userid` = '$uid'");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($uid, 'member', 'collect', 0, 'delete', '删除收藏信息(' . $id . ')', '', $archives);

        return self::$langData['siteConfig'][21][136]; //"删除成功！";

    }



    public function collectCount()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $list = array();

        $uid = $userLogin->getMemberID();
        if (!is_numeric($uid)) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $sql =  $dsql->SetQuery("SELECT COUNT(`id`) number ,`module` FROM `#@__member_collect` WHERE `userid`= '$uid' GROUP BY `module`");

        $res = $dsql->dsqlOper($sql, "results");

        $allnumber = 0;
        if ($res && is_array($res)) {

            foreach ($res as $k => $v) {
                if ($v['module'] == 'business' || $v['module'] == 'awardlegou' || $v['module'] == 'website') continue;
                $list[$k]['number']     = $v['number'];
                $list[$k]['module']     = $v['module'];
                $list[$k]['modulename'] = getModuleTitle(array('name' => $v['module']));

                $allnumber += $v['number'];
            }
        }

        return array('allnumber' => $allnumber, 'list' => $list);
    }


    /**
     * 充值
     * @return array
     */
    public function deposit()
    {

        global $dsql;
        $param =  $this->param;
        $param_ = $param;
        $amount = $param['amount'];
        $ordernum = $param['ordernum'];
        $paytype = $param['paytype'];
        $final = (int)$param['final']; // 最终支付
        
        global $cfg_ucenterLinks;
        $cfg_ucenterLinks = explode(',', $cfg_ucenterLinks);
        if(!in_array('deposit', $cfg_ucenterLinks)) die('系统未开启充值功能！');

        global $userLogin;
        global $langData;

        if ($userLogin->getMemberID() == -1) die($langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if ($final && empty($paytype)) {
            die($langData['siteConfig'][21][75]);   //请选择支付方式！
        }

        $createtype = 1;

        if ($ordernum) {

            $createtype = 0;

            $paysql = $dsql->SetQuery("SELECT `amount`,`pubdate`  FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 0");

            $payres = $dsql->dsqlOper($paysql, "results");

            if (is_array($payres) && empty($payres)) die("支付错误！");

            $amount = $payres[0]['amount'];

            $timeout = $payres[0]['pubdate'] + 3600;
        } else {

            $timeout = GetMkTime(time()) + 3600;

            $ordernum = $ordernum ? $ordernum : create_ordernum();
        }

        if (!$final && $amount <= 0) {
            die($langData['siteConfig'][21][74]);   //充值金额必须为整数或小数，小数点后不超过2位。
        }

        // $ordernum = create_ordernum();

        //        if($isMobile && empty($final)){
        //            $param_['ordernum'] = $ordernum;
        //            $param_['ordertype'] = 'deposit';
        //            $param = array(
        //                "service" => "member",
        //                "type" => "user",
        //                "template" => "pay",
        //                "param" => http_build_query($param_) . "&currentPageOpen=1"
        //            );
        //            header("location:".getUrlPath($param));
        //            die;
        //        }


        $order   = createPayForm("member", $ordernum, $amount, $paytype, $langData['siteConfig'][21][76], array("type" => "deposit"), $createtype);   //账户充值

        if ($createtype == 1 && is_array($order)) {

            $order['timeout'] = $timeout;
        }

        return $order;
    }



    /**
     * 积分充值
     * @return array
     */
    public function recharge()
    {

        global $cfg_pointName;

        global $dsql;

        $param =  $this->param;
        $param_ = $param;
        $amount = $param['amount'];
        $ordernum = $param['ordernum'];
        $paytype = $param['paytype'];
        $final = (int)$param['final']; // 最终支付

        $isMobile = isMobile();

        global $userLogin;
        global $langData;

        global $cfg_pointState;
        $pointState = (int)$cfg_pointState;
        if(!$pointState) die('系统未开启积分功能！');

        if ($userLogin->getMemberID() == -1) die($langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!$ordernum && !$final && $amount <= 0) {
            die($langData['siteConfig'][21][74]);   //充值金额必须为整数或小数，小数点后不超过2位。
        }
        if ($final && empty($paytype)) {
            die($langData['siteConfig'][21][75]);   //请选择支付方式！
        }

        // $ordernum = $ordernum ? $ordernum : create_ordernum();
        $createtype = 1;

        if ($ordernum) {

            $createtype = 0;

            $paysql = $dsql->SetQuery("SELECT `amount`,`pubdate` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 0");

            $payres = $dsql->dsqlOper($paysql, "results");

            if (is_array($payres) && empty($payres)) die("支付错误！");

            $amount  = $payres[0]['amount'];

            $timeout = $payres[0]['pubdate'] + 3600;
        } else {

            $timeout = GetMkTime(time()) + 3600;

            $ordernum = $ordernum ? $ordernum : create_ordernum();
        }

        //        if($isMobile && empty($final)){
        //            $param_['ordernum'] = $ordernum;
        //            $param_['ordertype'] = 'recharge';
        //            $param = array(
        //                "service" => "member",
        //                "type" => "user",
        //                "template" => "pay",
        //                "param" => http_build_query($param_) . "&currentPageOpen=1"
        //            );
        //            header("location:".getUrlPath($param));
        //            die;
        //        }

        $order   = createPayForm("member", $ordernum, $amount, $paytype, $cfg_pointName . $langData['siteConfig'][15][0], array("type" => "recharge"), $createtype);   //积分充值

        if ($createtype == 1 && is_array($order)) {

            $order['timeout'] = $timeout;
        }

        return $order;
    }





    /**
     * 升级会员
     * @return array
     */
    public function upgrade()
    {

        $param      =  $this->param;
        $this->param = $param;
        $param_ = $param;
        
        global $cfg_ucenterLinks;
        $cfg_ucenterLinks = explode(',', $cfg_ucenterLinks);
        if(!in_array('vip', $cfg_ucenterLinks)) die('系统未开启VIP会员功能！');

        $amount     = $param['amount'];
        $paytype    = $param['paytype'];
        $balance    = $param['balance'];
        $useBalance = $param['useBalance'];
        $level      = $param['level'];
        $day        = $param['day'];
        $check      = (int)$param['check'];
        $daytype    = $param['daytype'];
        $qr         = $param['qr'];
        $paypwd     = $param['paypwd'];
        $date       = GetMkTime(time());

        $final      = (int)$param['final']; // 最终支付

        $isMobile = isMobile();

        global $userLogin;
        global $dsql;
        global $langData;

        $userid = $userLogin->getMemberID();
        $userid = $param['userid'] ? $param['userid'] : $userid;

        if ($userid == -1) {
            if ($check) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
            } else {
                die($langData['siteConfig'][20][262]);
            }
        }
        if ($amount <= 0) {
            // if($check){
            //     return array("state" => 200, "info" => $langData['siteConfig'][21][77]);   //支付金额必须为整数或小数，小数点后不超过2位。
            // }else{
            //     die($langData['siteConfig'][21][77]);
            // }
        }
        if (empty($paytype) && $check != 1) {
            if ($check) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][75]);   //请选择支付方式！
            } else {
                die($langData['siteConfig'][21][75]);
            }
        }
        if (empty($level) || empty($day) || empty($daytype)) {
            if ($check) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][78]);   //请选择要升级的会员类型！
            } else {
                die($langData['siteConfig'][21][78]);
            }
        }

        // 验证会员当前等级
        $sql = $dsql->SetQuery("SELECT `level` FROM `#@__member` WHERE `id` = $userid");
        $ret = $dsql->dsqlOper($sql, "results");
        $level_ = $ret[0]['level'];

        if ($level_ > $level) {
            if ($check) {
                return array("state" => 200, "info" => "操作失败，您当前的会员等级高于此等级！");
            } else {
                die("操作失败，您当前的会员等级高于此等级！");
            }
        }
        if ($qr == 1 && $useBalance == 1) {
            if (empty($paypwd)) {
                if ($check) {
                    return array('state' => 200, 'info' => '请填写支付密码！');
                } else {
                    die('请填写支付密码！');
                }
            }

            //验证支付密码
            $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
            $results  = $dsql->dsqlOper($archives, "results");
            $res = $results[0];
            $hash = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
            if ($res['paypwd'] != $hash) {
                return array("state" => 200, "info" => "支付密码输入错误，请重试！");
                // if($check){
                //     return array("state" => 200, "info" => "支付密码输入错误，请重试！");
                // }else{
                //     die("支付密码输入错误，请重试！");
                // }
            }
        }

        //验证是否合法
        // $sql = $dsql->SetQuery("SELECT `name`, `cost` FROM `#@__member_level` WHERE `id` = $level");
        // $ret = $dsql->dsqlOper($sql, "results");
        $sql = $dsql->SetQuery("SELECT `name`, `price`, `mintime`, `discount` FROM `#@__member_level` WHERE `id` = $level");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $name = $ret[0]['name'];
            $_day = $price = 0;
            $name     = $ret[0]['name'];
            $price    = $ret[0]['price'];
            $mintime  = $ret[0]['mintime'];
            $discount = $ret[0]['discount'];
            $_day     = 0;

            $dayname = "个月";
            $_daytype = "month";

            // if($price && $mintime){

            if ($day < $mintime) {
                if ($check) {
                    return array('state' => 200, 'info' => $name . '最少充值' . $mintime . '个月');
                } else {
                    die($name . '最少充值' . $mintime . '个月');
                }
            }

            $_day = $day;

            // 总金额
            $price = $price * $day;

            $payprice = $price;
            // if(empty($_day) || empty($_daytype)){
            //     die($langData['siteConfig'][21][79]);   //会员等级类型配置错误，支付提交失败！
            // }

            // 计算折扣
            if ($discount) {
                $discount = unserialize($discount);

                if ($discount) {
                    // 按充值时长排序
                    usort($discount, function ($a, $b) {
                        return ($a['month'] >= $b['month']) ? 0 : 1;
                    });

                    foreach ($discount as $key => $value) {
                        if ($day == $value['month'] && $value['discount'] > 0 && $value['discount'] < 10) {
                            $payprice = $price * $value['discount'] / 10;
                            break;
                        }
                    }
                }
            }

            $ordernum = $param['ordernum'] ? $param['ordernum'] : create_ordernum();

            //保留两位小数，不四舍五入
            $payprice = (float)(sprintf("%.2f",substr(sprintf("%.3f", $payprice), 0, -1)));

            $sql = $dsql->SetQuery("SELECT `id`,`state`,`pubdate` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum'");
            $res = $dsql->dsqlOper($sql, "results");
            $title = $langData['siteConfig'][19][656] . "{$name}{$day}{$dayname}";   //开通
            $param = array("type" => "upgrade", "level" => $level, "name" => $name, "day" => $_day, "daytype" => $_daytype, "title" => $title, "userid" => $userid, "price" => $payprice, "ordernum" => $ordernum);

            $params = serialize($param);
            if ($res) {

                $timeout = $res[0]['pubdate'] + 3600;
                if ($res[0]['state'] == 1) {
                    $urlParam = array(
                        "service" => "member",
                        "type"    => "user"
                    );
                    header("location:" . getUrlPath($urlParam));
                    return "支付成功";
                }
            } else {

                $timeout = $date + 3600;
                $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`, `pubdate`) VALUES ('member', '$ordernum', '$userid', '$params', '$price', '$paytype', 0, $date)");

                $dsql->dsqlOper($archives, "update");
            }


            // 移动端统一使用公共支付页面
            if ($isMobile && empty($final)) {
                $useBalance = 0;
            }
            //余额支付
            if ($useBalance || $price == 0) {
                //查询会员信息
                // $userinfo  = $userLogin->getMemberInfo($userid);
                // $usermoney = $userinfo['money'];

                //如果使用了余额，计算还需要支付多少费用
                // $payprice = $price;
                $useBalance = 0;
                if ($balance <= $payprice) {
                    $useBalance = $balance;
                    $payprice   = $payprice - $balance;
                } else {
                    $useBalance = $payprice;
                    $payprice = 0;
                }
                $useBalance = sprintf('%.2f', $useBalance);

                $payprice = sprintf('%.2f', $payprice);
                $param['price'] = $payprice;
                $param['balance'] = $useBalance;

                //如果余额足够支付，不需要额外支付任何费用，直接升级
                if ($payprice <= 0 && $qr != 1) {

                    $paysql = $dsql->SetQuery("SELECT `body` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum'");

                    $results = $dsql->dsqlOper($paysql, "results");

                    if ($results) {
                        $body = unserialize($results[0]['body']);
                    }

                    $body['balance'] = $useBalance;
                    $body['price']   = 0;
                    $body            = serialize($body);
                    $paylogsql       = $dsql->SetQuery("UPDATE `#@__pay_log` SET `state` = 1,`paytype` = 'money',`amount` = '$useBalance',`body` = '$body' WHERE `ordernum` = '$ordernum'");
                    $dsql->dsqlOper($paylogsql, "update");
                    $this->upgradeSuccess(unserialize($body));

                    $urlParam = array(
                        "service" => "member",
                        "type"    => "user"
                    );
                    $url = getUrlPath($urlParam);

                    //支付成功后跳转页面
                    global $cfg_payReturnType;
                    global $cfg_payReturnUrlPc;
                    global $cfg_payReturnUrlTouch;

                    if($cfg_payReturnType){

                        //移动端自定义跳转链接
                        if(isMobile() && $cfg_payReturnUrlTouch){
                            $url = $cfg_payReturnUrlTouch;
                        }

                        //电脑端自定义跳转链接
                        if(!isMobile() && $cfg_payReturnUrlPc){
                            $url = $cfg_payReturnUrlPc;
                        }
                    }

                    if ($check && !isMobile()) {
                        echo json_encode(array('state' => 100, 'info' => $url));
                        die;
                    } else {
                        echo json_encode(array('state' => 100, 'info' => $url));
                        die;
                    }
                }
                //支付剩余费用
                //                    }else{
                //                        if (!$isMobile && $qr!=1) {
                //                            # code...
                //                            if($final!= 1){
                //
                //                                $param_['ordernum'] = $ordernum;
                //                                $param_['ordertype'] = 'upgrade_filter_user';
                //                                $param_['title'] = $title;
                //                                $param = array(
                //                                    "service" => "member",
                //                                    "type" => "user",
                //                                    "template" => "pay",
                //                                    "param" => http_build_query($param_)
                //                                );
                //                                return getUrlPath($param);
                //                            }else{
                //                                $body = serialize($param);
                //                                $paylogsql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `amount` = '$payprice',`body` = '$body' WHERE `ordernum` = '$ordernum'");
                //                                $dsql->dsqlOper($paylogsql, "update");
                //                                return createPayForm("member", $ordernum, $payprice, $paytype, $title, $param);
                //                            }
                //
                //                        }else{
                //                            $body = serialize($param);
                //                            $paylogsql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `amount` = '$payprice',`body` = '$body' WHERE `ordernum` = '$ordernum'");
                //                            $dsql->dsqlOper($paylogsql, "update");
                //                            return createPayForm("member", $ordernum, $payprice, $paytype, $title, $param);
                //
                //
                //                        }
                //                    }


                //第三方支付
            } else {

                //查询订单支付成功没成功
                if ($isMobile && empty($final)) {
                    //                        $param_['ordernum'] = $ordernum;
                    //                        $param_['ordertype'] = 'upgrade_filter_user';
                    //                        $param = array(
                    //                            "service" => "member",
                    //                            "type" => "user",
                    //                            "template" => "pay",
                    //                            "param" => http_build_query($param_)
                    //                        );
                    //                        return getUrlPath($param);

                    $order   = createPayForm("member", $ordernum, $payprice, $paytype, $title, $param, 1);   //订单支付

                    if(is_array($order)){
                        $order['timeout'] = $timeout;
                    }

                    return $order;
                    // header("location:".getUrlPath($param));
                }

                # code...
                if ($final != 1) {
                    $order   = createPayForm("member", $ordernum, $payprice, $paytype, $title, $param, 1);   //订单支付

                    if(is_array($order)){
                        $order['timeout'] = $timeout;
                    }

                    return $order;
                } else {

                    return createPayForm("member", $ordernum, $payprice, $paytype, $title, $param);
                }
            }
        } else {
            if ($check) {
                return array('state' => 200, 'info' => $langData['siteConfig'][21][82]);
            } else {
                die($langData['siteConfig'][21][82]);   //会员等级类型不存在，请重新选择！
            }
        }
    }


    /**
     * 查询订单状态
     * 付款等待页面，隔时查询待付款的订单状态，如果已经支付成功，则返回成功后要跳转的页面
     *
     */
    public function tradePayResult()
    {
        $param = $this->param;

        if (empty($param)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'

        $order = htmlspecialchars(RemoveXSS($param['order']));

        //如果type == 1，则$order为商品订单号，否则$order为支付订单号
        //如果type == 2，则代表会员充值页面，不需要指定订单号，只需要查询最后一笔ordertype为member的订单状态即可
        $checktype = (int)$param['type'];

        // $ordertype = $param['ordertype'];  //APP端原生支付传过来的订单类型

        //余额充值
        // if($ordertype == 'deposit'){
        //     $checktype = 2;
        // }elseif($ordertype == 'recharge'){
        //     $checktype = 0;
        // }

        $redirect = (int)$param['redirect'];  //是否直接跳转

        if (empty($order) && $checktype != 2) return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'

        global $dsql;
        global $userLogin;
        global $huawei_privatenumber_state;  //隐私号码状态

        $userid = $userLogin->getMemberID();  //当前登录用户ID

        if ($checktype == 1) {
            $archives = $dsql->SetQuery("SELECT `ordernum`, `ordertype`, `body`, `state`, `uid` FROM `#@__pay_log` WHERE `body` = '$order'");
        } elseif ($checktype == 2) {
            $archives = $dsql->SetQuery("SELECT `ordertype`, `body`, `state`, `uid`,`ordernum` FROM `#@__pay_log` WHERE `ordertype` = 'member' ORDER BY `id` DESC LIMIT 0, 1");
        } else {
            $archives = $dsql->SetQuery("SELECT `ordertype`, `body`, `state`,`ordernum`, `uid` FROM `#@__pay_log` WHERE `ordernum` = '$order'");
        }
        $results = $dsql->dsqlOper($archives, "results");

        //如果上面的查询没有成功，再根据订单号查询一次
        if (!$results) {
            if ($checktype == 1) {
                $archives = $dsql->SetQuery("SELECT `ordertype`, `body`, `state`,`ordernum` FROM `#@__pay_log` WHERE `ordernum` = '$order'");
                $results = $dsql->dsqlOper($archives, "results");
            }
        }

        if ($results) {

            $uid        = $results[0]['uid'];  //付款用户ID
            $ordertype  = $results[0]['ordertype'];
            $travelorder = $results[0]['ordernum'];
            $body      = $results[0]['body'];
            $state     = $results[0]['state'];

            //特殊情况处理
            $bodyArr = unserialize($body);
            if ($bodyArr && is_array($bodyArr)) {
                $bodyArrType = $bodyArr['type'];
                if ($bodyArrType == 'refreshTop' || $bodyArrType == 'fabyPay' || $bodyArrType == 'yonghujili') {
                    $ordertype = 'member';
                }
            }

            if ($state == 1) {

                $date = array();
                $orderArr = explode(",", $body);

                //如果是多个订单，则跳转到订单列表
                if (count($orderArr) > 1) {
                    $data = array(
                        "service"  => "member",
                        "type"     => "user",
                        "template" => "order",
                        "module"   => $ordertype
                    );
                } else {

                    //如果是会员充值，则跳转到消费记录页面
                    if ($ordertype == "member") {

                        $data = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "bill"
                        );

                        $bodyArr = unserialize($body);
                        $type = $bodyArr['type'];

                        //入驻成功的跳转到入驻页面
                        if ($type == "join") {
                            $data = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "business-config"
                            );

                            //入驻续费或升级的跳转到商家入驻成功页
                        } elseif ($type == "join_pay") {
                            $data = array(
                                "service"  => "member",
                                "template" => "index",
                                "param" => "appFullScreen&currentPageOpen=1&appIndex=1&from=paySuccess"
                            );

                            $ordertype = 'business';
                            $body = $order;

                            //入驻续费或升级的跳转到会员中心
                        } elseif ($type == "join_renew" || $type == "join_upgrade") {
                            $data = array(
                                "service"  => "member",
                            );

                            //升级成功后跳转到会员中心首页
                        } elseif ($type == "upgrade") {
                            $data = array(
                                "service"  => "member",
                                "type"     => "user"
                            );

                            //升级成功后跳转到会员中心首页
                        } elseif ($type == "fabu") {
                            $bo = unserialize($body);
                            if ($bo['module'] == 'info') {
                                $module = $bo['module'];
                                $class  = $bo['class'];
                            } else {
                                $module = $body['module'];
                                $class  = $body['class'];
                            }


                            $tmp = "record";

                            if ($module == 'article' || $module == 'info' || $module == 'house' || $module == 'tieba') {

                                $tmp = "manage-" . $module;

                                if ($module == 'house') {
                                    $tmp .= "-" . $class;
                                }
                            }

                            $data = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => $tmp
                            );

                            //分类信息跳转到payreturn
                            if ($bo['module'] == 'info') {
                                $data = array(
                                    "service"  => "info",
                                    "template" => "payreturn",
                                    "param" => "ordernum=" . $travelorder . "&currentPageOpen=1"
                                );
                            }


                            //分销商入驻
                        } elseif ($type == "fenxiaoJoin") {
                            $data = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "fenxiao"
                            );


                            //积分充值
                        } elseif ($type == "recharge") {
                            $data = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "point"
                            );
                        }

                        //如果是打赏，则跳转到打赏结果页面
                        //如果是信息竞价，则跳转到支付结果页面
                    } elseif ($ordertype == "article" || $ordertype == "tieba" || $ordertype == "info" || $ordertype == "house" || $ordertype == "circle") {

                        $data = array(
                            "service"  => $ordertype,
                            "template" => "payreturn",
                            "ordernum" => $order,
                            "param"    => "ordertype=buymeal",
                        );

                        //信息资讯支付成功，跳转订单详情页
                        if ($ordertype == 'article') {
                            $data = array(
                                "service"  => $ordertype,
                                "template" => "payreturn",
                                "param"    => "ordernum=".$order."&ordertype=buymeal",
                            );
                        }

                        //二手信息支付成功，跳转订单详情页
                        if ($ordertype == 'info') {
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__info_order` WHERE `ordernum` = '$order'");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $infoOrderId = $ret[0]['id'];

                                $data = array(
                                    "service" => "member",
                                    "template" => "orderdetail",
                                    "module" => "info",
                                    "type" => "user",
                                    "id" => $infoOrderId
                                );
                            }
                        }


                        //外卖频道支付成功页面单独配置
                    } elseif ($ordertype == "waimai") {

                        $bodyArr = unserialize($body);
                        $type = $bodyArr['type'];
                        if ($type == "paotui") {
                            $data = array(
                                "service"  => "waimai",
                                "template" => "payreturn-" . $order
                            );
                        } else {
                            // $sql = $dsql->SetQuery("SELECT `id` FROM `#@__".$ordertype."_order` WHERE `ordernum` = '$body'");
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__" . $ordertype . "_order_all` WHERE `ordernum` = '$order'");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                // $data = array(
                                //     "service"  => $ordertype,
                                //     "template" => "orderdetail",
                                //     "id"       => $ret[0]['id']
                                // );

                                $data = array(
                                    "service" => "member",
                                    "type" => "user",
                                    "template" => "orderdetail",
                                    "module" => $ordertype,
                                    "id" => $ret[0]['id']
                                );
                            } else {

                                if ($redirect) {
                                    echo '<h1>' . self::$langData['siteConfig'][21][162] . '</h1>'; //订单不存在！
                                }

                                return array("state" => 200, "info" => self::$langData['siteConfig'][21][162]); //订单不存在！
                            }
                        }

                        // 商家买单
                    } elseif ($ordertype == "business") {
                        $data = array(
                            "service" => "business",
                            "template" => "payreturn",
                            "ordernum" => $order
                        );
                        // 交友没有订单详情页
                    } elseif ($ordertype == "dating") {
                        $data = array(
                            "service"  => $ordertype,
                            "template" => "payreturn",
                            "ordernum" => $order
                        );

                        //单个订单跳转到订单详细页
                    } elseif ($ordertype == "huodong") {
                        $data = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "huodong-join"
                        );
                    } elseif ($ordertype == "live") {
                        $sql = $dsql->SetQuery("SELECT `live_id` FROM `#@__live_payorder` WHERE `order_id` = '$body'");
                        $ret = $dsql->dsqlOper($sql, "results");

                        $data = array(
                            "service"  => $ordertype,
                            "template" => "h_detail",
                            "id"       => $ret[0]['live_id']
                        );
                    } elseif ($ordertype == "education") {
                        $data = array(
                            "service" => "member",
                            "type" => "user",
                            "template" => "order",
                            "module" => $ordertype
                        );
                    } elseif ($ordertype == "video") {
                        $body   = unserialize($body);
                        $data = array(
                            "service"     => "video",
                            "template"    => "detail",
                            "id"          => $body['aid']
                        );
                    } elseif ($ordertype == "job") {
                        global $cfg_basedomain;
                        $body   = unserialize($body);
                        $data = array(
                            "service"   => "custom",
                            "param"     => $cfg_basedomain . "/supplier/job?appFullScreen"
                        );
                    } elseif ($ordertype == "task") {
                        $body   = unserialize($body);
                        $data = array(
                            "service"     => "task"
                        );
                    } elseif ($ordertype != 'siteConfig') {
                        if ($ordertype == 'homemaking') { //家政线上付款 付款成功直接跳转原来的订单页面
                            $sql = $dsql->SetQuery("SELECT `id`, `ordernumid` FROM `#@__" . $ordertype . "_order` WHERE `ordernum` = '$body'");
                        } elseif ($ordertype == 'travel') {
                            $sql = $dsql->SetQuery("SELECT `id`, `type`, `ordernum` FROM `#@__" . $ordertype . "_order` WHERE `ordernum` = '$body'");
                        } else {
                            if ($ordertype == "paimai" || $ordertype == "job" || $ordertype == "zhaopin") {
                                $body = $order;
                            }
                            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__" . $ordertype . "_order` WHERE `ordernum` = '$body'");
                        }
                        $ret = $dsql->dsqlOper($sql, "results");

                        if ($ret && is_array($ret)) {
                            if ($ordertype == 'homemaking') {
                                if (!empty($ret[0]['ordernumid'])) {
                                    $ordernumid = $ret[0]['ordernumid'];
                                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__" . $ordertype . "_order` WHERE `ordernum` = '$ordernumid'");
                                    $res = $dsql->dsqlOper($sql, "results");
                                    if ($res) {
                                        $id = $res[0]['id'];
                                    }
                                } else {
                                    $id = $ret[0]['id'];
                                }
                                $data = array(
                                    "service"  => "member",
                                    "type"     => "user",
                                    "template" => "orderdetail",
                                    "module"   => $ordertype,
                                    "id"       => $id
                                );
                                $data = array(
                                    "service"  => "member",
                                    "type"     => "user",
                                    "template" => "order",
                                    "module"   => $ordertype
                                );
                            } elseif ($ordertype == 'travel') {
                                $isMobile = isMobile();
                                if (!$isMobile) {
                                    //跳转至支付成功页面
                                    $data = array(
                                        "service"     => "travel",
                                        "template"    => "success",
                                        "param"       => "ordernum=" . $travelorder . "&type=" . $ret[0]['type'],
                                    );
                                } else {

                                    if ($ret[0]['type'] == 1 || $ret[0]['type'] == 2) {
                                        $data = array(
                                            "service"     => "travel",
                                            "template"    => "travel-ticketstate",
                                            "param"       => "ordernum=" . $order
                                        );
                                    } elseif ($ret[0]['type'] == 3) {
                                        $data = array(
                                            "service"     => "travel",
                                            "template"    => "travel-hotelstate",
                                            "param"       => "ordernum=" . $order
                                        );
                                    } elseif ($ret[0]['type'] == 4) {
                                        $data = array(
                                            "service"     => "travel",
                                            "template"    => "payreturn",
                                            "ordernum"    => $order
                                        );
                                    }
                                }
                            } else {
                                $data = array(
                                    "service"  => "member",
                                    "type"     => "user",
                                    "template" => "orderdetail",
                                    "module"   => $ordertype,
                                    "id"       => $ret[0]['id']
                                );
                            }
                        } else {

                            if ($redirect) {
                                echo '<h1>' . self::$langData['siteConfig'][21][162] . '</h1>'; //订单不存在！
                            }

                            return array("state" => 200, "info" => self::$langData['siteConfig'][21][162]); //订单不存在！
                        }
                    } else {
                        $data = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "bill"
                        );
                    }
                }

                $url = getUrlPath($data);


                //付费查看电话号码业务，此接口返回信息的真实号码，以供APP端使用
                if ($bodyArrType == 'payPhone') {
                    $module = $bodyArr['module'];
                    $temp = $bodyArr['temp'];
                    $aid = $bodyArr['aid'];
                    $_url = $bodyArr['url'];

                    $phone = $title = '';

                    //如果启用了隐私号功能，此处不做处理
                    if (!$huawei_privatenumber_state && $userid == $uid) {

                        //分类信息
                        if ($module == 'info') {

                            if ($temp == 'store') {
                                $sql = $dsql->SetQuery("SELECT `title`, `tel` FROM `#@__business_list` WHERE `id` = $aid AND `state` = 1");
                                $ret = $dsql->dsqlOper($sql, "results");
                                if ($ret) {
                                    $phone = $ret[0]['tel'];
                                    $title = $ret[0]['title'];
                                }
                            } else {
                                $sql = $dsql->SetQuery("SELECT `title`, `tel`, `userid` FROM `#@__infolist` WHERE `id` = $aid AND `del` = 0 AND `arcrank` = 1");
                                $ret = $dsql->dsqlOper($sql, "results");
                                if ($ret) {
                                    $phone = $ret[0]['tel'];
                                    $userid = $ret[0]['userid'];

                                    $title = '佚名';
                                    if (is_numeric($userid)) {
                                        $uinfo = $userLogin->getMemberInfo($userid);
                                        if (is_array($uinfo)) {
                                            $title = $uinfo['nickname'];
                                        }
                                    }
                                }
                            }

                            //商家
                        } elseif ($module == 'business') {
                            $sql = $dsql->SetQuery("SELECT `title`, `tel` FROM `#@__business_list` WHERE `id` = $aid AND `state` = 1");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $phone = $ret[0]['tel'];
                                $title = $ret[0]['title'];
                            }

                            //顺风车
                        } elseif ($module == 'sfcar') {
                            $sql = $dsql->SetQuery("SELECT `username` title, `tel` FROM `#@__sfcar_list` WHERE `id` = $aid AND `state` = 1");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $phone = $ret[0]['tel'];
                                $title = $ret[0]['title'];
                            }

                            //招聘
                        } elseif ($module == 'job') {

                            $db = 'job_pg';
                            if ($temp == 'qz') {
                                $db = 'job_qz';
                            }
                            $sql = $dsql->SetQuery("SELECT `nickname` title, `phone` tel FROM `#@__{$db}` WHERE `id` = $aid AND `state` = 1");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $phone = $ret[0]['tel'];
                                $title = $ret[0]['title'];
                            }
                        }
                    }

                    if ($phone) {
                        return array(
                            'state' => 100,
                            'info' => '订单交易成功',
                            'phone' => $phone,
                            'url' => getUrlPath($_url),
                            'title' => strip_tags($title)
                        );
                    }

                    //删除5分钟之前的看广告解锁电话订单记录
                    $_time = GetMkTime(time()) - 300;
                    $sql = $dsql->SetQuery("DELETE FROM `#@__site_pay_phone` WHERE `paytype` = '' AND `pubdate` < " . $_time);
                    $dsql->dsqlOper($sql, "update");
                }



                //支付成功后跳转页面
                global $cfg_payReturnType;
                global $cfg_payReturnUrlPc;
                global $cfg_payReturnUrlTouch;

                if ($cfg_payReturnType) {

                    //移动端自定义跳转链接
                    if (isMobile() && $cfg_payReturnUrlTouch) {
                        $url = $cfg_payReturnUrlTouch;
                    }

                    //电脑端自定义跳转链接
                    if (!isMobile() && $cfg_payReturnUrlPc) {
                        $url = $cfg_payReturnUrlPc;
                    }
                }

                if ($redirect) {
                    header('location:' . $url);
                }

                return $url;
            } else {

                //微信小程序端看广告解锁电话时，广告拉取异常的情况
                if($bodyArrType == 'payPhone' && $state == 2){
                    return array("state" => 110, "info" => "广告拉取异常");
                }

                if ($redirect) {
                    echo '<h1>' . self::$langData['siteConfig'][33][28] . '</h1>'; //交易没有支付成功
                }

                return array("state" => 200, "info" => self::$langData['siteConfig'][33][28]); //交易没有支付成功
            }
        } else {

            if ($redirect) {
                echo '<h1>' . self::$langData['siteConfig'][21][162] . '</h1>'; //订单不存在！
            }

            return array("state" => 200, "info" => self::$langData['siteConfig'][21][162]); //订单不存在！
        }
    }


    /**
     * 查询订单支付参数
     * 微信服务商点金计划中使用，根据订单号，查询订单标题、金额、跳转链接
     *
     */
    public function tradePayParam()
    {

        global $cfg_shortname;
        global $dsql;
        global $userLogin;
        global $siteCityInfo;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $siteCityName = $siteCityInfo ? $siteCityInfo['name'] : '';

        $param = $this->param;

        if (empty($param)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'

        $out_trade_no = htmlspecialchars(RemoveXSS($param['out_trade_no']));

        $sql = $dsql->SetQuery("SELECT `param_data`, `amount` FROM `#@__pay_log` WHERE `ordernum` = '$out_trade_no'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $param_data = $ret[0]['param_data'] ? unserialize($ret[0]['param_data']) : array();
            if ($param_data) {
                return array(
                    'title' => $param_data['subject'],
                    'amount' => $param_data['order_amount'],
                    'url' => $param_data['orderurl'],
                    'homepage' => $cfg_secureAccess . $cfg_basehost
                );
            } else {
                return array(
                    'title' => str_replace('$city', $siteCityName, $cfg_shortname),
                    'amount' => $ret[0]['amount'],
                    'url' => $cfg_secureAccess . $cfg_basehost . '/include/ajax.php?service=member&action=tradePayResult&order=' . $out_trade_no . '&redirect=1',
                    'homepage' => $cfg_secureAccess . $cfg_basehost
                );
            }
        } else {
            return array("state" => 200, "info" => "订单不存在！");
        }
    }


    /**
     * 支付成功
     * 此处进行支付成功后的操作，例如发送短信等服务
     *
     */
    public function paySuccess()
    {
        $param = $this->param;

        // print_r($param);die;
        if (!empty($param)) {
            global $dsql;
            global $langData;
            global $userLogin;
            $paytype  = $param['paytype'];
            $ordernum = $param['ordernum'];

            //获取支付方式名称
            $payname = $paytype == 'delivery' ? '货到付款' : $paytype;
            if ($paytype != 'delivery') {
                $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '$paytype'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $payname = $ret[0]['pay_name'];
                }
            }

            $archives = $dsql->SetQuery("SELECT `amount`, `uid`, `body`,`id` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $amount = $results[0]['amount'];
                $uid    = $results[0]['uid'];
                $pid     = $results[0]['id'];
                $body   = unserialize($results[0]['body']);
                $date   = GetMkTime(time());

                $userinfo = $userLogin->getMemberInfo($uid);

                if ($body && is_array($body)) {
                    $type = $body['type'];

                    //充值
                    if ($type == "deposit") {

                        global $cfg_chongzhiCheckType;
                        global $cfg_chongzhiyhFee;
                        global $cfg_chongzhilimit;
                        global $cfg_chongzhiJfLimit;
                        global $cfg_chongzhijfFee;
                        global $cfg_pointRatio;

                        if ($cfg_chongzhiCheckType && $amount >= $cfg_chongzhilimit) {

                            $amount += $amount * $cfg_chongzhiyhFee / 100;
                        }

                        //充值送积分
                        if ($cfg_chongzhijfFee && $amount >= $cfg_chongzhiJfLimit) {
                            $point = (int)($amount * $cfg_chongzhijfFee / 100 * $cfg_pointRatio);
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$point' WHERE `id` = '$uid'");
                            $dsql->dsqlOper($archives, "update");
                            //积分日志
                            if ($point > 0) {
                                $userpoint = (int)$dsql->getOne($dsql::SetQuery("select `point` from `#@__member` where `id`=" . $uid));
                                $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$uid', '1', '$point', '充值赠送', '$date','zengsong','$userpoint')");
                                $dsql->dsqlOper($archives, "update");
                            }
                        }
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$amount' WHERE `id` = '$uid'");
                        $dsql->dsqlOper($archives, "update");

                        $user  = $userLogin->getMemberInfo($uid);
                        $usermoney = $user['money'];
                        $cityid = (int)$user['cityid'];
                        $cityName = getSiteCityName($cityid);

                        //$money  = sprintf('%.2f',($usermoney+$amount));

                        //保存操作日志
                        $info  = $langData['siteConfig'][21][76] . ";" . $payname;  //账户充值
                        $title = '账户充值';
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`, `montype`, `ordertype`,`ctype`,`pid`,`title`,`ordernum`,`balance`) VALUES ('$uid', '1', '$amount', '$info', '$date', 1,'member','chongzhi','$pid','$title','$ordernum','$usermoney')");
                        $mid = $dsql->dsqlOper($archives, "lastid");

                        //记录用户行为日志
                        memberLog($uid, 'member', 'money', $mid, 'insert', '账户余额充值(' . $amount . '元)', '', $archives);

                        //微信通知
                        $param = array(
                            'type'   => 2, //区分佣金 给分站还是平台发送 1分站 2平台
                            'cityid' => $cityid,
                            'notify' => '管理员消息通知',
                            'fields' => array(
                                'contentrn'  => $cityName."分站  " . $userinfo['nickname'] . ' 账户充值：' . $amount,
                                'date' => date("Y-m-d H:i:s", time()),
                            )
                        );
                        updateAdminNotice("member", "deposit", $param);

                        //自定义配置
                        $param = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "record"
                        );

                        $config = array(
                            "username" => $userinfo['nickname'],
                            "amount" => '+' . $amount,
                            "money" => $usermoney,
                            "date" => date("Y-m-d H:i:s", $date),
                            "info" => $info,
                            "fields" => array(
                                'keyword1' => '变动类型',
                                'keyword2' => '变动金额',
                                'keyword3' => '变动时间',
                                'keyword4' => '帐户余额'
                            )
                        );

                        updateMemberNotice($uid, "会员-帐户资金变动提醒", $param, $config);

                        //积分充值
                    } elseif ($type == "recharge") {

                        global $cfg_pointRatio;
                        global $cfg_pointName;
                        global $userLogin;
                        $point = (int)($amount * $cfg_pointRatio);

                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$point' WHERE `id` = '$uid'");
                        $dsql->dsqlOper($archives, "update");

                        $user  = $userLogin->getMemberInfo($uid);
                        $userpoint = $user['point'];
                        $cityid = (int)$user['cityid'];
                        $cityName = getSiteCityName($cityid);

                        //$pointuser = (int)($userpoint+$point);
                        
                        //保存操作日志
                        $info = $cfg_pointName . $langData['siteConfig'][15][0] . ";" . $payname;  //积分充值                        
                        $title = $cfg_pointName . $langData['siteConfig'][15][0];  //积分充值         
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`, `montype`,`ctype`,`balance`) VALUES ('$uid', '1', '$point', '$info', '$date', 1,'duihuan','$userpoint')");
                        $aid = $dsql->dsqlOper($archives, "lastid");

                        //记录用户行为日志
                        memberLog($uid, 'member', 'collect', 0, 'insert', '账户' . $cfg_pointName . '充值(' . $point . ')', '', $archives);

                        //增加平台收入记录
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`) VALUES ('$uid', '1', '$amount', '$info', '$date','$cityid','0','member',$amount,'1','chongzhi')");
                        $dsql->dsqlOper($archives, "lastid");

                        //微信通知
                        $param = array(
                            'type'   => 2, //区分佣金 给分站还是平台发送 1分站 2平台
                            'cityid' => $cityid,
                            'notify' => '管理员消息通知',
                            'fields' => array(
                                'contentrn'  => $cityName."分站  " . $userinfo['nickname'] . ' ' . $cfg_pointName . '充值：' . $amount . '元，' . $point . $cfg_pointName,
                                'date' => date("Y-m-d H:i:s", time()),
                            )
                        );
                        updateAdminNotice("member", "deposit", $param);

                        //自定义配置
                        $param = array(
                            "service"  => "member",
                            "type"     => "user",
                            "template" => "point"
                        );

                        $config = array(
                            "username" => $nickname,
                            "amount" => '+' . $point,
                            "point" => $userpoint,
                            "date" => date("Y-m-d H:i:s", $date),
                            "info" => $info,
                            "fields" => array(
                                'keyword1' => '变动类型',
                                'keyword2' => '变动' . $cfg_pointName,
                                'keyword3' => '变动时间',
                                'keyword4' => $cfg_pointName . '余额'
                            )
                        );

                        updateMemberNotice($uid, "会员-积分变动通知", $param, $config);

                        //升级
                    } elseif ($type == "upgrade") {
                        $body['ordernum'] = $ordernum;
                        $this->upgradeSuccess($body);

                        //商家入驻
                    } elseif ($type == "join_pay") {
                        $this->joinPaySuccess($ordernum);

                        //商家入驻
                    } elseif ($type == "join" || $type == "join_renew" || $type == "join_upgrade") {
                        $this->joinSuccess($body, $ordernum);

                        //缴纳保障金
                    } elseif ($type == "promotion") {
                        $this->promotionSuccess($body);

                        // 发布信息
                    } elseif ($type == "fabu" || $type == "fabuPay") {
                        $body['ordernum'] = $ordernum;
                        $this->fabuPaySuccess($body);

                        //信息刷新置顶
                    } elseif ($type == 'refreshTop') {
                        $busiHandlers = new handlers("siteConfig", "refreshTopSuccess");
                        $busiConfig = $busiHandlers->getHandle($ordernum);

                        //分销商入驻
                    } elseif ($type == 'fenxiaoJoin') {
                        $this->fenxiaoJoinPaySuccess($ordernum);
                    } elseif ($type == "yonghujili") {
                        $busiHandlers = new handlers("siteConfig", "jiliPaySuccess");
                        $busiConfig = $busiHandlers->getHandle($ordernum);
                    } elseif ($type == "payPhone") {
                        $payPhoneHandlers = new handlers("siteConfig", "payPhoneSuccess");
                        $payPhoneConfig = $payPhoneHandlers->getHandle($ordernum);
                    }
                }
            }
        }
    }


    /**
     * 会员升级后的相关操作
     */

    public function upgradeSuccess($param)
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_levelFee;
        // $param = array(
        // "level"=> "3",
        // "name"=>"黄冠会员" ,
        // "day" =>  "1" ,
        // "daytype" => "month" ,
        // "title"=> "开通黄冠会员1个月" ,
        // "userid"=> "14041" ,
        // "price"=> "0.00" ,
        // "balance"=> "60.00");
        $userid  = $param['userid'];
        $level   = (int)$param['level'];
        $day     = (int)$param['day'];
        $price   = sprintf("%.2f", $param['price']);
        $daytype = $param['daytype'];
        $title   = $param['title'];
        $balance = sprintf("%.2f", $param['balance']);
        $ordernum = $param['ordernum'];

        //订单包含开通会员相关

        $waimaiorder = (int)$param['waimaiorder'];
        $usequan     = (int)$param['usequan'];

        $amount = $price + $balance;
        // $param['price'] = $amount;

        $userinfo  = $userLogin->getMemberInfo($userid);
        $money = sprintf("%.2f", $userinfo['money']);

        //如果使用了余额支付，二次验证帐户余额是否足够
        if ($balance) {
            if ($money < $balance) {
                die($langData['siteConfig'][21][83]);   //会员余额与支付时所选金额不匹配，升级失败！
            }
        }

        //优惠卷发访按照月赠送(暂定)
        // $tnum = 1;
        // if($daytype == "year"){
        //     $tnum = $day * 12;
        // }


        //查询会员是否已经是会员
        $sql = $dsql->SetQuery("SELECT `level`, `expired`,`addr`, `cityid` FROM `#@__member` WHERE `id` = $userid");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $_level     = $ret[0]['level'];
            $_expired   = $ret[0]['expired'];
            $_cityid    = $ret[0]['cityid'];
            $addr       = $ret[0]['addr'];

            // 查询该等级特权-赠送平台券
            $authCfg = array();
            if ($level) {
                $authSql = $dsql->SetQuery("SELECT `privilege` FROM `#@__member_level` WHERE `id` = $level");
                $authRet = $dsql->dsqlOper($authSql, "results");
                $authCfg = unserialize($authRet[0]['privilege']);
            }

            // var_dump($authCfg);die;
            $delivery = ", `delivery_count` = 0";
            foreach ($authCfg as $key => $value) {

                // 优惠券
                if ($key == "quan" && $daytype != "day") {
                    $quan = $value;

                    if ($quan) {
                        $count = 0;
                        foreach ($quan as $k => $v) {
                            $qid = $v['qid'];
                            $num = $v['num'] * $day;
                            if (empty($qid) || empty($num)) break;

                            // 验证优惠券
                            $checkSql = $dsql->SetQuery("SELECT * FROM `#@__waimai_quan` WHERE `id` = $qid");
                            $checkRet = $dsql->dsqlOper($checkSql, "results");
                            if ($checkRet) {
                                $data = $checkRet[0];
                                foreach ($data as $key => $value) {
                                    $$key = $value;
                                }
                                if ($id == $usequan) {
                                    $num -= 1;
                                }
                                $pubdate = GetMkTime(time());

                                // 过期时间根据充值时间设置
                                $deadline = strtotime("+ $day month");


                                if ($shoptype == 0) {
                                    $shopids = "";
                                }
                                if ($is_relation_food == 0) {
                                    $fid = "";
                                }

                                $list = [];
                                for ($i = 0; $i < $num; $i++) {
                                    $list[] = "('$id', '$userid', '$name', '$des', '$money', '$basic_price', '$deadline', '$shopids', '$fid', '$pubdate', '$bear','$level')";
                                }

                                $sql = $dsql->SetQuery("INSERT INTO `#@__waimai_quanlist` (`qid`, `userid`, `name`, `des`, `money`, `basic_price`, `deadline`, `shopids`, `fid`, `pubdate`, `bear`,`formtype`) VALUES " . join(",", $list));
                                $aid = $dsql->dsqlOper($sql, "lastid");
                                if (is_numeric($aid)) {
                                    $count += $num;
                                }
                            }
                        }
                        if ($count) {
                            $param = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "quan-waimai"
                            );
                            updateMemberNotice($userid, "会员-外卖优惠券发放通知", $param, array("count" => $count));
                        }
                    }

                    // 配送费优惠次数
                } elseif ($key == "delivery") {
                    if ($value[0]['type'] == 'count') {
                        if ($value[0]['val'] > 0) {
                            $delivery_count = $value[0]['val'];
                            if ($waimaiorder == 1) {
                                $delivery_count -= 1;
                            }
                            $delivery = ", `delivery_count` = `delivery_count` + " . $delivery_count * $day;
                        } else {
                            $delivery = ", `delivery_count` = 0";
                        }
                    }
                }
            }
            //如果已经开通并且是同级会员，在原有结束时间上增加相应天数
            if ($_level == $level) {
                //判断已经开通的会员是否过期
                $nowTime = GetMkTime(time());
                if($_expired > $nowTime){
                    $date = date("Y-m-d H:i:s", $_expired);
                    $newDate = strtotime("{$date}+{$day} {$daytype}");
                }else{
                    $newDate = strtotime("+{$day} {$daytype}");
                }
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `expired` = $newDate, `expired_notify_day` = 0, `expired_notify_week` = 0, `expired_notify_month` = 0 " . $delivery . " WHERE `id` = $userid");
                $dsql->dsqlOper($sql, "update");
                $reason = "续费";
                //如果还没有开通会员或者是升级成为其他类型的会员
            } else {
                $newDate = strtotime("+{$day} {$daytype}");
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `level` = $level, `expired` = $newDate, `expired_notify_day` = 0, `expired_notify_week` = 0, `expired_notify_month` = 0  " . $delivery . " WHERE `id` = $userid");
                $dsql->dsqlOper($sql, "update");
                $reason = "开通";
            }

            //记录用户行为日志
            memberLog($userid, 'member', '', 0, 'update', '会员升级(' . $reason . '=>' . $title . ')', '', $sql);

            $sql = $dsql->SetQuery("SELECT `id`,`paytype` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 1");
            $ret = $dsql->dsqlOper($sql, "results");
            $pid = '';
            if ($ret) {
                $pid            = $ret[0]['id'];
                $paytype        = $ret[0]['paytype'];
            }

            //余额支付扣除会员余额
            if ($balance && $waimaiorder != 1 && $paytype != 'huoniao_bonus') {
                //扣除会员余额
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$balance' WHERE `id` = '$userid'");
                $dsql->dsqlOper($archives, "update");
            }

            //保存操作日志
            $date = time();
            if ($balance > 0 && $paytype != 'huoniao_bonus') {
                if ($waimaiorder != 1) {
                    $user  = $userLogin->getMemberInfo($userid);
                    $usermoney = $user['money'];
                    $title_ = '会员升级';
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`title`,`ordernum`, `balance`) VALUES ('$userid', '0', '$balance', '$title', '$date','member','huiyuanshengji','$pid','$title_','$param[ordernum]', '$usermoney')");
                    $dsql->dsqlOper($archives, "update");
                }
            }
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_levelinfo` (`userid`, `amount`, `info`, `time`,`reason`,`newdate`,`day`) VALUES ('$userid', '$amount', '$title', '$date','$reason','$newDate','$day')");
            $dsql->dsqlOper($archives, "update");

            global  $paytypee;
            $paytypee = $paytype;           //消费金支付方式
            /*会员升级分佣*/
            $_ordernum = create_ordernum();
            $paramarr['amount'] = $amount;
            (new member())->returnFxMoney("memberleve", $userid, $_ordernum, $paramarr);

            $_title = '会员升级，订单号：' . $_ordernum;

            //查询一共分销了多少佣金
            $fenxiaomoneysql = $dsql->SetQuery("SELECT SUM(`amount`) allfenxiao FROM `#@__member_fenxiao` WHERE `ordernum` = '$_title' AND `module`= 'member'");
            $fenxiaomonyeres = $dsql->dsqlOper($fenxiaomoneysql, "results");
            $fenxiaoTotalPrice     = $fenxiaomonyeres[0]['allfenxiao'];

            //结算金额减去分销掉的金额
            $amount -= $fenxiaoTotalPrice;

            if (!$_cityid) {
                $cityid = getPublicParentInfo(array('tab' => 'site_area', 'id' => $addr, 'split' => '/', 'type' => 'typename', 'action' => 'addr', 'returntype' => '1'));
            } else {
                $cityid = $_cityid;
            }

            //分站佣金
            $fzFee = cityCommission($cityid, 'level');
            //将费用打给分站
            $fztotalAmount_ =  $amount * (float)$fzFee / 100;
            $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;
            $fztotalAmount_ = sprintf("%.2f", $fztotalAmount_);
            //平台获得多少钱
            $fee = sprintf("%.2f", ($amount - $fztotalAmount_));
            $cityName   =  getSiteCityName($cityid);

            $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` + '$fztotalAmount_' WHERE `cid` = '$cityid'");
            $dsql->dsqlOper($fzarchives, "update");

            //保存操作日志
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`) VALUES ('$userid', '1', '$amount', '会员升级：$title', '$date','$cityid','$fztotalAmount_','member',$fee,'1','huiyuanshengji')");
            //            $dsql->dsqlOper($archives, "update");
            $lastid = $dsql->dsqlOper($archives, "lastid");
            substationAmount($lastid, $cityid);

            $cityMoney = getcityMoney($cityid);   //获取分站总收益
            $allincom = getAllincome();             //获取平台今日收益

            //发送会员通知
            unset($param['day']);

            $dayname = "";
            if ($daytype == "day") {
                $dayname = $langData['siteConfig'][13][6];  //天
            } elseif ($daytype == "month") {
                $dayname = $langData['siteConfig'][13][31];   //个月
            } elseif ($daytype == "year") {
                $dayname = $langData['siteConfig'][13][14];  //年
            }
            $param['dayname'] = $day . $dayname;

            //消息通知
            $param['username'] = $userinfo['nickname'];
            $param['title'] = $title;
            $param['price'] = $paramarr['amount'];
            $param['expired'] = date("Y-m-d H:i:s", $newDate);
            $param['fields'] = array(
                'keyword1' => '用户名',
                'keyword2' => '开通时长',
                'keyword3' => '开通费用',
                'keyword4' => '到期时间'
            );

            //自定义配置
            $url = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "record"
            );

            updateMemberNotice($userid, "会员-升级成功", $url, $param);


            //微信通知
            $param = array(
                'type'   => "1", //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . "分站 \r\n会员升级 \r\n用户：" . $userinfo['nickname'] . "\r\n" . $title . "\r\n\r\n获得佣金：" . $fztotalAmount_,
                    'date' => date("Y-m-d H:i:s", time()),
                    'status' => "今日总收入：$cityMoney"
                )
            );

            $params = array(
                'type'   => "2", //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . "分站 \r\n会员升级 \r\n用户：" . $userinfo['nickname'] . "\r\n" . $title . "\r\n\r\n平台获得佣金：" . $fee . "\r\n分站获得佣金：" . $fztotalAmount_,
                    'date' => date("Y-m-d H:i:s", time()),
                    'status' => "今日总收入：$allincom"
                )
            );
            //后台微信通知
            updateAdminNotice($module, "detail", $param);
            updateAdminNotice($module, "detail", $params);
        }
    }


    /**
     * 提现卡号记录
     * @return array
     */
    public function withdraw_card()
    {

        $param =  $this->param;
        $type  = $param['type'];

        global $dsql;
        global $userLogin;
        global $langData;
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $where = " AND `bank` != 'alipay' AND `bank` != 'weixin'";
        if ($type == "alipay") {
            $where = " AND `bank` = 'alipay'";
        }

        $sql = $dsql->SetQuery("SELECT `id`, `bank`, `cardnum`, `cardname`, `bankCode`, `bankName` FROM `#@__member_withdraw_card` WHERE `uid` = '$userid'" . $where . " ORDER BY `id` DESC");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $list = array();
            foreach ($ret as $key => $value) {
                if ($value['bank'] != "alipay") {
                    $cardnumLast = substr($value['cardnum'], -4);
                }

                array_push($list, array("id" => $value['id'], "bank" => $value['bank'], "bankCode" => $value['bankCode'], "bankName" => $value['bankName'], "cardnum" => $value['cardnum'], "cardname" => $value['cardname'], "cardnumLast" => $cardnumLast));
            }
            return $list;
        }
    }


    /**
     * 删除提现卡号记录
     * @return array
     */
    public function withdraw_card_del()
    {

        $param =  $this->param;
        $id  = $param['id'];
        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][29]); //请选择要删除的历史记录

        global $dsql;
        global $userLogin;
        global $langData;
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $sql = $dsql->SetQuery("DELETE FROM `#@__member_withdraw_card` WHERE `uid` = '$userid' AND `id` in ($id)");
        $dsql->dsqlOper($sql, "update");

        //记录用户行为日志
        memberLog($userid, 'member', 'withdraw', 0, 'delete', '删除提现银行卡(' . $id . ')', '', $sql);
    }




    /**
     * 提现
     * @return array
     */
    public function withdraw()
    {

        global $dsql;
        global $userLogin;
        global $langData;

        $param    =  $this->param;
        $bank     = $param['bank'];
        $bankCode = $param['bankCode'];
        $bankName = $param['bankName'];
        $cardnum  = $param['cardnum'];
        $cardname = $param['cardname'];
        $amount   = $param['amount'];
        $from     = $param['from'];  //来源  invite邀请奖金提现
        $date     = GetMkTime(time());

        global $cfg_minWithdraw;  //起提金额
        global $cfg_maxWithdraw;  //最多提现
        global $cfg_withdrawFee;  //手续费
        global $cfg_maxCountWithdraw;  //每天最多提现次数
        global $cfg_maxAmountWithdraw;  //每天最多提现金额
        global $cfg_withdrawCycle;  //提现周期  0不限制  1每周  2每月
        global $cfg_withdrawCycleWeek;  //周几
        global $cfg_withdrawCycleDay;  //几日
        global $cfg_withdrawPlatform;  //提现平台
        global $cfg_withdrawCheckType;  //付款方式
        global $cfg_withdrawNote;  //提现说明
        global $cfg_withdrawWxVersion;

        $cfg_minWithdraw = (float)$cfg_minWithdraw;
        $cfg_maxWithdraw = (float)$cfg_maxWithdraw;
        $cfg_withdrawFee = (float)$cfg_withdrawFee;
        $cfg_withdrawCycle = (int)$cfg_withdrawCycle;
        $cfg_withdrawCheckType = (int)$cfg_withdrawCheckType;
        $withdrawPlatform = $cfg_withdrawPlatform ? unserialize($cfg_withdrawPlatform) : array('weixin', 'alipay', 'bank');
        $cfg_withdrawWxVersion = (int)$cfg_withdrawWxVersion;
        
        global $cfg_ucenterLinks;
        $cfg_ucenterLinks = explode(',', $cfg_ucenterLinks);
        if(!in_array('withdraw', $cfg_ucenterLinks)) return array("state" => 200, "info" => "系统未开启提现功能！");

        //提现周期
        if ($cfg_withdrawCycle && $from != 'invite') {
            //周几
            if ($cfg_withdrawCycle == 1) {

                $week = date("w", time());
                if ($week != $cfg_withdrawCycleWeek) {
                    $array = $langData['siteConfig'][34][5];  //array('周日', '周一', '周二', '周三', '周四', '周五', '周六')
                    return array("state" => 200, "info" => str_replace('1', $array[$cfg_withdrawCycleWeek], $langData['siteConfig'][36][0]));  //当前不可提现，提现时间：每周一
                }

                //几日
            } elseif ($cfg_withdrawCycle == 2) {

                $day = date("d", time());
                if ($day != $cfg_withdrawCycleDay) {
                    return array("state" => 200, "info" => str_replace('1', $cfg_withdrawCycleDay, $langData['siteConfig'][36][1]));  //当前不可提现，提现时间：每月1日
                }
            }
        }

        if ((($bank == 'weixin' || $bank == 'alipay') && !in_array($bank, $withdrawPlatform)) || ($bank != 'weixin' && $bank != 'alipay' && !in_array('bank', $withdrawPlatform))) {
            return array("state" => 200, "info" => $langData['siteConfig'][36][2]);  //不支持的提现方式
        }

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (empty($bank) || ($bank != 'weixin' && (empty($cardnum) || empty($cardname))) || empty($amount)) return array("state" => 200, "info" => $langData['siteConfig'][33][30]); //请填写完整！

        $this->param['id'] = $userid;
        $detail = $this->detail();

        if (($detail['userType'] == 2 && $detail['licenseState'] != 1) || ($detail['userType'] == 1 && $detail['certifyState'] != 1)) {
            return array("state" => 200, "info" => $langData['siteConfig'][33][49]);  //请先进行实名认证
        }

        //普通提现
        if ($from != 'invite') {
            //提现是否要积分，并判断积分是否足够
            global $cfg_pointRatio;
            global $cfg_withdrawJfFee;
            global $cfg_pointName;
            $tixianJifen = $amount * $cfg_withdrawJfFee / 100;
            if ($detail['point'] < $tixianJifen) {
                return array("state" => 200, "info" => "提现需扣除$tixianJifen{$cfg_pointName}，您的{$cfg_pointName}余额不足，提现失败！");
            }

            if ($cfg_minWithdraw && $amount < $cfg_minWithdraw) {
                return array("state" => 200, "info" => str_replace('1', $cfg_minWithdraw, $langData['siteConfig'][36][3]));  //起提金额：1元
            }

            if ($cfg_maxWithdraw && $amount > $cfg_maxWithdraw) {
                return array("state" => 200, "info" => str_replace('1', $cfg_maxWithdraw, $langData['siteConfig'][36][4]));  //单次最多提现：1元
            }

            //统计当天交易量
            if ($cfg_maxCountWithdraw || $cfg_maxAmountWithdraw) {
                $start = GetMkTime(date("Y-m-d"));
                $end = $start + 86400;
                $sql = $dsql->SetQuery("SELECT SUM(`amount`) amount, COUNT(`id`) count FROM `#@__member_withdraw` WHERE `uid` = '$userid' AND `tdate` >= $start AND `tdate` < $end");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $todayAmount = sprintf("%.2f", $ret[0]['amount'] + $amount); //今日提现金额=已经提现的+现在要提现的
                    $todayCount = $ret[0]['count'];

                    if ($cfg_maxCountWithdraw && $todayCount >= $cfg_maxCountWithdraw) {
                        return array("state" => 200, "info" => str_replace('1', $cfg_maxCountWithdraw, $langData['siteConfig'][36][5]));  //每天最多提现1次
                    }

                    if ($cfg_maxAmountWithdraw && $todayAmount > $cfg_maxAmountWithdraw) {
                        return array("state" => 200, "info" => str_replace('1', $cfg_maxAmountWithdraw, $langData['siteConfig'][36][6]));  //每天最多提现1元
                    }
                }
            }

            if ($detail['money'] < $amount) return array("state" => 200, "info" => $langData['siteConfig'][21][84]);  //帐户余额不足，提现失败！

            //邀请奖金提现
        } else {

            //总奖金
            $totalBonus = 0;
            $sql = $dsql->SetQuery("SELECT sum(`money`) totalBonus FROM `#@__member_invite` WHERE `fid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $totalBonus = $ret[0]['totalBonus'];
            }

            //已提现和审核中
            $totalWithdrawn = $totalReviewWithdrawn = 0;  //已经提现   审核中
            $sql = $dsql->SetQuery("SELECT (SELECT sum(`amount`) FROM `#@__member_withdraw` WHERE `uid` = $userid AND `state` = 1 AND `type` = 2) as totalWithdrawn, (SELECT sum(`amount`) FROM `#@__member_withdraw` WHERE `uid` = $userid AND `state` = 0 AND `type` = 2) as totalReviewWithdrawn FROM `#@__member_withdraw` WHERE `uid` = $userid AND `type` = 2");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $totalWithdrawn = $ret[0]['totalWithdrawn'];
                $totalReviewWithdrawn = $ret[0]['totalReviewWithdrawn'];
            }

            //可提现金额
            $canWithdrawn = floatval($totalBonus - $totalWithdrawn - $totalReviewWithdrawn);

            require(HUONIAOINC . "/config/pointsConfig.inc.php");
            $cfg_moneyRegGivingWithdraw = floatval($cfg_moneyRegGivingWithdraw);  //起提金额

            if ($cfg_moneyRegGivingWithdraw && $amount < $cfg_moneyRegGivingWithdraw) {
                return array("state" => 200, "info" => str_replace('1', $cfg_moneyRegGivingWithdraw, $langData['siteConfig'][36][3]));  //起提金额：1元
            }

            if ($canWithdrawn < $amount) return array("state" => 200, "info" => $langData['siteConfig'][21][84]);  //帐户余额不足，提现失败！

        }

        //判断当前访问用户端，保存到数据库
        $source = 0;
        if (isWxMiniprogram()) {
            $source = 1;
        } else if (isApp()) {
            $source = 2;
        }

        //验证类型
        $realname = $username = $wechat_openid = $wechat_mini_openid = '';
        $sql = $dsql->SetQuery("SELECT `realname`, `username`, `wechat_openid`, `wechat_mini_openid`, `wechat_app_openid` FROM `#@__member` WHERE `id` = " . $userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $realname = $ret[0]['realname'];
            $username = $ret[0]['username'];
            $wechat_openid = $ret[0]['wechat_openid'];
            $wechat_mini_openid = $ret[0]['wechat_mini_openid'];
            $wechat_app_openid = $ret[0]['wechat_app_openid'];

            if ($bank == 'weixin' && !$wechat_openid && !$wechat_mini_openid) {
                return array("state" => 200, "info" => '请退出登录后使用微信授权重新登录后重试！');  //请先绑定微信账号
            }

            if ($bank == 'weixin' && $source == 2 && !$wechat_app_openid) {
                return array("state" => 200, "info" => '请退出登录后使用微信授权重新登录后重试！');
            }
        }

        $ordernum = create_ordernum();

        //判断银行卡是否存在
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_withdraw_card` WHERE `uid` = '$userid' AND `bank` = '$bank' AND `cardnum` = '$cardnum' AND `cardname` = '$cardname'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $cid = $ret[0]['id'];
        } else {
            //添加银行卡
            $sql = $dsql->SetQuery("INSERT INTO `#@__member_withdraw_card` (`uid`, `bank`, `bankCode`, `bankName`, `cardnum`, `cardname`, `date`) VALUES ('$userid', '$bank', '$bankCode', '$bankName', '$cardnum', '$cardname', '$date')");
            $cid = $dsql->dsqlOper($sql, "lastid");

            //记录用户行为日志
            memberLog($userid, 'member', 'withdraw', $cid, 'insert', '添加提现银行卡(' . $cid . ')', '', $sql);
        }

        if (is_numeric($cid)) {
            $shouxu  = (float)sprintf("%.2f", $amount * $cfg_withdrawFee / 100);   //手续费
            $amount_ = $cfg_withdrawFee ? $amount * (100 - $cfg_withdrawFee) / 100 : $amount;
            $amount_ = (float)sprintf("%.2f", $amount_);

            //会员申请后自动付款
            if (!$cfg_withdrawCheckType && ($bank == 'weixin' || $bank == 'alipay')) {

                //扣除余额
                if ($from != 'invite') {

                    //生成提现记录
                    $sql = $dsql->SetQuery("INSERT INTO `#@__member_withdraw` (`uid`, `bank`, `bankCode`, `bankName`, `cardnum`, `cardname`, `amount`, `tdate`, `state`,`proportion`,`price`,`shouxuprice`,`pointRate`,`point`, `ordernum`, `auditstate`,`source`) VALUES ('$userid', '$bank', '$bankCode', '$bankName', '$cardnum', '$cardname', '$amount', '$date', 0,'$cfg_withdrawFee','$amount_','$shouxu','$cfg_withdrawJfFee',$tixianJifen, '$ordernum',1,'$source')");
                } else {

                    //生成提现记录
                    $sql = $dsql->SetQuery("INSERT INTO `#@__member_withdraw` (`uid`, `bank`, `bankCode`, `bankName`, `cardnum`, `cardname`, `amount`, `tdate`, `state`, `type`,`proportion`,`price`,`shouxuprice`, `ordernum`, `auditstate`,`source`) VALUES ('$userid', '$bank', '$bankCode', '$bankName', '$cardnum', '$cardname', '$amount', '$date', 0, 2,'$cfg_withdrawFee','$amount_','$shouxu', '$ordernum',1,'$source')");
                }

                $wid = $dsql->dsqlOper($sql, "lastid");

                if (is_numeric($wid)) {

                    //微信提现
                    if ($bank == "weixin") {
                        $order = array(
                            'id' => $wid,
                            'wid' => $wid,
                            'ordernum' => $ordernum,
                            'openid' => $wechat_openid,
                            'wechat_mini_openid' => $wechat_mini_openid,
                            'name' => $realname,
                            'amount' => $amount_,
                            'wechat_app_openid' => $wechat_app_openid,
                        );

                        require_once(HUONIAOROOT . "/api/payment/wxpay/wxpayTransfers.php");
                        $wxpayTransfers = new wxpayTransfers();
                        $return = $wxpayTransfers->transfers($order);

                        if ($return['state'] != 100) {

                            //如果返回值带有不重复字段noretry，则直接打印结果
                            if (isset($return['noretry']) && $return['noretry'] == 1) {
                                return $return;
                            } else {
                                // 加载支付方式操作函数
                                loadPlug("payment");
                                $payment = get_payment("wxpay");
                                //如果网页支付配置的账号失败了，使用APP支付配置的账号重试
                                if($payment['APP_APPID']){
                                    include_once HUONIAOROOT."/api/payment/wxpay/wxpayTransfers.php";
                                    $wxpayTransfers = new wxpayTransfers();
                                    $return = $wxpayTransfers->transfers($order, true);
                                    if($return['state'] != 100) {
                                        //接口报错后，需要把提现记录删除
                                        $sql = $dsql->SetQuery("DELETE FROM `#@__member_withdraw` WHERE `id` = $wid");
                                        $dsql->dsqlOper($sql, "update");

                                        return $return;
                                    }
                                }else{
                                    return $return;
                                }
                            }
                            
                        }

                        // $rdate = (int)$return['date'];
                        // $rdate = $rdate ? $rdate : GetMkTime(time());
                        // $payment_no = $return['payment_no'];

                        // $note = $payment_no;
                        // $sql = $dsql->SetQuery("UPDATE `#@__member_withdraw` SET `state` = 1, `rdate` = '$rdate', `note` = '$note' WHERE `id` = " . $wid);
                        // $_wid = $dsql->dsqlOper($sql, "update");

                    } else {

                        if ($realname != $cardname) {
                            
                            //接口报错后，需要把提现记录删除
                            $sql = $dsql->SetQuery("DELETE FROM `#@__member_withdraw` WHERE `id` = $wid");
                            $dsql->dsqlOper($sql, "update");

                            return array("state" => 200, "info" => $langData['siteConfig'][36][8]);  //申请失败，提现到的账户真实姓名与实名认证信息不一致！
                        }
                        $order = array(
                            'id' => $wid,
                            'ordernum' => $ordernum,
                            'account' => $cardnum,
                            'name' => $cardname,
                            'amount' => $amount_
                        );

                        require_once(HUONIAOROOT . "/api/payment/alipay/alipayTransfers.php");
                        $alipayTransfers = new alipayTransfers();
                        $return = $alipayTransfers->transfers($order);

                        if ($return['state'] != 100) {

                            //接口报错后，需要把提现记录删除
                            $sql = $dsql->SetQuery("DELETE FROM `#@__member_withdraw` WHERE `id` = $wid");
                            $dsql->dsqlOper($sql, "update");
                            
                            return $return;
                        }

                        // $rdate = (int)$return['date'];
                        // $rdate = $rdate ? $rdate : GetMkTime(time());
                        // $payment_no = $return['payment_no'];

                        // $note = $payment_no;
                        // $sql = $dsql->SetQuery("UPDATE `#@__member_withdraw` SET `state` = 1, `rdate` = '$rdate', `note` = '$note' WHERE `id` = " . $wid);
                        // $_wid = $dsql->dsqlOper($sql, "update");
                    }


                    //商家转账到零钱，是异步打款
                    if($bank == 'weixin' && ($cfg_withdrawWxVersion==3 || $cfg_withdrawWxVersion==4)){

                        $rdate = GetMkTime(time());

                        //记录用户行为日志
                        memberLog($userid, 'member', 'withdraw', $wid, 'insert', '账户提现(' . $amount . '元)', '', $sql);

                        //余额操作&记录
                        if ($from != 'invite') {
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$amount' WHERE `id` = '$userid'");
                            $dsql->dsqlOper($archives, "update");

                            //保存操作日志
                            $user  = $userLogin->getMemberInfo($userid);
                            $usermoney = $user['money'];
                            //                        $money = sprintf('%.2f',($usermoney - $amount));
                            $title = '提现到微信';
                            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`title`,`ordernum`,`balance`,`pid`) VALUES ('$userid', '0', '$amount', '余额提现到微信', '$rdate','member','tixian','$title','$ordernum','$usermoney','$wid')");
                            $dsql->dsqlOper($archives, "update");

                            if ($tixianJifen > 0) {
                                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - $tixianJifen WHERE `id` = '$userid'");
                                $dsql->dsqlOper($archives, "update");
                                //积分日志
                                $userpoint = (int)$dsql->getOne($dsql::SetQuery("select `point` from `#@__member` where `id`=" . $userid));
                                $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '0', '$tixianJifen', '提现扣除', '$date','tixian','$userpoint')");
                                $dsql->dsqlOper($archives, "update");
                            }

                            //如果有手续费，既然已经提现成功，记录下来
                            //手续费业务已在计划任务中处理
                        }

                        return $wid;
                        
                    }
                    
                    //企业付款到零钱，是同步打款，可以直接获取到打款时间和单号
                    // elseif($cfg_withdrawWxVersion == 2){
                    else{

                        $rdate = (int)$return['date'];
                        $rdate = $rdate ? $rdate : GetMkTime(time());
                        $payment_no = $return['payment_no'];

                        $note = $payment_no;
                        
                        $_sql = $dsql->SetQuery("UPDATE `#@__member_withdraw` SET `state` = 1, `rdate` = '$rdate', `note` = '$note' WHERE `id` = " . $wid);
                        $_wid = $dsql->dsqlOper($_sql, "update");

                        if ($_wid == 'ok') {

                            //记录用户行为日志
                            memberLog($userid, 'member', 'withdraw', $wid, 'insert', '账户提现(' . $amount . '元)', '', $sql);

                            //余额操作&记录
                            if ($from != 'invite') {
                                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$amount' WHERE `id` = '$userid'");
                                $dsql->dsqlOper($archives, "update");

                                //保存操作日志
                                if ($bank == 'weixin') {
                                    $_bankname = '微信';
                                } elseif ($bank == 'alipay') {
                                    $_bankname = '支付宝';
                                } else {
                                    $_bankname = $bank;
                                }
                                $user  = $userLogin->getMemberInfo($userid);
                                $usermoney = $user['money'];
                                //                        $money = sprintf('%.2f',($usermoney - $amount));
                                $title = '提现到' . $_bankname;
                                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`title`,`ordernum`,`balance`,`pid`) VALUES ('$userid', '0', '$amount', '余额提现：$payment_no', '$rdate','member','tixian','$title','$ordernum','$usermoney','$wid')");
                                $dsql->dsqlOper($archives, "update");

                                if ($tixianJifen > 0) {
                                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - $tixianJifen WHERE `id` = '$userid'");
                                    $dsql->dsqlOper($archives, "update");
                                    //积分日志
                                    $userpoint = (int)$dsql->getOne($dsql::SetQuery("select `point` from `#@__member` where `id`=" . $userid));
                                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '0', '$tixianJifen', '提现扣除', '$date','tixian','$userpoint')");
                                    $dsql->dsqlOper($archives, "update");
                                }

                                //如果有手续费，既然已经提现成功，记录下来
                                if ($shouxu > 0) {
                                    $sql = $dsql::SetQuery("select `cityid` from `#@__member` where `id`={$userid}");
                                    $cityid = (int)$dsql->getOne($sql);
                                    $time = time();
                                    $info = '提现手续费，提现金额：' . $amount . '，流水号：' . $payment_no;
                                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`,`ordernum`) VALUES ('{$userid}', '1', '$amount', '$info', '$time','$cityid','0','member',$shouxu,'1','tixian','{$ordernum}')");
                                    $lastid = $dsql->dsqlOper($archives, "lastid");
                                }
                            }

                            //自定义配置
                            $param = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "withdraw_log_detail",
                                "id"       => $wid
                            );

                            $config = array(
                                "username" => $realname,
                                "amount" => $amount,
                                "date" => date("Y-m-d H:i:s", $date),
                                "info" => $note,
                                "fields" => array(
                                    'keyword1' => '提现金额',
                                    'keyword2' => '提现时间',
                                    'keyword3' => '提现状态'
                                )
                            );

                            updateMemberNotice($userid, "会员-提现申请审核通过", $param, $config);

                            return $wid;
                        } else {
                            //如果数据库写入失败，返回字符串，前端跳到提现列表页
                            return 'error';
                        }

                    }
                    
                } else {
                    //如果数据库写入失败，返回字符串，前端跳到提现列表页
                    return 'error';
                }
            }

            //生成提现记录
            if ($from != 'invite') {
                $sql = $dsql->SetQuery("INSERT INTO `#@__member_withdraw` (`uid`, `bank`, `bankCode`, `bankName`, `cardnum`, `cardname`, `amount`, `tdate`, `state`,`proportion`,`price`,`shouxuprice`,`pointRate`,`point`,`source`) VALUES ('$userid', '$bank', '$bankCode', '$bankName', '$cardnum', '$cardname', '$amount', '$date', 0,'$cfg_withdrawFee','$amount_','$shouxu','$cfg_withdrawJfFee',$tixianJifen,'$source')");
            } else {
                $sql = $dsql->SetQuery("INSERT INTO `#@__member_withdraw` (`uid`, `bank`, `bankCode`, `bankName`, `cardnum`, `cardname`, `amount`, `tdate`, `state`, `type`,`proportion`,`price`,`shouxuprice`,`source`) VALUES ('$userid', '$bank', '$bankCode', '$bankName', '$cardnum', '$cardname', '$amount', '$date', 0, 2,'$cfg_withdrawFee','$amount_','$shouxu','$source')");
            }
            $wid = $dsql->dsqlOper($sql, "lastid");

            if (is_numeric($wid)) {

                //记录用户行为日志
                memberLog($userid, 'member', 'withdraw', $wid, 'insert', '账户提现(' . $amount . '元)', '', $sql);

                // 减去余额、冻结金额
                if ($from != 'invite') {

                    //生成交易日志，针对不自动到账的情况，后台审核通过后，再更新此条记录
                    if ($cfg_withdrawCheckType || ($bank != 'weixin' && $bank != 'alipay')) {
                        $user  = $userLogin->getMemberInfo($userid);
                        $usermoney = $user['money'];
                        $money = sprintf('%.2f', ($usermoney - $amount));
                        $title = '余额提现';
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`title`,`ordernum`,`balance`,`pid`) VALUES ('$userid', '0', '$amount', '$title', '$date','member','tixian','$title','$ordernum','$money','$wid')");
                        $dsql->dsqlOper($archives, "update");
                    }

                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$amount', `freeze` = `freeze` + '$amount' WHERE `id` = '$userid'");
                    $dsql->dsqlOper($archives, "update");

                    //扣除积分
                    if ($tixianJifen > 0) {
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - $tixianJifen WHERE `id` = '$userid'");
                        $dsql->dsqlOper($archives, "update");
                        //积分日志
                        $userpoint = (int)$dsql->getOne($dsql::SetQuery("select `point` from `#@__member` where `id`=" . $userid));
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '0', '$tixianJifen', '提现扣除', '$date','tixian','$userpoint')");
                        $dsql->dsqlOper($archives, "update");
                    }
                }

                //微信通知
                $user  = $userLogin->getMemberInfo($userid);
                $param = array(
                    'type'   => 2, //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => '',
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => "用户：" . $user['nickname'] . "\r\n申请提现：" . $amount,
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("member", "withdraw", $param);

                return $wid;
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][85] . '_201');  //提交失败！
            }
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][21][85] . '_200');  //提交失败！
        }
    }


    /**
     * 提现记录
     * @return array
     */
    public function withdraw_log()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $state = $page = $pageSize = 0;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $state    = $this->param['state'] ? $this->param['state'] : $_REQUEST['state'];
                $type     = $this->param['type'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $where = "";
        if ($state != "") {
            $where = " AND `state` = $state";
            if ($state == '0') {
                $where = " AND (`state` = $state or `state`=3)";

                $where1 = " AND (
                                CASE
                                WHEN module = 'dating'
                                AND type != 'bank' THEN
                                    0
                                ELSE
                                    1
                                END
                            ) = 1";
            } elseif ($state == '2') {
                $where1 = " AND `state` = 2";
            } else {
                $where1 = " AND (`state` = 1  or (`state` = 0 AND `type` !='bank'))";
            }
        }

        //提现类型
        if ($type) {
            $where .= " AND `type` = $type";
        }

        // $archives = $dsql->SetQuery("SELECT * FROM `#@__member_withdraw` WHERE `uid` = $userid".$where." ORDER BY `id` DESC");
        $archives = $dsql->SetQuery("SELECT COUNT(`id`) total FROM `#@__member_withdraw` WHERE `usertype` != 1 AND `uid` = $userid" . $where . " UNION ALL SELECT COUNT(`id`) total FROM `#@__member_putforward` WHERE `userid` = $userid" . $where1);
        $result = $dsql->dsqlOper($archives, "results");

        //总条数
        $totalCount = 0;
        if ($result) {
            foreach ($result as $key => $value) {
                $totalCount += $value['total'];
            }
        }
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);   //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $archives = $dsql->SetQuery("SELECT `id`, 'w' as tab FROM `#@__member_withdraw` WHERE `uid` = $userid" . $where . " UNION ALL SELECT `id`, 'p' as tab FROM `#@__member_putforward` WHERE `userid` = $userid " . $where1 . " ORDER BY `id` DESC");
        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        $param = array(
            "service"  => "member",
            "type"     => "user",
            "template" => "withdraw_log_detail",
            "id"       => "%id"
        );
        $url = getUrlPath($param);

        if ($results) {
            foreach ($results as $key => $val) {
                $id = $val['id'];
                $tab = $val['tab'];

                $list[$key]['id']       = $val['id'];
                $list[$key]['tab']      = $tab;

                if ($tab == "w") {
                    $sql = $dsql->SetQuery("SELECT *  FROM `#@__member_withdraw` WHERE `id` = $id");
                    $res = $dsql->dsqlOper($sql, "results");
                    $res = $res[0];

                    $list[$key]['bank']     = $res['bank'];
                    $list[$key]['bankCode'] = $res['bankCode'];
                    $list[$key]['bankName'] = $res['bankName'];
                    $list[$key]['cardnum']  = $res['cardnum'];
                    $list[$key]['cardname'] = $res['cardname'];
                    $list[$key]['amount']   = $res['amount'];
                    $list[$key]['tdate']    = $res['tdate'];
                    $list[$key]['state']    = $res['state'];
                    $list[$key]['url']      = str_replace("%id", $res['id'], $url);
                } elseif ($tab == "p") {
                    $sql = $dsql->SetQuery("SELECT *  FROM `#@__member_putforward` WHERE `id` = $id");
                    $res = $dsql->dsqlOper($sql, "results");
                    $res = $res[0];

                    $list[$key]['type']     = $res['type'];
                    $list[$key]['bank']     = $res['bank'];
                    $list[$key]['order_id'] = $res['order_id'];
                    $list[$key]['cardname'] = $res['cardname'];
                    $list[$key]['amount']   = $res['amount'];
                    $list[$key]['tdate']    = $res['pubdate'];
                    $list[$key]['paydate']  = $res['paydate'];
                    $list[$key]['state']    = $res['state'];
                    $list[$key]['url']      = str_replace("%id", $res['id'], $url) . "?type=p";
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 现金与积分兑换
     * @return array
     */
    public function convert()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_pointName;
        $param =  $this->param;
        $amount = $param['amount'];
        $paypwd = $param['paywd'] ? $param['paywd'] : $param['paypwd'];

        $date = GetMkTime(time());

        global $userLogin;
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if ($amount <= 0) {
            die($langData['siteConfig'][21][86]);
        }

        $this->param['id'] = $userid;
        $detail = $this->detail();
        if ($detail['money'] < $amount) return array("state" => 200, "info" => $langData['siteConfig'][21][87]);   //帐户余额不足，兑换失败！

        if (empty($paypwd)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][88]);  //请输入支付密码！
            die($langData['siteConfig'][21][88]);   //请输入支付密码！
        }

        //验证支付密码
        $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
        $results  = $dsql->dsqlOper($archives, "results");
        $res = $results[0];
        $hash = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
        if ($res['paypwd'] != $hash) return array("state" => 200, "info" => $langData['siteConfig'][21][89]);


        global $cfg_pointRatio;

        if (!$cfg_pointRatio) {
            return array("state" => 200, "info" => "兑换比例配置错误，提交失败！");
        }

        $totalConvert = $amount * $cfg_pointRatio;

        //扣除金额
        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$amount' WHERE `id` = '$userid'");
        $dsql->dsqlOper($archives, "update");
        $user  = $userLogin->getMemberInfo($userid);
        $usermoney = $user['money'];
        //        $money   = sprintf('%.2f',($usermoney-$amount));

        //保存操作日志
        $info  = $langData['siteConfig'][21][90] . '：' . $totalConvert;
        $title = '兑换' . $cfg_pointName;
        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`title`,`balance`) VALUES ('$userid', '0', '$amount', '$info', '$date','member','jifenduihuan','$title','$usermoney')");
        $dsql->dsqlOper($archives, "update");

        global  $userLogin;
        //增加积分
        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$totalConvert' WHERE `id` = '$userid'");
        $dsql->dsqlOper($archives, "update");
        $user  = $userLogin->getMemberInfo($userid);
        $userpoint = $user['point'];
        //        $pointuser = (int)($userpoint+$totalConvert);
        //保存操作日志
        $info = $langData['siteConfig'][21][91] . '：' . $amount;
        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '1', '$totalConvert', '$info', '$date','duihuan','$userpoint')");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($userid, 'member', 'money', 0, 'insert', '现金与' . $cfg_pointName . '兑换(' . $amount . '元兑换' . $totalConvert . $cfg_pointName . ')', '', $archives);

        return $langData['siteConfig'][20][217];  //兑换成功！

    }


    /**
     * 积分转赠
     * @return array
     */
    public function transfer()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointFee;
        global $langData;

        $param =  $this->param;
        $user   = $param['user'];
        $amount = $param['amount'];
        $paypwd = $param['paypwd'];

        $date = GetMkTime(time());

        global $userLogin;
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //验证会员
        $toUser = 0;
        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `username` = '$user'");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $toUser = $results[0]['id'];
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][21][92]);   //对方会员不存在，请确认后重试！
        }

        if ($userid == $toUser) return array("state" => 200, "info" => $langData['siteConfig'][21][93]);   //不可以转赠给自己！

        if ($amount <= 0) return array("state" => 200, "info" => $langData['siteConfig'][21][94]);  //转赠数量必须为整数或小数，小数点后不超过2位。

        $this->param['id'] = $userid;
        $detail = $this->detail();
        $username = $detail['username'];
        if ($detail['point'] < $amount) return array("state" => 200, "info" => $langData['siteConfig'][21][95]);   //帐户积分不足，转赠失败！

        if (empty($paypwd)) return array("state" => 200, "info" => $langData['siteConfig'][21][88]);   //请输入支付密码！

        //验证支付密码
        $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
        $results  = $dsql->dsqlOper($archives, "results");
        $res = $results[0];
        $hash = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
        if ($res['paypwd'] != $hash) return array("state" => 200, "info" => $langData['siteConfig'][21][89]);  //支付密码输入错误，请重试！


        global $cfg_pointFee;
        $totalTransfer = $amount;
        if ($cfg_pointFee > 0) {
            $totalTransfer = $amount / (1 + $cfg_pointFee / 100);  //计算扣除手续费的结果
        }

        $totalTransfer = sprintf('%.2f', $totalTransfer);
        global $userLogin;
        //减少积分
        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - '$amount' WHERE `id` = '$userid'");
        $dsql->dsqlOper($archives, "update");
        $user  = $userLogin->getMemberInfo($userid);
        $userpoint = $user['point'];
        //        $pointuser = (int)($userpoint-$amount);
        //保存操作日志
        $info = $langData['siteConfig'][21][96] . "：$user => $amount";  //转出给会员
        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '0', '$amount', '$info', '$date','zengsong','$userpoint')");
        $dsql->dsqlOper($archives, "update");

        //增加积分
        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$totalTransfer' WHERE `id` = '$toUser'");
        $dsql->dsqlOper($archives, "update");
        $user  = $userLogin->getMemberInfo($toUser);
        $userpoint = $user['point'];
        //        $pointuser = (int)($userpoint+$totalTransfer);
        //保存操作日志
        $info = "$username " . $langData['siteConfig'][19][730] . " => $totalTransfer";  //转赠
        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$toUser', '1', '$totalTransfer', '$info', '$date','zengsong','$userpoint')");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($userid, 'member', 'point', 0, 'insert', '积分转赠(' . $toUser . '=>' . $totalTransfer . ')', '', $sql);

        return $langData['siteConfig'][21][97];  //转赠成功！

    }


    /**
     * 交友会员注册
     * @return array
     */
    public function regDating()
    {
        global $dsql;
        global $userLogin;
        global $cfg_regstatus;
        global $cfg_regclosemessage;
        global $langData;
        if ($cfg_regstatus == 0) {
            die('200|' . $cfg_regclosemessage);
        }

        $type   = (int)$this->param['type'];
        $mobile = $this->param['mobile'];
        $email = $this->param['email'];
        $password = $this->param['password'];
        $sex   = (int)$this->param['sex'];
        $year  = (int)$this->param['year'];
        $month = (int)$this->param['month'];
        $day   = (int)$this->param['day'];
        $addr  = (int)$this->param['addr'];

        $username = "";

        if ($type == 1) {
            //手机
            if (empty($mobile)) {
                die('205|' . $langData['siteConfig'][20][239]);  //请输入手机号
            }
            preg_match('/0?(13|14|15|17|18)[0-9]{9}/', $mobile, $matchPhone);
            if (!$matchPhone) {
                // die('205|' . $langData['siteConfig'][21][98]);  //手机号码格式错误！
            }

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `phone` = '$mobile'");
            $return = $dsql->dsqlOper($archives, "results");
            if ($return) {
                die('205|' . $langData['siteConfig'][21][98]);  //此手机号码已被注册！
            }

            $username = $mobile;
        } elseif ($type == 2) {

            //邮箱
            if (empty($email)) {
                die('204|' . $langData['siteConfig'][21][36]);  //请输入邮箱地址！
            }
            preg_match('/\w+((-w+)|(\.\w+))*\@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+/', $email, $matchEmail);
            if (!$matchEmail) {
                die('204|' . $langData['siteConfig'][21][100]);  //邮箱地址格式错误！
            }

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `email` = '$email'");
            $return = $dsql->dsqlOper($archives, "results");
            if ($return) {
                die('204|' . $langData['siteConfig'][21][101]);  //此邮箱地址已被注册！
            }

            $username = $email;
        } else {
            die('204|' . $langData['siteConfig'][21][102]);  //请选择注册方式！
        }

        //验证密码
        if (empty($password)) {
            die('202|' . $langData['siteConfig'][20][164]);   //请输入密码
        }
        // preg_match('/^.{5,}$/', $password, $matchPassword);
        // if (!$matchPassword) {
        //     die('202|' . $langData['siteConfig'][21][103]);  //密码长度最少为5位！
        // }
        $validatePassword = validatePassword($password);
        if($validatePassword != 'ok'){
            die('202|' . $validatePassword);
        }

        //验证区域
        if (empty($addr)) {
            die('202|' . $langData['siteConfig'][21][68]);  //请选择所在区域！
        }

        $birthday = GetMkTime($year . "-" . $month . "-" . $day);

        $passwd   = $userLogin->_getSaltedHash($password);
        $regtime  = GetMkTime(time());
        $regip    = GetIP();
        $regipaddr = getIpAddr($regip);

        $archives = $dsql->SetQuery("SELECT `regtime` FROM `#@__member` WHERE `regip` = '$regip' AND `state` = 1 ORDER BY `id` DESC LIMIT 0, 1");
        $return = $dsql->dsqlOper($archives, "results");
        if ($return) {
            global $cfg_regtime;
            if (round(($regtime - $return[0]['regtime']) / 60) < $cfg_regtime) {
                die('200|' . str_replace('1', $cfg_regtime, $langData['siteConfig'][21][104]));   //本站限制每次注册间隔时间为1分钟，请稍后再注册。
            }
        }

        $regfrom = getCurrentTerminal();

        //保存到主表
        $archives = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `email`, `emailCheck`, `phone`, `phoneCheck`, `regtime`, `regip`, `regipaddr`, `state`, `regfrom`) VALUES ('1', '$username', '$passwd', '$username', '$email', '0', '$mobile', '0', '$regtime', '$regip', '$regipaddr', '1', '$regfrom')");
        $aid = $dsql->dsqlOper($archives, "lastid");

        if ($aid) {

            //论坛同步
            if ($type == 2) {
                $data['username'] = $username;
                $data['password'] = $password;
                $data['email']    = $email;
                $userLogin->bbsSync($data, "register");
            }

            //自动登录
            $ureg = $userLogin->memberLogin($username, $password);

            //注册交友会员
            $sql = $dsql->SetQuery("INSERT INTO `#@__dating_member` (`userid`, `addrid`, `jointime`) VALUES ('$aid', '$addr', '$regtime')");
            $ret = $dsql->dsqlOper($sql, "update");

            autoShowUserModule($aid, 'dating'); // 注册交友，自动增加用户卡片

            die('100|' . $langData['siteConfig'][20][172]);   //注册成功！

        } else {
            die('200|' . $langData['siteConfig'][20][175]);   //网络错误，注册失败！
        }
        return;
    }



    /**
     * 会员入驻商家下单
     *
     */
    public function joinBusinessOrder()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $cfg_BusinessJoinConfig;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $param = $this->param;

        $module = trim($param['module']);  //要开通的特权标识
        $time = (int)$param['time'];  //要开通的时长

        //商家入驻配置信息
        $businessConfig = $cfg_BusinessJoinConfig;

        if(!$businessConfig) return array("state" => 200, "info" => "平台入驻配置未完善，请联系客服处理！");

        $joinState = (int)$businessConfig['joinState'];  //商家入驻功能  0开启  1关闭
        $joinTimesUnit = (int)$businessConfig['joinTimesUnit'];  //入驻时长单位  0按月  1按年

        if($joinState) return array("state" => 200, "info" => "平台未开启入驻服务！");

        if ($package === '') return array("state" => 200, "info" => "请选择要开通的服务！");
        if (empty($time)) return array("state" => 200, "info" => "请选择要开通的时长！");

        //订单信息记录变量
        $packageContent = array();

        //要开通的特权标识
        $packageContent['module'] = $module;

        //特权标题
        $name = '';

        //要开通的特权是否存在
        $packages = false;

        //特权单价
        $price = 0;
        
        //商家特权
        if($businessConfig && $businessConfig['privilege']){
            foreach ($businessConfig['privilege'] as $k => $v) {
                if ($k == $module && !$v['state']) {
                    $packages = true;
                    $price = (float)$v['price'];
                    $name = $v['title'];
                }
            }
        }

        //行业特权
        if($businessConfig && $businessConfig['store'] && !$packages){
            foreach ($businessConfig['store'] as $k => $v) {
                if ($k == $module) {
                    $packages = true;
                    $price = (float)$v['price'];
                    $name = $v['title'];
                }
            }
        }

        if (!$packages) {
            return array("state" => 200, "info" => "要开通的服务不存在或已经下线，请确认后重新选择！");
        }

        $packageContent['name'] = $name;

        //单价
        $packageContent['price'] = $price;

        //验证开通时长
        $discount = 0;
        $point = 0;
        $joinTimesConfig = $businessConfig['joinTimes'];
        if ($joinTimesConfig != '') {
            $times = false;
            foreach ($joinTimesConfig as $key => $value) {
                if ($value['times'] == $time) {
                    $times = true;
                    $discount = (float)$value['discount'];  //折扣
                    $point = (int)$value['point'];  //返积分数量
                }
            }
            if (!$times) {
                return array("state" => 200, "info" => "选择的开通时长不存在，请确认后重新选择！");
            }
        } else {
            return array("state" => 200, "info" => "平台未配置开通时长，开通失败！");
        }

        //时长
        $packageContent['time'] = $time;
        $packageContent['unit'] = $joinTimesUnit;  //入驻时长单位  0按月  1按年

        //订单金额
        $amount = (float)sprintf('%.2f', $price * $time);

        //原价
        $packageContent['mprice'] = $amount;

        //折扣
        $_amount = $amount;
        $offer = 0;
        if($discount > 0 && $discount < 10){
            
            $packageContent['discount'] = $discount;

            //计算折扣
            $_amount = $amount * $discount / 10;

            $offer = (float)sprintf('%.2f', $amount - $_amount);
            
            $packageContent['offer'] = $offer;
        }

        //实际支付
        $packageContent['amount'] = $_amount;

        //赠送积分
        $packageContent['point'] = $point;

        //当前登录会员信息
        $businessID = 0;
        $sql = $dsql->SetQuery("SELECT `id`, `state` FROM `#@__business_list` WHERE `uid` = $userid ORDER BY `id` DESC");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $businessID = $ret[0]['id'];
        }
        else{
            return array("state" => 200, "info" => "请入驻商家后再开通！");
        }

        //创建入驻订单
        $order_sn = create_ordernum();
        $packageContent = serialize($packageContent);
        $date = time();

        //删除1周前的下单记录
        $_weektime = GetMkTime(time()) - 86400 * 7;
        $sql = $dsql->SetQuery("DELETE FROM `#@__business_order` WHERE `state` = 0 AND `date` < $_weektime");
        $dsql->dsqlOper($sql, "update");

        //新增下单记录
        $sql = $dsql->SetQuery("INSERT INTO `#@__business_order` (`bid`, `ordernum`, `totalprice`, `offer`, `balance`, `paytype`, `amount`, `date`, `paydate`, `state`, `package`) VALUES ('$businessID', '$order_sn', '$_amount', '$offer', '0', '', '$_amount', '$date', '0', '0', '$packageContent')");
        $oid = $dsql->dsqlOper($sql, "lastid");
        if (!is_numeric($oid)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
        }

        //需要支付的金额为0时，返回跳转页面
        if ($_amount <= 0) {
            //增加支付日志
            $body = serialize(array('type' => 'join_pay'));

            //判断是否已创建过
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordernum` = '$order_sn' AND `uid` = '$userid' AND `ordertype` = 'member' AND `body` = '$body'");
            $ret = $dsql->dsqlOper($archives, "results");
            if ($ret) {
                $archives = $dsql->SetQuery("UPDATE `#@__pay_log` SET `state` = 1, `pubdate` = '$date', `paytype` = '' WHERE `ordernum` = '$order_sn' AND `uid` = '$userid' AND `ordertype` = 'member' AND `body` = '$body'");
            } else {
                $archives = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`, `pubdate`) VALUES ('member', '$order_sn', '$userid', '$body', '0', '', '1', '$date')");
            }
            $dsql->dsqlOper($archives, "update");

            //执行支付成功的操作
            $this->joinPaySuccess($order_sn);

            //跳转至支付成功页面
            $param = array(
                "service"  => "member",
                "template" => "index",
            );

            $url = getUrlPath($param);

            return $url;
        }

        $body = array('type' => 'join_pay');
        $order = createPayForm("member", $order_sn, $_amount, '', $langData['business'][0][0], $body, 1); //商家入驻

        if(is_array($order)){
            $order['timeout'] = $date + 3600;
        }

        return $order;
        //        //返回支付页面跳转链接地址
        //        $param = array(
        //            'service' => 'member',
        //            'type' => 'user',
        //            'template' => 'enter_pay',
        //            'param' => 'ordernum=' . $order_sn
        //        );
        //        return getUrlPath($param);
    }



    /**
     * 会员入驻商家支付
     *
     */
    public function joinBusinessPay()
    {
        global $dsql;
        global $cfg_basehost;
        global $cfg_pointRatio;
        global $langData;

        $param =  $this->param;

        //验证需要支付的费用
        $payTotalAmount = $this->checkJoinPayAmount();

        //重置表单参数
        $this->param = $param;

        if (is_array($payTotalAmount)) {
            $param = array(
                "service" => "member",
            );
            $url = getUrlPath($param);
            return $url;
        }

        $ordernum   = $param['ordernum'];
        $paytype    = $param['paytype'];
        $usePinput  = $param['usePinput'];
        $point      = (float)$param['point'];
        $useBalance = $param['useBalance'];
        $balance    = (float)$param['balance'];

        //如果有使用积分或余额则更新订单内容的价格策略
        if (($usePinput && !empty($point)) || ($useBalance && !empty($balance))) {

            $pointMoney = $usePinput ? $point / $cfg_pointRatio : 0;
            $balanceMoney = $balance;

            //查询订单信息
            $archives = $dsql->SetQuery("SELECT `totalprice` FROM `#@__business_order` WHERE `ordernum` = '$ordernum' AND `state` = 0");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {

                $res = $results[0];
                $oprice = $res['totalprice'];

                $usePointMoney = 0;
                $useBalanceMoney = 0;

                //先判断积分是否足够支付总价
                //如果足够支付：
                //1.把还需要支付的总价重置为0
                //2.积分总额减去用掉的
                //3.记录已经使用的积分
                if ($oprice < $pointMoney) {
                    $pointMoney -= $oprice;
                    $usePointMoney = $oprice;
                    $oprice = 0;
                    //积分不够支付再判断余额是否足够
                    //如果积分不足以支付总价：
                    //1.总价减去积分抵扣掉的部部分
                    //2.积分总额设置为0
                    //3.记录已经使用的积分
                } else {
                    $oprice -= $pointMoney;
                    $usePointMoney = $pointMoney;
                    $pointMoney = 0;
                    //验证余额是否足够支付剩余部分的总价
                    //如果足够支付：
                    //1.把还需要支付的总价重置为0
                    //2.余额减去用掉的部分
                    //3.记录已经使用的余额
                    if ($oprice < $balanceMoney) {
                        $balanceMoney -= $oprice;
                        $useBalanceMoney = $oprice;
                        $oprice = 0;
                        //余额不够支付的情况
                        //1.总价减去余额付过的部分
                        //2.余额设置为0
                        //3.记录已经使用的余额
                    } else {
                        $oprice -= $balanceMoney;
                        $useBalanceMoney = $balanceMoney;
                        $balanceMoney = 0;
                    }
                }

                $pointMoney_ = $usePointMoney * $cfg_pointRatio;
                $archives = $dsql->SetQuery("UPDATE `#@__business_order` SET `point` = '$pointMoney_', `balance` = '$useBalanceMoney', `amount` = '$oprice' WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($archives, "update");
            } else {
                $param = array(
                    "service" => "member",
                );
                $url = getUrlPath($param);
                return $url;
            }

            //如果没有使用积分或余额，重置积分&余额等价格信息
        } else {

            //查询订单信息
            $archives = $dsql->SetQuery("SELECT `totalprice` FROM `#@__business_order` WHERE `ordernum` = '$ordernum' AND `state` = 0");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $res = $results[0];
                $oprice = $res['totalprice'];

                $archives = $dsql->SetQuery("UPDATE `#@__business_order` SET `point` = '0', `balance` = '0', `amount` = '$oprice' WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($archives, "update");
            } else {
                $param = array(
                    "service"     => "member",
                );
                $url = getUrlPath($param);
                return $url;
            }
        }

        //1.如果需要支付的金额小于等于0，表示会员使用积分或余额已经付清了，不需要另外去支付
        //2.这种情况直接更新订单状态，并跳转至支付成功页即可
        //3.对会员的积分和余额进行扣除操作
        if ($payTotalAmount <= 0) {

            $date = GetMkTime(time());
            $paytype = array();

            //查询订单信息
            $archives = $dsql->SetQuery("SELECT o.`id`, o.`bid`, o.`point`, o.`balance`, b.`uid` FROM `#@__business_order` o LEFT JOIN `#@__business_list` b ON b.`id` = o.`bid` WHERE o.`ordernum` = '$ordernum' AND o.`state` = 0");
            $results  = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $res = $results[0];
                $userid  = $res['uid'];   //购买用户ID
                $orderid  = $res['id'];   //订单ID
                $upoint   = $res['point'];    //使用的积分
                $ubalance = $res['balance'];  //使用的余额

                //扣除会员积分
                if (!empty($upoint) && $upoint > 0) {
                    $paytype[] = "point";
                }

                //扣除会员余额
                if (!empty($ubalance) && $ubalance > 0) {
                    $paytype[] = "money";
                }
            } else {
                $param = array(
                    "service" => "member",
                );
                $url = getUrlPath($param);
                return $url;
            }

            //增加支付日志
            $body = serialize(array('type' => 'join_pay'));

            //判断是否已创建过
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `uid` = '$userid' AND `ordertype` = 'member' AND `body` = '$body'");
            $ret = $dsql->dsqlOper($archives, "results");
            if ($ret) {
                $archives = $dsql->SetQuery("UPDATE `#@__pay_log` SET `state` = 1, `pubdate` = '$date', `paytype` = '" . join(",", $paytype) . "' WHERE `ordernum` = '$ordernum' AND `uid` = '$userid' AND `ordertype` = 'member' AND `body` = '$body'");
            } else {
                $archives = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`, `pubdate`) VALUES ('member', '$ordernum', '$userid', '$body', '0', '" . join(",", $paytype) . "', '1', '$date')");
            }
            $dsql->dsqlOper($archives, "update");

            //执行支付成功的操作
            $this->joinPaySuccess($ordernum);

            //跳转至支付成功页面
            $param = array(
                "service"  => "member",
                "template" => "index",
            );

            $url = getUrlPath($param);

            return $url;
            //            header("location:".$url);

        } else {
            //跳转至第三方支付页面
            $body = array('type' => 'join_pay');
            $order = createPayForm("member", $ordernum, $payTotalAmount, $paytype, $langData['business'][0][0], $body); //商家入驻

            return $order;
        }
    }


    /**
     * 支付前验证帐户积分和余额
     */
    public function checkJoinPayAmount()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointName;
        global $cfg_pointRatio;
        global $langData;

        $userid   = $userLogin->getMemberID();
        $param    = $this->param;

        $ordernum   = $param['ordernum'];    //订单号
        $usePinput  = $param['usePinput'];   //是否使用积分
        $point      = $param['point'];       //使用的积分
        $useBalance = $param['useBalance'];  //是否使用余额
        $balance    = $param['balance'];     //使用的余额
        $paypwd     = $param['paypwd'];      //支付密码

        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请登录后重试！
        if (empty($ordernum)) return array("state" => 200, "info" => $langData['travel'][13][15]); //提交失败，订单号不能为空！
        if (!empty($balance) && empty($paypwd)) return array("state" => 200, "info" => $langData['travel'][13][16]); //请输入支付密码！

        //查询订单信息
        $totalPrice = 0;
        $archives = $dsql->SetQuery("SELECT `totalprice` FROM `#@__business_order` WHERE `state` = 0 AND `ordernum` = '$ordernum'");
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $res = $results[0];
            $totalPrice = $res['totalprice'];
        } else {
            return array("state" => 200, "info" => "订单状态异常！");
        }

        //查询会员信息
        $userinfo  = $userLogin->getMemberInfo();
        $usermoney = $userinfo['money'];
        $userpoint = $userinfo['point'];

        $tit      = array();
        $useTotal = 0;

        //判断是否使用积分，并且验证剩余积分
        if ($usePinput == 1 && !empty($point)) {
            if ($userpoint < $point) return array("state" => 200, "info" => $langData['travel'][13][17] . $cfg_pointName . $langData['travel'][13][18]); //您的可用".$cfg_pointName."不足，支付失败！
            $useTotal += $point / $cfg_pointRatio;
            $tit[] = $cfg_pointName;
        }

        //判断是否使用余额，并且验证余额和支付密码
        if ($useBalance == 1 && !empty($balance) && !empty($paypwd)) {
            //验证支付密码
            $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
            $results  = $dsql->dsqlOper($archives, "results");
            $res = $results[0];
            $hash = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
            if ($res['paypwd'] != $hash) return array("state" => 200, "info" => $langData['travel'][13][19]); //支付密码输入错误，请重试！
            //验证余额
            if ($usermoney < $balance) return array("state" => 200, "info" => $langData['travel'][13][20]); //您的余额不足，支付失败！
            $useTotal += $balance;
            $tit[] = $langData['travel'][13][21]; //余额
        }

        if ($useTotal > $totalPrice) return array("state" => 200, "info" => $langData['travel'][13][22] . join($langData['travel'][13][23], $tit) . $langData['travel'][13][24] . join($langData['travel'][13][23], $tit)); //"您使用的".join("和", $tit)."超出订单总费用，请重新输入要使用的".join("和", $tit)

        //返回需要支付的费用
        return sprintf("%.2f", $totalPrice - $useTotal);
    }


    //扫码code
    public function sweepcode()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointName;
        global $cfg_pointRatio;
        global $langData;
        $param =  $this->param;

        //验证需要支付的费用
        $payTotalAmount = $this->checkJoinPayAmount();
        //重置表单参数
        $this->param = $param;

        $param_ = $param;
        $ordernum = $param['ordernum'];
        $paytype = $param['paytype'];
        $final      = (int)$param['final']; // 最终支付
        $paytype    = $param['paytype'];
        $usePinput  = $param['usePinput'];
        $point      = (float)$param['point'];
        $useBalance = $param['useBalance'];
        $balance    = (float)$param['balance'];

        if (!is_array($payTotalAmount)) {
            $amount =  $payTotalAmount;
        } else {
            return $payTotalAmount;
        }
        //余额or积分混合支付
        if ($final == 1 && ($usePinput && !empty($point)) || ($useBalance && !empty($balance))) {

            $pointMoney = $usePinput ? $point / $cfg_pointRatio : 0;
            $balanceMoney = $balance;

            //查询订单信息
            $archives = $dsql->SetQuery("SELECT `totalprice` FROM `#@__business_order` WHERE `state` = 0 AND `ordernum` = '$ordernum'");
            $results  = $dsql->dsqlOper($archives, "results");

            if ($results) {
                $res = $results[0];
                $oprice = $res['totalprice'];  //单个订单总价 = 数量 * 单价

                $usePointMoney = 0;
                $useBalanceMoney = 0;

                //先判断积分是否足够支付总价
                //如果足够支付：
                //1.把还需要支付的总价重置为0
                //2.积分总额减去用掉的
                //3.记录已经使用的积分
                if ($oprice < $pointMoney) {
                    $pointMoney -= $oprice;
                    $usePointMoney = $oprice;
                    $oprice = 0;
                    //积分不够支付再判断余额是否足够
                    //如果积分不足以支付总价：
                    //1.总价减去积分抵扣掉的部部分
                    //2.积分总额设置为0
                    //3.记录已经使用的积分
                } else {
                    $oprice -= $pointMoney;
                    $usePointMoney = $pointMoney;
                    $pointMoney = 0;
                    //验证余额是否足够支付剩余部分的总价
                    //如果足够支付：
                    //1.把还需要支付的总价重置为0
                    //2.余额减去用掉的部分
                    //3.记录已经使用的余额
                    if ($oprice < $balanceMoney) {
                        $balanceMoney -= $oprice;
                        $useBalanceMoney = $oprice;
                        $oprice = 0;
                        //余额不够支付的情况
                        //1.总价减去余额付过的部分
                        //2.余额设置为0
                        //3.记录已经使用的余额
                    } else {
                        $oprice -= $balanceMoney;
                        $useBalanceMoney = $balanceMoney;
                        $balanceMoney = 0;
                    }
                }

                $pointMoney_ = $usePointMoney * $cfg_pointRatio;
                $archives = $dsql->SetQuery("UPDATE `#@__business_order` SET `point` = '$pointMoney_', `balance` = '$useBalanceMoney', `amount` = '$oprice' WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($archives, "update");

                //扫码支付 更新微信或者支付宝实际支付金额
                $paylogsql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `amount` = '$oprice' WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($paylogsql, "update");
            } else {
                die('订单状态异常！');
            }
        }
        $isMobile = isMobile();

        global $userLogin;
        global $langData;

        if ($userLogin->getMemberID() == -1) die($langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if ($amount <= 0) {
            die($langData['siteConfig'][21][254]);   //订单支付金额必须为整数或小数，小数点后不超过2位。
        }
        if (empty($paytype)) {
            die($langData['siteConfig'][21][75]);   //请选择支付方式！
        }

        $ordernum = $ordernum ? $ordernum : create_ordernum();

        if ($isMobile && empty($final)) {
            $param_['ordernum'] = $ordernum;
            $param_['ordertype'] = 'deposit';
            $param = array(
                "service" => "member",
                "type" => "user",
                "template" => "pay",
                "param" => http_build_query($param_)
            );
            header("location:" . getUrlPath($param));
            die;
        }

        // var_dump($amount);die;
        return createPayForm("member", $ordernum, $amount, $paytype, $langData['business'][0][0], array("type" => "join_pay"));   //商家入驻

    }


    /**
     * 入驻支付成功
     */
    private function joinPaySuccess($ordernum)
    {
        global $dsql;
        global $userinfo;
        global $userLogin;
        global $langData;
        global $cfg_pointName;
        global $siteCityInfo;
        global $cfg_storeFee;
        global $cfg_BusinessJoinConfig;

        //根据订单号查询订单信息
        if (empty($ordernum)) die('订单号为空');

        $sql = $dsql->SetQuery("SELECT l.`uid`, l.`paytype`,l.`id` pid, o.`bid`, o.`totalprice`, o.`balance`, o.`point`, o.`amount`, o.`package` FROM `#@__pay_log` l LEFT JOIN `#@__business_order` o ON o.`ordernum` = l.`ordernum` WHERE l.`ordernum` = '$ordernum' AND l.`state` = 1");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $ret = $ret[0];
            $uid = $ret['uid'];
            $paytype = $ret['paytype'];
            $bid = $ret['bid'];
            $totalprice = $ret['totalprice'];
            $balance = $ret['balance'];
            $point = $ret['point'];
            $amount = $ret['amount'];
            $pid = $ret['pid'];
            $package = $ret['package'] ? unserialize($ret['package']) : array();

            //开通的套餐信息
            $package_module = $package['module'];  //特权标识
            $package_name = $package['name'];  //特权名称
            $package_price = $package['price'];  //单价
            $package_time = $package['time'];  //开通时长
            $package_unit = $package['unit'];  //时长单位  0按月  1按年
            $package_mprice = $package['mprice'];  //原价
            $package_discount = $package['discount'];  //折扣
            $package_offer = $package['offer'];  //折扣金额
            $package_amount = $package['amount'];  //支付价格
            $package_point = $package['point'];    //赠送积分

            $userinfo = $userLogin->getMemberInfo($uid);

            //如果使用了余额付款，二次验证余额是否大于等于支付时使用的金额
            if ($balance > 0) {
                $money = $userinfo['money'];
                if ($money - $balance < 0) {
                    die($langData['siteConfig'][21][106]);  //会员余额与支付时所选余额不匹配，开通失败！
                }
            }

            $time = time();
            $ip = GetIP();
            $ipaddr = getIpAddr($ip);

            //更新商家信息、订单状态
            $archive = $dsql->SetQuery("SELECT l.`state`, l.`type`, l.`package`, l.`title`, l.`cityid`, l.`state`, m.`areaCode`, m.`phone` FROM `#@__business_list` l LEFT JOIN `#@__member` m ON m.`id` = l.`uid` WHERE l.`id` = $bid");
            $result  = $dsql->dsqlOper($archive, "results");
            if ($result) {
                $busiDetail  = $result[0];
                $busiState    = $busiDetail['state'];
                $busiType    = $busiDetail['type'];
                $busiTitle    = $busiDetail['title'];
                $busiAreaCode = (int)$busiDetail['areaCode'];
                $busiPhone    = $busiDetail['phone'];
                $_cityid    = $busiDetail['cityid'];
                $busiPackage = $busiDetail['package'] ? unserialize($busiDetail['package']) : array();
                $_state = (int)$busiDetail['state'];

                $dateType = $package_unit ? ' year' : ' month';
                $expired = strtotime("+" . $package_time . $dateType);

                //记录已经开通的特权，用于后台的检索
                $package_list = array();

                //判断是否已经开通过套餐
                if ($busiPackage) {

                    $newItem = array();

                    //已开通的特权内容
                    $busiItem = $busiPackage['item'];

                    //是否已经开通过
                    $hasOpen = false;

                    //兼容老数据
                    if(isset($busiItem['name'])){
                        $busiItem = array($busiItem);
                    }

                    foreach ($busiItem as $key => $value) {
                        if ($value['name'] == $package_module) {
                            //如果开通的内容已经过期，则使用当前时间加上开通的月份，否则使用原有的过期时间加上开通的月份
                            $expired = $value['expired'] < $time ? $expired : strtotime("+" . $package_time . $dateType, $value['expired']);
                            array_push($newItem, array(
                                'name' => $value['name'],
                                'expired' => $expired
                            ));
                            $hasOpen = true;
                        } else {
                            array_push($newItem, $value);
                        }

                        array_push($package_list, $value['name']);
                    }

                    //如果还有新的套餐内容，继续累加
                    if (!$hasOpen) {
                        array_push($newItem, array(
                            'name' => $package_module,
                            'expired' => $expired
                        ));

                        array_push($package_list, $package_module);
                    }

                    $packageContent = array(
                        'package' => '-1',
                        'expired' => $busiPackage['expired'],   //保持原有过期时间
                        'item' => $newItem       //最新的自选套餐内容
                    );

                } else {

                    //需要保存到数据库中的数据
                    $packageContent = array(
                        'package' => '-1',
                        'item' => array(
                            'name' => $package_module,
                            'expired' => $expired
                        )
                    );
                        
                    array_push($package_list, $package_module);

                }

                // 更新会员类型
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `mtype` = 2 WHERE `id` = $uid");
                $dsql->dsqlOper($sql, "update");

                $packageContent = serialize($packageContent);

                //更新店铺的标题、套餐类型、套餐内容
                $upt = '';

                //未支付状态更新为已支付，进入入驻申请列表
                if ($busiState != 1) {
                    $upt .= ", `state` = 0";
                }

                if (empty($busiTitle)) {
                    $nickname = $userinfo['nickname'] . '的店铺';
                    $upt .= ", `title` = '$nickname'";
                }

                //入驻审核开关
                include HUONIAOINC . "/config/business.inc.php";
                $joinCheck = (int)$customJoinCheck;

                //如果已经开通过套餐，商家状态保持当前值
                if($busiPackage){
                    $joinCheck = $_state;
                }

                $package_list = join(',', $package_list);

                $sql = $dsql->SetQuery("UPDATE `#@__business_list` SET `type` = '-1', `package` = '$packageContent', `package_list` = '$package_list' " . $upt . ", `state` = $joinCheck WHERE `id` = $bid");
                $dsql->dsqlOper($sql, "update");

                //记录用户行为日志
                memberLog($uid, 'member', 'business', 0, 'update', '入驻商家', '', $sql);

                $o_times = $package_time . ($package_unit ? '年' : '个月');

                $sql = $dsql->SetQuery("UPDATE `#@__business_order` SET `paytype` = '$paytype', `paydate` = '$time', `balance` = '$balance', `point` = '$point', `amount` = '$amount', `state` = 1, `name` = '$package_name', `expired` = '$expired', `o_times` = '$o_times' WHERE `ordernum` = '$ordernum'");
                $ret = $dsql->dsqlOper($sql, "update");
            }
            
            //扣除会员积分
            if ($point > 0) {
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - '$point' WHERE `id` = '$uid'");
                $dsql->dsqlOper($archives, "update");
                $user  = $userLogin->getMemberInfo($uid);
                $userpoint = $user['point'];
                //保存操作日志
                $info = "商家入驻";
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$uid', '0', '$point', '$info', '$time','xiaofei','$userpoint')");
                $dsql->dsqlOper($archives, "update");
            }
            
            //扣除会员余额
            if ($balance > 0) {
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$balance' WHERE `id` = '$uid'");
                $dsql->dsqlOper($archives, "update");
                $user  = $userLogin->getMemberInfo($uid);
                $usermoney = $user['money'];
                //保存操作日志
                $info = "商家入驻";
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`title`,`ordernum`,`balance`) VALUES ('$uid', '0', '$balance', '$info', '$time','business','shangjiaruzhu','$pid','$info','$ordernum','$usermoney')");
                $dsql->dsqlOper($archives, "update");
            }

            //返积分
            if ($package_point) {
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + $package_point  WHERE `id` = $uid");
                $ret = $dsql->dsqlOper($sql, "update");
                if ($ret == "ok") {
                    $user  = $userLogin->getMemberInfo($uid);
                    $userpoint = $user['point'];
                    $note = "入驻商家送" . $package_point . $cfg_pointName;
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$uid', '1', '$package_point', '$note', '$time','zengsong','$userpoint')");
                    $aid = $dsql->dsqlOper($archives, "lastid");
                }
            }

            //商家入驻自动注册分销商
            include(HUONIAOINC . '/config/business.inc.php');
            $customBusinessJoinFenxiao = (int)$customBusinessJoinFenxiao;
            if ($customBusinessJoinFenxiao) {
                //不是分销商身份的才新增
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_fenxiao_user` WHERE `uid` = $uid");
                $ret = $dsql->dsqlOper($sql, "results");
                if (!$ret) {
                    $phone_ = $busiAreaCode == 86 || !$busiAreaCode ? '' : $busiAreaCode . $busiPhone;
                    $sql = $dsql->SetQuery("INSERT INTO `#@__member_fenxiao_user` (`uid`, `phone`, `state`, `pubdate`, `level`, `back`) VALUES ('$uid', '$phone_', '1', '$time', '0', '0')");
                    $dsql->dsqlOper($sql, "update");
                }
            }

            //微信通知
            if (!$_cityid) {
                $cityid  = $siteCityInfo['cityid'];
                $cityName = $siteCityInfo['name'];
            } else {
                $cityid  = $_cityid;
                $cityName = getSiteCityName($_cityid);
            }

            /*商家入驻分佣*/
            $_ordernum = $ordernum ? $ordernum : create_ordernum();
            $paramarr['amount'] = $totalprice;
            (new member())->returnFxMoney("business", $uid, $_ordernum, $paramarr);

            $_title = '商家入驻，订单号：' . $_ordernum;

            //查询一共分销了多少佣金
            $fenxiaomoneysql = $dsql->SetQuery("SELECT SUM(`amount`) allfenxiao FROM `#@__member_fenxiao` WHERE `ordernum` = '$_title' AND `module`= 'business'");
            $fenxiaomonyeres = $dsql->dsqlOper($fenxiaomoneysql, "results");
            $fenxiaoTotalPrice = $fenxiaomonyeres[0]['allfenxiao'];

            //结算金额减去分销掉的金额
            $totalprice -= $fenxiaoTotalPrice;

            //分站佣金
            $fzFee = cityCommission($cityid, 'store');
            //将费用打给分站
            $fztotalAmount_ =  $totalprice * (float)$fzFee / 100;
            $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;
            $fztotalAmount_ = sprintf("%.2f", $fztotalAmount_);

            //平台获得多少钱
            $fee = sprintf("%.2f", ($totalprice - $fztotalAmount_));

            $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` + '$fztotalAmount_' WHERE `cid` = '$cityid'");
            $dsql->dsqlOper($fzarchives, "update");
            $user  = $userLogin->getMemberInfo($uid);
            $usermoney = $user['money'];
            $money = sprintf('%.2f', ($usermoney + $amount));

            //保存操作日志
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`,`balance`) VALUES ('$uid', '1', '$amount', '商家入驻：" . $userinfo['nickname'] . "', '$time','$cityid','$fztotalAmount_','business',$fee,'1','shangjiaruzhu','$money')");
            $lastid = $dsql->dsqlOper($archives, "lastid");
            substationAmount($lastid, $cityid);

            $cityMoney = getcityMoney($cityid);   //获取分站总收益
            $allincom = getAllincome();             //获取平台今日收益

            //更新会员绑定的店铺特权状态
            updateStorePrivilege($uid);

            //微信通知
            $param = array(
                'type'   => "1", //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . "分站\r\n商家入驻\r\n用户：" . $userinfo["nickname"] . "\r\n特权：" . $package_name . "\r\n\r\n获得佣金：" . $fztotalAmount_,
                    'date' => date("Y-m-d H:i:s", time()),
                    'status' => "今日总收入：$cityMoney"
                )
            );

            $params = array(
                'type'   => "2", //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . "分站\r\n商家入驻\r\n用户：" . $userinfo["nickname"] . "\r\n特权：" . $package_name . "\r\n\r\n平台获得佣金：" . $fee . "\r\n分站获得佣金：" . $fztotalAmount_,
                    'date' => date("Y-m-d H:i:s", time()),
                    'status' => "今日总收入：$allincom"
                )
            );
            
            //后台微信通知
            updateAdminNotice("business", "detail", $param);
            updateAdminNotice("business", "detail", $params);
        } else {
            die('订单状态异常');
        }
    }



    /**
     * 会员入驻商家
     *
     */
    public function joinBusiness()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $name       = $this->param['name'];
        $areaCode   = (int)$this->param['areaCode'];
        $areaCode   = empty($areaCode) ? "86" : $areaCode;
        $phone      = $this->param['phone'];
        $yzm        = $this->param['yzm'];
        $typeid     = (int)$this->param['typeid'];
        $type       = (int)$this->param['type'];
        $cost       = abs((int)$this->param['cost']);
        $useBalance = (int)$this->param['useBalance'];
        $type_      = $this->param['type_'];
        $paytype    = $this->param['paytype'];

        $isPC = !isMobile();

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (empty($cityid)) {

            $userinfo = $userLogin->getMemberInfo($userid);
            if (!$userinfo['cityid']) {
                $cityid = getCityId();
            } else {
                $cityid = $userinfo['cityid'];
            }
        }

        // 升级或续费 验证店铺状态
        $renew_upgrade = false;
        $nowBusi = array();
        if ($type_ == "renew" || $type_ == "upgrade") {
            $type_temp = $type_;
            $type_ = "";
            $sql = $dsql->SetQuery("SELECT * FROM `#@__business_list` WHERE `uid` = $userid AND `state` != 4 ORDER BY `id` DESC");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $type_ = $type_temp;
                $nowBusi = $ret[0];
                $renew_upgrade = true;
            }
        }
        if ($type_ == "renew" || $type_ == "upgrade") {
            $name = $nowBusi['name'];
            $phone = $nowBusi['phone'];
            $typeid = $nowBusi['typeid'];

            if ($type_ == "renew") {
                $type = $nowBusi['type'];
            } else {
                $type = 2;
            }
        }

        $ordertype = $type_ ? $type_ : "join";

        // print_r($nowBusi);die;

        $date = time();

        $busiHandlers = new handlers("business", "config");
        $busiConfig = $busiHandlers->getHandle();
        $busiConfig = $busiConfig['info'];

        if ($type == 1) {
            if (!$busiConfig['trialState'] && !$renew_upgrade) return array("state" => 200, "info" => $busiConfig['trialName'] . self::$langData['siteConfig'][33][31]); //已停止入驻
            $priceCost = $busiConfig['trialCost'];
        } elseif ($type == 2) {
            if (!$busiConfig['enterpriseState'] && $type_ != "renew") return array("state" => 200, "info" => $busiConfig['enterpriseName'] . self::$langData['siteConfig'][33][31]); //已停止入驻
            $priceCost = $busiConfig['enterpriseCost'];
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][32]); //抱歉，入驻类型错误
        }
        if ($priceCost) {
            if ($cost >= count($priceCost)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][33]); //抱歉，入驻时间不正确
            }
            $priceCost = $priceCost[$cost];
        } else {
            // return array("state" => 200, "info" => "抱歉，暂时无法入驻商家，请联系网站管理员");
        }

        if (empty($type)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][34]);   //请输入入驻类型

        if (!$renew_upgrade) {

            if (empty($name)) return array("state" => 200, "info" => $langData['siteConfig'][20][330]);   //请输入姓名
            if (empty($phone)) return array("state" => 200, "info" => $langData['siteConfig'][20][239]);   //请输入手机号
            if (empty($typeid)) return array("state" => 200, "info" => $langData['siteConfig'][20][322]);  //请选择经营品类
            if (empty($yzm)) return array("state" => 200, "info" => $langData['siteConfig'][20][28]);  //请输入短信验证码

            //非国际版不需要验证区域码
            $acode = $areaCode;
            $archives = $dsql->SetQuery("SELECT `international` FROM `#@__sitesms` WHERE `state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $international = $results[0]['international'];
                if (!$international) {
                    $acode = "";
                }
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][3]); //短信平台未配置，发送失败！
            }

            //验证输入的验证码
            $archives = $dsql->SetQuery("SELECT `id`, `pubdate` FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'join' AND `user` = '" . $acode . $phone . "' AND `code` = '$yzm'");
            $results  = $dsql->dsqlOper($archives, "results");
            if (!$results) {
                return array("state" => 200, "info" => $langData['siteConfig'][20][99]);  //验证码输入错误，请重试！
            } else {

                //5分钟有效期
                if ($date - $results[0]['pubdate'] > 300) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);  //验证码已过期，请重新获取！

                //验证通过删除发送的验证码
                $archives = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'join' AND `user` = '" . $acode . $phone . "' AND `code` = '$yzm'");
                $dsql->dsqlOper($archives, "update");
            }
        }

        $ordernum = create_ordernum();
        $orderdate = GetMkTime(time());


        if ($priceCost) {
            $time = $priceCost['time'];
            $time_type = $priceCost['type'];
            $totalprice = $priceCost['price'];
        } else {
            $time = 0;
            $time_type = "";
            $totalprice = 0;
        }

        // 现金支付部分
        $payprice = $totalprice;
        // 余额支付部分
        $useBalance_ = 0;

        if ($totalprice && $useBalance) {
            $userinfo = $userLogin->getMemberInfo($userid);
            $usermoney = $userinfo['money'];
            if ($usermoney > 0) {
                $useBalance_ = $usermoney > $totalprice ? $totalprice : $usermoney;
                $payprice = $totalprice - $useBalance_;
            }
        }

        if ($totalprice > 0) {
            $param = array(
                "service"  => "member",
                "type"     => "user",
                "template" => "joinPay",
                "param" => "ordernum=" . $ordernum
            );
        } else {
            $param_ = array(
                "buy_type" => $type,
                "buy_time" => $time,
                "buy_time_type" => $time_type,
                "totalPrice" => 0
            );
            if ($renew_upgrade) {
                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                );
            } else {
                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                    "template" => "business-config",
                );
            }
        }
        $url = getUrlPath($param);

        $param_pcurl = array(
            "service" => "member",
            "action" => "joinPay",
            "ordernum" => $ordernum,
            "useBalance" => $useBalance,
            "paytype" => $paytype,
            "ordertype" => $ordertype,
        );
        $d = array();
        foreach ($param_pcurl as $k => $v) {
            $d[] = $k . "=" . $v;
        }
        $pc_url = $cfg_secureAccess . $cfg_basehost . "/include/ajax.php?" . join("&", $d);

        $param_pc = array(
            "type" => $ordertype,
            "userid" => $userid,
            "totalPrice" => $totalprice,
            "paytype" => $paytype,
            "balance" => $useBalance_,
            "amount" => $payprice,
            "buy_type" => $type,
            "buy_time" => $time,
            "buy_time_type" => $time_type,
        );

        //查询是否开通过
        $sql = $dsql->SetQuery("SELECT `id`, `state` FROM `#@__business_list` WHERE `uid` = $userid ORDER BY `id` DESC");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $id    = $ret[0]['id'];
            $state = $ret[0]['state'];

            $param_['business'] = $id;
            $param_pc['business'] = $id;

            // 删除未支付的订单
            $sql = $dsql->SetQuery("DELETE FROM `#@__business_order` WHERE `bid` = $id AND `state` = 0");
            $dsql->dsqlOper($sql, "update");

            //已经提交过但还没有支付
            if ($state == 4) {

                //更新资料
                $sql = $dsql->SetQuery("UPDATE `#@__business_list` SET `type` = '$type', `cityid` = '$cityid', `typeid` = '$typeid', `name` = '$name', `areaCode` = '$areaCode', `phone` = '$phone' WHERE `id` = $id");
                $ret = $dsql->dsqlOper($sql, "update");
                if ($ret == "ok") {

                    $sql = $dsql->SetQuery("INSERT INTO `#@__business_order` (`bid`, `ordernum`, `totalprice`, `offer`, `balance`, `paytype`, `amount`, `date`, `paydate`, `state`, `ordertype`, `type`, `time`, `time_type`) VALUES ('$id', '$ordernum', '$totalprice', '0', '$useBalance_', '$paytype', '0', '$date', '0', '0', '$ordertype', '$type', '$time', '$time_type')");
                    $oid = $dsql->dsqlOper($sql, "lastid");
                    if (!is_numeric($oid)) {
                        return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
                    }

                    // 现金支付部分为0
                    if ($isPC) {
                        if ($payprice == 0) {
                            $this->joinSuccess($param_pc, $ordernum);
                            return "ok";
                        } else {
                            return $pc_url;
                        }
                    } elseif ($totalprice == 0) {
                        $this->joinSuccess($param_, $ordernum);
                    }

                    return $url;
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
                }

                // 续费或升级
            } elseif ($renew_upgrade) {

                $sql = $dsql->SetQuery("INSERT INTO `#@__business_order` (`bid`, `ordernum`, `totalprice`, `offer`, `balance`, `paytype`, `amount`, `date`, `paydate`, `state`, `ordertype`, `type`, `time`, `time_type`) VALUES ('$id', '$ordernum', '$totalprice', '0', '$useBalance_', '$paytype', '0', '$date', '0', '0', '$ordertype', '$type', '$time', '$time_type')");
                $oid = $dsql->dsqlOper($sql, "lastid");
                if (!is_numeric($oid)) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
                }

                // 现金支付部分为0
                if ($isPC) {
                    if ($payprice == 0) {
                        $this->joinSuccess($param_pc, $ordernum);
                        return "ok";
                    } else {
                        return $pc_url;
                    }
                } elseif ($totalprice == 0) {
                    $this->joinSuccess($param_, $ordernum);
                }


                return $url;
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][105]);  //您已经申请，无需重复提交！
            }
        } else {

            //打印机
            $print_config = serialize(array());

            $addrid = 0;
            $sql = $dsql->SetQuery("INSERT INTO `#@__business_list` (`cityid`, `uid`, `logo`, `type`, `typeid`, `addrid`, `address`, `jingying`, `pubdate`, `state`, `name`, `areaCode`, `phone`, `email`, `cardnum`, `company`, `licensenum`, `license`, `accounts`, `cardfront`, `cardbehind`, `banner`, `pics`, `certify`, `body`, `wifi`, `bind_print`, `print_config`, `print_state`, `stateinfo`, `video`, `qj_file`, `custom_nav`) VALUES ('$cityid', '$userid', '$logo', '$type', '$typeid', '$addrid', '$address', '$jingying', '$date', '4', '$name', '$areaCode', '$phone', '$email', '$cardnum', '$company', '$licensenum', '$license', '$accounts', '$cardfront', '$cardbehind', '', '', '', '', '0', '0', '$print_config', '0', '', '', '', '')");
            $lid = $dsql->dsqlOper($sql, "lastid");
            if (is_numeric($lid)) {
                $sql = $dsql->SetQuery("INSERT INTO `#@__business_order` (`bid`, `ordernum`, `totalprice`, `offer`, `balance`, `paytype`, `amount`, `date`, `paydate`, `state`, `ordertype`, `type`, `time`, `time_type`) VALUES ('$lid', '$ordernum', '$totalprice', '0', '$useBalance_', '$paytype', '0', '$date', '0', '0', '$ordertype', '$type', '$time', '$time_type')");
                $oid = $dsql->dsqlOper($sql, "lastid");
                if (!is_numeric($oid)) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
                }

                // 现金支付部分为0
                if ($isPC) {
                    if ($payprice == 0) {
                        $param_pc['business'] = $lid;
                        $this->joinSuccess($param_pc, $ordernum);
                        return "ok";
                    } else {
                        return $pc_url;
                    }
                } elseif ($totalprice == 0) {
                    $param_['business'] = $lid;
                    $this->joinSuccess($param_, $ordernum);
                }


                return $url;
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
            }
        }
    }



    /**
     * 支付前检查 返回总费用
     */
    public function checkPayAmount()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointName;
        global $cfg_pointRatio;
        global $langData;

        $userid   = $userLogin->getMemberID();
        $param    = $this->param;
        $ordertype  = $param['ordertype'];    //订单类型
        $ordernum   = $param['ordernum'];    //订单号
        $usePinput  = $param['usePinput'];   //是否使用积分
        $point      = $param['point'];       //使用的积分
        $useBalance = $param['useBalance'];  //是否使用余额
        $balance    = $param['balance'];     //使用的余额
        $paypwd     = $param['paypwd'];      //支付密码
        $paytype    = $param['paytype'];     //支付方式

        $userid = $param['userid'] ? $param['userid'] : $userid;

        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        if (empty($ordertype) || empty($ordernum)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $totalPrice = 0;

        // 商家入驻相关
        if ($ordertype == "joinPay" || $ordertype == "join" || $ordertype == "renew" || $ordertype == "upgrade") {
            //查询是否有录入资料
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__business_list` WHERE `uid` = $userid ORDER BY `id` DESC");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $business = $ret[0]['id'];
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
            }

            // 验证订单
            $sql = $dsql->SetQuery("SELECT * FROM `#@__business_order` WHERE `bid` = $business AND `ordernum` = '$ordernum' AND `state` = 0");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $order = $ret[0];
                if ($order['state'] != 0) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
                }
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][85]);  //提交失败！
            }
            $totalPrice = $order['totalprice'];

            // 发布信息支付
        } elseif ($ordertype == "fabuPay") {
            $module = $param['module'];
            $tourl  = $param['tourl'];
            if (empty($module)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
            global $cfg_fabuAmount;
            $fabuAmount = $cfg_fabuAmount ? unserialize($cfg_fabuAmount) : array();

            if ($fabuAmount && $module != 'info') {
                $totalPrice = $fabuAmount[$module];
            } else {
                $totalPrice = $balance;
            }
            // 其他类型暂时不验证费用
        } else {
            $totalPrice = 9999999;
        }

        //查询会员信息
        $userinfo  = $userLogin->getMemberInfo();
        $usermoney = $userinfo['money'];
        $userpoint = $userinfo['point'];

        $tit      = array();
        $useTotal = 0;

        //判断是否使用积分，并且验证剩余积分
        if ($usePinput == 1 && !empty($point)) {
            if ($userpoint < $point) return array("state" => 200, "info" => $langData['siteConfig'][21][103]);  //您的可用积分不足，支付失败！
            $useTotal += $point / $cfg_pointRatio;
            $tit[] = $cfg_pointName;
        }

        //判断是否使用余额，并且验证余额和支付密码
        if ($useBalance == 1 && !empty($balance)) {
            // if(isMobile()){
            if (empty($paypwd)) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][88]);  //请输入支付密码！
            } else {
                //验证支付密码
                $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
                $results  = $dsql->dsqlOper($archives, "results");
                $res = $results[0];
                $hash = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
                if ($res['paypwd'] != $hash) return array("state" => 200, "info" => $langData['siteConfig'][21][89]);  //支付密码输入错误，请重试！
            }
            // }
            //验证余额
            if ($usermoney < $balance) return array("state" => 200, "info" => $langData['siteConfig'][20][213]);  //您的余额不足，支付失败！

            $useTotal += $balance;
            $tit[] = $langData['siteConfig'][19][363];  //余额
        }

        if ($useTotal > $totalPrice) return array("state" => 200, "info" => str_replace('1', join($langData['siteConfig'][13][46], $tit), $langData['siteConfig'][21][104]));  //和  您使用的1超出订单总费用，请重新输入！

        return sprintf('%.2f', $totalPrice);
    }

    /**
     * 支付
     */
    public function pay()
    {
        global $dsql;
        global $userLogin;

        $param    = $this->param;
        $ordertype = isset($param['ordertype']) ? $param['ordertype'] : '';   //类型
        $ordernum = $param['ordernum'];  //订单号

        //如果没有获取到ordertype，则从pay_log表中获取
        if(empty($ordertype) && $ordernum){
            $archives = $dsql->SetQuery("SELECT `body` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum'");
		    $results = $dsql->dsqlOper($archives, "results");
            if($results){
                $body = $results[0]['body'];
                $bodyArr = unserialize($body);
                if($bodyArr && is_array($bodyArr)){
                    $ordertype = $bodyArr['type'];

                    $this->param = array_merge($param, $bodyArr);
                }
            }
        }

        if (empty($ordertype)) die(self::$langData['siteConfig'][30][47]); //操作错误！
        $ordertype = explode('_filter_', $ordertype);
        $ordertype = $ordertype[0];
        if (method_exists($this, $ordertype)) {
            $this->$ordertype();
        } else {
            die(self::$langData['siteConfig'][30][47]); //操作错误！
        }
    }


    /**
     * 入驻商家支付签约
     */
    public function joinPay()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointName;
        global $cfg_pointRatio;
        global $langData;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $userid   = $userLogin->getMemberID();
        $param    = $this->param;

        $ordernum   = $param['ordernum'];    //订单号
        $usePinput  = $param['usePinput'];   //是否使用积分
        $point      = $param['point'];       //使用的积分
        $useBalance = $param['useBalance'];  //是否使用余额
        $balance    = $param['balance'];     //使用的余额
        $paypwd     = $param['paypwd'];      //支付密码
        $paytype    = $param['paytype'];     //支付方式

        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        // 错误跳转页面
        $url = $cfg_secureAccess . $cfg_basehost;
        // 成功跳转页面
        $param_ = array(
            "service" => "member",
            "type" => "user",
            "template" => "business-config",
        );
        $sucUrl = getUrlPath($param_);

        $totalPrice = $this->checkPayAmount();

        if (is_array($totalPrice)) {
            die($totalPrice['info']);
        }

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__business_list` WHERE `uid` = $userid ORDER BY `id` DESC");
        $ret = $dsql->dsqlOper($sql, "results");
        $business = $ret[0]['id'];

        $sql = $dsql->SetQuery("SELECT * FROM `#@__business_order` WHERE `ordernum` = '$ordernum' AND `state` = 0");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $order = $ret[0];

            // 成功跳转页面
            $param_ = array(
                "service" => "member",
            );
            if ($order['ordertype'] == "join") {
                $param_['type'] = "user";
                $param_['template'] = "business-config";
            }
            $sucUrl = getUrlPath($param_);
        } else {
            $url = $cfg_secureAccess . $cfg_basehost;
            header("location:" . $url);
            die;
        }


        $ordertype = $order['ordertype'] == "join" ? "join" : "join_" . $order['ordertype'];

        // 总金额大于0
        if ($totalPrice > 0) {

            //如果使用了余额，计算还需要支付多少费用
            $payprice = $totalPrice;
            $useBalance_ = 0;

            // 使用余额
            if ($useBalance) {
                $userinfo = $userLogin->getMemberInfo();
                $money = $userinfo['money'];

                if ($money < $totalPrice) {
                    $useBalance_ = $money;
                    $payprice = $totalPrice - $money;
                } else {
                    $useBalance_ = $totalPrice;
                    $payprice = 0;
                }
            }

            $param = array(
                "type" => $ordertype,
                "userid" => $userid,
                "business" => $business,
                "totalPrice" => $totalPrice,
                "paytype" => $paytype,
                "balance" => $useBalance_,
                "amount" => sprintf('%.2f', $payprice),
                "buy_type" => $order['type'],
                "buy_time" => $order['time'],
                "buy_time_type" => $order['time_type'],
            );

            //如果还需要在线支付的费用小于等于0，则直接扣除余额，更新会员类型及商家状态
            if ($payprice <= 0) {

                // print_r($param);die;

                $this->joinSuccess($param, $ordernum);

                //跳转至等待审核页面
                header("location:" . $sucUrl);
                die;
            }

            //跳转至第三方支付页面
            createPayForm("member", $ordernum, $payprice, $paytype, $langData['siteConfig'][19][789], $param);  //商家入驻

            // 总金额为0
        } else {
            $param = array(
                "type" => $ordertype,
                "userid" => $userid,
                "business" => $business,
                "totalPrice" => $totalPrice,
                "paytype" => '',
                "balance" => 0,
                "amount" => 0,
                "buy_type" => $order['type'],
                "buy_time" => $order['time'],
                "buy_time_type" => $order['time_type'],
            );
            $this->joinSuccess($param, $ordernum);

            //跳转至等待审核页面
            header("location:" . $sucUrl);
            die;
        }
    }


    /**
     * 入驻成功
     */
    private function joinSuccess($param, $ordernum)
    {
        global $dsql;
        global $userinfo;
        global $userLogin;
        global $langData;
        global $cfg_pointName;
        global $siteCityInfo;
        // print_r($param);
        $userid        = $param['userid'];
        $business      = $param['business'];
        $paytype       = $param['paytype'];
        $balance       = (float)$param['balance'];
        $totalPrice    = (float)$param['totalPrice'];
        $buy_type      = $param['buy_type'];
        $buy_time      = $param['buy_time'];
        $buy_time_type = $param['buy_time_type'];
        $userinfo      = $userLogin->getMemberInfo($userid);

        //如果使用了余额付款，二次验证余额是否大于等于支付时使用的金额
        if ($balance > 0) {
            $money = $userinfo['money'];
            if ($money - $balance < 0) {
                die($langData['siteConfig'][21][106]);  //会员余额与支付时所选余额不匹配，开通失败！
            }
        }

        $sql = $dsql->SetQuery("SELECT `id`, `ordertype` FROM `#@__business_order` WHERE `ordernum` = '$ordernum' AND `state` = 0");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $orderDetail = $ret[0];
        } else {
            return;
        }

        $time = time();
        $ip = GetIP();
        $ipaddr = getIpAddr($ip);

        $busiHandlers = new handlers("business", "config");
        $busiConfig = $busiHandlers->getHandle();
        $busiConfig = $busiConfig['info'];

        if ($buy_type == 1) {
            $tit = $busiConfig['trialName'];
        } elseif ($buy_type == 2) {
            $tit = $busiConfig['enterpriseName'];
        }
        $tit .= $buy_time;
        if ($buy_time_type == "day") {
            $tit .= $langData['siteConfig'][13][6];
        } elseif ($buy_time_type == "month") {
            $tit .= $langData['siteConfig'][13][31];
        } elseif ($buy_time_type == "year") {
            $tit .= $langData['siteConfig'][13][14];
        }

        if ($orderDetail['ordertype'] == "join") {
            $title = $tit;
        } elseif ($orderDetail['ordertype'] == "renew") {
            $title = $langData['siteConfig'][19][661] . $tit;
        } elseif ($orderDetail['ordertype'] == "upgrade") {
            $title = "升级" . $tit;
        }

        // 更新商家信息、订单状态
        $archive = $dsql->SetQuery("SELECT * FROM `#@__business_list` WHERE `id` = $business");
        $result  = $dsql->dsqlOper($archive, "results");
        if ($result) {
            $busiDetail = $result[0];
            $userid = $busiDetail['uid'];

            // 类型相同，续期
            if ($busiDetail['type'] == $buy_type) {
                $expired_ = (int)$busiDetail['expired'];
                if ($expired_ < $time) {
                    $expired = strtotime("+{$buy_time} {$buy_time_type}");
                } else {
                    $expired = strtotime("+{$buy_time} {$buy_time_type}", $expired_);
                }
            } else {
                $expired = strtotime("+{$buy_time} {$buy_time_type}");
            }

            $state_f = "";
            $type_f = "";

            $bind_module_f = "";

            if ($busiDetail['state'] == 4) {
                $autoAudit = $buy_type == 1 ? $busiConfig['trialAutoAudit'] : $busiConfig['enterpriseAutoAudit'];
                $state = $autoAudit ? 1 : 3;
                $state_f = ", `state` = $state";

                if ($autoAudit) {
                    // 更新会员类型
                    $sql = $dsql->SetQuery("UPDATE `#@__member` SET `mtype` = 2 WHERE `id` = $userid");
                    $dsql->dsqlOper($sql, "update");
                }

                $showModule = checkShowModule(array(), "manage");
                $d = array_keys($showModule);
                $bind_module = join(",", $d);

                $bind_module_f = ", `bind_module` = '$bind_module'";
            }
            if ($orderDetail['ordertype'] == "upgrade") {
                $type_f = ", `type` = " . $buy_type;
            }


            $sql = $dsql->SetQuery("UPDATE `#@__business_list` SET `expired` = $expired $state_f $type_f $bind_module_f WHERE `id` = $business");
            $dsql->dsqlOper($sql, "update");

            //记录用户行为日志
            memberLog($userid, 'member', 'business', 0, 'update', '入驻商家', '', $sql);

            $sql = $dsql->SetQuery("UPDATE `#@__business_order` SET `paytype` = '$paytype', `paydate` = '$time', `balance` = '$balance', `amount` = '" . ($totalPrice - $balance) . "', `state` = 1 WHERE `ordernum` = '$ordernum'");
            $ret = $dsql->dsqlOper($sql, "update");
        }

        //扣除会员余额
        if ($balance > 0) {
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$balance' WHERE `id` = '$userid'");
            $dsql->dsqlOper($archives, "update");

            //保存操作日志
            // 19-661 :续费
            $info   = $langData['siteConfig'][19][789] . "，" . $title;
            $title_ = "商家入驻";
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 1");
            $ret = $dsql->dsqlOper($sql, "results");
            $pid = '';
            if ($ret) {
                $pid            = $ret[0]['id'];
            }
            $user  = $userLogin->getMemberInfo($userid);
            $usermoney = $user['money'];
            //        $money   = sprintf('%.2f',($usermoney-$totalPrice));

            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`title`,`ordernum`,`balance`) VALUES ('$userid', '0', '$totalPrice', '$info', '$time','business','shangjiaruzhu','$pid','$title_','$ordernum','$usermoney')");
            $dsql->dsqlOper($archives, "update");
        }
        // 新入驻商家通知后台，返积分
        if ($busiDetail['state'] == 4) {

            // 查看是否存在历史入驻订单
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__business_order` WHERE `bid` = $business AND `state` = 1");
            $count = $dsql->dsqlOper($sql, "totalCount");
            if ($count == 1) {

                if ($buy_type == 1) {
                    $priceCost = $busiConfig['trialCost'];
                } elseif ($buy_type == 2) {
                    $priceCost = $busiConfig['enterpriseCost'];
                }
                $point = 0;
                foreach ($priceCost as $key => $value) {
                    if ($value['time'] == $buy_time && $value['type'] == $buy_time_type && $value['price'] == $totalPrice) {
                        $point = $value['point'];
                    }
                }
                if ($point > 0) {
                    $sql = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + $point  WHERE `id` = $userid");
                    $ret = $dsql->dsqlOper($sql, "update");
                    if ($ret == "ok") {
                        $user  = $userLogin->getMemberInfo($userid);
                        $userpoint = $user['point'];
                        //                        $pointuser  = (int)($userpoint+$point);
                        $note = "入驻商家返" . $point . $cfg_pointName;
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '1', '$point', '$note', '$time','zengsong','$userpoint')");
                        $aid = $dsql->dsqlOper($archives, "lastid");
                    }
                }
            }
            global  $paytypee;
            $paytypee = $paytype;
            /*商家入驻分佣*/
            $paramarr['amount'] = $totalPrice;
            (new member())->returnFxMoney("business", $userid, $ordernum, $paramarr);
            //微信通知
            $cityName = $siteCityInfo['name'];
            $cityid  = $siteCityInfo['cityid'];
            $param = array(
                'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . '分站——member模块——用户:' . $userinfo['username'] . '入驻成功',
                    'date' => date("Y-m-d H:i:s", time()),
                )
            );
            updateAdminNotice("business", "join", $param);
        }
    }


    /**
     * 缴纳保障金
     */
    public function promotion()
    {
        global $dsql;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $langData;
        global $cfg_promotion_least;
        $cfg_promotion_least = (float)$cfg_promotion_least;

        $amount     = (float)$this->param['amount'];
        $balance    = (float)$this->param['balance'];
        $paytype    = $this->param['paytype'];
        $createtype = $this->param['createtype'];
        $final      = $this->param['final'];
        $ordernum   = $this->param['ordernum'];
        $paypwd     = $this->param['paypwd'];

        $param = array(
            "service" => "member",
            "template" => "promotion"
        );
        $url = getUrlPath($param);
        $userid = $userLogin->getMemberID();

        if ($userid == -1) {
            return array("state" => 200, "info" => "登录超时，请重新登录！");
            return $cfg_secureAccess . $cfg_basehost . "/login.html?furl=" . urlencode($url);
            //            header("location:" . );
        }

        if (empty($amount)) {
            return array("state" => 200, "info" => "请填写要缴纳的金额");
            return $url;
            //            header("location:" . $url);
        }

        //最少缴纳1000

        if ($amount < $cfg_promotion_least) {
            return array("state" => 200, "info" => "缴纳金额不得小于" . $cfg_promotion_least . echoCurrency(array("type" => "short")));
            return $url;
            //            header("location:" . $url);
        }

        //如果使用了余额，计算还需要支付多少费用
        $payprice = $amount;
        $useBalance = 0;
        if ($balance && $paypwd) {
            $userinfo = $userLogin->getMemberInfo();
            $money = $userinfo['money'];

            //验证支付密码
            $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
            $results  = $dsql->dsqlOper($archives, "results");
            $res      = $results[0];
            $hash     = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
            if ($res['paypwd'] != $hash) {
                return array("state" => 200, "info" => "支付密码输入错误，请重试！");
            }

            if ($money < $amount) {
                $useBalance = $money;
                $payprice = $amount - $money;
            } else {
                $useBalance = $amount;
                $payprice = 0;
            }
        }

        $time = GetMkTime(time());

        $ordernum = $ordernum ? $ordernum : create_ordernum();

        $param = array(
            "type" => "promotion",
            "userid" => $userid,
            "totalPrice" => $amount,
            "ordernum" => $ordernum,
            "balance" => $useBalance,
            "amount" => $payprice,
            "price" => $payprice
        );

        //如果还需要在线支付的费用小于等于0，则直接扣除余额，更新会员类型及商家状态
        if ($payprice <= 0) {
            
            //更新支付日志
            $archives = $dsql->SetQuery("UPDATE `#@__pay_log` SET `paytype` ='money', `state` = 1 WHERE `ordernum` = '$ordernum'");
            $dsql->dsqlOper($archives, "update");

            $this->promotionSuccess($param);

            //跳转至等待审核页面
            //            header("location:".$url);
            return $url;
        }

        if ($createtype == 1) {
            //跳转至第三方支付页面
            $order = createPayForm("member", $ordernum, $payprice, $paytype, $langData['siteConfig'][21][107], $param, $createtype);   //商家缴纳保障金

            if(is_array($order)){
                $order['timeout'] = $time + 3600;
            }

            return $order;
        } else {

            createPayForm("member", $ordernum, $payprice, $paytype, $langData['siteConfig'][21][107], $param);
        }
    }


    /**
     * 保障金缴纳成功
     */
    public function promotionSuccess($param)
    {
        global $dsql;
        global $langData;
        global $userLogin;
        $userid = $param['userid'];
        $ordernum = $param['ordernum'];
        $totalPrice = $param['totalPrice'];
        $balance = $param['balance'];

        $time = time();

        //扣除会员余额
        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$balance', `promotion` = `promotion` + '$totalPrice' WHERE `id` = '$userid'");
        $dsql->dsqlOper($archives, "update");

        //保存操作日志
        $info = $langData['siteConfig'][21][107] . echoCurrency(array("type" => "symbol")) . $totalPrice;  //商家缴纳保障金
        if ($balance) {
            $info .= "(" . $langData['siteConfig'][21][108] . echoCurrency(array("type" => "symbol")) . $balance . ")";  //其中余额支付
        }
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 1");
        $ret = $dsql->dsqlOper($sql, "results");
        $pid = '';
        if ($ret) {
            $pid            = $ret[0]['id'];
        }
        $user  = $userLogin->getMemberInfo($userid);
        $usermoney = $user['money'];
        //        $money   = sprintf('%.2f',($usermoney-$balance));
        $title = '商家缴纳保障金';
        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`title`,`ordernum`,`balance`) VALUES ('$userid', '0', '$balance', '$info', '$time','member','baozhangjin','$pid','$title','$ordernum','$usermoney')");
        $dsql->dsqlOper($archives, "update");

        //订单记录
        $sql = $dsql->SetQuery("INSERT INTO `#@__member_promotion` (`uid`, `type`, `amount`, `ordernum`, `date`) VALUES ('$userid', '1', '$totalPrice', '$ordernum', '$time')");
        $pid = $dsql->dsqlOper($sql, "lastid");

        //记录用户行为日志
        memberLog($userid, 'member', 'promotion', $pid, 'insert', '缴纳保障金(' . $totalPrice . '元)', '', $sql);
    }


    /**
     * 商家入驻订单
     * @return array
     */
    public function joinOrder()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_BusinessJoinConfig;
        $pageinfo = $list = array();
        $page = $pageSize = 0;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT o.* FROM `#@__business_order` o LEFT JOIN `#@__business_list` l ON o.`bid` = l.`id` WHERE l.`uid` = $userid AND o.`state` = 1 ORDER BY o.`id` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        //商家入驻配置
        $businessJoinConfig = $cfg_BusinessJoinConfig;

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']         = (int)$val['id'];
                $list[$key]['ordernum']   = $val['ordernum'];
                $list[$key]['totalprice'] = (float)$val['totalprice'];
                $list[$key]['offer']      = (float)$val['offer'];
                $list[$key]['balance']    = (float)$val['balance'];
                $list[$key]['point']      = (int)$val['point'];
                $list[$key]['paytype']    = getPaymentName($val['paytype']);
                $list[$key]['amount']     = (float)$val['amount'];
                $list[$key]['date']       = (int)$val['date'];
                $list[$key]['paydate']    = (int)$val['paydate'];

                $list[$key]['title'] = $val['o_name'] ? $val['o_name'] : $val['name'];  //开通的名称
                $list[$key]['expired'] = $val['expired'] ? (int)$val['expired'] : 0;  //过期时间
                $list[$key]['times'] = $val['o_times'];  //开通时长
                $list[$key]['package'] = $val['o_package'] ? $val['o_package'] : '';
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 保障金订单
     * @return array
     */
    public function promotionOrder()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $type = $page = $pageSize = 0;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $where = "";
        if ($type !== "") {
            $where = " AND `type` = $type";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_promotion` WHERE `uid` = $userid" . $where . " ORDER BY `id` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']       = $val['id'];
                $list[$key]['type']     = $val['type'];
                $list[$key]['amount']   = $val['amount'];
                $list[$key]['ordernum'] = $val['ordernum'];
                $list[$key]['title']    = $val['title'];
                $list[$key]['note']     = $val['note'];
                $list[$key]['date']     = date("Y-m-d H:i:s", $val['date']);
                $list[$key]['state']    = $val['state'];
                $list[$key]['reason']   = $val['reason'];
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 提取保障金
     */
    public function extract()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $amount = (float)$this->param['amount'];
                $title = trim($this->param['title']);
                $note  = trim($this->param['note']);
            }
        }

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if ($amount <= 0) {
            return array("state" => 200, "info" => "请填写提取金额");
        }

        if (!$title) {
            return array("state" => 200, "info" => "请填写提取原因");
        }

        if (!$note) {
            return array("state" => 200, "info" => "请填写提取说明");
        }

        //查询可提取的保障金 = 一年前的缴纳总额 - 已提取总额
        $totalPromotion = $alreadyExtract = 0;
        $uid = $userLogin->getMemberID();

        global $cfg_promotion_limitVal;
        global $cfg_promotion_limitType;

        $limitType = '';
        if ($cfg_promotion_limitType == 1) {
            $limitType = 'day';
        } elseif ($cfg_promotion_limitType == 2) {
            $limitType = 'month';
        } elseif ($cfg_promotion_limitType == 3) {
            $limitType = 'year';
        }

        $yearAgo = GetMkTime(date("Y-m-d H:i:s", strtotime("-" . $cfg_promotion_limitVal . " " . $limitType)));

        if ($cfg_promotion_limitVal) {
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) as total FROM `#@__member_promotion` WHERE `type` = 1 AND `uid` = $uid AND `date` < $yearAgo");
        } else {
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) as total FROM `#@__member_promotion` WHERE `type` = 1 AND `uid` = $uid");
        }
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $totalPromotion = $ret[0]['total'];
        }

        //统计审核中和已经审核的提取记录
        $sql = $dsql->SetQuery("SELECT SUM(`amount`) as total FROM `#@__member_promotion` WHERE `type` = 0 AND (`state` = 0 OR `state` = 1) AND `uid` = $uid");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $alreadyExtract = $ret[0]['total'];
        }
        $extract = sprintf('%.2f', ($totalPromotion - $alreadyExtract));

        if ($extract <= 0) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][109]);  //可提取保障金为0，提取失败！
        }

        //验证要提取的金额
        if ($amount > $extract) {
            return array("state" => 200, "info" => "可提取额度不足，请重新填写要提取的金额！");
        }

        $time = time();
        $ordernum = create_ordernum();

        $state = 0;

        //设置了提取限制，不需要后台审核，直接到账
        if ($cfg_promotion_limitVal) {

            $state = 1;

            //增加会员余额
            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$amount', `promotion` = `promotion` - '$amount' WHERE `id` = '$userid'");
            $dsql->dsqlOper($archives, "update");

            $user  = $userLogin->getMemberInfo($userid);
            $usermoney = $user['money'];

            //保存操作日志
            $info = $langData['siteConfig'][21][110];  //提取保障金
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`title`,`ordernum`,`balance`) VALUES ('$userid', '1', '$amount', '$info', '$time','member','baozhangjin','$info','$ordernum','$usermoney')");
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($uid, 'member', 'promotion', 0, 'insert', '提取保障金(' . $extract . '元)', '', $sql);
        }

        //订单记录
        $sql = $dsql->SetQuery("INSERT INTO `#@__member_promotion` (`uid`, `type`, `amount`, `ordernum`, `date`, `title`, `note`, `state`) VALUES ('$userid', '0', '$amount', '$ordernum', '$time', '$title', '$note', '$state')");
        $pid = $dsql->dsqlOper($sql, "lastid");

        if ($cfg_promotion_limitVal) {
            return '提取成功';
        } else {
            return '您的保障金提取需求已经提交等待管理员审核';
        }
    }



    /**
     * 查询订单（合并查询）
     */
    public function orderList()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $state    = $this->param['state'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $totalCount = $totalPage = $unused = $unpaid = $recei = $used = 0;
        $union = array();

        if (in_array("tuan", $installModuleArr)) {

            //计算团购订单数量
            $sql = $dsql->SetQuery("SELECT count(`id`) as total FROM `#@__tuan_order` WHERE `userid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            $totalCount += $ret[0]['total'];

            //待发货订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 1", "results");
            $unused += $ret[0]['total'];

            //未付款订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 0", "results");
            $unpaid += $ret[0]['total'];

            //待收货订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 6", "results");
            $recei += $ret[0]['total'];

            //完成订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 3", "results");
            $used += $ret[0]['total'];

            //筛选状态
            $where = "";
            if ($state != "") {
                $where = " AND `orderstate` = $state";
            }

            $sql = "SELECT * FROM (SELECT `id`, `ordernum`, `tab` FROM `#@__tuan_order` WHERE `userid` = $userid" . $where . " ORDER BY `id` ASC) as tuan";
            array_push($union, $sql);
        }

        if (in_array("shop", $installModuleArr)) {

            //计算商城订单数量
            $sql = $dsql->SetQuery("SELECT count(`id`) as total FROM `#@__shop_order` WHERE `userid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            $totalCount += $ret[0]['total'];

            //待发货订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 1", "results");
            $unused += $ret[0]['total'];

            //未付款订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 0", "results");
            $unpaid += $ret[0]['total'];

            //待收货订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 6", "results");
            $recei += $ret[0]['total'];

            //完成订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 3", "results");
            $used += $ret[0]['total'];

            //筛选状态
            $where = "";
            if ($state != "") {
                $where = " AND `orderstate` = $state";
            }

            $sql = "SELECT * FROM (SELECT `id`, `ordernum`, `tab` FROM `#@__shop_order` WHERE `userid` = $userid" . $where . " ORDER BY `id` ASC) as shop";
            array_push($union, $sql);
        }

        // if(in_array("waimai", $installModuleArr)){
        //
        //  //计算外卖订单数量
        //  $sql = $dsql->SetQuery("SELECT count(`id`) as total FROM `#@__waimai_order` WHERE `uid` = $userid");
        //  $ret = $dsql->dsqlOper($sql, "results");
        //  $totalCount += $ret[0]['total'];
        //
        //  //待发货订单数量
        //  $ret = $dsql->dsqlOper($sql . " AND `state` = 2", "results");
        //  $unused += $ret[0]['total'];
        //
        //  //未付款订单数量
        //  $ret = $dsql->dsqlOper($sql . " AND `state` = 0", "results");
        //  $unpaid += $ret[0]['total'];
        //
        //  //待收货订单数量
        //  $ret = $dsql->dsqlOper($sql . " AND `state` = 5", "results");
        //  $recei += $ret[0]['total'];
        //
        //  //完成订单数量
        //  $ret = $dsql->dsqlOper($sql . " AND `state` = 1", "results");
        //  $used += $ret[0]['total'];
        //
        //  //筛选状态
        //  $where = "";
        //  if($state != ""){
        //      $state = $state == 6 ? 5 : $state;
        //      $where = " AND `state` = $state";
        //  }
        //
        //  $sql = "SELECT * FROM (SELECT `id`, `ordernum`, `tab` FROM `#@__waimai_order` WHERE `userid` = $userid".$where." ORDER BY `id` ASC) as waimai";
        //  array_push($union, $sql);
        // }

        if (in_array("info", $installModuleArr)) {

            //计算商城订单数量
            $sql = $dsql->SetQuery("SELECT count(`id`) as total FROM `#@__info_order` WHERE `userid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            $totalCount += $ret[0]['total'];

            //待发货订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 1", "results");
            $unused += $ret[0]['total'];

            //未付款订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 0", "results");
            $unpaid += $ret[0]['total'];

            //待收货订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 3", "results");
            $recei += $ret[0]['total'];

            //完成订单数量
            $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 4", "results");
            $used += $ret[0]['total'];

            //筛选状态
            $where = "";
            if ($state != "") {
                $where = " AND `orderstate` = $state";
            }

            $sql = "SELECT * FROM (SELECT `id`, `ordernum`, `tab` FROM `#@__info_order` WHERE `userid` = $userid" . $where . " ORDER BY `id` ASC) as info";
            array_push($union, $sql);
        }

        if (empty($union)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][112]);  //暂无需要查询的模块！
        }

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        if ($totalCount == 0) return array("state" => 100, "pageInfo" => $pageinfo, "list" => array());

        $pageinfo['unpaid'] = $unpaid;
        $pageinfo['unused'] = $unused;
        $pageinfo['recei']  = $recei;
        $pageinfo['used']   = $used;

        $atpage = $pageSize * ($page - 1);

        $i = 0;
        $list = array();
        $archives = $dsql->SetQuery(join(" UNION ALL ", $union) . " ORDER BY `id` DESC LIMIT $atpage, $pageSize");
        $results = $dsql->dsqlOper($archives, "results");
        if ($results && is_array($results)) {
            foreach ($results as $key => $value) {
                $id = $value['id'];
                $ordernum = $value['ordernum'];
                $tab = $value['tab'];

                //团购订单
                if ($tab == "tuan") {

                    $param = array(
                        "service"     => "tuan",
                        "template"    => "pay",
                        "param"       => "ordernum=%id%"
                    );
                    $payurlParam = getUrlPath($param);

                    $param = array(
                        "service"  => "member",
                        "type"     => "user",
                        "template" => "orderdetail",
                        "module"   => "tuan",
                        "id"       => "%id%",
                        "param"    => "rates=1"
                    );
                    $commonUrlParam = getUrlPath($param);

                    $sql = $dsql->SetQuery("SELECT o.`proid`, o.`procount`, o.`orderprice`, o.`propolic`, o.`orderstate`, o.`orderdate`, o.`paydate`, o.`ret-state`, o.`exp-date`, m.`company` " .
                        "FROM `#@__tuan_order` o LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` LEFT JOIN `#@__member` m ON m.`id` = s.`uid` WHERE o.`id` = $id");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {

                        $val = $ret[0];
                        $list[$i]['tab']         = $tab;
                        $list[$i]['id']          = $id;
                        $list[$i]['ordernum']    = $ordernum;
                        $list[$i]['proid']       = $val['proid'];
                        $list[$i]['procount']    = $val['procount'];
                        $list[$i]['company']     = $val['company'];

                        //计算订单价格
                        $totalPrice = $val['orderprice'] * $val['procount'];
                        $propolic   = $val['propolic'];
                        $policy     = unserialize($propolic);
                        if (!empty($propolic) && !empty($policy)) {
                            $freight  = $policy['freight'];
                            $freeshi  = $policy['freeshi'];

                            if ($val['procount'] <= $freeshi) {
                                $totalPrice += $freight;
                            }
                        }

                        $list[$i]['orderprice']  = $totalPrice;
                        $list[$i]["orderstate"]  = $val['orderstate'];
                        $list[$i]['orderdate']   = $val['orderdate'];
                        $list[$i]['paydate']     = $val['paydate'];
                        $list[$i]['retState']    = $val['ret-state'];
                        $list[$i]['expDate']     = $val['exp-date'];


                        $detailHandels = new handlers("tuan", "detail");
                        $detail  = $detailHandels->getHandle($val['proid']);
                        if ($detail && $detail['state'] == 100) {
                            $data = $detail['info'];
                            $list[$i]['product']['title'] = $data['title'];
                            $list[$i]['product']['enddate'] = $data['enddate'];
                            $list[$i]['product']['litpic'] = $data['litpic'];
                        } else {
                            $list[$i]['product']['title'] = $langData['siteConfig'][13][20];  //无
                            $list[$i]['product']['enddate'] = 0;
                            $list[$i]['product']['litpic'] = "";
                        }

                        $param = array(
                            "service"     => "tuan",
                            "template"    => "detail",
                            "id"          => $val['proid']
                        );
                        $list[$i]['product']['url'] = getUrlPath($param);

                        //未付款的提供付款链接
                        if ($val['orderstate'] == 0) {
                            $RenrenCrypt = new RenrenCrypt();
                            $encodeid = base64_encode($RenrenCrypt->php_encrypt($ordernum));
                            $list[$i]["payurl"] = str_replace("%id%", $encodeid, $payurlParam);
                        }

                        //评价
                        if ($val['orderstate'] == 3) {
                            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__tuancommon` WHERE `aid` = " . $id);
                            $common = $dsql->dsqlOper($archives, "totalCount");
                            $iscommon = $common > 0 ? 1 : 0;
                            $list[$i]['common'] = $iscommon;
                            $list[$i]['commonUrl'] = str_replace("%id%", $id, $commonUrlParam);
                        }

                        $i++;
                    }
                }


                //商城
                if ($tab == "shop") {
                    $sql = $dsql->SetQuery("SELECT `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `logistic`, `ret_state`, `exp_date`, `common` FROM `#@__shop_order` WHERE `id` = $id");
                    $ret_ = $dsql->dsqlOper($sql, "results");
                    if ($ret_ && is_array($ret_)) {

                        $val = $ret_[0];

                        $sql = $dsql->SetQuery("SELECT * FROM `#@__shop_order_product` WHERE `orderid` = " . $id);
                        $ret = $dsql->dsqlOper($sql, "results");

                        if ($ret && is_array($ret)) {

                            $param = array(
                                "service"     => "shop",
                                "template"    => "detail",
                                "id"          => "%id%"
                            );
                            $urlParam = getUrlPath($param);

                            $param = array(
                                "service"     => "shop",
                                "template"    => "pay",
                                "param"       => "ordernum=%id%"
                            );
                            $payurlParam = getUrlPath($param);

                            $param = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "orderdetail",
                                "module"   => "shop",
                                "id"       => "%id%",
                                "param"    => "rates=1"
                            );
                            $commonUrlParam = getUrlPath($param);

                            $list[$i]['tab']         = $tab;
                            $list[$i]['id']          = $id;
                            $list[$i]['ordernum']    = $ordernum;

                            //商家信息
                            $detailHandels = new handlers("shop", "storeDetail");
                            $detail  = $detailHandels->getHandle($val['store']);
                            if ($detail && $detail['state'] == 100) {
                                $data = $detail['info'];
                                $list[$i]['store'] = array(
                                    "id"     => $data['id'],
                                    "title"  => $data['title'],
                                    "domain" => $data['domain'],
                                    "qq"     => $data['qq']
                                );
                            } else {
                                $list[$i]['store'] = array(
                                    "id"     => 0,
                                    "title"  => $langData['siteConfig'][19][709]   //官方直营
                                );
                            }


                            $list[$i]['orderstate']  = $val['orderstate'];
                            $list[$i]['orderdate']   = $val['orderdate'];
                            $list[$i]['retState']    = $val['ret_state'];
                            $list[$i]['expDate']     = $val['exp_date'];

                            //支付方式
                            $paySql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $val["paytype"] . "'");
                            $payResult = $dsql->dsqlOper($paySql, "results");
                            if (!empty($payResult)) {
                                $list[$i]["paytype"]   = $payResult[0]["pay_name"];
                            } else {
                                global $cfg_pointName;
                                $payname = "";
                                if ($val["paytype"] == "point,money") {
                                    $payname = $cfg_pointName . "+" . $langData['siteConfig'][19][363];  //余额
                                } elseif ($val["paytype"] == "point") {
                                    $payname = $cfg_pointName;
                                } elseif ($val["paytype"] == "money") {
                                    $payname = $langData['siteConfig'][19][363];  //余额
                                }
                                $list[$i]["paytype"]   = $payname;
                            }

                            //未付款的提供付款链接
                            if ($val['orderstate'] == 0) {
                                $RenrenCrypt = new RenrenCrypt();
                                $encodeid = base64_encode($RenrenCrypt->php_encrypt($ordernum));
                                $list[$i]["payurl"] = str_replace("%id%", $encodeid, $payurlParam);
                            }

                            //评价
                            $list[$i]['common'] = $val['common'];

                            //商品信息
                            $productArr = array();
                            $totalPayPrice = 0;
                            foreach ($ret as $k => $v) {
                                global $oper;
                                $oper = "user";

                                $detailHandels = new handlers("shop", "detail");
                                $detail  = $detailHandels->getHandle($v['proid']);
                                if ($detail && $detail['state'] == 100) {
                                    $data = $detail['info'];

                                    $list[$i]['product'][$k]['title'] = $data['title'];
                                    $list[$i]['product'][$k]['litpic'] = $data['litpic'];
                                    $list[$i]['product'][$k]['url'] = str_replace("%id%", $v['proid'], $urlParam);

                                    $list[$i]['product'][$k]['price'] = $v['price'];
                                    $list[$i]['product'][$k]['count'] = $v['count'];
                                    $list[$i]['product'][$k]['specation'] = $v['specation'];
                                }

                                //未付款的不计算积分和余额部分
                                if ($val['orderstate'] == 0) {
                                    $totalPayPrice += $v['price'] * $v['count'] + $v['discount'];
                                } else {
                                    $totalPayPrice += $v['price'] * $v['count'] + $v['discount'];
                                }
                            }

                            $totalPayPrice += $val['logistic'];
                            $list[$i]['totalPayPrice'] = sprintf("%.2f", $totalPayPrice);

                            $i++;
                        }
                    }
                }


                //二手
                if ($tab == "info") {
                    $sql = $dsql->SetQuery("SELECT `store`, `prod`, `userid`, `orderstate`, `orderdate`, `paytype`, `ret-state`, `exp-date`, `common` FROM `#@__info_order` WHERE `id` = $id");
                    $ret_ = $dsql->dsqlOper($sql, "results");
                    if ($ret_ && is_array($ret_)) {

                        $val = $ret_[0];

                        $sql = $dsql->SetQuery("SELECT * FROM `#@__infolist` WHERE `id` = " . $val['prod']);
                        $ret = $dsql->dsqlOper($sql, "results");

                        if ($ret && is_array($ret)) {

                            $param = array(
                                "service"     => "info",
                                "template"    => "detail",
                                "id"          => "%id%"
                            );
                            $urlParam = getUrlPath($param);

                            $param = array(
                                "service"     => "info",
                                "template"    => "pay",
                                "param"       => "ordernum=%id%"
                            );
                            $payurlParam = getUrlPath($param);

                            $param = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "orderdetail",
                                "module"   => "info",
                                "id"       => "%id%",
                                "param"    => "rates=1"
                            );
                            $commonUrlParam = getUrlPath($param);

                            $list[$i]['tab']         = $tab;
                            $list[$i]['id']          = $id;
                            $list[$i]['ordernum']    = $ordernum;

                            //商家信息
                            $detailHandels = new handlers("info", "storeDetail");
                            $detail  = $detailHandels->getHandle($val['store']);
                            if ($detail && $detail['state'] == 100) {
                                $data = $detail['info'];
                                $list[$i]['store'] = array(
                                    "id"     => $data['id'],
                                    "title"  => $data['member']['nickname'],
                                    "domain" => $data['domain'],
                                    "qq"     => $data['member']['qq']
                                );
                            } else {
                                $list[$i]['store'] = array(
                                    "id"     => 0,
                                    "title"  => $langData['siteConfig'][19][709]   //官方直营
                                );
                            }


                            $list[$i]['orderstate']  = $val['orderstate'];
                            $list[$i]['orderdate']   = $val['orderdate'];
                            $list[$i]['retState']    = $val['ret-state'];
                            $list[$i]['expDate']     = $val['exp-date'];

                            //支付方式
                            $paySql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $val["paytype"] . "'");
                            $payResult = $dsql->dsqlOper($paySql, "results");
                            if (!empty($payResult)) {
                                $list[$i]["paytype"]   = $payResult[0]["pay_name"];
                            } else {
                                global $cfg_pointName;
                                $payname = "";
                                if ($val["paytype"] == "point,money") {
                                    $payname = $cfg_pointName . "+" . $langData['siteConfig'][19][363];  //余额
                                } elseif ($val["paytype"] == "point") {
                                    $payname = $cfg_pointName;
                                } elseif ($val["paytype"] == "money") {
                                    $payname = $langData['siteConfig'][19][363];  //余额
                                }
                                $list[$i]["paytype"]   = $payname;
                            }

                            //未付款的提供付款链接
                            if ($val['orderstate'] == 0) {
                                $RenrenCrypt = new RenrenCrypt();
                                $encodeid = base64_encode($RenrenCrypt->php_encrypt($ordernum));
                                $list[$i]["payurl"] = str_replace("%id%", $encodeid, $payurlParam);
                            }

                            //评价
                            $list[$i]['common'] = $val['common'];

                            //商品信息
                            $productArr = array();
                            $totalPayPrice = 0;
                            foreach ($ret as $k => $v) {
                                global $oper;
                                $oper = "user";

                                $detailHandels = new handlers("info", "detail");
                                $detail  = $detailHandels->getHandle($v['id']);
                                if ($detail && $detail['state'] == 100) {
                                    $data = $detail['info'];

                                    $list[$i]['product'][$k]['title'] = $data['title'];
                                    $list[$i]['product'][$k]['litpic'] = $data['imglist'][0]['path'];
                                    $list[$i]['product'][$k]['url'] = str_replace("%id%", $v['id'], $urlParam);

                                    $list[$i]['product'][$k]['price'] = $v['price'];
                                    $list[$i]['product'][$k]['yunfei'] = $v['yunfei'];
                                }

                                //未付款的不计算积分和余额部分
                                if ($val['orderstate'] == 0) {
                                    $totalPayPrice += $v['price']  + $v['yunfei'];
                                } else {
                                    $totalPayPrice += $v['price']  + $v['yunfei'];
                                }
                            }
                            $list[$i]['totalPayPrice'] = sprintf("%.2f", $totalPayPrice);

                            $i++;
                        }
                    }
                }

                //外卖
                // if($tab == "waimai"){
                //
                //  $sql = $dsql->SetQuery("SELECT `id`, `ordernum`, `userid`, `store`, `price`, `paytype`, `peisong`, `offer`, `orderdate`, `note`, `state` FROM `#@__waimai_order` WHERE `id` = $id");
                //  $ret = $dsql->dsqlOper($sql, "results");
                //  if($ret && is_array($ret)){
                //      $data = $ret[0];
                //
                //      $list[$i]['id'] = $data['id'];
                //      $list[$i]['ordernum']  = $data['ordernum'];
                //      $list[$i]['userid']    = $data['userid'];
                //      $list[$i]['store']     = $data['store'];
                //      $list[$i]['price']     = $data['price'];
                //      $list[$i]['paytype']   = $data['paytype'];
                //      $list[$i]['peisong']   = $data['peisong'];
                //      $list[$i]['offer']     = $data['offer'];
                //      $list[$i]['orderdate'] = $data['orderdate'];
                //      $list[$i]['note']      = $data['note'];
                //      $list[$i]['state']     = $data['state'];
                //
                //      $param = array(
                //          "service" => "waimai",
                //          "templates" => "confirm",
                //          "param" => "ordernum=".$data['ordernum']
                //      );
                //      $payurl = getUrlPath($param);
                //      $list[$i]['payurl']    = $payurl;
                //
                //      //用户名
                //      $userSql = $dsql->SetQuery("SELECT `username` FROM `#@__member` WHERE `id` = ". $data["userid"]);
                //      $username = $dsql->dsqlOper($userSql, "results");
                //      $list[$i]["username"] = $username[0]['username'];
                //
                //      //餐厅
                //      $storeSql = $dsql->SetQuery("SELECT `title` FROM `#@__waimai_store` WHERE `id` = ". $data['store']);
                //      $storename = $dsql->getTypeName($storeSql);
                //      $list[$i]["storename"] = $storename[0]["title"];
                //
                //      $paytype = $data["paytype"];
                //      if(!$paytype){
                //          $list[$i]["paytype"] = "未知";
                //      }else{
                //          //主表信息
                //          $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '$paytype'");
                //          $ret = $dsql->dsqlOper($sql, "results");
                //          if(!empty($ret)){
                //              $list[$i]["paytype"] = $ret[0]['pay_name'];
                //          }else{
                //              $list[$i]["paytype"] = $data["paytype"];
                //          }
                //      }
                //
                //      //订单内容
                //      $menuList = array();
                //      $sql = $dsql->SetQuery("SELECT `pid`, `pname`, `price`, `count` FROM `#@__waimai_order_product` WHERE `orderid` = ".$data['id']);
                //      $ret = $dsql->dsqlOper($sql, "results");
                //      if($ret){
                //          foreach ($ret as $k => $v) {
                //              $menuList[$k]['pid'] = $v['pid'];
                //              $menuList[$k]['pname'] = $v['pname'];
                //              $menuList[$k]['price'] = $v['price'];
                //              $menuList[$k]['count'] = $v['count'];
                //          }
                //      }
                //      $list[$i]["menus"] = $menuList;
                //
                //      $i++;
                //  }
                //
                // }


            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }



    /**
     * 商家查询订单（合并查询）
     */
    public function storeOrderList()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $state    = $this->param['state'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $totalCount = $totalPage = $unused = $refund = $recei = $used = 0;
        $union = array();

        if (in_array("tuan", $installModuleArr)) {

            //计算团购订单数量
            $sql = $dsql->SetQuery("SELECT count(o.`id`) as total FROM " .
                "`#@__tuan_order` o LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` LEFT JOIN `#@__member` m ON m.`id` = s.`uid` " .
                "WHERE l.`tuantype` = 2 AND (o.`orderstate` = 1 OR o.`orderstate` = 3 OR o.`orderstate` = 4 OR o.`orderstate` = 6 OR o.`orderstate` = 7) AND s.`uid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            $totalCount += $ret[0]['total'];

            //待发货订单数量
            $ret = $dsql->dsqlOper($sql . " AND o.`orderstate` = 1", "results");
            $unused += $ret[0]['total'];

            //待收货订单数量
            $ret = $dsql->dsqlOper($sql . " AND o.`orderstate` = 6 AND o.`exp-date` != 0", "results");
            $recei += $ret[0]['total'];

            //退款订单数量
            $ret = $dsql->dsqlOper($sql . " AND o.`orderstate` = 4", "results");
            $refund += $ret[0]['total'];

            //完成订单数量
            $ret = $dsql->dsqlOper($sql . " AND o.`orderstate` = 3", "results");
            $used += $ret[0]['total'];

            //筛选状态
            $where = "";
            if ($state != "") {
                if ($state == 6) {
                    $where = " AND o.`orderstate` = 6 AND o.`exp-date` != 0";
                } else {
                    $where = " AND o.`orderstate` = $state";
                }
            }

            $sql = "SELECT * FROM (SELECT o.`id`, o.`ordernum`, o.`tab` FROM `#@__tuan_order` o LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` LEFT JOIN `#@__member` m ON m.`id` = s.`uid` " .
                "WHERE l.`tuantype` = 2 AND (o.`orderstate` = 1 OR o.`orderstate` = 3 OR o.`orderstate` = 4 OR o.`orderstate` = 6 OR o.`orderstate` = 7) AND s.`uid` = $userid" . $where . " ORDER BY `id` ASC) as tuan";
            array_push($union, $sql);
        }

        if (in_array("shop", $installModuleArr)) {

            //先查询商城商家ID
            $userSql = $dsql->SetQuery("SELECT `id` FROM `#@__shop_store` WHERE `userid` = " . $userid);
            $userResult = $dsql->dsqlOper($userSql, "results");
            if ($userResult && is_array($userResult)) {
                $sid = $userResult[0]['id'];

                //计算商城订单数量
                $sql = $dsql->SetQuery("SELECT count(`id`) as total FROM `#@__shop_order` WHERE (`orderstate` = 1 OR `orderstate` = 3 OR `orderstate` = 4 OR `orderstate` = 6 OR `orderstate` = 7) AND `store` = $sid");
                $ret = $dsql->dsqlOper($sql, "results");
                $totalCount += $ret[0]['total'];

                //待发货订单数量
                $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 1", "results");
                $unused += $ret[0]['total'];

                //待收货订单数量
                $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 6 AND `exp_date` != 0", "results");
                $recei += $ret[0]['total'];

                //退款订单数量
                $ret = $dsql->dsqlOper($sql . " AND `orderstate` != 3 AND `ret_state` = 1", "results");
                $refund += $ret[0]['total'];

                //完成订单数量
                $ret = $dsql->dsqlOper($sql . " AND `orderstate` = 3", "results");
                $used += $ret[0]['total'];

                //筛选状态
                $where = "";
                if ($state != "") {
                    if ($state == 4) {
                        $where = " AND `orderstate` != 3 AND `ret_state` = 1";
                    } elseif ($state == 6) {
                        $where = " AND `orderstate` = $state AND `exp_date` != 0";
                    } else {
                        $where = " AND `orderstate` = $state";
                    }
                }

                $sql = "SELECT * FROM (SELECT `id`, `ordernum`, `tab` FROM `#@__shop_order` WHERE (`orderstate` = 1 OR `orderstate` = 3 OR `orderstate` = 4 OR `orderstate` = 6 OR `orderstate` = 7) AND `store` = $sid" . $where . " ORDER BY `id` ASC) as shop";
                array_push($union, $sql);
            }
        }

        // if(in_array("waimai", $installModuleArr)){
        //
        //  $sql = $dsql->SetQuery("SELECT `id` FROM `#@__waimai_store` WHERE `userid` = $userid");
        //  $ret = $dsql->dsqlOper($sql, "results");
        //  if($ret && is_array($ret)){
        //      $sid = $ret[0]['id'];
        //
        //      //计算外卖订单数量
        //      $sql = $dsql->SetQuery("SELECT count(`id`) as total FROM `#@__waimai_order` WHERE (`state` = 1 OR `state` = 2 OR `state` = 3) AND `store` = $sid");
        //      $ret = $dsql->dsqlOper($sql, "results");
        //      $totalCount += $ret[0]['total'];
        //
        //      //待发货订单数量
        //      $ret = $dsql->dsqlOper($sql . " AND `state` = 1", "results");
        //      $unused += $ret[0]['total'];
        //
        //      //待收货订单数量
        //      $ret = $dsql->dsqlOper($sql . " AND `state` = 2", "results");
        //      $recei += $ret[0]['total'];
        //
        //      //完成订单数量
        //      $ret = $dsql->dsqlOper($sql . " AND `state` = 3", "results");
        //      $used += $ret[0]['total'];
        //
        //      //筛选状态
        //      $where = "";
        //      if($state != ""){
        //          if($state == 4){
        //              $where = " AND 1 = 2";
        //          }else{
        //              $state = $state == 6 ? 2 : $state;
        //              $where = " AND `state` = $state";
        //          }
        //      }
        //
        //      $sql = "SELECT * FROM (SELECT `id`, `ordernum`, `tab` FROM `#@__waimai_order` WHERE (`state` = 1 OR `state` = 2 OR `state` = 3) AND `store` = $sid".$where." ORDER BY `id` ASC) as waimai";
        //      array_push($union, $sql);
        //  }
        // }

        if (empty($union)) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][112]);  //暂无需要查询的模块！
        }

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        if ($totalCount == 0) return array("state" => 100, "pageInfo" => $pageinfo, "list" => array());

        $pageinfo['unused'] = $unused;
        $pageinfo['recei']  = $recei;
        $pageinfo['refund'] = $refund;
        $pageinfo['used']   = $used;

        $atpage = $pageSize * ($page - 1);

        $i = 0;
        $list = array();
        $archives = $dsql->SetQuery(join(" UNION ALL ", $union) . " ORDER BY `id` DESC LIMIT $atpage, $pageSize");
        $results = $dsql->dsqlOper($archives, "results", "ASSOC", "", 0);
        if ($results && is_array($results)) {
            foreach ($results as $key => $value) {
                $id = $value['id'];
                $ordernum = $value['ordernum'];
                $tab = $value['tab'];

                //团购订单
                if ($tab == "tuan") {

                    $param = array(
                        "service"     => "tuan",
                        "template"    => "pay",
                        "param"       => "ordernum=%id%"
                    );
                    $payurlParam = getUrlPath($param);

                    $param = array(
                        "service"  => "member",
                        "type"     => "user",
                        "template" => "orderdetail",
                        "module"   => "tuan",
                        "id"       => "%id%",
                        "param"    => "rates=1"
                    );
                    $commonUrlParam = getUrlPath($param);

                    $sql = $dsql->SetQuery("SELECT o.`proid`, o.`procount`, o.`orderprice`, o.`propolic`, o.`orderstate`, o.`orderdate`, o.`paydate`, o.`ret-state`, o.`exp-date`, m.`company` " .
                        "FROM `#@__tuan_order` o LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` LEFT JOIN `#@__member` m ON m.`id` = s.`uid` WHERE o.`id` = $id");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {

                        $val = $ret[0];
                        $list[$i]['tab']         = $tab;
                        $list[$i]['id']          = $id;
                        $list[$i]['ordernum']    = $ordernum;
                        $list[$i]['proid']       = $val['proid'];
                        $list[$i]['procount']    = $val['procount'];
                        $list[$i]['company']     = $val['company'];

                        //计算订单价格
                        $totalPrice = $val['orderprice'] * $val['procount'];
                        $propolic   = $val['propolic'];
                        $policy     = unserialize($propolic);
                        if (!empty($propolic) && !empty($policy)) {
                            $freight  = $policy['freight'];
                            $freeshi  = $policy['freeshi'];

                            if ($val['procount'] <= $freeshi) {
                                $totalPrice += $freight;
                            }
                        }

                        $list[$i]['orderprice']  = $totalPrice;
                        $list[$i]["orderstate"]  = $val['orderstate'];
                        $list[$i]['orderdate']   = $val['orderdate'];
                        $list[$i]['paydate']     = $val['paydate'];
                        $list[$i]['retState']    = $val['ret-state'];
                        $list[$i]['expDate']     = $val['exp-date'];


                        $detailHandels = new handlers("tuan", "detail");
                        $detail  = $detailHandels->getHandle($val['proid']);
                        if ($detail && $detail['state'] == 100) {
                            $data = $detail['info'];
                            $list[$i]['product']['title'] = $data['title'];
                            $list[$i]['product']['enddate'] = $data['enddate'];
                            $list[$i]['product']['litpic'] = $data['litpic'];
                        } else {
                            $list[$i]['product']['title'] = $langData['siteConfig'][13][20];  //无
                            $list[$i]['product']['enddate'] = 0;
                            $list[$i]['product']['litpic'] = "";
                        }

                        $param = array(
                            "service"     => "tuan",
                            "template"    => "detail",
                            "id"          => $val['proid']
                        );
                        $list[$i]['product']['url'] = getUrlPath($param);

                        //未付款的提供付款链接
                        if ($val['orderstate'] == 0) {
                            $RenrenCrypt = new RenrenCrypt();
                            $encodeid = base64_encode($RenrenCrypt->php_encrypt($ordernum));
                            $list[$i]["payurl"] = str_replace("%id%", $encodeid, $payurlParam);
                        }

                        //评价
                        if ($val['orderstate'] == 3) {
                            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__tuancommon` WHERE `aid` = " . $id);
                            $common = $dsql->dsqlOper($archives, "totalCount");
                            $iscommon = $common > 0 ? 1 : 0;
                            $list[$i]['common'] = $iscommon;
                            $list[$i]['commonUrl'] = str_replace("%id%", $id, $commonUrlParam);
                        }

                        $i++;
                    }
                }


                //商城
                if ($tab == "shop") {
                    $sql = $dsql->SetQuery("SELECT `store`, `userid`, `orderstate`, `orderdate`, `paytype`, `ret_state`, `exp_date`, `common` FROM `#@__shop_order` WHERE `id` = $id");
                    $ret_ = $dsql->dsqlOper($sql, "results");
                    if ($ret_ && is_array($ret_)) {

                        $val = $ret_[0];

                        $sql = $dsql->SetQuery("SELECT * FROM `#@__shop_order_product` WHERE `orderid` = " . $id);
                        $ret = $dsql->dsqlOper($sql, "results");

                        if ($ret && is_array($ret)) {

                            $param = array(
                                "service"     => "shop",
                                "template"    => "detail",
                                "id"          => "%id%"
                            );
                            $urlParam = getUrlPath($param);

                            $param = array(
                                "service"     => "shop",
                                "template"    => "pay",
                                "param"       => "ordernum=%id%"
                            );
                            $payurlParam = getUrlPath($param);

                            $param = array(
                                "service"  => "member",
                                "type"     => "user",
                                "template" => "orderdetail",
                                "module"   => "shop",
                                "id"       => "%id%",
                                "param"    => "rates=1"
                            );
                            $commonUrlParam = getUrlPath($param);

                            $list[$i]['tab']         = $tab;
                            $list[$i]['id']          = $id;
                            $list[$i]['ordernum']    = $ordernum;

                            //商家信息
                            $detailHandels = new handlers("shop", "storeDetail");
                            $detail  = $detailHandels->getHandle($val['store']);
                            if ($detail && $detail['state'] == 100) {
                                $data = $detail['info'];
                                $list[$i]['store'] = array(
                                    "id"     => $data['id'],
                                    "title"  => $data['title'],
                                    "domain" => $data['domain'],
                                    "qq"     => $data['qq']
                                );
                            } else {
                                $list[$i]['store'] = array(
                                    "id"     => 0,
                                    "title"  => $langData['siteConfig'][19][709]  //官方直营
                                );
                            }


                            $list[$i]['orderstate']  = $val['orderstate'];
                            $list[$i]['orderdate']   = $val['orderdate'];
                            $list[$i]['retState']    = $val['ret_state'];
                            $list[$i]['expDate']     = $val['exp_date'];

                            //支付方式
                            $paySql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $val["paytype"] . "'");
                            $payResult = $dsql->dsqlOper($paySql, "results");
                            if (!empty($payResult)) {
                                $list[$i]["paytype"]   = $payResult[0]["pay_name"];
                            } else {
                                global $cfg_pointName;
                                $payname = "";
                                if ($val["paytype"] == "point,money") {
                                    $payname = $cfg_pointName . "+余额";
                                } elseif ($val["paytype"] == "point") {
                                    $payname = $cfg_pointName;
                                } elseif ($val["paytype"] == "money") {
                                    $payname = "余额";
                                }
                                $list[$i]["paytype"]   = $payname;
                            }

                            //未付款的提供付款链接
                            if ($val['orderstate'] == 0) {
                                $RenrenCrypt = new RenrenCrypt();
                                $encodeid = base64_encode($RenrenCrypt->php_encrypt($ordernum));
                                $list[$i]["payurl"] = str_replace("%id%", $encodeid, $payurlParam);
                            }

                            //评价
                            $list[$i]['common'] = $val['common'];

                            //商品信息
                            $productArr = array();
                            $totalPayPrice = 0;
                            foreach ($ret as $k => $v) {
                                global $oper;
                                $oper = "user";

                                $detailHandels = new handlers("shop", "detail");
                                $detail  = $detailHandels->getHandle($v['proid']);
                                if ($detail && $detail['state'] == 100) {
                                    $data = $detail['info'];

                                    $list[$i]['product'][$k]['title'] = $data['title'];
                                    $list[$i]['product'][$k]['litpic'] = $data['litpic'];
                                    $list[$i]['product'][$k]['url'] = str_replace("%id%", $v['proid'], $urlParam);

                                    $list[$i]['product'][$k]['price'] = $v['price'];
                                    $list[$i]['product'][$k]['count'] = $v['count'];
                                    $list[$i]['product'][$k]['specation'] = $v['specation'];
                                }
                                $priceinfo = empty($v['priceinfo']) ? array() : unserialize($v["priceinfo"]);
                                $auth_hui = 0;
                                $authlogis = 0;
                                if ($priceinfo) {
                                    foreach ($priceinfo as $key => $value) {
                                        $auth_hui += $value['amount'];
                                        if ($key['type'] == 'auth_peisong') {
                                            $authlogis += $value['amount'];
                                        }
                                    }
                                }


                                global $cfg_pointRatio;
                                //未付款的不计算积分和余额部分
                                if ($val['orderstate'] != 0) {
                                    $totalPayPrice += $v['price'] * $v['count'] + $v['logistic'] + $v['discount'];
                                } else {
                                    $totalPayPrice += $v['payprice'];
                                }
                                if (!empty($v['point']) && $v['point'] > 0) {
                                    $totalPoint  = $v["point"];
                                    $pointprice = $totalPoint / $cfg_pointRatio;

                                    $totalPayPrice = sprintf("%.2f", $totalPayPrice - $pointprice);
                                }

                                $totalPayPrice = sprintf("%.2f", $totalPayPrice - $auth_hui);
                            }
                            $list[$i]['totalPayPrice'] = sprintf("%.2f", $totalPayPrice);

                            $i++;
                        }
                    }
                }


                //外卖
                // if($tab == "waimai"){
                //
                //  $sql = $dsql->SetQuery("SELECT `userid`, `store`, `price`, `paytype`, `peisong`, `offer`, `orderdate`, `note`, `state` FROM `#@__waimai_order` WHERE `id` = $id");
                //  $ret = $dsql->dsqlOper($sql, "results");
                //  if($ret && is_array($ret)){
                //      $data = $ret[0];
                //
                //      $list[$i]['id']              = $id;
                //      $list[$i]['ordernum']  = $ordernum;
                //      $list[$i]['tab']       = $tab;
                //      $list[$i]['userid']    = $data['userid'];
                //      $list[$i]['store']     = $data['store'];
                //      $list[$i]['price']     = $data['price'];
                //      $list[$i]['paytype']   = $data['paytype'];
                //      $list[$i]['peisong']   = $data['peisong'];
                //      $list[$i]['offer']     = $data['offer'];
                //      $list[$i]['orderdate'] = $data['orderdate'];
                //      $list[$i]['note']      = $data['note'];
                //      $list[$i]['state']     = $data['state'];
                //
                //      //用户名
                //      $userSql = $dsql->SetQuery("SELECT `username` FROM `#@__member` WHERE `id` = ". $data["userid"]);
                //      $username = $dsql->dsqlOper($userSql, "results");
                //      $list[$i]["username"] = $username[0]['username'];
                //
                //      //餐厅
                //      $storeSql = $dsql->SetQuery("SELECT `title` FROM `#@__waimai_store` WHERE `id` = ". $data['store']);
                //      $storename = $dsql->getTypeName($storeSql);
                //      $list[$i]["storename"] = $storename[0]["title"];
                //
                //      $paytype = $data["paytype"];
                //      if(!$paytype){
                //          $list[$i]["paytype"] = "未知";
                //      }else{
                //          //主表信息
                //          $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '$paytype'");
                //          $ret = $dsql->dsqlOper($sql, "results");
                //          if(!empty($ret)){
                //              $list[$i]["paytype"] = $ret[0]['pay_name'];
                //          }else{
                //              $list[$i]["paytype"] = $data["paytype"];
                //          }
                //      }
                //
                //      //订单内容
                //      $menuList = array();
                //      $sql = $dsql->SetQuery("SELECT `pid`, `pname`, `price`, `count` FROM `#@__waimai_order_product` WHERE `orderid` = ".$id);
                //      $ret = $dsql->dsqlOper($sql, "results");
                //      if($ret){
                //          foreach ($ret as $k => $v) {
                //              $menuList[$k]['pid'] = $v['pid'];
                //              $menuList[$k]['pname'] = $v['pname'];
                //              $menuList[$k]['price'] = $v['price'];
                //              $menuList[$k]['count'] = $v['count'];
                //          }
                //      }
                //      $list[$i]["menus"] = $menuList;
                //
                //      $i++;
                //  }
                //
                // }


            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 普通会员发布信息，支付
     * @return array
     */
    public function fabuPay()
    {
        $param =  $this->param;
        $param_ = $param;

        $module     = $param['module'];
        $type       = $param['type'];
        $aid        = $param['aid'];
        $paytype    = $param['paytype'];
        $tourl      = $param['tourl'];
        $useBalance = (int)$param['useBalance'];
        $paypwd     = $param['paypwd'];
        $qr         = (int)$param['qr'];
        $ordernum   = $param['ordernum'];
        $final      = (int)$param['final']; // 最终支付
        $createtype = (int)$param['createtype']; // 最终支付
        $fabuInfo   = (int)$param['fabuInfo']; // 判断发布还是编辑   1发布  2 编辑
        $amountt    = $param['balance'];
        $amounte    = $param['amount'];
        $valid      = $param['valid'];                  //分类信息模块 延长有效期
        $validType  = $param['validType'];              //半段是否更新有效期
        $btitle     = $param['btitle'];  // 账单标题
        $utype      = $param['utype'];       // 账单，用户类型
        $act        = $param['act'];    //  账单url，子模块附加参数1（可选）
        $template   = $param['template']; // 账单，跳转模板文件
        $ctype      = $param['ctype'];  // 账单，操作类型
        $montype    = $param['montype'];  // 账单，充值或提现
        $check      = (int)$this->param['check'];
        if (empty($module) || empty($aid)) die(self::$langData['siteConfig'][33][13]);
        if ($paytype == 'huoniao_bonus' && $module == 'info') {
            $useBalance = 0;
            $amounte = $param['amount'];
        }                       //消费金支付方式
        $isMobile = isMobile();

        global $dsql;
        global $userLogin;
        global $langData;
        $userid = $userLogin->getMemberID();
        if ($userid == -1) die($langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $tab = "";
        if ($module == "house") {
            if (empty($type)) die(self::$langData['siteConfig'][33][13]);
            $tab = "house_" . $type;
        } elseif ($module == "car" || $module == "huodong" || $module == "tieba" || $module == "vote" || $module == "sfcar") {
            $tab = $module . "_list";
        } elseif ($module == "education") {
            $tab = $module . "_courses";
        } else {
            $tab = $module . "list";
        }
        if ($module == "info") {
            $archive = $dsql->SetQuery("SELECT `title`,`waitPrice`,`waitPay` FROM `#@__" . $tab . "` WHERE `id` = $aid");
        } else {
            $archive = $dsql->SetQuery("SELECT `title` FROM `#@__" . $tab . "` WHERE `id` = $aid AND `waitpay` = 1");
        }
        $results = $dsql->dsqlOper($archive, "results");
        if ($results) {
            if ($fabuInfo && $fabuInfo == '1') {    //分类信息
                $amountInfo = $dsql->SetQuery("SELECT `waitPrice` FROM `#@__" . $tab . "` WHERE `id` = $aid ");
                $infoamount = $dsql->dsqlOper($amountInfo, "results");
            }
            $title = cn_substrR(strip_tags($results[0]['title']), 200);

            //用户信息
            $userinfo = $userLogin->getMemberInfo();

            global $cfg_fabuAmount;
            $fabuAmount = $cfg_fabuAmount ? unserialize($cfg_fabuAmount) : array();
            $amount = 0; // 应付金额;
            if ($fabuAmount) {
                $amount = $fabuAmount[$module];
            }
            if (isset($results[0]['waitPay']) || isset($results[0]['waitPrice'])) {
                $waitPay = $results[0]['waitPay'];
                if ($waitPay == '1') {
                    $amount = $results[0]['waitPrice'];
                }
                //                $waitPay = $results[0]['waitPay'];
            }
            if ($module == 'info') {

                $amount = $amounte;
            }

            //验证支付密码
            if ($useBalance && $paypwd) {
                $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
                $results  = $dsql->dsqlOper($archives, "results");
                $res      = $results[0];
                $hash     = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
                if ($res['paypwd'] != $hash) {
                    return array("state" => 200, "info" => "支付密码输入错误，请重试！");
                }
            }

            if ($check) {
                return 'ok';
            }

            $balance = 0;   // 使用余额
            $payAmount = 0; // 在线支付金额;

            // 使用余额
            if ($useBalance && $createtype == 0) {

                if ($amount <= $userinfo['money']) {
                    $payAmount = 0;
                } else {
                    $payAmount = $amount - $userinfo['money'];
                }
                if ($module == 'info') {
                    $balance = (float)$param['balance'];
                    $amount  = $amount;
                } else {
                    $balance = $amount - $payAmount;
                }
            } else {

                if ($module == 'info') {
                    $balance = $amountt;
                }
                $payAmount = $amount;
            }
            $param = array(
                "userid" => $userid,
                "amount" => $amount,
                "balance" => $balance,
                "online" => $payAmount,
                "type" => "fabu",
                "module" => $module,
                "class" => $type,
                "tab" => $tab,
                "aid" => $aid,
                "title" => $title,
                "valid" => $valid,
                "validType" => $validType,
                "ordernum" => $ordernum,
                "useBalance" => $useBalance,
                "paytype" => $paytype,
                'btitle' => $btitle,
                'utype' => $utype,
                'act'   => $act,
                'template' => $template,
                'ctype' => $ctype,
                'montype' => $montype
            );

            if ($ordernum) {
                $paysql = $dsql->SetQuery("SELECT `amount`,`pubdate`,`body`  FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 0");
                $payres = $dsql->dsqlOper($paysql, "results");
                if (is_array($payres) && empty($payres)) die("支付错误！");

                $timeout = $payres[0]['pubdate'] + 3600;

                $_body = $payres[0]['body'];
                $_body = $payres[0]['body'] ? unserialize($payres[0]['body']) : array();
                if($_body && $_body['top']){
                    $param['top'] = $_body['top'];
                }
            }

            // 实际支付金额大于0
            if ($payAmount) {

                if (!$ordernum) {
                    $timeout = GetMkTime(time()) + 3600;
                    $ordernum = $ordernum ? $ordernum : create_ordernum();
                }
                $param['type'] = 'fabuPay';

                //                if($isMobile && empty($final)){
                //                    $param_['ordernum'] = $ordernum;
                //                    $param_['ordertype'] = 'fabuPay';
                //                    $param = array(
                //                        "service" => "member",
                //                        "type" => "user",
                //                        "template" => "pay",
                //                        "param" => http_build_query($param_)
                //                    );
                //                    header("location:".getUrlPath($param));
                //                    die;
                //                }
                if ($createtype == 1) {
                    $order = createPayForm("member", $ordernum, $payAmount, $paytype, $langData['siteConfig'][21][113], $param, $createtype);  //会员发布信息

                    if(is_array($order)){
                        $order['timeout'] = $timeout;
                    }

                    return $order;
                } else {
                    $order = createPayForm("member", $ordernum, $payAmount, $paytype, $langData['siteConfig'][21][113], $param);

                    if(is_array($order)){
                        $order['timeout'] = $timeout;
                    }
                    echo json_encode(array('state' => 100, 'info' => $order));
                    die;
                }
            } else {

                $paytype = $paytype ? $paytype : 'money';

                //更新支付日志
                $archives = $dsql->SetQuery("UPDATE `#@__pay_log` SET `paytype` ='$paytype', `state` = 1 WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($archives, "update");
                $payAmount = 0;

                $this->fabuPaySuccess($param);

                if ($tourl) {
                    return $tourl;
                } else {
                    if ($module == 'info') {
                        return array('ordernum' => $ordernum, 'info' => 'ok');  //发布成功
                    }
                    return $langData['siteConfig'][20][341];  //发布成功
                }
            }
        } else {
            die($langData['siteConfig'][21][114]);  //信息不存在或已完成支付
        }
    }

    /**
     * 会员发布信息支付成功 - 普通会员发布或者付费会员当天超量发布
     */
    public function fabuPaySuccess($param)
    {
        global $dsql;
        global $langData;
        global $userLogin;
        global $cfg_fabulFee;
        $userid  = $param['userid'];
        $module  = $param['module'];
        $tab     = $param['tab'];
        $title   = $param['title'];
        $aid     = $param['aid'];
        $amount  = $param['amount'];
        $balance = $param['balance'];
        $ordernum = $param['ordernum'];
        $validType = $param['validType'];
        $paytype  = $param['paytype'];
        $top  = $param['top'];  //置顶时长，单位：天

        $paytype = $paytype == 'balance' ? 'money' : $paytype;

        $param['amount'] = $amount;
        $time = time();

        //会员信息
        $userinfo = $userLogin->getMemberInfo($userid);
        $_arcrank = 0;
        if ($module == 'info') {
            $archive = $dsql->SetQuery("SELECT `id`,`cityid`, `arcrank` FROM `#@__" . $tab . "` WHERE `id` = $aid");
        } else {
            $archive = $dsql->SetQuery("SELECT `id`,`cityid` FROM `#@__" . $tab . "` WHERE `id` = $aid AND `waitpay` = 1");
        }
        $results = $dsql->dsqlOper($archive, "results");
        if ($results) {

            if($module == 'info'){
                $_arcrank = (int)$results[0]['arcrank'];
            }

            //分类信息增加有效期
            $infoValid = $dsql->SetQuery("SELECT `body` FROM `#@__pay_log` WHERE  `ordernum` = '$ordernum'");
            $validInfo = $dsql->dsqlOper($infoValid, "results");
            $validArr = unserialize($validInfo[0]['body']);
            if (!empty($validArr['validType']) && $module == 'info') {
                $valid  = $validArr['valid'];
                $archives = $dsql->SetQuery("UPDATE `#@__infolist` SET `valid` = " . $valid . ",`waitPrice`='$amount'  WHERE `id` = " . $aid);
                $resultss  = $dsql->dsqlOper($archives, "update");
                dataAsync("info", $aid);  // 分类信息、延长有效期
            }

            $_ordernum = create_ordernum();
            $modulename = getModuleTitle(array('name' => $module));

            //如果有置顶行为
            $topPrice = 0;
            if($top && $module == 'info'){

                include HUONIAOINC . "/config/refreshTop.inc.php";

                $top_key = 0;
                $cfg_info_topNormal = $cfg_info_topNormal ? unserialize($cfg_info_topNormal) : array();

                //根据信息ID查询分类ID
                $sql = $dsql->SetQuery("SELECT `typeid` FROM `#@__infolist` WHERE `id` = $aid");
                $typeid = (int)$dsql->getOne($sql);

                //获取分类高级设置 
                $configHandels = new handlers('info', "typeDetail");
                $typeDetail = $configHandels->getHandle($typeid);
                if (is_array($typeDetail) && $typeDetail['state'] == 100) {
                    $typeDetail = $typeDetail['info'];
                    $typeDetail = $typeDetail[0];

                    //置顶配置
                    if(!$typeDetail['topSwitch']){
                        $cfg_info_topNormal = array();
                    }
                    elseif($typeDetail['topConfig']){
                        $cfg_info_topNormal = $typeDetail['topNormal'];   
                    }

                }
                
                if($cfg_info_topNormal){
                    foreach($cfg_info_topNormal as $key => $val){
                        if($val['day'] == $top){
                            $top_key = $key;
                            $topPrice = (float)$val['price'];
                        }
                    }
                }

                $topParam = array(
                    "userid" => $userid,
                    "amount" => $topPrice,
                    "balance" => $balance ? $topPrice : 0,
                    "online" => $balance ? $topPrice : 0,
                    "type" => "refreshTop",
                    "module" => $module,
                    "act" => 'detail',
                    "class" => 'topping',
                    "aid" => $aid,
                    "config" => $top_key
                );

                //发布的费用减去置顶的费用
                $amount -= $topPrice;
                $balance = $balance > 0 ? $balance - $topPrice : 0;

            }

            //保存操作日志
            if ($validType) {
                $info   = "延长信息有效期：" . $title;  //发布信息
                $title_ = $modulename . "延长信息有效期";
            } else {
                $info   = $langData['siteConfig'][6][143] . "：" . $title;  //发布信息
                $title_ = $modulename . "发布信息";
            }
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 1 AND `paytype` !='money'");
            $ret = $dsql->dsqlOper($sql, "results");
            $pid = '';
            if ($ret) {
                $pid = $ret[0]['id'];
                //                $paytype = $ret[0]['paytype'];

            }
            $pid = (int)$pid;

            $paramBusi = array(
                "service"  => $module,
                "template" => "detail",
                "id"       => $aid
            );
            if ($module == 'house') {
                $template = str_replace('house_', '', $tab);
                $paramBusi = array(
                    "service"  => "house",
                    "template" => $template != '' ? $template . "-detail" : "index",
                    "id"       => $aid
                );
            }


            //扣除会员余额
            if ($balance && $paytype == 'money') {
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$balance' WHERE `id` = '$userid'");
                $dsql->dsqlOper($archives, "update");

                $updatesql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `paytype` = 'money' , `state` = 1 WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($updatesql, "update");

                $user  = $userLogin->getMemberInfo($userid);
                $usermoney = $user['money'];
                $urlParam = serialize($paramBusi);

                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`title`,`ordernum`,`urlParam`,`balance`) VALUES ('$userid', '0', '$balance', '$info', '$time','$module','fabuxinxi','$pid','$title_','$ordernum','$urlParam','$usermoney')");
                $dsql->dsqlOper($archives, "update");
            }

            if ($validType) {
                $_title = '延长信息有效期，订单号：' . $_ordernum;
                $_title1 = '延长信息有效期到' . date("Y-m-d H:i:s", $valid);
            } else {
                $_title = '发布信息，订单号：' . $_ordernum;
                $_title1 = '付费发布信息';
            }

            //记录用户行为日志
            memberLog($userid, 'member', 'fabu', $aid, 'insert', $_title1 . '(' . $ordernum . '=>' . $amount . '元=>' . $module . '=>' . $aid . ')', getUrlPath($paramBusi), '');

            global  $paytypee;
            $paytypee = $paytype;
            //分销佣金
            $this->returnFxMoney($module, $userid, $_ordernum, $param, 1);


            //查询一共分销了多少佣金
            $fenxiaomoneysql = $dsql->SetQuery("SELECT SUM(`amount`) allfenxiao FROM `#@__member_fenxiao` WHERE `ordernum` = '$_title' AND `module`= '$module'");
            $fenxiaomonyeres = $dsql->dsqlOper($fenxiaomoneysql, "results");
            $fenxiaoTotalPrice     = $fenxiaomonyeres[0]['allfenxiao'];

            //扣除分销佣金，再进行分站和平台的结算
            $amount -= $fenxiaoTotalPrice;

            //判断是否需要审核通过
            include HUONIAOINC . "/config/" . $module . ".inc.php";
            $arcrank    = (int)$customFabuCheck;

            if ($module == 'house') {
                $arcrank    = (int)$customagentCheck;
            }

            include HUONIAOINC . '/config/siteConfig.inc.php';
            $pubdate = GetMkTime(time());
            $state = (int)$cfg_memberstatus;

            //如果只是分类信息延长有效期，则不需要重新审核
            if (!empty($validArr['validType']) && $module == 'info') {
                // $arcrank = 1;
                $arcrank = $_arcrank;  //状态保持不变
            }

            if ($state == 1) {
                $upd = ', `state` = ' . $arcrank;
                if ($module == 'article' || $module == 'info' || $module == 'live') {
                    $upd = ', `arcrank` = ' . $arcrank;
                }
            } else {
                $upd = ', `state` = 1';
                if ($module == 'article' || $module == 'info' || $module == 'live') {
                    $upd = ', `arcrank` = 1';
                }
            }

            $sql = $dsql->SetQuery("UPDATE `#@__" . $tab . "` SET `waitpay` = 0, `pubdate` = '$pubdate'" . $upd . " WHERE `id` = $aid");
            $dsql->dsqlOper($sql, "update");

            //直播
            if ($module == 'live') {
                $configHandels = new handlers('live', "createLiveDetail");
                $configHandels->getHandle(array('id' => $aid));
            }


            //分站佣金
            $cityid = $results[0]['cityid'];            //  根据这条信息的cityid
            $fzFee = cityCommission($cityid, 'fabu');

            //将费用打给分站
            $fztotalAmount_ =  $amount * (float)$fzFee / 100;
            $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;
            $fztotalAmount_ = sprintf("%.2f", $fztotalAmount_);

            //平台获得多少钱
            $fee = sprintf("%.2f", ($amount - $fztotalAmount_));
            $cityName   =  getSiteCityName($cityid);

            $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` + '$fztotalAmount_' WHERE `cid` = '$cityid'");
            $dsql->dsqlOper($fzarchives, "update");

            //保存操作日志
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`,`balance`) VALUES ('$userid', '1', '$amount', '发布信息(分站佣金)：$title', '$time','$cityid','$fztotalAmount_','$module',$fee,'1','fabuxinxi','0')");
            $lastid = $dsql->dsqlOper($archives, "lastid");
            substationAmount($lastid, $cityid);

            if ($arcrank) {
                global $cfg_returnInteraction_commentDay;
                $countIntegral = countIntegral($userid);    //统计积分上限
                $parameter = hudongJifen($module);
                $integral = $parameter[0]['integral'];      //增加的积分
                $info = $parameter[0]['info'] . '，' . $info;      //信息
                if ($countIntegral < $cfg_returnInteraction_commentDay && $integral > 0) {
                    $date = GetMkTime(time());
                    //增加积分
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$integral' WHERE `id` = '$userid'");
                    $dsql->dsqlOper($archives, "update");
                    $user  = $userLogin->getMemberInfo($userid);
                    $userpoint = $user['point'];
                    //                $pointuser = (int)($userpoint+$integral);
                    //保存操作日志
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`interaction`,`balance`) VALUES ('$userid', '1', '$integral', '$info', '$date','zengsong','1','$userpoint')");
                    $dsql->dsqlOper($archives, "update");
                    $param = array(
                        "service"  => "member",
                        "type"     => "user",
                        "template" => "point"
                    );

                    //自定义配置
                    $config = array(
                        "username" => $userinfo['username'],
                        "amount" => $integral,
                        "point" => $userinfo['point'],
                        "date" => date("Y-m-d H:i:s", $date),
                        "info" => $info,
                        "fields" => array(
                            'keyword1' => '变动类型',
                            'keyword2' => '变动积分',
                            'keyword3' => '变动时间',
                            'keyword4' => '积分余额'
                        )
                    );
                    updateMemberNotice($userid, "会员-积分变动通知", $param, $config);
                }
            }
            $cityMoney = getcityMoney($cityid);   //获取分站总收益
            $allincom = getAllincome();             //获取平台今日收益
            $infoname = getModuleTitle(array('name' => $module));    //获取模块名
            //微信通知
            $param = array(
                'type'   => "1", //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . "分站\r\n" . $infoname . "模块\r\n" . ($validType ? '延长信息有效期' : '发布信息') . "\r\n用户：" . $userinfo['nickname'] . "\r\n信息：" . $title . "\r\n\r\n获得佣金：" . sprintf("%.2f", $fztotalAmount_),
                    'date' => date("Y-m-d H:i:s", time()),
                    'status' => "今日总收入：$cityMoney"
                )
            );
            $params = array(
                'type'   => "2", //区分佣金 给分站还是平台发送 1分站 2平台
                'cityid' => $cityid,
                'notify' => '管理员消息通知',
                'fields' => array(
                    'contentrn'  => $cityName . "分站 \r\n" . $infoname . "模块\r\n" . ($validType ? '延长信息有效期' : '发布信息') . "\r\n用户：" . $userinfo['nickname'] . "\r\n信息：" . $title . "\r\n\r\n平台获得佣金:" . $fee . "\r\n分站获得佣金: " . sprintf("%.2f", $fztotalAmount_),
                    'date' => date("Y-m-d H:i:s", time()),
                    'status' => "今日总收入：$allincom"
                )
            );
            //后台微信通知
            updateAdminNotice($module, "detail", $param);
            updateAdminNotice($module, "detail", $params);

            //置顶业务
            if($top){

                $ordernum = create_ordernum();

                $archives = $dsql->SetQuery("SELECT `pay_code` FROM `#@__site_payment` WHERE `state` = 1 ORDER BY `weight`, `id` DESC LIMIT 1");
                $_paytype = $dsql->getOne($archives);

                $ret = createPayForm("siteConfig", $ordernum, $topPrice, $_paytype, self::$langData['siteConfig'][32][38], $topParam, 1);  //立即置顶

                //成功之后增加消费操作日志
                $archives = $dsql->SetQuery("UPDATE  `#@__pay_log`  SET `paytype` ='$paytype', `state` = 1 WHERE `ordernum` = '$ordernum'");
                $dsql->dsqlOper($archives, "update");
                
                $_siteConfig = new siteConfig();
                $_siteConfig->refreshTopSuccess($topParam);

            }

        }
    }

    /**
     * 发布信息继续支付时判断是否需要支付费用
     */
    public function checkFabuAmount()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $module = $this->param['module'];
        if (empty($module)) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][13] . "，module"); //参数错误
        }

        $needpay = 0;

        //用户信息
        $userinfo = $userLogin->getMemberInfo();

        $alreadyFabu = 0;
        if ($module == "info") {
            if ($userinfo['userType'] == 2) {
                include HUONIAOINC . "/config/info.inc.php";
                $memberLevelAuth = getMemberLevelAuth($userinfo['level']);
                $memberInfoCount = (int)$memberLevelAuth['info'];
                if ($memberInfoCount > (int)$cfg_qymember) {
                    $maxCount = $memberInfoCount;
                } else {
                    $maxCount = (int)$cfg_qymember;
                }

                //统计用户当天已发布数量 @
                $today = GetMkTime(date("Y-m-d", time()));
                $tomorrow = GetMkTime(date("Y-m-d", strtotime("+1 day")));

                $tab = array();
                if ($module == "house") {
                    $tab = array("house_sale", "house_zu", "house_xzl", "house_sp", "house_cf", "house_cw");
                } elseif ($module == "car" || $module == "huodong" || $module == "tieba" || $module == "vote") {
                    $tab = array($module . "_list");
                } elseif ($module == "education") {
                    $tab = array($module . "_courses");
                } else {
                    $tab = array($module . "list");
                }

                $admin = "admin";
                if ($module == "car" || $module == "info" || $module == "house") {
                    $admin = "userid";
                } elseif ($module == "huodong" || $module == "tieba") {
                    $admin = "uid";
                }

                foreach ($tab as $key => $value) {
                    $sql = $dsql->SetQuery("SELECT count(`id`) total FROM `#@__" . $value . "` WHERE `" . $admin . "` = $uid AND `pubdate` >= $today AND `pubdate` < $tomorrow AND `alonepay` = 0 AND `waitpay` = 0");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $alreadyFabu += $ret[0]['total'];
                        $needpay = 1;
                    }
                }
                if ($alreadyFabu >= $maxCount) {
                    $needpay = 1;
                }
            } else {
                if ($userinfo['userType'] == 1) {
                    if ($userinfo['level']) {
                        $memberLevelAuth = getMemberLevelAuth($userinfo['level']);
                        $maxCount = (int)$memberLevelAuth[$module];

                        //统计用户当天已发布数量 @
                        $today = GetMkTime(date("Y-m-d", time()));
                        $tomorrow = GetMkTime(date("Y-m-d", strtotime("+1 day")));


                        $tab = array();
                        if ($module == "house") {
                            $tab = array("house_sale", "house_zu", "house_xzl", "house_sp", "house_cf", "house_cw");
                        } elseif ($module == "car" || $module == "huodong" || $module == "tieba" || $module == "vote") {
                            $tab = array($module . "_list");
                        } elseif ($module == "education") {
                            $tab = array($module . "_courses");
                        } else {
                            $tab = array($module . "list");
                        }

                        $admin = "admin";
                        if ($module == "car" || $module == "info" || $module == "house") {
                            $admin = "userid";
                        } elseif ($module == "huodong" || $module == "tieba") {
                            $admin = "uid";
                        }

                        foreach ($tab as $key => $value) {
                            $sql = $dsql->SetQuery("SELECT count(`id`) total FROM `#@__" . $value . "` WHERE `" . $admin . "` = $uid AND `pubdate` >= $today AND `pubdate` < $tomorrow AND `alonepay` = 0 AND `waitpay` = 0");
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                $alreadyFabu += $ret[0]['total'];
                                $needpay = 1;
                            }
                        }
                        if ($alreadyFabu >= $maxCount) {
                            $needpay = 1;
                        }
                    } else {
                        $needpay = 1;
                    }
                }
            }

            if ($userinfo['level']) {
                $auth = array("level" => $userinfo['level'], "levelname" => $userinfo['levelName'], "alreadycount" => $alreadyFabu, "maxcount" => $maxCount);
            } elseif ($userinfo['userType'] == 0 && $userinfo['level'] == 0) {
                $auth = array("level" => $userinfo['level'], "levelname" => $userinfo['levelName'], "alreadycount" => $alreadyFabu, "maxcount" => $maxCount);
            } else {
                $auth = array("level" => 0, "levelname" => $langData['siteConfig'][21][31], "alreadycount" => $alreadyFabu, "maxcount" => 0);  //普通会员
            }

            return array("state" => 100, "auth" => $auth, "needpay" => $needpay);
        } else {
            if ($userinfo['userType'] == 1 || $module != 'tieba' || $module != 'vote' || $module != 'sfcar' || $module != 'live') {

                if ($userinfo['level']) {
                    $memberLevelAuth = getMemberLevelAuth($userinfo['level']);
                    $maxCount = (int)$memberLevelAuth[$module];

                    //统计用户当天已发布数量 @
                    $today = GetMkTime(date("Y-m-d", time()));
                    $tomorrow = GetMkTime(date("Y-m-d", strtotime("+1 day")));

                    $tab = array();
                    if ($module == "house") {
                        $tab = array("house_sale", "house_zu", "house_xzl", "house_sp", "house_xzl");
                    } elseif ($module == "car" || $module == "huodong" || $module == "tieba" || $module == "vote" || $module == "sfcar") {
                        $tab = array($module . "_list");
                    } elseif ($module == "education") {
                        $tab = array($module . "_courses");
                    } else {
                        $tab = array($module . "list");
                    }

                    $admin = "admin";
                    if ($module == "car" || $module == "info" || $module == "house" || $module == "sfcar") {
                        $admin = "userid";
                    } elseif ($module == "huodong" || $module == "tieba") {
                        $admin = "uid";
                    } elseif ($module == "live") {
                        $admin = "user";
                    }

                    foreach ($tab as $key => $value) {
                        $sql = $dsql->SetQuery("SELECT count(`id`) total FROM `#@__" . $value . "` WHERE `" . $admin . "` = $uid AND `pubdate` >= $today AND `pubdate` < $tomorrow AND `alonepay` = 0 AND `waitpay` = 0");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $alreadyFabu += $ret[0]['total'];
                        }
                    }
                    if ($alreadyFabu >= $maxCount) {
                        $needpay = 1;
                    }
                } else {
                    $needpay = 1;
                }
            }

            if ($userinfo['level']) {
                $auth = array("level" => $userinfo['level'], "levelname" => $userinfo['levelName'], "alreadycount" => $alreadyFabu, "maxcount" => $maxCount);
            } else {
                $auth = array("level" => 0, "levelname" => $langData['siteConfig'][21][31], "alreadycount" => $alreadyFabu, "maxcount" => 0);  //普通会员
            }

            return array("state" => 100, "auth" => $auth, "needpay" => $needpay);
        }
    }

    /**
     * 付费会员免费更新待支付信息状态 支付状态和审核状态
     */
    public function updateFabuPaystate()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        }

        $module = $this->param['module'];
        $type = $this->param['type'];

        $aid = (int)$this->param['aid'];
        if (empty($module) || empty($aid)) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        }

        $tab = "";
        $state = "state";
        if ($module == "house") {
            if (empty($type)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
            $tab = "house_" . $type;
        } elseif ($module == "car" || $module == "huodong" || $module == "tieba" || $module == "vote") {
            $tab = $module . "_list";
        } elseif ($module == "education") {
            $tab = $module . "_courses";
        } else {
            $tab = $module . "list";
            $state = "arcrank";
        }

        $archive = $dsql->SetQuery("SELECT `id` FROM `#@__" . $tab . "` WHERE `id` = $aid AND `waitpay` = 1");
        $results = $dsql->dsqlOper($archive, "results");
        if ($results) {
            $pubdate = GetMkTime(time());
            $sql = $dsql->SetQuery("UPDATE `#@__" . $tab . "` SET `pubdate` = $pubdate, `waitpay` = 0, `alonepay` = 0, `" . $state . "` = 1 WHERE `id` = $aid");
            $ret = $dsql->dsqlOper($sql, "update");
            if ($ret == "ok") {
                return self::$langData['siteConfig'][20][244]; //操作成功;
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][20][295]); //操作失败！
            }
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][21][114]); //信息不存在或已完成支付
        }
    }



    /**
     * 统计指定日期的收入
     */
    public function statisticsDateRevenue()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $date = $this->param['date'];
            }
        }

        $date = empty($date) ? date("Y-m-d", time()) : $date;  //如果为空取当天
        $date = strtotime($date);


        $began = $date;  //一天的开始时间
        $end   = $date + 24 * 3600 - 1;  //一天的结束时间

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //要返回的数组内容
        $data = array();

        //团购
        if (in_array("tuan", $installModuleArr) && verifyModuleAuth(array("module" => "tuan"))) {
            $totalAmount = $totalCount = 0;
            global $cfg_tuanFee;
            // $sql = $dsql->SetQuery("SELECT q.`cardnum`, o.`ordernum`, o.`procount`, o.`orderprice`, o.`propolic`, l.`tuantype` FROM `#@__tuanquan` q LEFT JOIN `#@__tuan_order` o  ON  o.`id` = q.`orderid` LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` WHERE s.`uid` = '$userid' AND o.`orderstate` = 3 AND q.`usedate` >= $began AND q.`usedate` <= $end");
            //            $sql = $dsql->SetQuery("SELECT o.`ordernum`, o.`procount`, o.`orderprice`, o.`propolic`, l.`tuantype` FROM `#@__tuan_order` o LEFT JOIN `#@__tuanquan` q ON o.`id` = q.`orderid` LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` WHERE s.`uid` = '$userid' AND o.`orderstate` = 3 AND q.`usedate` >= $began AND q.`usedate` <= $end");

            // $sql = $dsql->SetQuery("SELECT o.`ordernum`, o.`procount`, o.`orderprice`, o.`propolic`, l.`tuantype` ,l.`price`FROM `#@__tuan_order` o LEFT JOIN `#@__tuanquan` q ON o.`id` = q.`orderid` LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` WHERE s.`uid` = '$userid' AND q.`usedate` >= $began AND q.`usedate` <= $end");
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) totalAmount, COUNT(`id`) totalCount FROM `#@__member_money` WHERE `userid` = '$userid' AND `type` = 1 AND `ordertype` = 'tuan' AND `showtype` = 0 AND `ctype` = 'shangpinxiaoshou' AND `date` >= $began AND `date` <= $end");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret && is_array($ret)) {

                $totalAmount = $ret[0]['totalAmount'];
                $totalCount = $ret[0]['totalCount'];

                //                 foreach ($ret as $key => $value) {
                //                     $totalCount++;
                //                     $foodcountmoney = 0;
                //
                //                     $ordernum   = $value['ordernum'];
                //                     // $ordernum   = $value['cardnum'];
                //                     $procount   = $value['procount'];
                //                     $orderprice = $value['price'];
                //                     $propolic   = $value['propolic'];
                //                     $tuantype   = $value['tuantype'];
                //                     $shopFee    = $value['shopFee'];
                //
                // //                    $foodcountmoney = $orderprice * $procount;
                //                     $foodcountmoney = $orderprice;
                //
                //                     //快递类型，需要计算运费
                //                     if($tuantype == 2){
                //                         $policy = unserialize($propolic);
                //                         if(!empty($propolic) && !empty($policy)){
                //                             $freight  = $policy['freight'];
                //                             $freeshi  = $policy['freeshi'];
                //
                //                             //如果达不到免物流费的数量，则总价再加上运费
                //                             if($procount <= $freeshi){
                //                                 $foodcountmoney += $freight;
                //                             }
                //                         }
                //                     }
                //
                //                     $cfg_tuanFee = !empty((float)$shopFee)? (float)$shopFee :(float)$cfg_tuanFee;
                //
                //                     $fee = $foodcountmoney * $cfg_tuanFee / 100;
                //                     $fee = $fee < 0.01 ? 0 : $fee;
                //                     $totalAmount += $foodcountmoney - $fee;
                //
                //                 }

            }

            //分销信息
            // global $cfg_fenxiaoState;
            // global $cfg_fenxiaoSource;
            // global $cfg_fenxiaoAmount;
            // include HUONIAOINC . "/config/tuan.inc.php";
            // $fenXiao = (int)$customfenXiao;
            //
            // $fenxiaoparamarr = fenXiaoMoneyCalculation('tuan', $ordernum);
            // //分销金额
            // $_fenxiaoAmount = $totalAmount;
            // if ($cfg_fenxiaoState && $fenXiao) {
            //
            // 	//商家承担
            // 	if ($cfg_fenxiaoSource) {
            // 		$_fenxiaoAmount = $totalAmount;
            // 		$totalAmount    = $totalAmount - $fenxiaoparamarr['totalAmount'];
            //
            // 		//平台承担
            // 	} else {
            // 		$_fenxiaoAmount = $fee;
            // 	}
            // }
            //
            // $_fenxiaoAmount = $_fenxiaoAmount < 0.01 ? 0 : $_fenxiaoAmount;
            $totalAmount    = $totalAmount < 0.01 ? 0 : $totalAmount;

            array_push($data, array(
                "module" => "tuan",
                "count"  => (int)$totalCount,
                "amount" => sprintf('%.2f', $totalAmount)
            ));
        }

        //商城
        if (in_array("shop", $installModuleArr) && verifyModuleAuth(array("module" => "shop"))) {
            $totalAmount = $totalCount = 0;
            $sql = $dsql->SetQuery("SELECT o.`id`,o.`shopFee`,o.`ordernum` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` WHERE s.`userid` = '$userid' AND o.`orderstate` = 3 AND o.`okdate` >= $began AND o.`okdate` <= $end");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret && is_array($ret)) {
                foreach ($ret as $key => $value) {
                    $id         = $value['id'];
                    $shopFee    = $value['shopFee'];
                    $ordernum   = $value['ordernum'];

                    //根据订单号查询member_money表的实际收入
                    $sql = $dsql->SetQuery("SELECT `amount` FROM `#@__member_money` WHERE `userid` = $userid AND `type` = 1 AND `ordertype` = 'shop' AND `showtype` = 0 AND `ordernum` = '$ordernum'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $totalCount++;
                        $totalAmount += $ret[0]['amount'];
                    }
                    //如果member_money表没有找到，再查订单表
                    else {
                        $opsql = $dsql->SetQuery("SELECT `price`, `count`, `logistic`, `discount`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `orderid` = $id");
                        $opret = $dsql->dsqlOper($opsql, "results");
                        if ($opret) {
                            $totalCount++;

                            foreach ($opret as $k => $v) {
                                $foodcountmoney = 0;

                                $price    = $v['price'];
                                $count    = $v['count'];
                                $logistic = $v['logistic'];
                                $discount = $v['discount'];

                                //扣除佣金
                                global $cfg_shopFee;
                                $cfg_shopFee = !empty((float)$shopFee) ? (float)$shopFee : (float)$cfg_shopFee;

                                $foodcountmoney = $price * $count + $logistic + $discount;
                                $fee = $foodcountmoney * $cfg_shopFee / 100;
                                $fee = $fee < 0.01 ? 0 : $fee;
                                $totalAmount += $foodcountmoney - $fee;
                            }
                        }
                    }
                }
            }
            array_push($data, array(
                "module" => "shop",
                "count"  => (int)$totalCount,
                "amount" => sprintf('%.2f', $totalAmount)
            ));
        }

        //外卖
        if (in_array("waimai", $installModuleArr) && verifyModuleAuth(array("module" => "waimai"))) {
            $sql = $dsql->SetQuery("SELECT `shopid` id FROM `#@__waimai_shop_manager` WHERE `userid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $store = array();
                foreach ($ret as $key => $val) {
                    array_push($store, $val['id']);
                }
                $store = join(',', $store);

                $totalAmount = $totalCount = 0;
                $sql = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`amount` FROM `#@__waimai_order_all` o LEFT JOIN `#@__waimai_shop` s ON o.`sid` = s.`id` WHERE o.`state` = 1 AND o.`pubdate` >= $began AND o.`pubdate` <= $end AND o.`sid` in ($store)");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret && is_array($ret)) {
                    foreach ($ret as $key => $value) {
                        $totalCount++;

                        $staticmoney = getwaimai_staticmoney('2', $value['id']);

                        $totalAmount += $staticmoney['business'];
                    }
                }

                //扣除佣金
                // global $cfg_waimaiFee;
                // $cfg_waimaiFee = (float)$cfg_waimaiFee;

                // $fee = $totalAmount * $cfg_waimaiFee / 100;
                // $fee = $fee < 0.01 ? 0 : $fee;
                // $totalAmount = $totalAmount - $fee;

                array_push($data, array(
                    "module" => "waimai",
                    "count"  => (int)$totalCount,
                    "amount" => sprintf('%.2f', $totalAmount)
                ));
            }
        }

        // print_r($data);die;

        return $data;
    }

    /*
     * 获取订单明细
     */
    public function getOrderList()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $module   = $this->param['module'];
        $page     = $this->param['page'];
        $pageSize = $this->param['pageSize'];
        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        if (empty($module)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13] . "，module"); //参数错误
        if ($module != "tuan" && $module != "shop" && $module != "waimai") return array("state" => 200, "info" => self::$langData['siteConfig'][33][35]); //该模块没有相关数据

        $user = "userid";
        if ($module == "tuan") {
            $user = "uid";
        }

        if ($module == "waimai") {
            $sql = $dsql->SetQuery("SELECT `shopid` id FROM `#@__waimai_shop_manager` WHERE `" . $user . "` = $userid");
        } else {
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__" . $module . "_store` WHERE `" . $user . "` = $userid AND `state` = 1");
        }
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $store = $ret[0]['id'];
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][21][115]);  //您还没有开通相关店铺或店铺状态异常
        }

        $list = array();
        $totalPrice = 0;

        if ($module == "shop") {
            $archives = $dsql->SetQuery("SELECT `id`, `paydate`, `paytype`, `ordernum`, `userid`, `orderdate`,`shopFee` FROM `#@__shop_order` WHERE `store` = '$store' AND `orderstate` = 3");
            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            //扣除佣金
            global $cfg_shopFee;
            $cfg_shopFee = (float)$cfg_shopFee;

            $atpage = $pageSize * ($page - 1);
            $where = " ORDER BY `id` DESC LIMIT $atpage, $pageSize";

            $results = $dsql->dsqlOper($archives . $where, "results");
            if ($results) {

                $sql = $dsql->SetQuery("SELECT `title`, `logo` FROM `#@__" . $module . "_store` WHERE `id` = $store");
                $ret = $dsql->dsqlOper($sql, "results");

                $param = array(
                    "service" => $module,
                    "template" => "store-detail",
                    "id" => $store
                );
                $storeInfo = array(
                    "id" => $store,
                    "title" => $ret[0]['title'],
                    "logo" => empty($ret[0]['logo']) ? "" : getFilePath($ret[0]['logo']),
                    "url" => getUrlPath($param)
                );

                foreach ($results as $key => $value) {

                    $cfg_shopFee = !empty((float)$value['shopFee']) ? (float)$value['shopFee'] : $cfg_shopFee;
                    $sql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = " . $value['userid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $user = $ret[0]['nickname'] ? $ret[0]['nickname'] : "user_" . $value['userid'];
                    } else {
                        $user = $value['userid'];
                    }

                    $totalPrice = 0;

                    $id = $value['id'];
                    //计算费用
                    $sql = $dsql->SetQuery("SELECT `price`, `count`, `logistic`, `discount`, `balance`, `payprice` FROM `#@__shop_order_product` WHERE `orderid` = $id");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        foreach ($ret as $k => $val) {
                            $totalPrice += $val['price'] * $val['count'] + $val['logistic'] + $val['discount'];
                        }
                    }

                    $totalPrice_ = 0;
                    if ($totalPrice > 0) {

                        $fee = $totalPrice * $cfg_shopFee / 100;
                        $fee = $fee < 0.01 ? 0 : $fee;
                        $totalPrice_ = sprintf('%.2f', $totalPrice - $fee);
                    }

                    array_push($list, array(
                        "id" => $id,
                        "paytype" => $value['paytype'],
                        "date" => date("Y-m-d H:i:s", $value['paydate']),
                        "orderdate" => date("Y-m-d H:i:s", $value['orderdate']),
                        "ordernum" => $value['ordernum'],
                        "user" => $user,
                        "amount" => $totalPrice_,
                        "store" => $storeInfo
                    ));
                }
            }
        } elseif ($module == "waimai") {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__waimai_order_all` WHERE `sid` = " . $store . " AND `state` = 1");
            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $atpage = $pageSize * ($page - 1);
            $where = " ORDER BY `id` DESC LIMIT $atpage, $pageSize";

            $archives = $dsql->SetQuery("SELECT `id`, `amount` price, `confirmdate`, `paytype`, `ordernum`, `uid`, `okdate` FROM `#@__waimai_order_all` WHERE `sid` = " . $store . " AND `state` = 1");
            $results = $dsql->dsqlOper($archives . $where, "results");
            if ($results) {

                $sql = $dsql->SetQuery("SELECT `shopname`, `shop_banner` FROM `#@__" . $module . "_shop` WHERE `id` = $store");
                $ret = $dsql->dsqlOper($sql, "results");

                $param = array(
                    "service" => $module,
                    "template" => "shop",
                    "id" => $store
                );

                $shop_banner = $ret[0]['shop_banner'] ? explode(',', $ret[0]['shop_banner']) : array();
                $shop_banner = $shop_banner ? $shop_banner[0] : '';

                $storeInfo = array(
                    "id" => $store,
                    "title" => $ret[0]['shopname'],
                    "logo" => empty($shop_banner) ? "" : getFilePath($shop_banner),
                    "url" => getUrlPath($param)
                );

                foreach ($results as $key => $value) {

                    $sql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = " . $value['uid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $user = $ret[0]['nickname'] ? $ret[0]['nickname'] : "user_" . $value['uid'];
                    } else {
                        $user = $value['uid'];
                    }

                    $totalPrice = $value['price'];

                    // $totalPrice = sprintf("%.2f", $value['price'] + $value['peisong'] - $value['offer']);
                    //扣除佣金
                    // global $cfg_waimaiFee;
                    // $cfg_waimaiFee = (float)$cfg_waimaiFee;

                    $fee = $totalPrice * $cfg_waimaiFee / 100;
                    $fee = $fee < 0.01 ? 0 : $fee;
                    $totalPrice_ = sprintf('%.2f', $totalPrice - $fee);

                    array_push($list, array(
                        "id" => $value['id'],
                        "paytype" => $value['paytype'],
                        "date" => date("Y-m-d H:i:s", $value['confirmdate']),
                        "orderdate" => date("Y-m-d H:i:s", $value['okdate']),
                        "ordernum" => $value['ordernum'],
                        "user" => $user,
                        "amount" => $totalPrice_,
                        "store" => $storeInfo
                    ));
                }
            }
        } elseif ($module == "tuan") {
            $proidList = array();
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__tuanlist` WHERE `sid` = $store");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                global $data;
                $data = "";
                $proidList = parent_foreach($ret, "id");
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！
            }
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__tuan_order` WHERE `proid` IN (" . join(",", $proidList) . ") AND `orderstate` = 3");
            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $atpage = $pageSize * ($page - 1);
            $where = " ORDER BY `id` DESC LIMIT $atpage, $pageSize";

            $archives = $dsql->SetQuery("SELECT `id`, `ordernum`, `procount`, `orderprice`, `balance`, `payprice`, `propolic`, `paydate`, `paytype`, `userid`, `orderdate`,`shopFee` FROM `#@__tuan_order` WHERE `proid` IN (" . join(",", $proidList) . ") AND `orderstate` = 3");
            $results = $dsql->dsqlOper($archives . $where, "results");
            if ($results) {

                $sql = $dsql->SetQuery("SELECT m.`company` FROM `#@__member` m LEFT JOIN `#@__tuan_store` s ON s.`uid` = m.`id` WHERE s.`id` = $store");
                $ret = $dsql->dsqlOper($sql, "results");

                $param = array(
                    "service" => $module,
                    "template" => "store",
                    "id" => $store
                );
                $storeInfo = array(
                    "id" => $store,
                    "title" => $ret[0]['company'],
                    "logo" => "",
                    "url" => getUrlPath($param)
                );

                foreach ($results as $key => $value) {

                    $sql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = " . $value['userid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $user = $ret[0]['nickname'] ? $ret[0]['nickname'] : "user_" . $value['userid'];
                    } else {
                        $user = $value['userid'];
                    }

                    $totalPrice = 0;

                    $procount   = $value['procount'];   //数量
                    $orderprice = $value['orderprice']; //单价
                    $propolic   = $value['propolic'];   //邮费
                    $policy     = unserialize($propolic);

                    //商家结算
                    $totalPrice += $orderprice * $procount;
                    $freightMoney = 0;

                    if (!empty($propolic) && !empty($policy)) {
                        $freight  = $policy['freight'];
                        $freeshi  = $policy['freeshi'];

                        //如果达不到免物流费的数量，则总价再加上运费
                        if ($procount <= $freeshi) {
                            $totalPrice += $freight;
                            $freightMoney = $freight;
                        }
                    }

                    //扣除佣金
                    global $cfg_tuanFee;
                    $cfg_tuanFee = !empty((float)$value['shopFee']) ?: (float)$cfg_tuanFee;

                    $fee = $totalPrice * $cfg_tuanFee / 100;
                    $fee = $fee < 0.01 ? 0 : $fee;
                    $totalPrice_ = sprintf('%.2f', $totalPrice - $fee);

                    //分销信息
                    global $cfg_fenxiaoState;
                    global $cfg_fenxiaoSource;
                    global $cfg_fenxiaoAmount;
                    include HUONIAOINC . "/config/tuan.inc.php";
                    $fenXiao = (int)$customfenXiao;

                    $fenxiaoparamarr = fenXiaoMoneyCalculation('tuan', $value['ordernum']);
                    //分销金额
                    $_fenxiaoAmount = $totalPrice_;
                    if ($cfg_fenxiaoState && $fenXiao) {

                        //商家承担
                        if ($cfg_fenxiaoSource) {
                            $_fenxiaoAmount = $totalPrice_;
                            $totalPrice_    = $totalPrice_ - $fenxiaoparamarr['totalAmount'];

                            //平台承担
                        } else {
                            $_fenxiaoAmount = $fee;
                        }
                    }

                    $_fenxiaoAmount = $_fenxiaoAmount < 0.01 ? 0 : $_fenxiaoAmount;
                    $totalPrice_    = $totalPrice_ < 0.01 ? 0 : $totalPrice_;

                    array_push($list, array(
                        "id" => $value['id'],
                        "paytype" => $value['paytype'],
                        "date" => date("Y-m-d H:i:s", $value['paydate']),
                        "orderdate" => date("Y-m-d H:i:s", $value['orderdate']),
                        "ordernum" => $value['ordernum'],
                        "user" => $user,
                        "amount" => $totalPrice_,
                        "store" => $storeInfo
                    ));
                }
            }
        }

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 访客记录
     * @return array
     */
    public function visitor()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();

        //当前登录的用户id
        $userid    = $userLogin->getMemberID();
        $uid = $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $uid      = $this->param['uid'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        if (empty($uid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][12]); //会员ID不得为空！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_visitor` WHERE `tid` = $uid ORDER BY `id` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        if ($results) {
            foreach ($results as $key => $val) {

                //查询是否关注
                $results = '';
                if ($userid > 0 && $val['uid'] > 0) {
                    $sql        = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = $userid AND `fid` = " . $val['uid']);
                    $results    = $dsql->dsqlOper($sql, "results");
                }
                if (!empty($results)) {

                    $list[$key]['isfollow'] =  1;
                } else {
                    $list[$key]['isfollow'] =  0;
                }
                //查询会员信息
                if ($val['uid'] > 0) {
                    $this->param = $val['uid'];
                    $detail = $this->detail();
                    if ($detail && is_array($detail)) {
                        $list[$key]['uid']  = $val['uid'];
                        $list[$key]['nickname'] = $detail['nickname'];
                        $list[$key]['level'] = $detail['level'];
                        $list[$key]['levelName'] = $detail['levelName'];
                        $list[$key]['levelIcon'] = $detail['levelIcon'];
                        $list[$key]['photo'] = $detail['photo'];
                        $addrName = explode(" > ", $detail['addrName']);
                        $list[$key]['addrName'] = $addrName[count($addrName) - 1];
                        $list[$key]['date'] = FloorTime(time() - $val['date']);
                    }
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 会员粉丝/关注
     * @return array
     */
    public function follow()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $uid = $type = $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $id       = (int)$this->param['id'];
                $uid      = $this->param['uid'];
                $type     = $this->param['type'];
                $for      = $this->param['for'];
                $fortype  = $this->param['fortype'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $uid = $id ? $id : $uid;

        if (empty($uid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $for_ = empty($for) ? "user" : $for;

        if ($for == 'media') {
            $where = "`fid` = $uid AND m.`state` = 1 AND m.`is_cancellation` = 0 AND m.`mtype` !=0 AND s.`state` = 1";
        }else{
            $where = "`fid` = $uid AND m.`state` = 1 AND m.`is_cancellation` = 0 AND m.`mtype` !=0";
        }
        
        $whereon = " ON m.`id` = f.tid";
        if ($type == "follow") {
            $where      = "f.`tid` = $uid AND m.`state` = 1 AND m.`is_cancellation` = 0 AND m.`mtype` !=0";
            $whereon    = " ON m.`id` = f.fid";
        }
        //        if($fortype!="all"){
        //
        //            $where .= " AND f.`fortype` = '$for'";
        //        }


        if ($for == 'media') {
            $archives = $dsql->SetQuery("SELECT f.* FROM `#@__member_follow` f LEFT JOIN `#@__article_selfmedia` s ON s.`id` = f.`fid` LEFT JOIN `#@__member` m " . $whereon . " WHERE " . $where . " AND f.`fortype` = 'media' ORDER BY f.`id` DESC");
        } else {
            $archives = $dsql->SetQuery("SELECT f.* FROM `#@__member_follow` f LEFT JOIN `#@__member` m " . $whereon . " WHERE " . $where . " ORDER BY f.`id` DESC");
        }

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        //当前登录会员ID
        $loginid = $userLogin->getMemberID();

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        if ($results) {

            $i = 0;
            foreach ($results as $key => $val) {

                if ($for_ == "user") {

                    $userid = $type == "follow" ? $val['fid'] : $val['tid'];

                    $list[$i]['for']  = $for_;
                    $list[$i]['uid']  = $userid;
                    $list[$i]['date'] = FloorTime(time() - $val['date']);

                    //查询会员信息
                    $this->param = $userid;
                    $detail = $this->detail();
                    if ($detail && is_array($detail)) {
                        //统计粉丝数量
                        $countsql  = $dsql->SetQuery("SELECT count(f.`id`) fansall FROM `#@__member_follow` f LEFT JOIN `#@__member` m ON m.`id` = f.tid WHERE f.`fid` =$userid  AND m.`state` = 1 AND m.`is_cancellation` = 0");
                        $countres  = $dsql->dsqlOper($countsql, "results");

                        $gzsql  = $dsql->SetQuery("SELECT count(f.`id`) guanzhuall FROM `#@__member_follow` f LEFT JOIN `#@__member` m ON m.`id` = f.fid WHERE f.`tid` =$userid AND m.`state` = 1 AND m.`is_cancellation` = 0");
                        $gzres  = $dsql->dsqlOper($gzsql, "results");

                        $list[$i]['fansall']  = $countres ? $countres[0]['fansall'] >= 10000 ? ($countres[0]['fansall'] / 10000) . "万" : $countres[0]['fansall'] : 0;
                        $list[$i]['guanzhuall']  = $gzres ? $gzres[0]['guanzhuall'] >= 10000 ? ($gzres[0]['guanzhuall'] / 10000) . "万" : $gzres[0]['guanzhuall'] : 0;
                        $list[$i]['nickname'] = $detail['nickname'];
                        $list[$i]['level'] = $detail['level'];
                        $list[$i]['levelName'] = $detail['levelName'];
                        $list[$i]['levelIcon'] = $detail['levelIcon'];
                        $list[$i]['photo'] = $detail['photo'];
                        $addrName = explode(" > ", $detail['addrName']);
                        $list[$i]['addrName'] = $addrName[count($addrName) - 1];
                    } else {
                        $list[$i]['state'] = 1;
                    }

                    //判断是否互相关注
                    if ($loginid != -1 && $userid > 0) {
                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = $loginid AND `fid` = $userid");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret && is_array($ret)) {
                            $list[$i]['isfollow'] = 1;
                        }
                    }

                    $i++;

                    // 关注自媒体
                } elseif ($for_ == "media") {
                    $article = new article();
                    $media = $article->selfmediaDetail($val['fid']);
                    if ($media) {
                        $list[$i]['meidia'] = $media;
                        $list[$i]['for']  = $for_;
                        $list[$i]['date'] = FloorTime(time() - $val['date']);
                    }

                    $i++;
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }



    /**
     * 添加、删除、会员关注
     * @return array
     */
    public function followMember()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        $id = $this->param['id'];
        $for = $this->param['for'];

        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $userid = $this->param['from'] ? $this->param['from'] : $userLogin->getMemberID();

        if ($userid <= 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);   //登录超时，请重新登录！

        if (empty($for)) {
            if ($userid == $id) return array("state" => 200, "info" => self::$langData['siteConfig'][33][36]); //不能关注自己
        }
        if ($for == "media") {
            $sql = $dsql->SetQuery("SELECT `id`,`userid` FROM `#@__article_selfmedia` WHERE `id` = '$id'");
            $res = $dsql->dsqlOper($sql, "results");
            if ($res) {
                $auserid = $res[0]['userid'];
                if ($auserid == $userid) {
                    return array("state" => 200, "info" => self::$langData['siteConfig'][33][37]); //不能关注自己的自媒体账号
                }
                $id    = $auserid;
            }
        }
        // $for   = '';
        // $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = '$userid' AND `fid` = '$id' AND `fortype` = '$for'");
        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = '$userid' AND `fid` = '$id'"); //新版个人中心不再判断关注来源
        $return = $dsql->dsqlOper($archives, "totalCount");

        $time = time();
        if ($return == 0) {
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_follow` (`fid`, `tid`, `date`, `fortype`) VALUES ('$id', '$userid', '$time', '$for')");
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($userid, 'member', 'follow', 0, 'insert', '添加会员关注(' . $id . '=>' . $userid . '=>' . $for . ')', '', $archives);
        } else {
            // $archives = $dsql->SetQuery("DELETE FROM `#@__member_follow` WHERE `tid` = '$userid' AND `fid` = '$id' AND `fortype` = '$for'");
            $archives = $dsql->SetQuery("DELETE FROM `#@__member_follow` WHERE `tid` = '$userid' AND `fid` = '$id'"); //新版个人中心不再判断关注来源
            $dsql->dsqlOper($archives, "update");

            //记录用户行为日志
            memberLog($userid, 'member', 'follow', 0, 'delete', '删除会员关注(' . $id . '=>' . $userid . ')', '', $archives);
        }
        return "ok";
    }


    /**
     * 会员留言列表
     * @return array
     */
    public function messageList()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $uid = $page = $pageSize = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $uid      = $this->param['uid'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        if (empty($uid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][12]); //会员ID不得为空！

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT * FROM `#@__member_message` WHERE `tid` = $uid ORDER BY `id` DESC");

        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where, "results");

        if ($results) {
            foreach ($results as $key => $val) {

                $list[$key]['id']  = $val['id'];
                $list[$key]['uid']  = $val['uid'];
                $list[$key]['content']  = strip_tags($val['content']);
                $list[$key]['ip']  = $val['ip'];
                $list[$key]['ipaddr']  = $val['ipaddr'];
                $list[$key]['date'] = FloorTime(time() - $val['date']);

                //查询会员信息
                $this->param = $val['uid'];
                $detail = $this->detail();
                if ($detail && is_array($detail)) {
                    $list[$key]['nickname'] = $detail['nickname'];
                    $list[$key]['level'] = $detail['level'];
                    $list[$key]['levelName'] = $detail['levelName'];
                    $list[$key]['levelIcon'] = $detail['levelIcon'];
                    $list[$key]['photo'] = $detail['photo'];
                    $addrName = explode(" > ", $detail['addrName']);
                    $list[$key]['addrName'] = $addrName[count($addrName) - 1];
                } else {
                    $list[$key]['state'] = 1;
                }

                //回复内容
                if ($val['rid']) {
                    $reply = array();
                    $sql = $dsql->SetQuery("SELECT `uid`, `content`, `ip`, `ipaddr`, `date` FROM `#@__member_message` WHERE `id` = " . $val['rid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $data = $ret[0];
                        $reply['uid'] = $data['uid'];
                        $reply['content'] = strip_tags($data['content']);
                        $reply['ip'] = $data['ip'];
                        $reply['ipaddr'] = $data['ipaddr'];
                        $reply['date'] = FloorTime(time() - $data['date']);

                        //查询会员信息
                        $this->param = $data['uid'];
                        $detail = $this->detail();
                        if ($detail && is_array($detail)) {
                            $reply['uid'] = $data['uid'];
                            $reply['nickname'] = $detail['nickname'];
                            $reply['level'] = $detail['level'];
                            $reply['levelName'] = $detail['levelName'];
                            $reply['levelIcon'] = $detail['levelIcon'];
                            $reply['photo'] = $detail['photo'];
                            $addrName = explode(" > ", $detail['addrName']);
                            $reply['addrName'] = $addrName[count($addrName) - 1];
                        } else {
                            $reply['state'] = 1;
                        }
                    }

                    if ($reply) {
                        $list[$key]['reply'] = $reply;
                    }
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 发表留言
     * @return array
     */
    public function sendMessage()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $uid = $content = $rid = 0;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $uid      = (int)$this->param['uid'];
                $content  = strip_tags($this->param['content']);
                $rid      = (int)$this->param['rid'];
            }
        }

        if (empty($uid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][12]); //会员ID不得为空！

        //当前登录会员ID
        $loginid = $userLogin->getMemberID();
        if ($loginid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if ($loginid == $uid) return array("state" => 200, "info" => "不可以给自己留言！");

        $content = cn_substrR(filterSensitiveWords(addslashes($content)), 200);
        if (empty($content)) return array("state" => 200, "info" => $langData['siteConfig'][21][116]);  //请填写留言内容！

        $ip = GetIP();
        $ipaddr = getIpAddr($ip);
        $time = time();

        $sql = $dsql->SetQuery("INSERT INTO `#@__member_message` (`tid`, `uid`, `rid`, `content`, `ip`, `ipaddr`, `date`) VALUES ('$uid', '$loginid', '$rid', '$content', '$ip', '$ipaddr', '$time')");
        $mid = $ret = $dsql->dsqlOper($sql, "lastid");
        if (is_numeric($mid)) {

            //记录用户行为日志
            memberLog($loginid, 'member', 'message', $mid, 'insert', '发布留言', '', $sql);

            return $langData['siteConfig'][21][117]; //留言成功！
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][21][118]);  //留言失败，请重试！
        }
    }


    /**
     * 删除留言
     * @return array
     */
    public function delUserMessage()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $uid = $userLogin->getMemberID();
        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $id = (int)$this->param['id'];
            }
        }

        if (empty($id)) return array("state" => 200, "info" => "empty id");

        $sql = $dsql->SetQuery("DELETE FROM `#@__member_message` WHERE `id` = $id AND `tid` = '$uid'");
        $ret = $dsql->dsqlOper($sql, "update");

        //记录用户行为日志
        memberLog($uid, 'member', 'message', 0, 'delete', '删除留言(' . $id . ')', '', $sql);

        return $ret;
    }


    /**
     * 会员列表
     * @return array
     */
    public function memberList()
    {
        global $dsql;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $langData;
        $uid = $userLogin->getMemberID();

        $where = "";
        $list = array();
        if (!empty($this->param)) {
            if (is_array($this->param)) {
                $type     = (int)$this->param['type'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $where .= " AND `mtype` != 0 AND `mtype` != 3";
        if ($type) {
            $where .= " AND `mtype` = $type";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;


        $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE 1 = 1" . $where);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where .= " ORDER BY `id` DESC LIMIT $atpage, $pageSize";

        $archives = $dsql->SetQuery("SELECT `id`, `username`, `nickname`, `photo`, `level` FROM `#@__member` WHERE 1 = 1" . $where);
        $results  = $dsql->dsqlOper($archives, "results");
        if ($results) {
            foreach ($results as $key => $value) {
                $list[$key]['id'] = $value['id'];
                $list[$key]['nickname'] = empty($value['nickname']) ? $value['username'] : $value['nickname'];
                $list[$key]['photo'] = empty($value['photo']) ? '' : getFilePath($value['photo']);
                $list[$key]['level'] = $value['level'];

                $name = $langData['siteConfig'][19][849];  //普通会员
                $icon = '';
                if ($value['level']) {
                    $arc = $dsql->SetQuery("SELECT `name`, `icon` FROM `#@__member_level` WHERE `id` = " . $value['level']);
                    $ret = $dsql->dsqlOper($arc, "results");
                    if (!empty($ret)) {
                        $name = $ret[0]['name'];
                        $icon = $ret[0]['icon'];
                    }
                }

                $list[$key]['levelname'] = $name;
                $list[$key]['levelicon'] = empty($icon) ? '' : getFilePath($icon);

                // 登陆会员检查是否关注
                $follow = 0;
                if ($uid != -1) {
                    if ($uid == $value['id']) {
                        $follow = -1;
                    } else {
                        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = $uid AND `fid` = " . $value['id']);
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $follow = 1;
                        }
                    }
                }
                $list[$key]['follow'] = $follow;

                $list[$key]['url'] = $cfg_secureAccess . $cfg_basehost . "/user/" . $value['id'];
            }
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 操作购物车
     * @return array
     */
    public function operateCart()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $type     = $this->param['type'];
                $store    = (int)$this->param['store'];
                $module   = $this->param['module'];
                $content  = $this->param['content'];
            }
        }

        //当前登录会员ID
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        if (empty($module)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        if ($module == 'waimai' && empty($store)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $type = empty($type) ? 'get' : $type;

        $sql = $dsql->SetQuery("SELECT `" . $module . "` FROM `#@__member_cart` WHERE `userid` = $userid");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $content_ = $ret[0][$module];

            $contentOld = $content_;
            $contentNew = "";
            if ($module == 'waimai') {
                if ($content_) {
                    $contentArr = explode(",", $content_);
                    foreach ($contentArr as $key => $value) {
                        $info = explode("#", $value);
                        if ($info[0] == $store) {
                            $contentOld = $info[1];
                            if (empty($content)) {
                                unset($contentArr[$key]);
                            } else {
                                $contentArr[$key] = $store . "#" . $content;
                            }
                            break;
                        }
                    }
                    if ($contentOld == "") {
                        $contentNew = $content_ . "," . $store . "#" . $content;
                    } else {
                        if (count($contentArr) > 20) {
                            $contentArr[0] = $store . "#" . $content;
                        }
                        $contentNew = join(",", $contentArr);
                    }
                } else {
                    $contentNew = $store . "#" . $content;
                }
            } else {

                if($content){
                    $_content = explode('|', $content);
                    foreach($_content as $val){
                        $_val = explode(',', $val);
                        if(!is_numeric($_val[0])){
                            return array("state" => 200, "info" => "数据格式有误！");
                        }
                    }
                }

                $contentNew = $content;
            }
            if ($type == 'get') {
                return array("content" => $contentOld);
            }

            $sql = $dsql->SetQuery("UPDATE `#@__member_cart` SET `" . $module . "` = '$contentNew' WHERE `userid` = $userid");
            $ret = $dsql->dsqlOper($sql, "update");
        } else {
            if ($type == 'get') {
                return array("content" => '');
            }
            $sql = $dsql->SetQuery("INSERT INTO `#@__member_cart` (`userid`, `" . $module . "`) VALUES ('$userid', '$content')");
            $ret = $dsql->dsqlOper($sql, "update");
        }

        if ($ret == "ok") {
            return self::$langData['siteConfig'][22][106]; //更新成功！
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][21][179]); //更新失败，请重试！
        }
    }

    /**
     * 签到日志记录
     * @return array
     */
    public function qiandaoRecord()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $year  = (int)$this->param['year'];
                $month = (int)$this->param['month'];
            }
        }

        global $cfg_qiandao_state;
        if (!$cfg_qiandao_state) return array("state" => 200, "info" => $langData['siteConfig'][22][127]);  //签到功能未开启！

        //当前登录会员ID
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        if (empty($year) || empty($month)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        //时间范围   指定年月第一天和最后一天
        $startTime = GetMkTime($year . "-" . $month . "-1 00:00:00");
        $endTime = strtotime("+1 months", GetMkTime($year . "-" . $month . "-1 00:00:00")) - 1;

        //查询指定范围时间内的数据

        $alreadyQiandaoDate = array();  //记录已经签到的天

        //已签到数据
        $alreadyQiandao = array();
        $sql = $dsql->SetQuery("SELECT `date`, `note` FROM `#@__member_qiandao` WHERE `uid` = $userid AND `date` >= $startTime AND `date` <= $endTime");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            foreach ($ret as $key => $value) {
                $date = (int)date("d", $value['date']);
                array_push($alreadyQiandao, array(
                    "date" => $date,
                    "note" => $value['note']
                ));

                array_push($alreadyQiandaoDate, $date);
            }
        }

        //查询当月没有签到的天
        $notQiandao = array();
        if ($year == date("Y") && $month == date("m")) {
            $currentMonthTotalDay = date('t', GetMktime($year . "-" . $month . "-1"));  //查询月共多少天
            for ($i = 1; $i <= $currentMonthTotalDay; $i++) {
                if (!in_array($i, $alreadyQiandaoDate) && $i < date("d")) {
                    array_push($notQiandao, $i);
                }
            }
        }

        //查询特殊日期
        $specialDate = array();
        global $cfg_qiandao_teshu;
        $qiandao_teshu = unserialize($cfg_qiandao_teshu);
        foreach ($qiandao_teshu as $key => $value) {
            array_push($specialDate, array(
                "date" => date("Y-m-d", $value['date']),
                "title" => $value['title'],
                "color" => $value['color']
            ));
        }


        return array("alreadyQiandao" => $alreadyQiandao, "notQiandao" => $notQiandao, "specialDate" => $specialDate);
    }

    /**
     * 签到
     * @return array
     */
    public function qiandao()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $cfg_pointName;

        global $cfg_qiandao_buqianState;  //开启补签
        global $cfg_qiandao_buqianPrice;  //补签扣除积分
        global $cfg_qiandao_firstReward;  //首次签到
        global $cfg_qiandao_reward;       //日常签到
        global $cfg_qiandao_lianqian;     //连续签到
        global $cfg_qiandao_zongqian;     //总签到
        global $cfg_qiandao_teshu;        //特殊签到

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $date  = $this->param['date'];
            }
        }

        global $cfg_qiandao_state;
        if (!$cfg_qiandao_state) return array("state" => 200, "info" => $langData['siteConfig'][22][127]);  //签到功能未开启！

        //当前登录会员ID
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！
        if (empty($date)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $date = GetMkTime($date);
        $now = time();
        $qiandaoTime = $now;

        $reward = 0;
        $note = array();
        $noteArr = array();

        //大于当前时间的
        if ($date > $now) return array("state" => 200, "info" => self::$langData['siteConfig'][21][85]); //提交失败

        //不在当前月份的
        if (date("Y-m", $date) != date("Y-m", $now)) return array("state" => 200, "info" => self::$langData['siteConfig'][21][85]); //提交失败

        //判断是否补签.
        $buqian = 0;
        if ($date >= GetMkTime(date("Y-m-1", time())) && $date < $now && $date != GetMkTime(date("Y-m-d", $now))) {
            $buqian = 1;

            //查询积分余额是否足够
            $uinfo = $userLogin->getMemberInfo();
            $point = $uinfo['point'];

            if ($point < $cfg_qiandao_buqianPrice) return array("state" => 200, "info" => $langData['siteConfig'][20][219]);  //可用积分不足！

            $reward -= $cfg_qiandao_buqianPrice;
            $n = $langData['siteConfig'][22][114] . date("Y-m-d", $date) . " -" . $cfg_qiandao_buqianPrice . $cfg_pointName;   //补签 2017-12-12 -1积分
            array_push($note, $n);
            array_push($noteArr, $langData['siteConfig'][22][114] . date("Y-m-d", $date));

            //积分扣除
            // $sql = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` - $cfg_qiandao_buqianPrice WHERE `id` = $userid");
            // $dsql->dsqlOper($sql, "update");

            //记录积分动态
            // $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$userid', '0', '$cfg_qiandao_buqianPrice', '$n', '$now')");
            // $aid = $dsql->dsqlOper($archives, "lastid");

            $qiandaoTime = $date;

            //正常签到
        } else {
            //判断今天是否已经签过
            $sql = $dsql->SetQuery("SELECT `date` FROM `#@__member_qiandao` WHERE `uid` = $userid ORDER BY `date` DESC LIMIT 1");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $lastQiandao = GetMkTime(date("Y-m-d", $ret[0]['date']));
                $today = GetMkTime(date("Y-m-d", time()));

                if ($lastQiandao == $today) {
                    return array("state" => 200, "info" => $langData['siteConfig'][22][125]);  //今天已经签过，无需重复签到！
                }
            }
        }

        //判断是否首次签到
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_qiandao` WHERE `uid` = $userid");
        $ret = $dsql->dsqlOper($sql, "totalCount");
        if ($ret == 0) {
            $reward += $cfg_qiandao_firstReward;
            array_push($note, $langData['siteConfig'][22][130] . "+" . $cfg_qiandao_firstReward . $cfg_pointName);  //首次签到 +1 积分
            array_push($noteArr, $langData['siteConfig'][22][130]);  //首次签到
        } else {

            //是否满足总签到条件
            $totalQiandao = 1;
            $sql = $dsql->SetQuery("SELECT `id`, `date` FROM `#@__member_qiandao` WHERE `uid` = $userid ORDER BY `date` DESC");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $totalQiandao += count($ret);
            }

            $iszongqian = false;
            $zongqian = unserialize($cfg_qiandao_zongqian);
            if ($zongqian) {
                foreach ($zongqian as $key => $value) {
                    $day = (int)$value['day'];
                    if ($day == $totalQiandao && !$iszongqian) {
                        $iszongqian = true;
                        $reward += $value['reward'];
                        array_push($note, $langData['siteConfig'][22][112] . $day . $langData['siteConfig'][13][6] . "+" . $value['reward'] . $cfg_pointName);  //总签到1天+1积分
                        array_push($noteArr, $langData['siteConfig'][22][112] . $day . $langData['siteConfig'][13][6]);  //总签到1天
                    }
                }
            }

            //是否满足连续签到条件
            if (!$iszongqian) {
                $totalLianqian = 1;
                $dateArr = array();
                if ($ret) {
                    foreach ($ret as $key => $value) {
                        array_push($dateArr, $value['date']);
                    }
                }

                $totalLianqian += getContinueDay($dateArr);

                $islianqian = false;
                $lianqian = unserialize($cfg_qiandao_lianqian);
                if ($lianqian) {
                    foreach ($lianqian as $key => $value) {
                        $day = (int)$value['day'];
                        if ($day == $totalLianqian && !$islianqian) {
                            $islianqian = true;
                            $reward += $value['reward'];
                            array_push($note, $langData['siteConfig'][22][111] . $day . $langData['siteConfig'][13][6] . "+" . $value['reward'] . $cfg_pointName);  //连续签到1天+1积分
                            array_push($noteArr, $langData['siteConfig'][22][111] . $day . $langData['siteConfig'][13][6]);  //连续签到1天
                        }
                    }

                    //都不满足则为日常签到
                    if (!$islianqian && !$buqian) {
                        $reward += $cfg_qiandao_reward;
                        array_push($note, $langData['siteConfig'][22][131] . "+" . $cfg_qiandao_reward . $cfg_pointName);  //日常签到+1积分
                        array_push($noteArr, $langData['siteConfig'][22][131]);  //日常签到
                    }
                }
            }
        }

        //特殊日期签到
        $isteshu = false;
        $teshu = unserialize($cfg_qiandao_teshu);
        if ($teshu) {
            foreach ($teshu as $key => $value) {
                if ($value['date'] == $date && !$isteshu) {
                    $reward += $value['reward'];
                    array_push($note, $value['title'] . "+" . $value['reward'] . $cfg_pointName);  //日常签到+1积分
                    array_push($noteArr, $value['title']);  //日常签到
                }
            }
        }

        //如果都不满足条件，使用日常奖励
        if ($reward == 0) {
            array_push($note, $langData['siteConfig'][22][131] . "+" . $cfg_qiandao_reward . $cfg_pointName);  //日常签到+1积分
            array_push($noteArr, $langData['siteConfig'][22][131]);  //日常签到
            $reward = $cfg_qiandao_reward;
        }

        $reward_ = ($reward > 0 ? "+" : "") . $reward;
        $note_ = join(" ", $note);
        $noteArr_ = join(" ", $noteArr);

        $ip = GetIP();
        $ipaddr = getIpAddr($ip);

        //记录签到信息
        $sql = $dsql->SetQuery("INSERT INTO `#@__member_qiandao` (`uid`, `reward`, `date`, `note`, `ip`, `ipaddr`) VALUES ('$userid', '$reward_', '$qiandaoTime', '$note_', '$ip', '$ipaddr')");
        $qid = $dsql->dsqlOper($sql, "lastid");
        if (is_numeric($qid)) {

            //记录用户行为日志
            memberLog($userid, 'member', 'qiandao', $qid, 'insert', '会员签到', '', $sql);

            //积分到账
            $sql = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + $reward WHERE `id` = $userid");
            $dsql->dsqlOper($sql, "update");
            $user  = $userLogin->getMemberInfo($userid);
            $userpoint = $user['point'];
            //记录积分动态
            $ope = $reward > 0 ? 1 : 0;
            $rew = $reward > 0 ? $reward : abs($reward);
            if ($ope == 0) {
                $pointt = $userpoint - $rew;
            } else {
                $pointt = $userpoint;
            }
            $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$userid', '$ope', '$rew', '$note_', '$now','qiandao','$pointt')");
            $aid = $dsql->dsqlOper($archives, "lastid");

            //查询帐户信息
            $archives = $dsql->SetQuery("SELECT `username`, `nickname`, `mtype`, `money`, `freeze`, `point` FROM `#@__member` WHERE `id` = " . $userid);
            $results = $dsql->dsqlOper($archives, "results");

            //用户名
            $username = $results[0]['nickname'] ? $results[0]['nickname'] : $results[0]['username'];
            $mtype    = $results[0]['mtype'];
            $point    = $results[0]['point'];

            //会员中心积分记录页面链接
            if ($mtype == 2) {
                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                    "template" => "point"
                );
            } else {
                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                    "template" => "point"
                );
            }

            //自定义配置
            $config = array(
                "username" => $username,
                "amount" => $reward_,
                "point" => $point,
                "date" => date("Y-m-d H:i:s", $now),
                "info" => $note_,
                "fields" => array(
                    'keyword1' => '变动类型',
                    'keyword2' => '变动积分',
                    'keyword3' => '变动时间',
                    'keyword4' => '积分余额'
                )
            );

            updateMemberNotice($userid, "会员-积分变动通知", $param, $config);

            //连签次数
            $sql = $dsql->SetQuery("SELECT `date` FROM `#@__member_qiandao` WHERE `uid` = $userid ORDER BY `date` DESC");
            $ret = $dsql->dsqlOper($sql, "results");
            $dateArr = array();
            if ($ret) {
                foreach ($ret as $key => $value) {
                    array_push($dateArr, $value['date']);
                }
            }
            $days = getContinueDay($dateArr);

            //总签次数
            $totalQiandao = 0;
            $sql = $dsql->SetQuery("SELECT `id`, `date` FROM `#@__member_qiandao` WHERE `uid` = $userid ORDER BY `date` DESC");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $totalQiandao += count($ret);
            }

            $uinfo = $userLogin->getMemberInfo();
            $point = $uinfo['point'];

            return array("days" => $days, "reward" => (int)$reward, "note" => $note_, "text" => $noteArr_, "zongqian" => $totalQiandao, "point" => $point);
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][22][126]);  //签到失败！
        }
    }

    /**
     * 举报
     * @return array
     */
    public function complain()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $module = $this->param['module'];
                $dopost = $this->param['dopost'];
                $type = $this->param['type'];
                $desc = $this->param['desc'];
                $areaCode = $this->param['areaCode'];
                $phone = $this->param['phone'];
                $qq = $this->param['qq'];
                $aid = $this->param['aid'];
                $vdimgck = $this->param['vdimgck'];
                $cityid = $this->param['cityid'];
                $commonid = (int)$this->param['commonid'];
            }
        }

        $return = "";
        $type = htmlspecialchars(RemoveXSS(cn_substrR(addslashes($type), 50)));
        $desc = htmlspecialchars(RemoveXSS(filterSensitiveWords(cn_substrR(addslashes($desc), 200))));
        $phone = htmlspecialchars(RemoveXSS(filterSensitiveWords(cn_substrR(addslashes($phone), 50))));
        $qq = htmlspecialchars(RemoveXSS(filterSensitiveWords(cn_substrR(addslashes($qq), 50))));

        //手机号码增加区号，国内版不显示
        $phone = ($areaCode == '86' ? '' : $areaCode) . $phone;

        if (empty($cityid)) {
            $cityid = getCityId();
        }

        if (empty($type) || empty($module) || empty($dopost) || empty($aid)) {
            $return = array("state" => 200, "info" => self::$langData['siteConfig'][33][1]); //必填项不得为空！
        }

        if (empty($return)) {
            if ($vdimgck && strtolower($vdimgck) != $_SESSION['huoniao_vdimg_value']) $return = array("state" => 200, "info" => $langData['siteConfig'][20][99]);  //验证码输入错误，请重试！
        }

        if (empty($return)) {
            //获取用户ID
            $uid    = $userLogin->getMemberID();
            $ip     = GetIP();
            $ipAddr = getIpAddr($ip);

            if ($uid == -1) {
                if (!empty($commonid)) {
                    $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_complain` WHERE `module` = '$module' AND `action` = '$dopost' AND `aid` = '$aid' AND `commonid` = '$commonid' AND `ip` = '$ip'");
                } else {
                    $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_complain` WHERE `module` = '$module' AND `action` = '$dopost' AND `aid` = '$aid' AND `commonid` = '0' AND `ip` = '$ip'");
                }

                $count = $dsql->dsqlOper($archives, "totalCount");
            } else {
                if (!empty($commonid)) {
                    $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_complain` WHERE `module` = '$module' AND `action` = '$dopost' AND `aid` = '$aid' AND `commonid` = '$commonid' AND `userid` = '$uid'");
                } else {
                    $archives = $dsql->SetQuery("SELECT `id` FROM `#@__member_complain` WHERE `module` = '$module' AND `action` = '$dopost' AND `aid` = '$aid' AND `commonid` = '0' AND `userid` = '$uid'");
                }
                $count = $dsql->dsqlOper($archives, "totalCount");
            }
            if ($count == 0) {
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_complain` (`cityid`, `module`, `action`, `aid`, `type`, `info`, `phone`, `qq`, `userid`, `ip`, `ipaddr`, `pubdate`, `state`, `commonid`) VALUES ('$cityid', '$module', '$dopost', '$aid', '$type', '$desc', '$phone', '$qq', '$uid', '$ip', '$ipAddr', " . GetMkTime(time()) . ", 0, '$commonid')");
                $cid = $dsql->dsqlOper($archives, "lastid");

                //记录用户行为日志
                memberLog($uid, 'member', 'complain', $cid, 'insert', '举报信息(' . $module . '=>' . $aid . ')', '', $archives);

                $return = $langData['siteConfig'][21][242];  //举报成功！
            } else {
                $return = array("state" => 101, "info" => $langData['siteConfig'][21][243]);  //您已经举报过此条信息，无需再次提交！
            }
        }

        return $return;
    }


    /**
     * 提交快速投诉
     */
    public function complaints()
    {
        global $dsql;
        global $userLogin;

        $uid = $userLogin->getMemberID();
        if ($uid == -1) return array("state" => 200, "info" => "登陆超时，请重新登陆！");

        $param = $this->param;
        $module = $param['module'];
        $oid = (int)$param['oid'];
        $type = $param['type'];
        $content = $param['content'];
        $contact = $param['contact'];
        $ordernum = $param['ordernum'];
        $img = $param['img'];
        if (empty($module)) return array("state" => 200, "info" => "请选择投诉频道");
        if ($module != 'siteConfig') {
            if (empty($oid)) return array("state" => 200, "info" => "请选择投诉订单");
            if (empty($type)) return array("state" => 200, "info" => "请选择投诉内容");
        }
        if (empty($content)) return array("state" => 200, "info" => "请填写投诉说明");
        if (empty($content)) return array("state" => 200, "info" => "请填写您的联系方式");
        if (empty($img)) return array("state" => 200, "info" => "请上传投诉凭证");

        $pubdate = GetMkTime(time());
        $ip = GetIP();
        $ipAddr = getIpAddr($ip);

        if ($module != 'siteConfig') {
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_complaints` WHERE `module` = '$module' AND `oid` = $oid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                return array("state" => 200, "info" => "您已经投诉过此订单");
            }
        }

        $sql = $dsql->SetQuery("INSERT INTO `#@__member_complaints` (`uid`, `module`, `oid`, `ordernum`, `type`, `img`, `content`, `contact`, `ip`, `ipaddr`, `pubdate`, `state`, `dealdate`, `reply`, `replydate`) VALUES ('$uid', '$module', '$oid', '$ordernum', '$type', '$img', '$content', '$contact', '$ip', '$ipAddr', '$pubdate', 0, 0, '', 0)");
        $ret = $dsql->dsqlOper($sql, "lastid");

        if (is_numeric($ret)) {

            //记录用户行为日志
            memberLog($uid, 'member', 'complaints', $ret, 'insert', '网站投诉(' . $module . '=>' . $oid . '=>' . $ordernum . ')', '', $sql);

            return "提交成功，我们会尽快处理";
        } else {
            echo $sql;
            die;
            return array("state" => 200, "info" => "提交失败，请重试！");
        }
    }

    /**
     * 提交投诉-模块订单
     * 一个星期之内的订单
     */
    public function myLatelyOrder()
    {
        global $dsql;
        global $userLogin;

        $uid = $userLogin->getMemberID();
        if ($uid == -1) return array("state" => 200, "info" => "登陆超时，请重新登陆！");

        $param = $this->param;
        $module = $param['module'];
        if (empty($module)) return array("state" => 200, "info" => "请填写投诉模块");

        $where = "";
        $lsit = array();


        $before = strtotime("-7 day");
        // echo $before;die;
        if ($module == 'waimai') {
            $where = " AND o.`uid` = $uid AND `state` = 1 AND o.`pubdate` >= $before";
            $archives = $dsql->SetQuery("SELECT s.`shopname`, o.`id`, o.`ordernumstore`, o.`pubdate` FROM `#@__waimai_order_all` o LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` WHERE 1 = 1" . $where);
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $value) {
                    $list[$key] = array(
                        "id" => $value['id'],
                        "ordernum" => $value['shopname'] . $value['ordernumstore'],
                        "pubdate" => date("Y-m-d H-i:s", $value['pubdate']),
                    );
                }
            }
        } elseif ($module == 'shop') {
            $where = " AND o.`userid` = $uid AND `orderstate` = 3 AND o.`orderdate` >= $before";
            $archives = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`orderdate`, s.`title` FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON s.`id` = o.`store` WHERE 1 = 1" . $where);
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $value) {
                    $list[$key] = array(
                        "id" => $value['id'],
                        "ordernum" => $value['ordernum'],
                        "pubdate" => date("Y-m-d H-i:s", $value['orderdate']),
                    );
                }
            }
        } elseif ($module == 'tuan') {
            $where = " AND `userid` = $uid AND `orderstate` = 3 AND o.`orderdate` >= $before";
            $archives = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`orderdate`, o.`proid` FROM `#@__tuan_order` o WHERE 1 = 1" . $where);
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $value) {
                    // $sql = $dsql->SetQuery("SELECT s.`title` FROM `#@__tuan_store` s LEFT JOIN `#@__tuanlist` p ON p.`sid` = o.`id` WHERE p.`id` = ".$value['proid']);
                    // $ret = $dsql->dsqlOper($sql, "results");
                    // if($ret){
                    //  $store = $ret[0]['title'];
                    // }else{
                    //  $store = '';
                    // }
                    $list[$key] = array(
                        "id" => $value['id'],
                        "ordernum" => $value['ordernum'],
                        "pubdate" => date("Y-m-d H-i:s", $value['orderdate']),
                    );
                }
            }
        } elseif ($module == 'paotui') {
            $where = " AND `uid` = $uid AND `state` = 1 AND o.`pubdate` >= $before";
            $archives = $dsql->SetQuery("SELECT o.`id`, o.`ordernum`, o.`pubdate` FROM `#@__paotui_order` o WHERE 1 = 1" . $where);
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                foreach ($results as $key => $value) {
                    $list[$key] = array(
                        "id" => $value['id'],
                        "ordernum" => $value['ordernum'],
                        "pubdate" => date("Y-m-d H-i:s", $value['pubdate']),
                    );
                }
            }
        }

        // 过滤掉已投诉的订单
        if ($list) {
            foreach ($list as $key => $value) {
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_complaints` WHERE `module` = '$module' AND `id` = " . $value['id']);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    unset($list[$key]);
                }
            }
        }

        return $list;
    }

    /**
     * 注册提交前验证
     */
    public function registAccountCheck()
    {
        global $dsql;
        global $langData;

        $param = $this->param;
        $rtype   = $param['rtype'];
        $account = $param['account'];
        $from    = $param['from'];
        $code    = $param['code'];

        if (empty($rtype) || empty($account)) {
            return array("state" => 200, "info" => "empty");
        }

        //用户名
        if ($rtype == 1) {
            global $cfg_regstatus;
            global $cfg_regclosemessage;
            if ($cfg_regstatus == 0) {
                return array("state" => 200, "info" => $cfg_regclosemessage);
            }

            preg_match("/^[a-zA-Z]{1}[0-9a-zA-Z_]{4,15}$/iu", $account, $matchUsername);
            if (!$matchUsername) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][226]);
                //用户名格式有误！<br />英文字母、数字、下划线以内的5-20个字！<br />并且只能以字母开头！
            }
            if (!checkMember($account)) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][227]);
                //用户名已存在！
            }

            // 邮箱
        } elseif ($rtype == 2) {
            $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `email` = '$account'");
            $return = $dsql->dsqlOper($archives, "results");
            if ($return) {
                return array("state" => 200, "info" => $langData['siteConfig'][21][230]);
                //此邮箱已被注册！
            }

            // 手机
        } elseif ($rtype == 3) {
            $areaCode = $param['areaCode'];
            if (empty($areaCode)) {
                return array("state" => 200, "info" => "empty");
            }
            if ($areaCode == "86") {
                preg_match('/0?1[0-9]{10}/', $account, $matchPhone);
                if (!$matchPhone) {
                    return array("state" => 200, "info" => "error");
                }
            }

            $archives = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `phone` = '$account'");
            $return = $dsql->dsqlOper($archives, "results");
            if ($return) {
                // 绑定手机号
                if ($from == "bind" && $code) {
                    // 如果已绑定第三方账号，提示用户
                    if ($return[0][$code . '_conn']) {
                        return array("state" => 200, "info" => self::$langData['siteConfig'][33][38]); //"该手机号码已注册并绑定了第三方账号，如需将手机号绑定此第三方账号，请先用手机登陆，然后在安全中心进行解绑，然后再绑定此第三方账号！   "
                    } else {
                        return "ok";
                    }
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][231] . "   ");         //此手机号已被注册！
                }
            }
        }

        return "ok";
    }

    /**
     * 小程序无感静默登陆
     */
    public function miniProgramLogin()
    {
        global $dsql;
        global $cfg_miniProgramAppid;
        global $cfg_miniProgramAppsecret;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $param = $this->param;
        $code = $param['code'];
        $appid = $param['appid'];  //由小程序端传过来当前正在使用的小程序appid

        //验证分站是否绑定的独立小程序
        if($appid && $appid != $cfg_miniProgramAppid){
            $sql = $dsql->SetQuery("SELECT `config` FROM `#@__site_city` WHERE `config` LIKE '%$appid%' ORDER BY `id` DESC LIMIT 1");
            $ret = $dsql->dsqlOper($sql, "results");
            if($ret){
                $config = $ret[0]['config'];
                $config = unserialize($config);
                if(is_array($config)){
                    $cfg_miniProgramAppid = $config['siteConfig']['miniProgramAppid'];
                    $cfg_miniProgramAppsecret = $config['siteConfig']['miniProgramAppsecret'];

                    if(!$cfg_miniProgramAppid || !$cfg_miniProgramAppsecret){
                        return array("state" => 200, "info" => "该小程序在系统后台绑定错误，请检查后重试！");
                    }

                }else{
                    return array("state" => 200, "info" => "该小程序在系统后台绑定错误，请检查后重试！");
                }
            }else{
                return array("state" => 200, "info" => "该小程序未在系统后台绑定，请检查后重试！");
            }
        }

        if (empty($code)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //格式错误！

        $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $cfg_miniProgramAppid . "&secret=" . $cfg_miniProgramAppsecret . "&js_code=" . $code . "&grant_type=authorization_code";

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HEADER, 0);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //证书检查
        // curl_setopt($curl,CURLOPT_POST,1);
        // curl_setopt($curl,CURLOPT_POSTFIELDS,$data);
        $result = curl_exec($curl);
        curl_close($curl);


        $data = json_decode($result);
        $data = objtoarr($data);

        $openid = $data['openid'];
        $unionid = isset($data['unionid']) ? $data['unionid'] : "";
        $session_key = $data['session_key'];
        $field_session = $session_key . '#' . GetMktime(time());

        //保存到数据库中，以备支付时，没有取到unionid时使用
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__site_wxmini_unionid` WHERE `appid` = '$appid' AND `conn` = '$unionid'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret && is_array($ret)) {
            $sql = $dsql->SetQuery("UPDATE `#@__site_wxmini_unionid` SET `appid` = '$appid', `openid` = '$openid', `unionid` = '$field_session' WHERE `conn` = '$unionid'");
            $dsql->dsqlOper($sql, "update");
        } else {
            $sql = $dsql->SetQuery("INSERT INTO `#@__site_wxmini_unionid` (`appid`, `conn`, `openid`, `unionid`) VALUES ('$appid', '$unionid', '$openid', '$field_session')");
            $dsql->dsqlOper($sql, "update");
        }

        // 自定义登陆态
        $state = array();
        // 是否新用户
        $newUser = 1;

        $uid = 0;

        // 获取到公众平台唯一标识
        // 如果用openid会创建第二个账号
        if ($unionid) {

            $sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid` FROM `#@__member` WHERE `wechat_conn` = '$unionid' AND (`mtype` = 1 OR `mtype` = 2)");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $newUser = 0;
                $uid = $ret[0]['id'];

                $field_openid = ", `wechat_mini_openid` = '$openid'";

                $ip   = GetIP();
                $ipaddr = getIpAddr($ip);
                $time = GetMkTime(time());

                //创建新的令牌
                $token = createApiToken('wxmini', $uid);
                $access_token = $token['access_token'];
                $refresh_token = $token['refresh_token'];

                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `wechat_mini_session` = '$field_session', `access_token_wxmini` = '" . urldecode($access_token) . "', `refresh_token_wxmini` = '" . urldecode($refresh_token) . "', `online` = '$time' " . $field_openid . " WHERE `id` = $uid");
                $dsql->dsqlOper($sql, "update");

                //记录登录日志
                $useragent = $_SERVER['HTTP_USER_AGENT'];
                $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
                $sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '微信小程序', '$useragent')");
                $dsql->dsqlOper($sql, "update");
    
                //记录用户行为日志
                memberLog($uid, 'member', '', 0, 'insert', '用户登录(微信小程序)', '', $sql);

                $data = array(
                    0 => $unionid,
                    1 => $openid,
                    2 => $field_session
                );

                //返回unionid、openid、session_key的加密信息，以供系统登录
                $RenrenCrypt = new RenrenCrypt();
                $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                return $cfg_secureAccess . $cfg_basehost . '/?action=miniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=&uid=' . $uid . '&path=';
            }
        }
        
    }

    /**
     * 小程序注册用户
     */
    public function miniProgramRegister()
    {
        global $dsql;
        global $cfg_miniProgramAppid;
        global $cfg_miniProgramAppsecret;

        //限制注册
        global $cfg_regstatus;
        global $cfg_regclosemessage;
        if ($cfg_regstatus == 0) {
            return array("state" => 200, "info" => $cfg_regclosemessage);
        }

        $time   = GetMkTime(time());

        $param   = $this->param;
        $userkey = $param['userkey'];
        if (empty($userkey)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //格式错误！

        $RenrenCrypt = new RenrenCrypt();
        $userinfo = $RenrenCrypt->php_decrypt(base64_decode($userkey));
        $userinfo = explode('@@@@', $userinfo);

        $openid = $userinfo[0];
        $session_key = $userinfo[1];

        if (empty($openid) || empty($session_key)) return array("state" => 200, "info" => "参数错误！");

        $nickname    = $param['nickname'];
        $photo       = $param['photo'];
        $city        = $param['city'];
        $province    = $param['province'];
        $sex         = (int)$param['sex'];

        if (empty($nickname))  return array("state" => 200, "info" => "用户信息获取失败");

        $wechat_conn = "";
        $pic = "";
        $addr = 0;

        // unionid
        $iv            = $param['iv'];
        $encryptedData = $param['encryptedData'];
        if ($iv && $encryptedData) {
            include_once HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
            $pc = new WXBizDataCrypt($cfg_miniProgramAppid, $session_key);
            $errCode = $pc->decryptData($encryptedData, $iv, $data);

            if ($errCode == 0) {
                $data = json_decode($data);
                $data = objtoarr($data);
                $wechat_conn = $data['unionId'];
            }
        }

        if (empty($wechat_conn))  return array("state" => 200, "info" => "用户信息获取失败" . $errCode);

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `wechat_conn` = '$wechat_conn' AND (`mtype` = 1 OR `mtype` = 2)");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            return array("state" => 200, "info" => "用户已注册");
        }

        // 区域
        if ($city) {
            $city = strtolower($city);
            $sql = $dsql->SetQuery("SELECT `id`, `parentid` FROM `#@__site_area` WHERE `pinyin` LIKE '%$city%'");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                if (count($ret) == 1 || empty($province)) {
                    $addr = $ret[0]['id'];
                } else {
                    $province = strtolower($province);
                    foreach ($ret as $k => $v) {
                        $sql = $dsql->SetQuery("SELECT `pinyin` FROM `#@__site_area` WHERE `id` = " . $v['parentid']);
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            if (strstr($ret[0]['pinyin'], $province) !== false) {
                                $addr = $v['id'];
                                break;
                            }
                        }
                    }
                }
            }
        }

        $ip     = GetIP();
        $ipaddr = getIpAddr($ip);

        $chcode = strtolower(create_check_code(8));
        $username = $chcode . "@wechat";

        //$sql = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `photo`, `sex`, `addr`, `wechat_conn`, `wechat_openid`, `wechat_mini_openid`, `regtime`, `logincount`, `lastlogintime`, `lastloginip`, `lastloginipaddr`, `regip`, `regipaddr`, `state`) VALUES ('1', '$username', '', '$nickname', '$photo', '$sex', '$addr', '$wechat_conn', '', '$openid', '$time', '1', '$time', '$ip', '$ipaddr', '$ip', '$ipaddr', '1')");
        $session_key = $session_key . '#' . GetMktime(time());
        $regfrom = getCurrentTerminal();
        $sql = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `photo`, `sex`, `addr`, `wechat_conn`, `wechat_openid`, `wechat_mini_openid`, `regtime`, `logincount`, `lastlogintime`, `lastloginip`, `lastloginipaddr`, `regip`, `regipaddr`, `state`, `wechat_mini_session`, `regfrom`) VALUES ('1', '$username', '', '$nickname', '$photo', '$sex', '$addr', '$wechat_conn', '', '$openid', '$time', '1', '$time', '$ip', '$ipaddr', '$ip', '$ipaddr', '1', '$session_key', '$regfrom')");
        $uid = $dsql->dsqlOper($sql, "lastid");

        if (is_numeric($uid)) {

            $loginPlatform = '电脑端';
            if (isApp()) {
                $loginPlatform = (isAndroidApp() ? '安卓' : (isIOSApp() ? '苹果' : (isHarmonyApp() ? '鸿蒙' : '未知'))) . 'APP';
            } elseif ($path || isWxMiniprogram() || isByteMiniprogram()) {
                if(isWxMiniprogram()){
                    $loginPlatform = '微信小程序';
                }elseif(isByteMiniprogram()){
                    $loginPlatform = '抖音小程序';
                }
            } elseif (isMobile()) {
                if (isWeixin()) {
                    $loginPlatform = '微信公众号';
                } else {
                    $loginPlatform = 'H5';
                }
            }

            //记录用户行为日志
            memberLog($uid, 'member', '', 0, 'insert', '用户注册(' . $loginPlatform . ')', '', $sql);

            return "注册成功！";
        } else {
            return array("state" => 200, "info" => "注册失败！");
        }
    }

    /**
     * 小程序登陆注册
     * 不含手机号码
     */
    public function miniProgramConnect()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $cfg_miniProgramAppid;
        global $cfg_miniProgramAppsecret;

        $param     = $this->param;

        //用户信息
        $userData = json_decode($param['userData'], true);
        $code      = $userData['code'];
        $iv        = $userData['iv'];
        $encryptedData = $userData['encryptedData'];
        $redirect  = $userData['redirect'];

        //用户基本信息，如果未获取到，说明已经授权过
        $nickname  = $userData['nickname'];
        $photo     = $userData['photo'];
        $city      = $userData['city'];
        $province  = $userData['province'];
        $sex       = (int)$userData['gender'];

        //小程序端path
        $path = $param['path'];

        if (empty($code)) return array("state" => 200, "info" => $langData['siteConfig'][33][0]); //格式错误！
        if (empty($nickname))  return array("state" => 200, "info" => "用户信息获取失败");

        $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $cfg_miniProgramAppid . "&secret=" . $cfg_miniProgramAppsecret . "&js_code=" . $code . "&grant_type=authorization_code";

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HEADER, 0);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //证书检查
        // curl_setopt($curl,CURLOPT_POST,1);
        // curl_setopt($curl,CURLOPT_POSTFIELDS,$data);
        $result = curl_exec($curl);
        curl_close($curl);

        $data = json_decode($result);
        $data = objtoarr($data);

        $openid = $data['openid'];
        $unionid = isset($data['unionid']) ? $data['unionid'] : "";
        $session_key = $data['session_key'];
        $field_session = $session_key . '#' . GetMktime(time());

        if (!$unionid) {
            if ($iv && $encryptedData) {
                include_once HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
                $pc = new WXBizDataCrypt($cfg_miniProgramAppid, $session_key);
                $errCode = $pc->decryptData($encryptedData, $iv, $data);

                if ($errCode == 0) {
                    $data = json_decode($data);
                    $data = objtoarr($data);
                    $unionid = $data['unionId'];
                }
            }
        }

        if (empty($unionid))  return array("state" => 200, "info" => "用户信息获取失败" . $errCode);


        // include_once(HUONIAOROOT."/api/payment/log.php");

        //初始化日志
        // $logHandler= new CLogFileHandler(HUONIAOROOT . '/api/miniProgramConnect.log');
        // $log = Log::Init($logHandler, 15);



        //获取到openid和unionid后，根据unionid检查是否已经注册，如果已经注册过，直接授权登录，如果还没有注册，执行注册流程，然后再授权登录。
        $sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid` FROM `#@__member` WHERE `wechat_conn` = '$unionid' AND (`mtype` = 1 OR `mtype` = 2)");
        //Log::DEBUG('查询：' . $sql);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $uid = $ret[0]['id'];

            $field_openid = "";
            // if(empty($ret[0]['wechat_mini_openid'])){
            $field_openid = ", `wechat_mini_openid` = '$openid'";
            // }

            $ip   = GetIP();
            $ipaddr = getIpAddr($ip);
            $time = GetMkTime(time());

            //创建新的令牌
            $token = createApiToken('wxmini', $uid);
            $access_token = $token['access_token'];
            $refresh_token = $token['refresh_token'];

            $sql = $dsql->SetQuery("UPDATE `#@__member` SET `wechat_mini_session` = '$field_session', `access_token_wxmini` = '" . urldecode($access_token) . "', `refresh_token_wxmini` = '" . urldecode($refresh_token) . "', `logincount` = `logincount` + 1, `lastlogintime` = '$time', `lastloginip` = '$ip', `lastloginipaddr` = '$ipaddr', `online` = '$time' " . $field_openid . " WHERE `id` = $uid");
            $dsql->dsqlOper($sql, "update");

            //记录登录日志
            $useragent = $_SERVER['HTTP_USER_AGENT'];
            $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
            $sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '微信小程序', '$useragent')");
            $dsql->dsqlOper($sql, "update");

            //记录用户行为日志
            memberLog($uid, 'member', '', 0, 'insert', '用户登录(微信小程序)', '', $sql);

            $data = array(
                0 => $unionid,
                1 => $openid,
                2 => $field_session
            );

            //返回unionid、openid、session_key的加密信息，以供系统登录
            $RenrenCrypt = new RenrenCrypt();
            $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

            return $cfg_secureAccess . $cfg_basehost . '/?action=miniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path;
        } else {

            //限制注册
            global $cfg_regstatus;
            global $cfg_regclosemessage;
            if ($cfg_regstatus == 0) {
                return array("state" => 200, "info" => $cfg_regclosemessage);
            }

            // 区域
            $addr = 0;
            if ($city) {
                $sql = $dsql->SetQuery("SELECT `id`, `parentid` FROM `#@__site_area` WHERE `typename` LIKE '%$city%'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    if (count($ret) == 1 || empty($province)) {
                        $addr = $ret[0]['id'];
                    } else {
                        foreach ($ret as $k => $v) {
                            $sql = $dsql->SetQuery("SELECT `pinyin` FROM `#@__site_area` WHERE `id` = " . $v['parentid']);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                if (strstr($ret[0]['typename'], $province) !== false) {
                                    $addr = $v['id'];
                                    break;
                                }
                            }
                        }
                    }
                }
            }

            $ip     = GetIP();
            $ipaddr = getIpAddr($ip);
            $time   = time();

            $chcode = strtolower(create_check_code(8));
            $username = $chcode . "@wechat";
            $regfrom = getCurrentTerminal();

            $sql = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `photo`, `sex`, `addr`, `wechat_conn`, `wechat_openid`, `wechat_mini_openid`, `regtime`, `logincount`, `lastlogintime`, `lastloginip`, `lastloginipaddr`, `regip`, `regipaddr`, `state`, `wechat_mini_session`, `regfrom`) VALUES ('1', '$username', '', '$nickname', '$photo', '$sex', '$addr', '$unionid', '', '$openid', '$time', '1', '$time', '$ip', '$ipaddr', '$ip', '$ipaddr', '1', '$field_session', '$regfrom')");
            // Log::DEBUG('新增：' . $sql);
            $uid = $dsql->dsqlOper($sql, "lastid");

            if (is_numeric($uid)) {

                //创建新的令牌
                $token = createApiToken('wxmini', $uid);
                $access_token = $token['access_token'];
                $refresh_token = $token['refresh_token'];

                //更新用户信息
                $_sql = $dsql->SetQuery("UPDATE `#@__member` SET `access_token_wxmini` = '" . urldecode($access_token) . "', `refresh_token_wxmini` = '" . urldecode($refresh_token) . "', `online` = '$time' WHERE `id` = $uid");
                $dsql->dsqlOper($_sql, "update");

                //记录登录日志
                $useragent = $_SERVER['HTTP_USER_AGENT'];
                $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
                $_sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '微信小程序', '$useragent')");
                $dsql->dsqlOper($_sql, "update");

                //记录用户行为日志
                memberLog($uid, 'member', '', 0, 'insert', '用户注册(微信小程序)', '', $sql);

                //查询重复
                $sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid` FROM `#@__member` WHERE `wechat_conn` = '$unionid'");
                $ret = $dsql->dsqlOper($sql, "results");
                // Log::DEBUG('查重：' . $sql);
                // Log::DEBUG('结果：' . json_encode($ret));
                if ($ret && count($ret) > 1) {
                    $sql = $dsql->SetQuery("DELETE FROM `#@__member` WHERE `id` = " . $ret[0]['id']);
                    // Log::DEBUG('删重：' . $sql);
                    $dsql->dsqlOper($sql, "update");
                }

                $data = array(
                    0 => $unionid,
                    1 => $openid,
                    2 => $field_session
                );

                //返回unionid、openid、session_key的加密信息，以供系统登录
                $RenrenCrypt = new RenrenCrypt();
                $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                //推荐注册送积分
                $userLogin->registGiving($uid);

                return $cfg_secureAccess . $cfg_basehost . '/?action=miniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path;
            } else {
                return array("state" => 200, "info" => "注册失败！");
            }
        }
    }

    /**
     * 微信小程序手机授权登陆注册+手机绑定
     */
    public function wxMiniProgramConnect()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;
        global $cfg_miniProgramAppid;
        global $cfg_miniProgramAppsecret;
        global $cfg_miniProgramLoginProfile;

        $miniProgramLoginProfile = (int)$cfg_miniProgramLoginProfile;  //登录后引导进入个人资料页  0关闭  1开启

        $param  = $this->param;
        $base64 = (int)$_REQUEST['base64'];

        //小程序端path
        $path = $param['path'];
        $path = str_replace('loginwh', 'huoniaowh', $path);
        $path = str_replace('loginlg', 'huoniaolj', $path);
        $path = str_replace('logindh', 'huoniaodh', $path);

        //用户信息，v8.0(2022.12.12)后不再支持获取用户昵称和头像
        //微信官方公告：https://developers.weixin.qq.com/community/develop/doc/00022c683e8a80b29bed2142b56c01
        // $userData = json_decode($_REQUEST['userData'], true);

        if($base64){
            $userData = json_decode(base64_decode($_REQUEST['userData']), true);
        }else{
            $userData = json_decode($_REQUEST['userData'], true);
        }

        //小程序APPID
        $appid = $param['appid'];

        $user_code      = $userData['code'];
        $user_iv        = $userData['iv'];
        $user_encryptedData = $userData['encryptedData'];
        $redirect  = $userData['redirect'];

        //用户基本信息，如果未获取到，说明已经授权过
        $nickname  = $userData['nickname'];
        $photo     = $userData['photo'];
        $city      = $userData['city'];
        $province  = $userData['province'];
        $sex       = (int)$userData['gender'];

        //手机号码信息
        // $phoneData = json_decode($_REQUEST['phoneData'], true);

        if($base64){
            $phoneData = json_decode(base64_decode($_REQUEST['phoneData']), true);
        }else{
            $phoneData = json_decode($_REQUEST['phoneData'], true);
        }

        $phone_code      = str_replace(' ', '+', $phoneData['code']);
        $phone_iv        = str_replace(' ', '+', $phoneData['iv']);
        $phone_encryptedData = str_replace(' ', '+', urldecode($phoneData['encryptedData']));
        $redirect  = $phoneData['redirect'];

        // include_once(HUONIAOROOT."/api/payment/log.php");
        //
        // // 初始化日志
        // $_wxMiniProgramConnectLog = new CLogFileHandler(HUONIAOROOT . '/log/miniProgramConnect/'.date('Y-m-d').'.log');
        //
        // $_wxMiniProgramConnectLog->DEBUG('用户信息：' . json_encode($userData));
        // $_wxMiniProgramConnectLog->DEBUG('手机信息：' . json_encode($phoneData));

        if (!$user_code) {
            return array("state" => 200, "info" => "参数[user_code]传递失败，请检查后重试！");
        }

        if (!$phone_code) {
            return array("state" => 200, "info" => "参数[phone_code]传递失败，请检查后重试！");
        }

        //验证是否绑定的独立小程序
        if($appid && $appid != $cfg_miniProgramAppid){
            $sql = $dsql->SetQuery("SELECT `config` FROM `#@__site_city` WHERE `config` LIKE '%$appid%' ORDER BY `id` DESC LIMIT 1");
            $ret = $dsql->dsqlOper($sql, "results");
            if($ret){
                $config = $ret[0]['config'];
                $config = unserialize($config);
                if(is_array($config)){
                    $cfg_miniProgramAppid = $config['siteConfig']['miniProgramAppid'];
                    $cfg_miniProgramAppsecret = $config['siteConfig']['miniProgramAppsecret'];

                    if(!$cfg_miniProgramAppid || !$cfg_miniProgramAppsecret){
                        return array("state" => 200, "info" => "该小程序在系统后台绑定错误，请检查后重试！");
                    }
                }else{
                    return array("state" => 200, "info" => "该小程序在系统后台绑定错误，请检查后重试！");
                }
            }else{
                return array("state" => 200, "info" => "该小程序未在系统后台绑定，请检查后重试！");
            }
        }

        // if (
        //     // empty($user_code) ||
        //     // empty($user_iv) ||
        //     // empty($user_encryptedData) ||
        //     empty($phone_code) ||
        //     empty($phone_iv) ||
        //     empty($phone_encryptedData)
        // ) return array("state" => 200, "info" => $langData['siteConfig'][33][0]); //格式错误！

        //根据用户信息获取 openid和unionid
        $url = "https://api.weixin.qq.com/sns/jscode2session?appid=".$cfg_miniProgramAppid."&secret=".$cfg_miniProgramAppsecret."&js_code=".$user_code."&grant_type=authorization_code";

        $curl = curl_init();
        curl_setopt($curl,CURLOPT_URL,$url);
        curl_setopt($curl,CURLOPT_HEADER,0);
        curl_setopt($curl,CURLOPT_RETURNTRANSFER,1);
        curl_setopt($curl,CURLOPT_SSL_VERIFYPEER,0);//证书检查
        $result = curl_exec($curl);
        curl_close($curl);

        $data = json_decode($result);
        $data = objtoarr($data);

        // $_wxMiniProgramConnectLog->DEBUG('用户信息：' . json_encode($userData));
        // $_wxMiniProgramConnectLog->DEBUG('解析结果：' . json_encode($data));

        //失败
        if(isset($data['errcode'])){
            return array("state" => 200, "info" => "获取用户信息失败，ErrCode:" . $data['errcode'] . "，ErrMsg:" . $data['errmsg']);
        }

        $openid = $data['openid'];
        $unionid = isset($data['unionid']) ? $data['unionid'] : "";
        $session_key = $data['session_key'];
        $field_session = $session_key.'#'.GetMktime(time());

        //保存到数据库中，以备支付时，没有取到unionid时使用
        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__site_wxmini_unionid` WHERE `appid` = '$appid' AND `conn` = '$unionid'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret && is_array($ret)) {
            $sql = $dsql->SetQuery("UPDATE `#@__site_wxmini_unionid` SET `appid` = '$appid', `openid` = '$openid', `unionid` = '$field_session' WHERE `conn` = '$unionid'");
            $dsql->dsqlOper($sql, "update");
        } else {
            $sql = $dsql->SetQuery("INSERT INTO `#@__site_wxmini_unionid` (`appid`, `conn`, `openid`, `unionid`) VALUES ('$appid', '$unionid', '$openid', '$field_session')");
            $dsql->dsqlOper($sql, "update");
        }

        // if(!$unionid){
        //     include_once HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
        //     $pc = new WXBizDataCrypt($cfg_miniProgramAppid, $session_key);
        //     $errCode = $pc->decryptData($user_encryptedData, $user_iv, $data);

        //     if ($errCode == 0) {
        //         $data = json_decode($data);
        //         $data = objtoarr($data);
        //         $unionid = $data['unionId'];
        //         // $_wxMiniProgramConnectLog->DEBUG('unionid：' . $unionid);
        //     }
        // }

        // if(empty($unionid))  return array("state" => 200, "info" => "用户信息获取失败".$errCode);

        //旧方法
        //从基础库 2.21.2 开始，对该能力进行了安全升级，以下是新版本组件使用指南。（旧版本组件目前可以继续使用，但建议开发者使用新版本组件，以增强小程序安全性）另外，新版本组件不再需要提前调用wx.login进行登录。
        //根据手机号码信息解密手机
        // $url = "https://api.weixin.qq.com/sns/jscode2session?appid=" . $cfg_miniProgramAppid . "&secret=" . $cfg_miniProgramAppsecret . "&js_code=" . $phone_code . "&grant_type=authorization_code";

        // $curl = curl_init();
        // curl_setopt($curl, CURLOPT_URL, $url);
        // curl_setopt($curl, CURLOPT_HEADER, 0);
        // curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        // curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //证书检查
        // $result = curl_exec($curl);
        // curl_close($curl);

        // $data = json_decode($result);
        // $data = objtoarr($data);

        // // $_wxMiniProgramConnectLog->DEBUG('手机信息：' . json_encode($phoneData));
        // // $_wxMiniProgramConnectLog->DEBUG('解析结果：' . json_encode($data));

        // //失败
        // if (isset($data['errcode'])) {
        //     return array("state" => 200, "info" => "ErrCode:" . $data['errcode'] . "，ErrMsg:" . $data['errmsg']);
        // }

        // $openid = $data['openid'];
        // $unionid = isset($data['unionid']) ? $data['unionid'] : "";
        // $session_key = $data['session_key'];  //获取session_key
        // $field_session = $session_key . '#' . GetMktime(time());

        // //解密手机号
        // $areaCode = $phone = '';
        // include_once HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
        // $pc = new WXBizDataCrypt($cfg_miniProgramAppid, $session_key);
        // $errCode = $pc->decryptData($phone_encryptedData, $phone_iv, $data);

        // if ($errCode == 0) {
        //     $data = json_decode($data);
        //     $data = objtoarr($data);
        //     $areaCode = $data['countryCode'];  //区号
        //     $phone = $data['purePhoneNumber'];  //手机号
        //     // $_wxMiniProgramConnectLog->DEBUG('手机解密：' . json_encode($data));
        // }

        //新方法
        //https://developers.weixin.qq.com/miniprogram/dev/OpenApiDoc/user-info/phone-number/getPhoneNumber.html
        //获取接口调用凭据
        include_once(HUONIAOROOT."/include/class/WechatJSSDK.class.php");
        $jssdk = new WechatJSSDK($cfg_miniProgramAppid, $cfg_miniProgramAppsecret);
        $token = $jssdk->getWxminiAccessToken();

        $result = hn_curl('https://api.weixin.qq.com/wxa/business/getuserphonenumber?access_token='.$token, array('code' => $phone_code), 'json');

        $data = json_decode($result);
        $data = objtoarr($data);

        //失败
        if ($data['errcode']) {
            //token过期的情况
            if($data['errcode'] == 42001 && strstr($result, 'access_token expired')){

                //重新强制再获取一次
                $token = $jssdk->getWxminiAccessToken(1);
                $result = hn_curl('https://api.weixin.qq.com/wxa/business/getuserphonenumber?access_token='.$token, array('code' => $phone_code), 'json');

                $data = json_decode($result);
                $data = objtoarr($data);

                //失败
                if ($data['errcode']) {
                    return array("state" => 200, "info" => "ErrCode:" . $data['errcode'] . "，ErrMsg:" . $data['errmsg']);
                }
                
            }else{
                return array("state" => 200, "info" => "ErrCode:" . $data['errcode'] . "，ErrMsg:" . $data['errmsg']);
            }
        }

        $phone_info = $data['phone_info'];
        $areaCode = $phone_info['countryCode'];  //区号
        $phone = $phone_info['purePhoneNumber'];  //手机号

        if (empty($phone))  return array("state" => 200, "info" => "手机号码解析失败，请重试，错误信息：" . $errCode);

        //根据手机号码检查是否已经注册，如果已经注册过，直接授权登录，如果还没有注册，执行注册流程，然后再授权登录。
        // $sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid` FROM `#@__member` WHERE `wechat_conn` = '$unionid'");
        $sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid`, `photo`, `nickname`, `state`, `stateinfo` FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND `phone` = '$phone' AND `phoneCheck` = 1");
        // $_wxMiniProgramConnectLog->DEBUG('SQL：' . $sql);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $uid = $ret[0]['id'];
            $state = (int)$ret[0]['state'];

            if(!$state){
                return array("state" => 200, "info" => "您的账号审核中，暂无法登录！");
            }

            if($state == 2){
                return array("state" => 200, "info" => "您的账号审核被拒绝，原因：" . $ret[0]['stateinfo']);
            }

            $field_openid = "";
            // $field_session = $session_key . '#' . GetMktime(time());
            // 强制更新
            if(empty($ret[0]['wechat_mini_openid'])){
                $field_openid = ", `wechat_mini_openid` = '$openid'";
            }

            $ip   = GetIP();
            $ipaddr = getIpAddr($ip);
            $time = GetMkTime(time());

            //创建新的令牌
            $token = createApiToken('wxmini', $uid);
            $access_token = $token['access_token'];
            $refresh_token = $token['refresh_token'];

            //更新用户信息
            $sql = $dsql->SetQuery("UPDATE `#@__member` SET `wechat_conn` = '$unionid', `wechat_mini_session` = '$field_session', `access_token_wxmini` = '" . urldecode($access_token) . "', `refresh_token_wxmini` = '" . urldecode($refresh_token) . "', `logincount` = `logincount` + 1, `lastlogintime` = '$time', `lastloginip` = '$ip', `lastloginipaddr` = '$ipaddr', `online` = '$time' " . $field_openid . " WHERE `id` = $uid");
            // $_wxMiniProgramConnectLog->DEBUG('更新用户：' . $sql);
            $dsql->dsqlOper($sql, "update");

            //记录登录日志
            $useragent = $_SERVER['HTTP_USER_AGENT'];
            $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
            $sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '微信小程序', '$useragent')");
            $dsql->dsqlOper($sql, "update");

            //记录用户行为日志
            memberLog($uid, 'member', '', 0, 'insert', '用户登录(微信小程序)', '', $sql);

            $data = array(
                0 => $unionid,
                1 => $openid,
                2 => $field_session,
                3 => $phone
            );

            //返回unionid、openid、session_key的加密信息，以供系统登录
            $RenrenCrypt = new RenrenCrypt();
            $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

            //判断是否需要引导进入个人资料页
            $profile = 0;
            if ($miniProgramLoginProfile) {
                $photo = $ret[0]['photo'];
                $nickname = $ret[0]['nickname'];
                $defaultNickname = substr($phone, 0, 3) . '****' . substr($phone, -4);
                if (($photo == '' || $photo == '/static/images/noPhoto_100.jpg') && $nickname == $defaultNickname) {
                    $profile = 1;
                }
            }

            return $cfg_secureAccess . $cfg_basehost . '/?action=wxMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path . '&profile=' . $profile;
        } else {

            //获取到openid和unionid后，根据unionid检查是否已经注册，如果已经注册过，直接授权登录，如果还没有注册，执行注册流程，然后再授权登录。
            if($unionid){
                $sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid`, `phone`, `phoneCheck`, `photo`, `nickname` FROM `#@__member` WHERE `wechat_conn` = '$unionid' AND (`phone` = '' OR `phoneCheck` = 0)");
                //Log::DEBUG('查询：' . $sql);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {

                    $uid = $ret[0]['id'];

                    $field_openid = "";
                    // if(empty($ret[0]['wechat_mini_openid'])){
                    $field_openid = ", `wechat_mini_openid` = '$openid'";
                    // }

                    //更新绑定的手机号
                    if (empty($ret[0]['phone']) || !$ret[0]['phoneCheck']) {
                        $field_openid .= ", `areaCode` = '$areaCode', `phone` = '$phone', `phoneCheck` = 1, `state` = 1";
                    }

                    $ip   = GetIP();
                    $ipaddr = getIpAddr($ip);
                    $time = GetMkTime(time());

                    //创建新的令牌
                    $token = createApiToken('wxmini', $uid);
                    $access_token = $token['access_token'];
                    $refresh_token = $token['refresh_token'];

                    $sql = $dsql->SetQuery("UPDATE `#@__member` SET `wechat_mini_session` = '$field_session', `access_token_wxmini` = '" . urldecode($access_token) . "', `refresh_token_wxmini` = '" . urldecode($refresh_token) . "', `logincount` = `logincount` + 1, `lastlogintime` = '$time', `lastloginip` = '$ip', `lastloginipaddr` = '$ipaddr', `online` = '$time' " . $field_openid . " WHERE `id` = $uid");
                    $dsql->dsqlOper($sql, "update");

                    //记录登录日志
                    $useragent = $_SERVER['HTTP_USER_AGENT'];
                    $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
                    $sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '微信小程序', '$useragent')");
                    $dsql->dsqlOper($sql, "update");

                    //记录用户行为日志
                    memberLog($uid, 'member', '', 0, 'insert', '用户登录(微信小程序)', '', $sql);

                    $data = array(
                        0 => $unionid,
                        1 => $openid,
                        2 => $field_session,
                        3 => $phone
                    );

                    //返回unionid、openid、session_key的加密信息，以供系统登录
                    $RenrenCrypt = new RenrenCrypt();
                    $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                    //判断是否需要引导进入个人资料页
                    $profile = 0;
                    if ($miniProgramLoginProfile) {
                        $photo = $ret[0]['photo'];
                        $nickname = $ret[0]['nickname'];
                        $defaultNickname = substr($phone, 0, 3) . '****' . substr($phone, -4);
                        if (($photo == '' || $photo == '/static/images/noPhoto_100.jpg') && $nickname == $defaultNickname) {
                            $profile = 1;
                        }
                    }

                    return $cfg_secureAccess . $cfg_basehost . '/?action=wxMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path . '&profile=' . $profile;
                }
            }


            //如果没有获取到昵称和城市信息，说明此微信用户之前已经授权过，但是使用了新的手机号码进行登录
            //这种情况，我们为这个手机创建账号，并且绑定之前授权过的微信conn、openid、unionid
            // if(empty($nickname) && empty($city)){

            //     $sql = $dsql->SetQuery("SELECT `addr` FROM `#@__member` WHERE `wechat_conn` = '$unionid'");
            //     $ret = $dsql->dsqlOper($sql, "results");
            //     if($ret){

            //         $addr = $ret[0]['addr'];

            //         //取手机号码前三位和后四位为用户名
            //         $username = $phone;
            //         $nickname = substr($phone, 0, 3) . '****' . substr($phone, -4);

            //         $photo = '';  //空头像
            //         $sex = 1;  //默认男


            //     //没有查询到授权信息，则提示使用其他方式登录
            //     }else{
            //         return array("state" => 200, "info" => "授权信息验证失败，请使用其他方式登录！");
            //     }

            // }else{

            //     // 区域
            //     $addr = 0;
            //     if($city){
            //         $sql = $dsql->SetQuery("SELECT `id`, `parentid` FROM `#@__site_area` WHERE `typename` LIKE '%$city%'");
            //         $ret = $dsql->dsqlOper($sql, "results");
            //         if($ret){
            //             if(count($ret) == 1 || empty($province)){
            //                 $addr = $ret[0]['id'];
            //             }else{
            //                 foreach ($ret as $k => $v) {
            //                     $sql = $dsql->SetQuery("SELECT `pinyin` FROM `#@__site_area` WHERE `id` = ".$v['parentid']);
            //                     $ret = $dsql->dsqlOper($sql, "results");
            //                     if($ret){
            //                         if(strstr($ret[0]['typename'], $province) !== false){
            //                             $addr = $v['id'];
            //                             break;
            //                         }
            //                     }
            //                 }
            //             }
            //         }
            //     }

            //     //随机用户名
            //     $chcode = strtolower(create_check_code(8));
            //     $username = $chcode."@wechat";
            // }

            //限制注册
            global $cfg_regstatus;
            global $cfg_regclosemessage;
            if ($cfg_regstatus == 0) {
                return array("state" => 200, "info" => $cfg_regclosemessage);
            }

            $username = $phone;  //用户名直接使用手机号码
            $nickname = substr($phone, 0, 3) . '****' . substr($phone, -4);  //昵称取前3位和后4位
            $photo = '/static/images/noPhoto_100.jpg';  //空头像
            $sex = 1;  //默认男
            $addr = 0;  //区域

            $ip     = GetIP();
            $ipaddr = getIpAddr($ip);
            $time   = time();
            $regfrom = getCurrentTerminal();

            $sql = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `photo`, `sex`, `addr`, `wechat_conn`, `wechat_openid`, `wechat_mini_openid`, `regtime`, `logincount`, `lastlogintime`, `lastloginip`, `lastloginipaddr`, `regip`, `regipaddr`, `state`, `wechat_mini_session`, `areaCode`, `phone`, `phoneCheck`, `regfrom`) VALUES ('1', '$username', '', '$nickname', '$photo', '$sex', '$addr', '$unionid', '', '$openid', '$time', '1', '$time', '$ip', '$ipaddr', '$ip', '$ipaddr', '1', '$field_session', '$areaCode', '$phone', '1', '$regfrom')");
            // $_wxMiniProgramConnectLog->DEBUG('新增用户：' . $sql);
            $uid = $dsql->dsqlOper($sql, "lastid");

            if (is_numeric($uid)) {

                //创建新的令牌
                $token = createApiToken('wxmini', $uid);
                $access_token = $token['access_token'];
                $refresh_token = $token['refresh_token'];

                //更新用户信息
                $_sql = $dsql->SetQuery("UPDATE `#@__member` SET `access_token_wxmini` = '" . urldecode($access_token) . "', `refresh_token_wxmini` = '" . urldecode($refresh_token) . "', `online` = '$time' WHERE `id` = $uid");
                $dsql->dsqlOper($_sql, "update");

                //记录登录日志
                $useragent = $_SERVER['HTTP_USER_AGENT'];
                $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
                $_sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '微信小程序', '$useragent')");
                $dsql->dsqlOper($_sql, "update");

                //记录用户行为日志
                memberLog($uid, 'member', '', 0, 'insert', '用户注册(微信小程序)', '', $sql);

                //查询重复
                //$sql = $dsql->SetQuery("SELECT `id`, `wechat_mini_openid` FROM `#@__member` WHERE `wechat_conn` = '$unionid'");
                //$ret = $dsql->dsqlOper($sql, "results");
                // $_wxMiniProgramConnectLog->DEBUG('查重：' . $sql);
                // $_wxMiniProgramConnectLog->DEBUG('结果：' . json_encode($ret));
                //if($ret && count($ret) > 1){
                //    $sql = $dsql->SetQuery("DELETE FROM `#@__member` WHERE `id` = " . $ret[0]['id']);
                // $_wxMiniProgramConnectLog->DEBUG('删重：' . $sql);
                //    $dsql->dsqlOper($sql, "update");
                //}

                $data = array(
                    0 => $unionid,
                    1 => $openid,
                    2 => $field_session,
                    3 => $phone
                );

                //返回unionid、openid、session_key的加密信息，以供系统登录
                $RenrenCrypt = new RenrenCrypt();
                $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                //推荐注册送积分
                $userLogin->registGiving($uid);

                return $cfg_secureAccess . $cfg_basehost . '/?action=wxMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path . '&profile=' . 1;
            } else {
                return array("state" => 200, "info" => "注册失败！");
            }
        }
    }

    /**
     * 抖音小程序手机授权登陆注册+手机绑定
     */
    public function byteMiniProgramConnect()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $customIncFile = HUONIAOINC . "/plugins/20/douyin.inc.php";

        if(file_exists($customIncFile)){
            require_once($customIncFile);
        }else{
            return array("state" => 200, "info" => "小程序配置错误");
        }

        $bindphone = (int)$bindphone;

        // loadPlug("payment");
        // $payment  = get_payment("bytemini");

        require_once HUONIAOROOT . "/api/payment/log.php";
        $_byteMiniLoginLog = new CLogFileHandler(HUONIAOROOT . '/log/byteMiniLogin/' . date('Y-m-d') . '.log', true);

        // $appid = $payment['appid'];
        // $appsecret = $payment['appsecret'];

        $param = $this->param;
        $base64 = (int)$_REQUEST['base64'];

        $_byteMiniLoginLog->DEBUG("param：" . json_encode($param));

        //小程序端path
        $path = $param['path'];

        //用户信息
        if($base64){
            $userData = json_decode(base64_decode($param['userData']), true);
        }else{
            $userData = json_decode($param['userData'], true);
        }

        $_byteMiniLoginLog->DEBUG("userData：" . json_encode($userData));

        $user_code      = $userData['code'];
        $user_iv        = str_replace(' ', '+', $userData['iv']);
        $user_encryptedData = str_replace(' ', '+', urldecode($userData['encryptedData']));
        $redirect  = $userData['redirect'];

        //用户基本信息，如果未获取到，说明已经授权过
        $nickname  = $userData['nickname'];
        $photo     = $userData['photo'];
        $city      = $userData['city'];
        $province  = $userData['province'];
        $sex       = (int)$userData['gender'];

        //手机号码信息
        if($base64){
            $phoneData = json_decode(base64_decode($param['phoneData']), true);
        }else{
            $phoneData = json_decode($param['phoneData'], true);
        }

        $_byteMiniLoginLog->DEBUG("phoneData：" . json_encode($phoneData));

        $phone_code      = $phoneData['code'];
        $phone_iv        = str_replace(' ', '+', $phoneData['iv']);
        $phone_encryptedData = str_replace(' ', '+', urldecode($phoneData['encryptedData']));


        if (
            empty($user_code) ||
            empty($user_iv) ||
            empty($user_encryptedData)
        ) return array("state" => 200, "info" => $langData['siteConfig'][33][0]); //格式错误！

        //根据用户信息获取 openid和unionid
        $url = "https://developer.toutiao.com/api/apps/v2/jscode2session";
        $data = '{
            "appid": "' . $appid . '",
            "secret": "' . $appsecret . '",
            "code": "' . $user_code . '"
        }';

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_POST, 1);
        curl_setopt($curl, CURLOPT_TIMEOUT, 5);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
        curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);
        $httpHeader = array();
        $httpHeader[] = 'Content-Type: Application/json';
        curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $httpHeader);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        $result = curl_exec($curl);
        curl_close($curl);

        $data = json_decode($result);
        $data = objtoarr($data);

        //失败
        if (isset($data['err_no']) && $data['err_no'] != 0) {
            return array("state" => 200, "info" => "ErrCode:" . $data['err_no'] . "，ErrMsg:" . $data['err_tips']);
        }

        $data = $data['data'];
        $openid = $data['openid'];
        $unionid = isset($data['unionid']) ? $data['unionid'] : "";
        $session_key = $data['session_key'];
        $field_session = $session_key . '#' . GetMktime(time());

        if (empty($unionid))  return array("state" => 200, "info" => "用户信息获取失败");

        $phone = '';
        if ($phoneData && $bindphone) {

            //根据手机号码信息解密手机
            $url = "https://developer.toutiao.com/api/apps/v2/jscode2session";
            $data = '{
                "appid": "' . $appid . '",
                "secret": "' . $appsecret . '",
                "code": "' . $phone_code . '"
            }';

            $curl = curl_init();
            curl_setopt($curl, CURLOPT_URL, $url);
            curl_setopt($curl, CURLOPT_POST, 1);
            curl_setopt($curl, CURLOPT_TIMEOUT, 5);
            curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, FALSE);
            curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, FALSE);
            $httpHeader = array();
            $httpHeader[] = 'Content-Type: Application/json';
            curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
            curl_setopt($curl, CURLOPT_HTTPHEADER, $httpHeader);
            curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
            $result = curl_exec($curl);
            curl_close($curl);

            $data = json_decode($result);
            $data = objtoarr($data);

            //失败
            if (isset($data['err_no']) && $data['err_no'] != 0) {
                return array("state" => 200, "info" => "ErrCode:" . $data['err_no'] . "，ErrMsg:" . $data['err_tips']);
            }

            $data = $data['data'];
            $openid = $data['openid'];
            $session_key = $data['session_key'];
            $unionid = $data['unionid'];
            $field_session = $session_key . '#' . GetMktime(time());

            //解密手机号
            $areaCode = $phone = '';
            include_once HUONIAOINC . "/class/miniProgram/wxBizDataCrypt.php";
            $pc = new WXBizDataCrypt($appid, $session_key);
            $errCode = $pc->decryptData($phone_encryptedData, $phone_iv, $data);

            if ($errCode == 0) {
                $data = json_decode($data);
                $data = objtoarr($data);
                $areaCode = $data['countryCode'];  //区号
                $phone = $data['purePhoneNumber'];  //手机号
                // $_wxMiniProgramConnectLog->DEBUG('手机解密：' . json_encode($data));
            }

            if (empty($phone))  return array("state" => 200, "info" => "手机号码解析失败，请重试，错误信息：" . $errCode);


            //根据手机号码检查是否已经注册，如果已经注册过，直接授权登录，如果还没有注册，执行注册流程，然后再授权登录。
            $sql = $dsql->SetQuery("SELECT `id`, `douyin_openid`, `state`, `stateinfo` FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND `phone` = '$phone'");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {

                $uid = $ret[0]['id'];
                $state = (int)$ret[0]['state'];
    
                if(!$state){
                    return array("state" => 200, "info" => "您的账号审核中，暂无法登录！");
                }
    
                if($state == 2){
                    return array("state" => 200, "info" => "您的账号审核被拒绝，原因：" . $ret[0]['stateinfo']);
                }

                $field_openid = "";
                // 强制更新
                $field_openid = ", `douyin_openid` = '$openid', `douyin_conn` = '$unionid'";

                $ip   = GetIP();
                $ipaddr = getIpAddr($ip);
                $time = GetMkTime(time());

                //创建新的令牌
                $token = createApiToken('dymini', $uid);
                $access_token = $token['access_token'];
                $refresh_token = $token['refresh_token'];

                //更新用户信息
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `access_token_dymini` = '" . urldecode($access_token) . "', `refresh_token_dymini` = '" . urldecode($refresh_token) . "', `logincount` = `logincount` + 1, `lastlogintime` = '$time', `lastloginip` = '$ip', `lastloginipaddr` = '$ipaddr', `online` = '$time' " . $field_openid . " WHERE `id` = $uid");
                $dsql->dsqlOper($sql, "update");

                //记录登录日志
                $useragent = $_SERVER['HTTP_USER_AGENT'];
                $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
                $sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '抖音小程序', '$useragent')");
                $dsql->dsqlOper($sql, "update");

                //记录用户行为日志
                memberLog($uid, 'member', '', 0, 'insert', '用户登录(抖音小程序)', '', $sql);

                $data = array(
                    0 => $unionid,
                    1 => $openid,
                    2 => $field_session,
                    3 => $phone
                );

                //返回unionid、openid、session_key的加密信息，以供系统登录
                $RenrenCrypt = new RenrenCrypt();
                $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                return $cfg_secureAccess . $cfg_basehost . '/?action=byteMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path;
            }
        }


        //获取到openid和unionid后，根据unionid检查是否已经注册，如果已经注册过，直接授权登录，如果还没有注册，执行注册流程，然后再授权登录。
        $sql = $dsql->SetQuery("SELECT `id`, `douyin_openid` FROM `#@__member` WHERE `douyin_conn` = '$unionid'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $uid = $ret[0]['id'];

            $ip   = GetIP();
            $ipaddr = getIpAddr($ip);
            $time = GetMkTime(time());

            //创建新的令牌
            $token = createApiToken('dymini', $uid);
            $access_token = $token['access_token'];
            $refresh_token = $token['refresh_token'];

            $sql = $dsql->SetQuery("UPDATE `#@__member` SET `access_token_dymini` = '" . urldecode($access_token) . "', `refresh_token_dymini` = '" . urldecode($refresh_token) . "', `logincount` = `logincount` + 1, `lastlogintime` = '$time', `lastloginip` = '$ip', `lastloginipaddr` = '$ipaddr', `online` = '$time' WHERE `id` = $uid");
            $dsql->dsqlOper($sql, "update");

            //记录登录日志
            $useragent = $_SERVER['HTTP_USER_AGENT'];
            $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
            $sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '抖音小程序', '$useragent')");
            $dsql->dsqlOper($sql, "update");

            //记录用户行为日志
            memberLog($uid, 'member', '', 0, 'insert', '用户登录(抖音小程序)', '', $sql);

            $data = array(
                0 => $unionid,
                1 => $openid,
                2 => $field_session
            );

            //返回unionid、openid、session_key的加密信息，以供系统登录
            $RenrenCrypt = new RenrenCrypt();
            $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

            return $cfg_secureAccess . $cfg_basehost . '/?action=byteMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path;
        }


        //如果没有获取到昵称和城市信息，说明此微信用户之前已经授权过，但是使用了新的手机号码进行登录
        //这种情况，我们为这个手机创建账号，并且绑定之前授权过的微信conn、openid、unionid
        if (empty($nickname) && empty($city)) {

            $sql = $dsql->SetQuery("SELECT `addr` FROM `#@__member` WHERE `douyin_conn` = '$unionid'");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {

                $addr = $ret[0]['addr'];

                //取手机号码前三位和后四位为用户名
                $username = $phone;
                $nickname = substr($phone, 0, 3) . '****' . substr($phone, -4);

                $photo = '';  //空头像
                $sex = 1;  //默认男


                //没有查询到授权信息，则提示使用其他方式登录
            } else {
                return array("state" => 200, "info" => "授权信息验证失败，请使用其他方式登录！");
            }
        } else {

            // 区域
            $addr = 0;
            if ($city) {
                $sql = $dsql->SetQuery("SELECT `id`, `parentid` FROM `#@__site_area` WHERE `typename` LIKE '%$city%'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    if (count($ret) == 1 || empty($province)) {
                        $addr = $ret[0]['id'];
                    } else {
                        foreach ($ret as $k => $v) {
                            $sql = $dsql->SetQuery("SELECT `pinyin` FROM `#@__site_area` WHERE `id` = " . $v['parentid']);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                if (strstr($ret[0]['typename'], $province) !== false) {
                                    $addr = $v['id'];
                                    break;
                                }
                            }
                        }
                    }
                }
            }

            //随机用户名
            $chcode = strtolower(create_check_code(8));
            $username = $chcode . "@douyin";
        }

        //限制注册
        global $cfg_regstatus;
        global $cfg_regclosemessage;
        if ($cfg_regstatus == 0) {
            return array("state" => 200, "info" => $cfg_regclosemessage);
        }

        $ip     = GetIP();
        $ipaddr = getIpAddr($ip);
        $time   = time();
        $regfrom = getCurrentTerminal();

        $phoneCheck = $phone ? 1 : 0;
        $sql = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `photo`, `sex`, `addr`, `douyin_conn`, `douyin_openid`, `regtime`, `logincount`, `lastlogintime`, `lastloginip`, `lastloginipaddr`, `regip`, `regipaddr`, `state`, `areaCode`, `phone`, `phoneCheck`, `regfrom`) VALUES ('1', '$username', '', '$nickname', '$photo', '$sex', '$addr', '$unionid', '$openid', '$time', '1', '$time', '$ip', '$ipaddr', '$ip', '$ipaddr', '1', '$areaCode', '$phone', '$phoneCheck', '$regfrom')");
        $uid = $dsql->dsqlOper($sql, "lastid");

        if (is_numeric($uid)) {

            //创建新的令牌
            $token = createApiToken('dymini', $uid);
            $access_token = $token['access_token'];
            $refresh_token = $token['refresh_token'];

            //更新用户信息
            $_sql = $dsql->SetQuery("UPDATE `#@__member` SET `access_token_dymini` = '" . urldecode($access_token) . "', `refresh_token_dymini` = '" . urldecode($refresh_token) . "', `online` = '$time' WHERE `id` = $uid");
            $dsql->dsqlOper($_sql, "update");

            //记录登录日志
            $useragent = $_SERVER['HTTP_USER_AGENT'];
            $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
            $_sql = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$uid', '$time', '$_ip', '$ipaddr', '抖音小程序', '$useragent')");
            $dsql->dsqlOper($_sql, "update");

            //记录用户行为日志
            memberLog($uid, 'member', '', 0, 'insert', '用户注册(抖音小程序)', '', $sql);

            $data = array(
                0 => $unionid,
                1 => $openid,
                2 => $field_session,
                3 => $phone
            );

            //返回unionid、openid、session_key的加密信息，以供系统登录
            $RenrenCrypt = new RenrenCrypt();
            $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

            //推荐注册送积分
            $userLogin->registGiving($uid);

            return $cfg_secureAccess . $cfg_basehost . '/?action=byteMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&redirect=' . $redirect . '&uid=' . $uid . '&path=' . $path;
        } else {
            return array("state" => 200, "info" => "注册失败！");
        }
    }

    /**
     * QQ小程序登陆注册
     */
    public function qqMiniProgramConnect()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        global $cfg_secureAccess;
        global $cfg_basehost;

        $param = $this->param;
        $code = $param['code'];
        $nickname = $param['nickname'];
        $photo = $param['photo'];
        $sex = (int)$param['gender'];
        $city = $param['city'];
        $redirect  = $param['redirect'];

        if (empty($code)) return array("state" => 200, "info" => $langData['siteConfig'][33][0]); //格式错误！

        //从QQ小程序支付中获取AppID和AppSecret
        loadPlug("payment");
        $payment  = get_payment("qqmini");
        $appid = $payment['appid'];
        $secret = $payment['secret'];

        if (!$appid || !$secret) return array("state" => 200, "info" => "请先安装QQ小程序支付方式，并配置AppID和AppSecret！");

        $url = "https://api.q.qq.com/sns/jscode2session?appid=" . $appid . "&secret=" . $secret . "&js_code=" . $code . "&grant_type=authorization_code";

        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        curl_setopt($curl, CURLOPT_HEADER, 0);
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, 0); //证书检查
        // curl_setopt($curl,CURLOPT_POST,1);
        // curl_setopt($curl,CURLOPT_POSTFIELDS,$data);
        $result = curl_exec($curl);
        curl_close($curl);

        $data = json_decode($result, true);

        $openid = $data['openid'];
        $unionid = isset($data['unionid']) ? $data['unionid'] : "";
        $unionid = $unionid ? $unionid : $openid;

        if (empty($unionid))  return array("state" => 200, "info" => "用户信息获取失败" . $data['errcode']);

        //获取到openid和unionid后，根据unionid检查是否已经注册，如果已经注册过，直接授权登录，如果还没有注册，执行注册流程，然后再授权登录。
        $sql = $dsql->SetQuery("SELECT `id`, `state`, `stateinfo` FROM `#@__member` WHERE `qq_conn` = '$unionid'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $uid = $ret[0]['id'];
            $state = (int)$ret[0]['state'];

            if(!$state){
                return array("state" => 200, "info" => "您的账号审核中，暂无法登录！");
            }

            if($state == 2){
                return array("state" => 200, "info" => "您的账号审核被拒绝，原因：" . $ret[0]['stateinfo']);
            }

            $data = array(
                0 => $uid,
                1 => $unionid,
                2 => GetMktime(time())
            );

            //返回id、unionid、当前时间的加密信息，以供系统登录
            $RenrenCrypt = new RenrenCrypt();
            $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

            return $cfg_secureAccess . $cfg_basehost . '/?action=qqMiniProgramLogin&key=' . $key . '&redirect=' . $redirect;
        } else {

            //限制注册
            global $cfg_regstatus;
            global $cfg_regclosemessage;
            if ($cfg_regstatus == 0) {
                return array("state" => 200, "info" => $cfg_regclosemessage);
            }

            // 区域
            $addr = 0;
            if ($city) {
                $sql = $dsql->SetQuery("SELECT `id`, `parentid` FROM `#@__site_area` WHERE `typename` LIKE '%$city%'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    if (count($ret) == 1 || empty($province)) {
                        $addr = $ret[0]['id'];
                    } else {
                        foreach ($ret as $k => $v) {
                            $sql = $dsql->SetQuery("SELECT `pinyin` FROM `#@__site_area` WHERE `id` = " . $v['parentid']);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if ($ret) {
                                if (strstr($ret[0]['typename'], $province) !== false) {
                                    $addr = $v['id'];
                                    break;
                                }
                            }
                        }
                    }
                }
            }

            $ip     = GetIP();
            $ipaddr = getIpAddr($ip);
            $time   = time();

            $chcode = strtolower(create_check_code(8));
            $username = $chcode . "@qq";
            $regfrom = getCurrentTerminal();

            $sql = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `photo`, `sex`, `addr`, `qq_conn`, `regtime`, `logincount`, `lastlogintime`, `lastloginip`, `lastloginipaddr`, `regip`, `regipaddr`, `state`, `regfrom`) VALUES ('1', '$username', '', '$nickname', '$photo', '$sex', '$addr', '$unionid', '$time', '1', '$time', '$ip', '$ipaddr', '$ip', '$ipaddr', '1', '$regfrom')");
            $uid = $dsql->dsqlOper($sql, "lastid");

            if (is_numeric($uid)) {

                //查询重复
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member` WHERE `qq_conn` = '$unionid'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret && count($ret) > 1) {
                    $sql = $dsql->SetQuery("DELETE FROM `#@__member` WHERE `id` = " . $ret[0]['id']);
                    $dsql->dsqlOper($sql, "update");
                }

                $data = array(
                    0 => $uid,
                    1 => $unionid,
                    2 => GetMktime(time())
                );

                //返回id、unionid、当前时间的加密信息，以供系统登录
                $RenrenCrypt = new RenrenCrypt();
                $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                //推荐注册送积分
                $userLogin->registGiving($uid);

                return $cfg_secureAccess . $cfg_basehost . '/?action=qqMiniProgramLogin&key=' . $key . '&redirect=' . $redirect;
            } else {
                return array("state" => 200, "info" => "注册失败！");
            }
        }
    }


    //绑定社交帐号-移除原有账号的绑定
    public function changeConnectBind()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $return = array();
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $code     = $this->param['code'];
        $sameConn = $this->param['sameConn'];

        $codeArr = explode('&', $code);
        $code = $codeArr[0];

        if (empty($code)) array("state" => 200, "info" => $langData['siteConfig'][21][72]);   //操作失败，请重试！
        if (empty($sameConn)) array("state" => 200, "info" => $langData['siteConfig'][21][72]);   //操作失败，请重试！

        $RenrenCrypt = new RenrenCrypt();
        $sameConn    = $RenrenCrypt->php_decrypt(base64_decode($sameConn));
        $sameConn    = explode("&", $sameConn);
        if (count($sameConn) != 2)  return array("state" => 200, "info" => $langData['siteConfig'][21][72]);   //操作失败，请重试！
        $sameConnId = $sameConn[0];
        $sameConnDa = $sameConn[1];

        $code_field = $code == "wechat" ? "`wechat_conn`, `wechat_openid`" : "`" . $code . "_conn`";
        $sql = $dsql->SetQuery("SELECT " . $code_field . " FROM `#@__member` WHERE `id` = $sameConnId AND `" . $code . "_conn` = '$sameConnDa'");
        $ret = $dsql->dsqlOper($sql, "results");
        if (!$ret) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][72] . "1");   //操作失败，请重试！
        } else {
            if ($code == "wechat") {
                $up_field = "`wechat_conn` = '" . $ret[0]['wechat_conn'] . "', `wechat_openid` = '" . $ret[0]['wechat_openid'] . "'";
            } else {
                $up_field = "`" . $code . "_conn` = '" . $ret[0][$code . "_conn"] . "'";
            }
            $sql = $dsql->SetQuery("UPDATE `#@__member` SET " . $up_field . " WHERE `id` = " . $uid);
            $res = $dsql->dsqlOper($sql, "update");
            if ($res == "ok") {
                if ($code == "wechat") {
                    $up_field = "`wechat_conn` = '', `wechat_openid` = ''";
                } else {
                    $up_field = "`" . $code . "_conn` = ''";
                }
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET " . $up_field . " WHERE `id` = " . $sameConnId);
                $ret = $dsql->dsqlOper($sql, "update");

                //记录用户行为日志
                memberLog($uid, 'member', '', 0, 'update', '绑定社交账号(' . $code . ')', '', $sql);

                return "ok";
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][72] . "2");   //操作失败，请重试！
            }
        }
    }

    /**
     * 提现到支付宝、微信
     */
    public function putForward()
    {
        $param  =  $this->param;
        $module = $param['module'];
        $utype  = $param['utype'];
        $type   = $param['type'];
        $amount = $param['amount'];
        $date   = GetMkTime(time());

        global $dsql;
        global $userLogin;
        global $langData;
        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        if (empty($type) || empty($amount)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][30]); //请填写完整！



        // if($amount < 1) return array("state" => 200, "info" => self::$langData['siteConfig'][33][30]);//请填写完整！

        if ($type == "alipay") {
            $tit = self::$langData['siteConfig'][19][302]; //支付宝
            $conn = "alipay_conn";
        } elseif ($type == "wxpay") {
            $tit = self::$langData['siteConfig'][27][139]; //微信
            $conn = "wechat_openid";
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][39]); //提现方式不存在
        }

        $this->param['id'] = $userid;
        $detail = $this->detail();
        // print_r($detail);die;

        if ($detail['certifyState'] != 1) return array("state" => 200, "info" => self::$langData['siteConfig'][30][57]); //请先完成实名认证，再进行提现到支付宝、微信的操作
        if ($detail[$conn] == '') return array("state" => 200, "info" => self::$langData['siteConfig'][33][40] . $tit);

        if ($module == "dating") {
            if ($utype == "") return array("state" => 200, "info" => self::$langData['siteConfig'][33][30]); //请填写完整！

            $param = array("utype" => $utype);
            $moduleHandels = new handlers('dating', "putForward");
            $moduleConfig  = $moduleHandels->getHandle($param);
            if (is_array($moduleConfig) && $moduleConfig['state'] == 100) {
                $datingDetail = $moduleConfig['info'];
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][21][72]);  //操作失败，请重试！
            }

            if ($datingDetail['maxPutMoney'] < $amount) return array("state" => 200, "info" => $langData['siteConfig'][21][84]);  //帐户余额不足，提现失败！

        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][21][72]);  //操作失败，请重试！
            if ($detail['money'] < $amount) return array("state" => 200, "info" => $langData['siteConfig'][21][84]);  //帐户余额不足，提现失败！
        }

        //验证类型
        $realname = $username = $wechat_openid = $wechat_mini_openid = '';
        if ($type == "wxpay") {
            $sql = $dsql->SetQuery("SELECT `realname`, `username`, `wechat_openid`, `wechat_mini_openid` FROM `#@__member` WHERE `id` = " . $userid);
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $realname = $ret[0]['realname'];
                $username = $ret[0]['username'];
                $wechat_openid = $ret[0]['wechat_openid'];
                $wechat_mini_openid = $ret[0]['wechat_mini_openid'];

                if ($bank == 'weixin' && !$wechat_openid && !$wechat_mini_openid) {
                    return array("state" => 200, "info" => $langData['siteConfig'][36][7]);  //请先绑定微信账号
                }
            }
        }

        $order = array(
            "account" => $detail[$conn],
            "amount" => $amount,
            "name" => $detail['realname'],
            "remark" => '提现',
            'openid' => $wechat_openid,
            'wechat_mini_openid' => $wechat_mini_openid,
            "ordernum" => create_ordernum()
        );

        global $handler;
        $handler = true;

        $file = HUONIAOROOT . "/api/payment/" . $type . "/" . $type . "Transfers.php";
        require_once $file;
        $className = $type . "Transfers";
        $transfer = new $className();
        $return = $transfer->transfers($order);

        if (is_array($return)) {
            if ($return['state'] == 100) {
                $order_id = $return['order_id'];
                $paydate = $return['pay_date'];

                $sql = $dsql->SetQuery("INSERT INTO `#@__member_putforward` (`userid`, `utype`, `module`, `type`, `amount`, `pubdate`, `order_id`, `paydate`) VALUES ('$userid', '$utype', '$module', '$type', '$amount', '$date', '$order_id', '$paydate')");
                $pid = $dsql->dsqlOper($sql, "lastid");

                //记录用户行为日志
                memberLog($userid, 'member', 'forward', 0, 'insert', '账户提现(' . $amount . '元)', '', $sql);

                if ($module == "dating") {
                    $moduleHandels = new handlers('dating', "config");
                    $moduleConfig  = $moduleHandels->getHandle();
                    $moduleConfig  = $moduleConfig['info'];
                    $goldRatio     = $moduleConfig['goldRatio'];
                    $withdrawRatio = $moduleConfig['withdrawRatio'];

                    // 扣除的金币 = 人民币 * 兑换比例 + 提现手续费
                    $money = $amount * $goldRatio * (1 + $withdrawRatio / 100);

                    $sql = $dsql->SetQuery("UPDATE `#@__dating_member` SET `money` = `money` - $money WHERE `id` = " . $datingDetail['id']);
                    $dsql->dsqlOper($sql, "update");
                } else {
                    $sql = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - $amount WHERE `id` = $userid");
                    $dsql->dsqlOper($sql, "update");
                }

                return self::$langData['siteConfig'][33][41]; //提现成功！
            } elseif ($return['state'] == 101) {
                return array("state" => 200, "info" => $return['info']);
            } else {
                return array("state" => 200, "info" => $return['info']);
            }
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][42]); //提现失败，请稍后再试！
        }
    }


    /**
     * 短信登录
     * 此功能与APP端手机号码一键登录功能相似，部分功能重复，修改时请同时查看umengPhoneVerifyLogin方法是否需要同步
     */
    public function smsLogin()
    {
        global $userLogin;
        global $dsql;
        if ($userLogin->getMemberID() > -1) {
            return array('state' => 200, 'info' => self::$langData['siteConfig'][33][43]); //您已经登录，无须重复登录！

        } else {
            $ip = GetIP();
            $ipaddr = getIpAddr($ip);
            $areaCode = (int)$this->param['areaCode'];
            $platform = $this->param['platform'];  //平台，主要用于区分APP端
            $phone = $this->param['phone'];
            $vercode = $this->param['code'];
            $deviceTitle = $this->param['deviceTitle'];
            $deviceType = $this->param['deviceType'];
            $deviceSerial = $this->param['deviceSerial'];
            $deviceSerial = str_replace('-', '_', $deviceSerial);

            //修复苹果端APP问题，areaCode和code数据传错（先勾选同意隐私政策，再点登录才会触发）
            //如果areaCode是6位数，说明是code数据传错了，把code数据赋值给areaCode
            if(isIOSApp() && strlen($areaCode) == 6){
                $vercode = $areaCode;
                $areaCode = (int)$this->param['code'];
            }

            $path = $this->param['path'];  //小程序端自定义登录成功后的跳转路径

            // $areaCode = $areaCode == '86' ? '' : $areaCode;  //不注释会导致国际短信验证失败

            if ($phone == '') {
                return array('state' => 200, 'info' => self::$langData['siteConfig'][20][463]); //请输入手机号码
            }

            //国际版需要验证区域码
            $cphone_ = $phone;
            $archives = $dsql->SetQuery("SELECT `international` FROM `#@__sitesms` WHERE `state` = 1");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results) {
                $international = $results[0]['international'];
                if ($international) {
                    $cphone_ = $areaCode . $phone;
                }
            }

            //判断验证码
            $sql_code = $dsql->SetQuery("SELECT * FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'sms_login' AND `ip` = '$ip' AND `user` = '$cphone_' ORDER BY `id` DESC LIMIT 1");
            $res_code = $dsql->dsqlOper($sql_code, "results");
            if ($res_code) {
                $code = $res_code[0]['code'];
                if (strtolower($vercode) != $code) {
                    return array('state' => 200, 'info' => self::$langData['siteConfig'][21][222]); //验证码输入错误，请重试！
                }
            } else {
                return array('state' => 200, 'info' => self::$langData['siteConfig'][21][222]); //验证码输入错误，请重试！
            }

            $isNewMember = 0;
            //判断是否是新用户
            $sql_mem = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND `phone` = '$phone'");
            $res_mem = $dsql->dsqlOper($sql_mem, "results");

            $sql_mem_ = $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `username` = '$phone'");
            $res_mem_ = $dsql->dsqlOper($sql_mem_, "results");

            //苹果新版本不再传设备信息，为了使用推送功能，这里需要记录苹果设备
            $isIOSApp = isIOSApp() && !isAndroidApp();
            $deviceTitle = $isIOSApp ? 'iphone' : $deviceTitle;
            $deviceType = $isIOSApp ? 'iphone' : $deviceType;
            $deviceSerial = $isIOSApp ? 'iphone' : $deviceSerial;

            $sourceArr = array(
                "title" => $deviceTitle,
                "type"  => $deviceType,
                "serial" => $deviceSerial,
                "pudate" => time()
            );

            //当手机号和用户名都不存在时才是新会员
            if (!$res_mem && !$res_mem_) {

                //限制注册
                global $cfg_regstatus;
                global $cfg_regclosemessage;
                if ($cfg_regstatus == 0) {
                    return array("state" => 200, "info" => $cfg_regclosemessage);
                }

                $isNewMember = 1;
                //新用户手机注册
                //提供初始密码
                $passwdInit = '';
                $passwd = $userLogin->_getSaltedHash($passwdInit);
                $areaCode = 86;
                $mtype = 1;
                $times = time();
                //记录当前设备s
                if (!empty($deviceTitle) && !empty($deviceSerial) && !empty($deviceType)) {
                    $sourceclient[] = $sourceArr;
                    $sourceclient   = serialize($sourceclient);
                }
                //记录当前设备e
                //保存到主表
                // $nickname = preg_replace('/(1[34578]{1}[0-9])[0-9]{4}([0-9]{4})/is',"$1****$2", $phone);
                $nickname = substr($phone, 0, 3) . '****' . substr($phone, -4);
                $regfrom = getCurrentTerminal();

                //安全考虑，默认密码不设置，以备修改密码时不需要输入原密码 2021.07.08
                $archives = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `areaCode`, `phone`, `phoneCheck`, `regtime`, `regip`, `regipaddr`, `state`, `purviews`, `sourceclient`, `regfrom`)
VALUES ('$mtype', '$phone', '', '$nickname', '$areaCode', '$phone', '1', '$times', '$ip', '$ipaddr', '1', '', '$sourceclient', '$regfrom')");
                $aid = $dsql->dsqlOper($archives, "lastid");

                if (is_numeric($aid)) {
                    $userLogin->registGiving($aid);

                    //论坛同步，短信注册没有初始密码，不需要同步登录功能
                    // global $cfg_bbsState;
                    // global $cfg_bbsType;
                    // if($cfg_bbsState == 1 && $cfg_bbsType != "" && !isMobile()){
                    //     $chcode = strtolower(create_check_code(8));
                    //     $data['username'] = $phone;
                    //     $data['password'] = $passwd;
                    //     $data['email']    = $chcode."@qq.com";
                    //     $userLogin->bbsSync($data, "register");
                    // }

                } else {
                    return array('state' => 200, 'info' => self::$langData['siteConfig'][21][235]); //注册失败，请稍候重试！
                }
            }
            // $archives = $dsql->SetQuery("SELECT * FROM `#@__failedlogin` WHERE `ip` = '$ip'");
            // $results = $dsql->dsqlOper($archives, "results");

            // //登录前验证
            // if($results){
            //     $count = $results[0]['count'];
            //     $timedifference = GetMkTime(time()) - $results[0]['date'];
            //     if($timedifference/60 < $loginTimes && $count >= $loginCount && $loginCount > 0 && $loginTimes > 0){
            //         return array('state'=>200, 'info' => self::$langData['siteConfig'][21][223]);//您错误的次数太多，请1分钟后重试！
            //         die;
            //     }
            // }

            if ($isNewMember) {
                //新用户登录
                $newUser =  $dsql->SetQuery("SELECT * FROM `#@__member` WHERE `id` = '$aid'");
                $newUserRes =  $dsql->dsqlOper($newUser, "results");
                $res = $userLogin->memberLoginCheckForSmsCode($newUserRes[0]);
            } else {
                $res = $userLogin->memberLoginCheckForSmsCode($res_mem ? $res_mem[0] : ($res_mem_ ? $res_mem_[0] : array()));
            }

            //登录成功
            if ($res == 1) {

                //删除已验证过的验证码
                $sql_code = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'sms_login' AND `ip` = '$ip' AND `user` = '$cphone_' AND `code` = '$vercode'");
                $dsql->dsqlOper($sql_code, "update");

                $userid = $userLogin->getMemberID();

                //记录当前设备s
                $client = $res_mem ? $res_mem[0] : ($res_mem_ ? $res_mem_[0] : array());
                if ($client['sourceclient']) {
                    $sourceclientAll = unserialize($client['sourceclient']);
                }
                $sourceclients = array();
                if (!empty($deviceTitle) && !empty($deviceSerial) && !empty($deviceType)) {
                    if (!empty($sourceclientAll)) {
                        $sourceclients = $sourceclientAll;
                        //$foundTitle  = array_search($deviceTitle, array_column($sourceclientAll, 'title'));
                        $foundSerial = array_search($deviceSerial, array_column($sourceclientAll, 'serial'));
                        //$foundType   = array_search($deviceType, array_column($sourceclientAll, 'type'));
                        if ($foundSerial) {
                            //如果已有，更新时间，以Serial为准
                            $sourceclients[$foundSerial]['pudate'] = time();
                        } else {
                            array_push($sourceclients, $sourceArr);
                        }
                    } else {
                        $sourceclients[] = $sourceArr;
                    }
                    $sourceclients = serialize($sourceclients);

                    $where_ = "`sourceclient` = '$sourceclients',";
                }
                //记录当前设备e

                //APP端和小程序端需要创建令牌
                $tokenField = $access_token = $refresh_token = "";

                $createApiTokenByPlatform = createApiTokenByPlatform($userid, $path);
                $access_token = $createApiTokenByPlatform['access_token'];
                $refresh_token = $createApiTokenByPlatform['refresh_token'];
                if($access_token && $refresh_token){
                    $_platform = '';
                    if(isApp() || isWxMiniprogram() || isByteMiniprogram()){
                        $_platform = getCurrentTerminal();
                    }
                    $tokenField = ", `access_token_".$_platform."` = '" . urldecode($access_token) . "', `refresh_token_".$_platform."` = '" . urldecode($refresh_token) . "'";
                }

                $archives = $dsql->SetQuery("UPDATE `#@__member` SET $where_ `logincount` = `logincount` + 1, `lastlogintime` = " . GetMkTime(time()) . ", `lastloginip` = '" . $ip . "', `lastloginipaddr` = '" . $ipaddr . "', `online` = '" . GetMkTime(time()) . "' " . $tokenField . " WHERE `id` = " . $userid);
                $dsql->dsqlOper($archives, "update");

                $loginPlatform = '电脑端(短信)';
                if (isApp()) {
                    $loginPlatform = (isAndroidApp() ? '安卓' : (isIOSApp() ? '苹果' : (isHarmonyApp() ? '鸿蒙' : '未知'))) . 'APP(短信)';
                } elseif ($path || isWxMiniprogram()) {
                    $loginPlatform = '微信小程序(短信)';
                } elseif (isMobile()) {
                    if (isWeixin()) {
                        $loginPlatform = '微信公众号(短信)';
                    } else {
                        $loginPlatform = 'H5(短信)';
                    }
                }

                //保存到主表
                $useragent = $_SERVER['HTTP_USER_AGENT'];
                $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$userid', '" . GetMkTime(time()) . "', '$_ip', '$ipaddr', '$loginPlatform', '$useragent')");
                $dsql->dsqlOper($archives, "update");

                //记录用户行为日志
                memberLog($userid, 'member', '', 0, 'insert', '用户登录(' . $loginPlatform . ')', '', $archives);

                $userinfo = $userLogin->getMemberInfo();

                if ($isNewMember) {
                    $userinfo['isNew'] = 1;
                }

                $userinfo['access_token'] = $access_token;
                $userinfo['refresh_token'] = $refresh_token;

                if ($platform == 'app') {
                    die(json_encode(array(
                        'state' => 100,
                        'passport' => $userinfo['userid'],
                        'username' => $userinfo['username'],
                        'nickname' => $userinfo['nickname'],
                        'userid_encode' => $userinfo['userid_encode'],
                        'cookiePre' => $userinfo['cookiePre'],
                        'photo' => $userinfo['photo'],
                        'dating_uid' => $userinfo['dating_uid'],
                        'access_token' => $access_token,
                        'refresh_token' => $refresh_token,
                    )));

                    //小程序
                } elseif ($path || isWxMiniprogram() || isByteMiniprogram()) {
                    global $cfg_secureAccess;
                    global $cfg_basehost;

                    //查询用户的unionid/openid/field_session/phone
                    $sql = $dsql->SetQuery("SELECT `wechat_conn`, `wechat_mini_openid`, `wechat_mini_session`, `phone` FROM `#@__member` WHERE `id` = " . $userid);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if(!$ret){
                        echo "202|用户信息查询失败！";die;
                    }

                    $data = array(
                        0 => $ret[0]['wechat_conn'],
                        1 => $ret[0]['wechat_mini_openid'],
                        2 => $ret[0]['wechat_mini_session'],
                        3 => $ret[0]['phone'],
                    );

                    //返回unionid、openid、session_key的加密信息，以供系统登录
                    $RenrenCrypt = new RenrenCrypt();
                    $key = base64_encode($RenrenCrypt->php_encrypt(join("@@@@", $data)));

                    //如果path是http地址
                    $url = '';
                    if(strstr($path, 'http')){
                        $url = $path;
                        $path = '';
                    }

                    //如果路径为空，取来源页面
                    if(!$path && !$url){
                        $url = $_SERVER['HTTP_REFERER'];
                    }

                    return $cfg_secureAccess . $cfg_basehost . '/?action=wxMiniProgramLogin&key=' . $key . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&uid=' . $userid . '&path=' . $path . '&redirect=' . urlencode(preg_replace("/forcelogout/", 'loginsuccess', $url));
                    
                    // return $cfg_secureAccess . $cfg_basehost . '/include/json.php?action=wxMiniProgramLogin&uid=' . $userid . '&access_token=' . $access_token . '&refresh_token=' . $refresh_token . '&path=' . $path;
                } else {
                    return $userinfo;
                }
                // if($isNewMember){
                //     return $passwdInit;
                // }else{
                //     return 'success';
                // }
            }else{
                return array('state' => 200, 'info' => $res);
            }
        }
    }

    /**
     * 发布评价
     */
    public function sendComment()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $siteCityInfo;
        global $cfg_pointName;
        global $cfg_returnInteraction_commentDay;  //评论一天内上限积分
        global $cfg_returnInteraction_comment;  //评论返积分数量

        global $cfg_disableCommentState;  //是否禁止评论
        global $cfg_disableCommentInfo;  //禁止评论提示语
        $cfg_disableCommentState = (int)$cfg_disableCommentState;
        $cfg_disableCommentInfo = $cfg_disableCommentInfo ? $cfg_disableCommentInfo : '功能维护中，暂停使用！';

        if ($cfg_disableCommentState) {
            return array("state" => 200, "info" => $cfg_disableCommentInfo);
        }

        $returnPoint = 0;

        $userid = $userLogin->getMemberID();

        if ($userid == -1) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        $userinfo = $userLogin->getMemberInfo($userid);

        //实名认证
        global $cfg_memberVerified;
        global $cfg_memberVerifiedInfo;
        if ($cfg_memberVerified && (($userinfo['userType'] == 1 && $userinfo['certifyState'] != 1) || ($userinfo['userType'] == 2 && $userinfo['licenseState'] != 1))) {
            return array("state" => 201, "info" => $cfg_memberVerifiedInfo);
        }

        // 手机认证
        global $cfg_memberBindPhone;
        global $cfg_memberBindPhoneInfo;
        global $cfg_periodicCheckPhone;
        global $cfg_periodicCheckPhoneCycle;
        $periodicCheckPhone = (int)$cfg_periodicCheckPhone;
        $periodicCheckPhoneCycle = (int)$cfg_periodicCheckPhoneCycle * 86400;  //天
        if ($cfg_memberBindPhone && (!$userinfo['phone'] || !$userinfo['phoneCheck'] || ($periodicCheckPhone && $userinfo['phoneBindTime'] && time() - $userinfo['phoneBindTime'] > $periodicCheckPhoneCycle))) {
            return array("state" => 202, "info" => $periodicCheckPhone && $userinfo['phoneBindTime'] && time() - $userinfo['phoneBindTime'] > $periodicCheckPhoneCycle ? '请先验证手机号码' : $cfg_memberBindPhoneInfo);
        }

        $param   = $this->param;
        // echo "<pre>";
        //          var_dump($param);die;
        $type    = $param['type'];
        $check   = $param['check']; //是否ajax输出内容
        $pid     = (int)$param['pid'];
        $aid     = (int)$param['aid'];
        $oid     = (int)$param['oid'];
        $rating  = $type == 'shop-order' ? $param['rating'] : (int)$param['rating'];
        $sco1    = $type == 'shop-order' ? $param['sco1'] : (int)$param['sco1'];
        $sco2    = $type == 'shop-order' ? $param['sco2'] : (int)$param['sco2'];
        $sco3    = $type == 'shop-order' ? $param['sco3'] : (int)$param['sco3'];
        $content = $type == 'shop-order' ? $param['content'] : filterSensitiveWords(addslashes($param['content']));
        $content = $type == 'shop-order' ? $content : trim(str_replace('&nbsp;', '', $content));  //去除空格
        $content = $type == 'circle-dynamic' ? strip_tags($content) : $content;  //去除html
        $audio   = $param['audio'];
        $pics    = $param['pics'];
        $video   = $param['video'];
        //外卖
        $peisongid = (int)$param['peisongid'];
        $star     = (int)$param['star'];
        $starps   = (int)$param['starps'];
        $contentps = $param['contentps'];
        $reply    = $param['reply'];
        $isanony  = (int)$param['isanony'];
        $vdimgck  = filterSensitiveWords($param['vdimgck']);
        $ip     = GetIP();
        $ipaddr = getIpAddr($ip);
        $dtime  = GetMkTime(time());
        $replydate = GetMkTime(time());

        if ($type == 'paotui-order' || $type == 'waimai-order') {
            $module = 'waimai';
        } else {
            $typeArr = explode('-', $type);
            $module  = $typeArr[0];
        }
        include HUONIAOINC . "/config/" . $module . ".inc.php";
        $ischeck = (int)$customCommentCheck;

        if (empty($type) || empty($aid)) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        }

        if (empty($content)) {
            return array("state" => 200, "info" => "评价内容为空");
        }

        /*评论相关使用*/
        $cityName = $siteCityInfo['name'];
        $cityid   = $siteCityInfo['cityid'];

        $modulenamearr = explode('-', $type);
        $noticemodule  = $modulenamearr ? $modulenamearr[0] :  '';
        $noticemodulename = getModuleTitle(array('name' => $noticemodule));
        $part          = $modulenamearr[1] ? $modulenamearr[1] :  '';
        $statename     = $ischeck == 0  ?  ',等待审核' : '';

        // if(empty($rating)) return array("state" => 200, "info" => "请选择总体满意度");
        if (($type != 'quanjing-detail' && $type != 'homemaking-order' && $type != 'info-detail' && $type != 'info-business' && $type != 'travel-ticket' && $type != 'travel-video' && $type != 'travel-strategy' && $type != 'travel-hotel' && $type != 'travel-visa' && $type != 'travel-agency' && $type != 'marry-store' && $type != 'marry-rental' && !strstr($type, 'marry-') && $type != 'article-detail' && $type != 'waimai-order' && $type != 'paotui-order' && $type != 'video-detail' && $type != 'tieba-detail' && $type != 'circle-dynamic' && $type != 'huodong-detai') && empty($sco1)) return array("state" => 200, "info" => self::$langData['siteConfig'][19][334]);
        //请选择评分

        if (!isMobile() && $type == 'tieba-detail') {
            $vdimgck = strtolower($vdimgck);
            if ($vdimgck != $_SESSION['huoniao_vdimg_value']) return array("state" => 200, "info" => '验证码输入错误');
        }

        // if(empty($content) && empty($audio) && empty($pics) && empty($video)){
        //  return array("state" => 200, "info" => "评价内容为空");
        // }

        if ($type == 'waimai-order') {
            if (empty($star)) return array("state" => 200, "info" => '请给店铺打分！');
            if (empty($starps)) return array("state" => 200, "info" => '请给配送员打分！');
        } elseif ($type == 'paitui-order') {
            if (empty($starps)) return array("state" => 200, "info" => '请给配送员打分！');
            $star = 0;
        } else {
            $star = 0;
        }

        $time = 0;
        //查询信息 获取原来的发布人ID
        $masterid = 0;
        if ($type == 'business') {
            $archives = $dsql->SetQuery("SELECT `uid` FROM `#@__business_list` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['uid'];
            }
        } elseif ($type == 'pension-store' && $module = 'pension') {
            $archives = $dsql->SetQuery("SELECT `userid` FROM `#@__" . $module . "_store` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['userid'];
            }
        } elseif ($type == 'info-business') {
            $archives = $dsql->SetQuery("SELECT `uid` FROM `#@__infoshop` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['uid'];
            }
        } elseif ($type == 'info-detail') {
            $archives = $dsql->SetQuery("SELECT `userid` FROM `#@__infolist` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['userid'];
            }
        } elseif ($type == 'huodong-detail') {
            $archives = $dsql->SetQuery("SELECT `uid` FROM `#@__huodong_list` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['uid'];
            }
        } elseif ($type == 'article-detail') {
            $archives = $dsql->SetQuery("SELECT `admin` FROM `#@__articlelist_all` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['admin'];
            }
        } elseif ($type == 'tieba-detail') {
            $archives = $dsql->SetQuery("SELECT `uid` FROM `#@__tieba_list` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['uid'];
            }
        } elseif ($type == 'video-detail') {
            $archives = $dsql->SetQuery("SELECT `writer` FROM `#@__videolist` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['writer'];
            }
        } elseif ($type == 'quanjing-detail') {
            $archives = $dsql->SetQuery("SELECT `admin` FROM `#@__quanjinglist` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['admin'];
            }
        } elseif ($type == 'marry-store') {
            $archives = $dsql->SetQuery("SELECT `userid` FROM `#@__marry_store` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['userid'];
            }
        } elseif ($type == 'marry-rental') {
            $archives = $dsql->SetQuery("SELECT `company` FROM `#@__marry_weddingcar` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $company = $results[0]['company'];
                $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__marry_store` WHERE `id` = '$company'");
                $res = $dsql->dsqlOper($sql, "results");
                if ($res && is_array($res)) {
                    $masterid = $res[0]['userid'];
                }
            }
        } elseif ($type == 'travel-store') {
            $archives = $dsql->SetQuery("SELECT `userid` FROM `#@__travel_store` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['userid'];
            }
        } elseif ($type == 'travel-ticket') {
            $archives = $dsql->SetQuery("SELECT `company` FROM `#@__travel_ticket` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $company = $results[0]['company'];
                $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__travel_store` WHERE `id` = '$company'");
                $res = $dsql->dsqlOper($sql, "results");
                if ($res && is_array($res)) {
                    $masterid = $res[0]['userid'];
                }
            }
        } elseif ($type == 'travel-video') {
            $archives = $dsql->SetQuery("SELECT `usertype`, `userid` FROM `#@__travel_video` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                if ($results[0]['usertype'] == 1) {
                    $company = $results[0]['userid'];
                    $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__travel_store` WHERE `id` = '$company'");
                    $res = $dsql->dsqlOper($sql, "results");
                    if ($res && is_array($res)) {
                        $masterid = $res[0]['userid'];
                    }
                } else {
                    $masterid = $results[0]['userid'];
                }
            }
        } elseif ($type == 'travel-strategy') {
            $archives = $dsql->SetQuery("SELECT `usertype`, `userid` FROM `#@__travel_strategy` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                if ($results[0]['usertype'] == 1) {
                    $company = $results[0]['userid'];
                    $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__travel_store` WHERE `id` = '$company'");
                    $res = $dsql->dsqlOper($sql, "results");
                    if ($res && is_array($res)) {
                        $masterid = $res[0]['userid'];
                    }
                } else {
                    $masterid = $results[0]['userid'];
                }
            }
        } elseif ($type == 'travel-visa') {
            $archives = $dsql->SetQuery("SELECT `company` FROM `#@__travel_visa` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $company = $results[0]['company'];
                $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__travel_store` WHERE `id` = '$company'");
                $res = $dsql->dsqlOper($sql, "results");
                if ($res && is_array($res)) {
                    $masterid = $res[0]['userid'];
                }
            }
        } elseif ($type == 'travel-agency') {
            $archives = $dsql->SetQuery("SELECT `company` FROM `#@__travel_agency` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $company = $results[0]['company'];
                $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__travel_store` WHERE `id` = '$company'");
                $res = $dsql->dsqlOper($sql, "results");
                if ($res && is_array($res)) {
                    $masterid = $res[0]['userid'];
                }
            }
        } elseif ($type == 'travel-hotel') {
            $archives = $dsql->SetQuery("SELECT `usertype`, `userid` FROM `#@__travel_video` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                if ($results[0]['usertype'] == 1) {
                    $company = $results[0]['userid'];
                    $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__travel_store` WHERE `id` = '$company'");
                    $res = $dsql->dsqlOper($sql, "results");
                    if ($res && is_array($res)) {
                        $masterid = $res[0]['userid'];
                    }
                } else {
                    $masterid = $results[0]['userid'];
                }
            }
        } elseif ($type == 'tuan-store') {

            if (empty($content) || strlen($content) < 15) return array("state" => 200, "info" => '请输入评价内容，最少15个字！');

            $sql = $dsql->SetQuery("SELECT `id`, `uid` FROM `#@__tuan_store` WHERE `id` = '$aid'");
            $res = $dsql->dsqlOper($sql, "results");
            if (empty($res)) {
                return array("state" => 200, "info" => '商家不存在，评价失败！');
            } else {
                $masterid = $res[0]['uid'];
                if ($res[0]['uid'] == $userid) return array("state" => 200, "info" => '自家店铺不能评论！');
            }
        } elseif ($type == 'tuan-order') {
            $sql = $dsql->SetQuery("SELECT `userid`, `orderstate`, `proid`, `id` FROM `#@__tuan_order` WHERE `id` = '$aid'");
            $order = $dsql->dsqlOper($sql, "results");
            if ($order) {
                $oid = $order[0]['id'];
                $aid = $order[0]['proid'];

                $archives = $dsql->SetQuery("SELECT `sid` FROM `#@__tuanlist` WHERE `id` = '$aid'");
                $results = $dsql->dsqlOper($archives, "results");
                if ($results && is_array($results)) {
                    $sid = $results[0]['sid'];
                    $sql = $dsql->SetQuery("SELECT `id`, `uid` FROM `#@__tuan_store` WHERE `id` = '$sid'");
                    $res = $dsql->dsqlOper($sql, "results");
                    if ($res && is_array($res)) {
                        $masterid = $res[0]['uid'];
                    }
                }

                if ($order[0]['userid'] != $userid) return array("state" => 200, "info" => '验证账户权限失败，请使用购买过此商品的账号登录后再评价！');
                if ($order[0]['orderstate'] != 3) return array("state" => 200, "info" => '订单当前状态不可评价，请使用后再评价！');
            } else {
                return array("state" => 200, "info" => '订单不存在，评价失败！');
            }
        } elseif ($type == 'shop-order') {
            $orderHandels = new handlers("shop", "orderDetail");
            $order        = $orderHandels->getHandle($aid);
            if (is_array($order) && $order['state'] == 100) {
                $order  = $order['info'];

                $_rating = $rating;
                $_sco1 = $sco1;
                $_sco2 = $sco2;
                $_sco3 = $sco3;
                $_content = $content;
                $_pics = $pics;

                if ($order['userid'] != $userid) return array("state" => 200, "info" => '验证账户权限失败，请使用购买过此商品的账号登录后再评价！');
                if ($order['orderstate'] != 3) return array("state" => 200, "info" => '订单当前状态不可评价，请使用后再评价！');

                foreach ($order['product'] as $key => $value) {

                    $pid   = $value['id'];
                    $proid = $value['proid'];
                    $orderid = $value['orderid'];
                    $speid = $value['speid'];
                    $specation = $value['specation'];
                    $rating  = $_rating[$pid . "_" . $speid];
                    $sco1 = $_sco1[$pid . "_" . $speid];
                    $sco2 = $_sco2[$pid . "_" . $speid];
                    $sco3 = $_sco3[$pid . "_" . $speid];
                    $content  = $_content[$pid . "_" . $speid];
                    $pics   = $_pics[$pid . "_" . $speid];

                    $content = filterSensitiveWords(addslashes($content));
                    $content = trim(str_replace('&nbsp;', '', $content));

                    if (empty($rating)) return array("state" => 200, "info" => $langData['shop'][4][29]);  //请选择商品评价！
                    if (empty($sco1)) return array("state" => 200, "info" => $langData['shop'][4][30]);  //请给商品描述打分
                    if (empty($sco2)) return array("state" => 200, "info" => $langData['shop'][4][31]);  //请给商家服务打分
                    if (empty($sco3)) return array("state" => 200, "info" => $langData['shop'][4][32]);  //请给商品质量打分
                    if (empty($content)) return array("state" => 200, "info" => $langData['shop'][4][33]);  //请输入评价内容！

                    $archives = $dsql->SetQuery("SELECT `store` FROM `#@__shop_product` WHERE `id` = '$proid'");
                    $results = $dsql->dsqlOper($archives, "results");
                    if ($results && is_array($results)) {
                        $store = $results[0]['store'];
                        $sql = $dsql->SetQuery("SELECT `id`, `userid` FROM `#@__shop_store` WHERE `id` = '$store'");
                        $res = $dsql->dsqlOper($sql, "results");
                        if ($res && is_array($res)) {
                            $masterid = $results[0]['userid'];
                        }
                    }
                    //修改
                    if ($order['common'] == 1) {
                        $sql = $dsql->SetQuery("UPDATE `#@__public_comment_all` SET `masterid` = '$masterid', `ischeck` = '$ischeck', `ipaddr` = '$ipaddr', `ip` = '$ip', `dtime` = '$dtime', `content` = '$content', `pics` = '$pics', `sco3` = '$sco3', `sco2` = '$sco2', `sco1` = '$sco1', `rating` = '$rating', `isanony` = '$isanony' WHERE `oid` = '$orderid'");
                        $results  = $dsql->dsqlOper($sql, "update");

                        //记录用户行为日志
                        memberLog($userid, 'member', 'comment', 0, 'update', '修改评价(shop=>' . $orderid . ')', '', $sql);

                        //新增
                    } else {
                        $masterid = (int)$masterid;
                        $sql = $dsql->SetQuery("INSERT INTO `#@__public_comment_all` (`pid`, `type`, `aid`, `oid`, `userid`, `rating`, `sco1`, `content`, `pics`, `audio`, `video`, `dtime`, `ip`, `ipaddr`, `ischeck`, `zan`, `zan_user`, `sco2`, `sco3`, `speid`, `specation`, `masterid`, `isanony`) VALUES ('0', '$type', '$proid', '$orderid', '$userid', '$rating', '$sco1', '$content', '$pics', '$audio', '$video', '$dtime', '$ip', '$ipaddr', '$ischeck', '0', '', '$sco2', '$sco3', '$speid', '$specation', '$masterid', '$isanony')");
                        $aid = $dsql->dsqlOper($sql, "lastid", null, "public_comment");

                        //记录用户行为日志
                        memberLog($userid, 'member', 'comment', $aid, 'insert', '发表评价(shop=>' . $orderid . ')', '', $sql);
                    }
                    /*前台用户通知*/
                    $config = array(
                        "title" => "评论通知",
                        "content" => "用户：" . $userinfo['nickname'] . "商城订单评论!",
                        "date" => date("Y-m-d H:i:s", time())
                    );
                    updateMemberNotice($order['store']['userid'], "会员-消息提醒", $param, $config, "");


                    /*后台管理员通知审核*/
                    $param = array(
                        'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                        'cityid' => $cityid,
                        'notify' => '管理员消息通知',
                        'fields' => array(
                            'contentrn'  => $cityName . "分站\r\n" . $noticemodulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n发布了一条评论" . $statename,
                            'date' => date("Y-m-d H:i:s", time()),
                        )
                    );
                    updateAdminNotice($noticemodule, $part, $param);
                }

                $countIntegral = countIntegral($userid);
                if ($countIntegral < $cfg_returnInteraction_commentDay && $cfg_returnInteraction_comment > 0) {

                    $returnPoint = $cfg_returnInteraction_comment;

                    $date = GetMkTime(time());
                    //增加积分
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$cfg_returnInteraction_comment' WHERE `id` = '$userid'");
                    $dsql->dsqlOper($archives, "update");

                    $user  = $userLogin->getMemberInfo($userid);
                    $userpoint = $user['point'];

                    //保存操作日志
                    $info = '发表评论';
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`interaction`,`balance`) VALUES ('$userid', '1', '$cfg_returnInteraction_comment', '$info', '$date','zengsong','1','$userpoint')"); //评论得积分
                    $dsql->dsqlOper($archives, "update");

                    $param = array(
                        "service"  => "member",
                        "type"     => "user",
                        "template" => "point"
                    );

                    //自定义配置
                    $config = array(
                        "username" => $userinfo['nickname'],
                        "amount" => $cfg_returnInteraction_comment,
                        "point" => $userinfo['point'],
                        "date" => date("Y-m-d H:i:s", $date),
                        "info" => $info,
                        "fields" => array(
                            'keyword1' => '变动类型',
                            'keyword2' => '变动' . $cfg_pointName,
                            'keyword3' => '变动时间',
                            'keyword4' => $cfg_pointName . '余额'
                        )
                    );
                    updateMemberNotice($userid, "会员-积分变动通知", $param, $config);
                }

                $archives = $dsql->SetQuery("UPDATE `#@__shop_order` SET `common` = 1 WHERE `id` = '$orderid'");
                $dsql->dsqlOper($archives, "update");

                //  if(isAndroidApp()){
                //     return array(
                //         'message' => $langData['siteConfig'][20][196],
                //         'returnPoint' => $returnPoint,
                //         'pointName' => $cfg_pointName
                //     );
                //  }else{
                return $langData['siteConfig'][20][196];  //评价成功！
                //  }

            } else {
                return array("state" => 200, "info" => '订单不存在，评价失败！');
            }
        } elseif ($type == 'homemaking-order') {

            $orderHandels = new handlers("homemaking", "orderDetail");
            $order        = $orderHandels->getHandle($pid);
            if (is_array($order) && $order['state'] == 100) {
                $order  = $order['info'];
                if ($order['userid'] != $userid) return array("state" => 200, "info" => '验证账户权限失败，请使用购买过此商品的账号登录后再评价！');
                if ($order['orderstate'] != 11 && $order['orderstate'] != 12) return array("state" => 200, "info" => '订单当前状态不可评价，请使用后再评价！');
                $userid = $order['userid'];
                $proid = $order['store']['id'];
                //修改
                if ($order['common'] == 1) {
                    $sql = $dsql->SetQuery("UPDATE `#@__public_comment_all` SET `masterid` = '$masterid', `ischeck` = '$ischeck', `ipaddr` = '$ipaddr', `ip` = '$ip', `dtime` = '$dtime', `content` = '$content', `pics` = '', `sco3` = '$sco3', `sco2` = '$sco2', `sco1` = '$sco1', `rating` = '$rating' WHERE `oid` = '$pid'");
                    // var_dump($sql);die;
                    $results  = $dsql->dsqlOper($sql, "update");

                    //记录用户行为日志
                    memberLog($userid, 'member', 'comment', 0, 'update', '修改评价(homemaking=>' . $pid . ')', '', $sql);

                    //新增
                } else {
                    $sql = $dsql->SetQuery("INSERT INTO `#@__public_comment_all` (`pid`, `type`, `aid`, `oid`, `userid`, `rating`, `sco1`, `content`, `pics`, `audio`, `video`, `dtime`, `ip`, `ipaddr`, `ischeck`, `zan`, `zan_user`, `sco2`, `sco3`, `speid`, `specation`, `masterid`) VALUES ('0', '$type', '$aid', '$pid', '$userid', '$rating', '$sco1', '$content', '$pics', '$audio', '$video', '$dtime', '$ip', '$ipaddr', '$ischeck', '0', '', '$sco2', '$sco3', '0', '0', '$masterid')");
                    // var_dump($sql);die;
                    $aid = $dsql->dsqlOper($sql, "lastid", null, "public_comment");

                    //记录用户行为日志
                    memberLog($userid, 'member', 'comment', $aid, 'update', '发表评价(homemaking=>' . $pid . ')', '', $sql);
                }

                /*前台用户通知*/
                $config = array(
                    "title" => "评论通知",
                    "content" => "用户：" . $userinfo['nickname'] . "家政订单评论!",
                    "date" => date("Y-m-d H:i:s", time())
                );
                updateMemberNotice($order['store']['userid'], "会员-消息提醒", $param, $config, "");


                /*后台管理员通知审核*/
                $param = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $cityName . "分站\r\n" . $noticemodulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n发布了一条评论" . $statename,
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice($noticemodule, $part, $param);
                $archives = $dsql->SetQuery("UPDATE `#@__homemaking_order` SET `orderstate` = 12,`common` = 1  WHERE `id` = '$aid'");
                $dsql->dsqlOper($archives, "update");
                return $langData['siteConfig'][20][196];
            } else {
                return array("state" => 200, "info" => '订单不存在，评价失败！');
            }
        } elseif ($type == 'waimai-order') {
            //外卖分表
            $sub = new SubTable('waimai_order', '#@__waimai_order');
            $break_table = $sub->getSubTableById($aid);

            $sql = $dsql->SetQuery("SELECT `id`, `sid`, `iscomment`, `uid`, `peisongid`, `paydate`, `okdate` FROM `" . $break_table . "` WHERE `id` = $aid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $aid       = $ret[0]['sid']; //商铺
                $oid       = $ret[0]['id']; //订单
                $peisongid = $ret[0]['peisongid'];
                $paydate   = $ret[0]['paydate'];
                $okdate    = $ret[0]['okdate'];
                $time      = ceil(($okdate - $paydate) / 60);
                $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__waimai_store` WHERE `id` = " . $ret[0]['sid']);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $masterid  = $ret[0]['userid'];
                }
            } else {
                return array("state" => 200, "info" => '订单不存在！');
            }
        } elseif ($type == 'paotui-order') {

            $sql = $dsql->SetQuery("SELECT `id`, `iscomment`, `peisongid`, `paydate`, `okdate` FROM `#@__paotui_order` WHERE `id` = $aid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $peisongid = $ret[0]['peisongid'];
                $oid       = $ret[0]['id']; //订单
                $aid       = 0;
                $peisongid = $ret[0]['peisongid'];
                $paydate   = $ret[0]['paydate'];
                $okdate    = $ret[0]['okdate'];
                $time      = ceil(($okdate - $paydate) / 60);
            } else {
                return array("state" => 200, "info" => '订单不存在！');
            }
        } elseif ($type == 'circle-dynamic') {
            $archives = $dsql->SetQuery("SELECT `userid` FROM `#@__circle_dynamic` WHERE `id` = '$aid'");
            $results = $dsql->dsqlOper($archives, "results");
            if ($results && is_array($results)) {
                $masterid = $results[0]['userid'];
            }
        }

        if ($aid && $pid) {
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `type` = '$type' AND `aid` = $aid AND `pid` = 0");
            $ret = $dsql->dsqlOper($sql, "results");
            if (!$ret) {
                $pid = 0;
            }
        }

        $type_ = explode('_', $type);
        $module = $type_[0];

        if (count($type_) == 2) {

            // 商品类验证订单并且只能评价一次，没有回复功能
            if ($type_[1] == "goods") {

                $pid = 0;

                if (empty($oid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误


                // 商城
                if ($module == "shop") {
                    $sql = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o LEFT JOIN `#@__shop_order_product` p ON p.`orderid` = o.`id` WHERE o.`id` = $oid AND o.`userid` = $userid AND p.`proid` = $aid");
                    $ret = $dsql->dsqlOper($sql, "results");


                    // 团购
                } elseif ($module == "tuan") {
                    $sql = $dsql->SetQuery("SELECT o.`id` FROM `#@__tuan_order` o WHERE o.`id` = $oid AND o.`userid` = $userid AND o.`proid` = $aid");
                } elseif ($module == "waimai") {
                    $sql = $dsql->SetQuery("SELECT o.`id` FROM `#@__waimai_order_all` o LEFT JOIN `#@__waimai_order_product` p ON p.`orderid` = o.`id` WHERE o.`id` = $oid AND o.`userid` = $userid AND p.`pid` = $aid");
                }
                if (!$ret) {
                    return array("state" => 200, "info" => "订单信息错误");
                }
                // 验证评价是否已存在
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `aid` = '$aid' AND `oid` = '$oid' AND `userid` = '$userid' AND `type` = '$type'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    return array("state" => 200, "info" => "您已经评价过该商品");
                }

                // 店铺类验证店铺是否存在
            } elseif ($type_[1] == "store") {
                $oid = 0;
            }
        }



        //查询评价信息 团购、外卖需要这一步，其他的不需要
        $commentid = 0;
        if ($type == 'tuan-order' || $type == 'waimai-order' || $type == 'paotui-order') {
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `type` = '$type' and `oid` = '$oid'");
            $res = $dsql->dsqlOper($sql, "results");
            $commentid = $res[0]['id'];
        }
        if ($commentid > 0 && !empty($oid)) {
            $sql = $dsql->SetQuery("UPDATE `#@__public_comment_all` SET `masterid` = '$masterid', `ischeck` = '$ischeck', `ipaddr` = '$ipaddr', `ip` = '$ip', `dtime` = '$dtime', `content` = '$content', `pics` = '$pics', `sco3` = '$sco3', `sco2` = '$sco2', `sco1` = '$sco1', `rating` = '$rating', `peisongid` = '$peisongid', `star` = '$star', `starps` = '$starps', `contentps` = '$contentps', `isanony` = '$isanony' WHERE `oid` = '$oid'");
            $results  = $dsql->dsqlOper($sql, "update");
            if ($results == "ok") {

                //记录用户行为日志
                memberLog($userid, 'member', 'comment', 0, 'update', '修改评价(' . $type . '=>' . $oid . ')', '', $sql);

                $ret = $commentid;
            } else {
                $ret = null;
            }
        } else {
            // 取得评论分表表名
            $sql = $dsql->SetQuery("INSERT INTO `#@__public_comment_all` (`masterid`, `pid`, `type`, `aid`, `oid`, `userid`, `rating`, `sco1`, `content`, `pics`, `audio`, `video`, `dtime`, `ip`, `ipaddr`, `ischeck`, `zan`, `zan_user`, `sco2`, `sco3`, `speid`, `specation`, `peisongid`, `star`, `starps`, `contentps`, `isanony`, `time`) VALUES ('$masterid', '$pid', '$type', '$aid', '$oid', '$userid', '$rating', '$sco1', '$content', '$pics', '$audio', '$video', '$dtime', '$ip', '$ipaddr', '$ischeck', '0', '', '$sco2', '$sco3', '$speid', '$specation', '$peisongid', '$star', '$starps', '$contentps', '$isanony', '$time')");
            $ret = $dsql->dsqlOper($sql, "lastid", null, "public_comment");
            if ($ischeck == 1 &&  $type == 'tieba-detail') {
                $increasetieba = $dsql->SetQuery("UPDATE `#@__tieba_list` SET `comment` = `comment` +1 WHERE `id` = '$aid'  ");
                $dsql->dsqlOper($increasetieba, "update");
                clearCache("tieba_detail", $aid);
                clearCache("tieba_list", "key");
            }

            //记录用户行为日志
            memberLog($userid, 'member', 'comment', 0, 'insert', '发表评价(' . $type . '=>' . $aid . '=>' . $content . ')', '', $sql);
        }

        $tid = $userid;
        if ($pid == 0) {
            $tid   =  $masterid;
        } else {
            $_sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = '$pid'");
            $_ret = $dsql->dsqlOper($_sql, "results");
            if ($_ret) {
                $tid   = $_ret[0]['userid'];
            }
        }

        if ($ischeck == 1) {
            /*前台用户通知*/
            $template = 'detail';
            $service  = $module;
            $modulearr = explode('-', $module);
            if (count($modulearr) == 2) {
                $service  = $modulearr[0];
                $template = $modulearr[1];

                if ($service == 'circle' && $template == 'dynamic') {
                    $template = 'blog_detail';
                }

                if ($service == 'marry' || $service == 'pension') {
                    $template .= "-detail";
                }

                if ($service == 'tuan' && $template == 'order') {
                    $template = 'detail';
                }
            }
            $param = array(
                "service"  => $service,
                "template" => $template,
                "id"       => $aid
            );

            //自定义配置
            $config = array(
                "username" => $userinfo['nickname'],
                "noticetitle" => "您有一条新评论!",
                "title" =>  "用户：" . $userinfo['username'] . "评论了您!",
                "date" => date("Y-m-d H:i:s", time()),
                "fields" => array(
                    'keyword1' => '信息标题',
                    'keyword2' => '发布时间',
                    'keyword3' => '进展状态'
                )
            );
            updateMemberNotice($tid, "会员-新评论通知", $param, $config);

            $countIntegral = countIntegral($userid);
            if ($countIntegral < $cfg_returnInteraction_commentDay && $cfg_returnInteraction_comment > 0) {

                $returnPoint = $cfg_returnInteraction_comment;

                $date = GetMkTime(time());
                //增加积分
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$cfg_returnInteraction_comment' WHERE `id` = '$userid'");
                $dsql->dsqlOper($archives, "update");

                $user  = $userLogin->getMemberInfo($userid);
                $userpoint = $user['point'];

                //保存操作日志
                $info = '发表评论';
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`interaction`,`balance`) VALUES ('$userid', '1', '$cfg_returnInteraction_comment', '$info', '$date','zengsong','1','$userpoint')"); //评论得积分
                $dsql->dsqlOper($archives, "update");

                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                    "template" => "point"
                );

                //自定义配置
                $config = array(
                    "username" => $userinfo['nickname'],
                    "amount" => $cfg_returnInteraction_comment,
                    "point" => $userinfo['point'],
                    "date" => date("Y-m-d H:i:s", $date),
                    "info" => $info,
                    "fields" => array(
                        'keyword1' => '变动类型',
                        'keyword2' => '变动' . $cfg_pointName,
                        'keyword3' => '变动时间',
                        'keyword4' => $cfg_pointName . '余额'
                    )
                );
                updateMemberNotice($userid, "会员-积分变动通知", $param, $config);
            }
        }

        /*后台管理员通知审核*/
        $param = array(
            'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
            'cityid' => $cityid,
            'notify' => '管理员消息通知',
            'fields' => array(
                'contentrn'  => $cityName . "分站\r\n" . $noticemodulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n发布了一条评论" . $statename,
                'date' => date("Y-m-d H:i:s", time()),
            )
        );
        updateAdminNotice($noticemodule, $part, $param);

        if (is_numeric($ret)) {
            if ($type == 'tuan-order') {
                $archives = $dsql->SetQuery("UPDATE `#@__tuan_order` SET `common` = 1 WHERE `id` = '$oid'");
                $dsql->dsqlOper($archives, "update");
            } elseif ($type == 'waimai-order') {
                //外卖分表
                $sub = new SubTable('waimai_order', '#@__waimai_order');
                $break_table = $sub->getSubTableById($oid);
                $sql = $dsql->SetQuery("UPDATE `" . $break_table . "` SET `iscomment` = 1 WHERE `id` = $oid");
                $dsql->dsqlOper($sql, "update");
            } elseif ($type == 'paotui-order') {
                $sql = $dsql->SetQuery("UPDATE `#@__paotui_order` SET `iscomment` = 1 WHERE `id` = $oid");
                $dsql->dsqlOper($sql, "update");
            }

            if ($check) {
                $archives = $dsql->SetQuery("SELECT `id`, `userid`, `content`, `dtime`, `ip`, `ipaddr`, `zan`, `zan_user`, `ischeck` FROM `#@__public_comment_all` WHERE `id` = " . $ret);
                $results  = $dsql->dsqlOper($archives, "results");
                if ($results) {
                    $list['id']       = (int)$results[0]['id'];
                    $list['userinfo'] = $userLogin->getMemberInfo($results[0]['userid']);
                    $list['content']  = $results[0]['content'];
                    $list['dtime']    = (int)$results[0]['dtime'];
                    $list['ftime']    = FloorTime(GetMkTime(time()) - $results[0]['dtime']);
                    $list['ip']       = $results[0]['ip'];
                    $list['ipaddr']   = $results[0]['ipaddr'];
                    $list['iphome']   = getIpHome($results[0]['ipaddr']);
                    $list['zan']      = (int)$results[0]['zan'];
                    $list['ischeck']  = (int)$results[0]['ischeck'];
                    $list['message']  = $ischeck == 1 ? self::$langData['siteConfig'][20][196] : '评论成功，将在审核后显示。';
                    $list['returnPoint']  = (int)$cfg_returnInteraction_comment;
                    $list['pointName']  = $cfg_pointName;

                    return $list;
                }
            }

            if ((isAndroidApp() || $_REQUEST['format'] == 'json') && $type == 'article-detail') {
                return array(
                    'message' => $ischeck == 1 ? self::$langData['siteConfig'][20][196] : '评论成功，将在审核后显示。',
                    'returnPoint' => (int)$cfg_returnInteraction_comment,
                    'pointName' => $cfg_pointName,
                    'isCheck' => (int)$ischeck,
                    'lastid' => (int)$ret
                );
            } else {
                return $langData['siteConfig'][20][196];  //评价成功！
            }
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][44]); //评价失败
        }
    }

    /**
     * 回复评价
     */
    public function replyComment()
    {
        global $dsql;
        global $userLogin;
        global $userinfo;

        global $cfg_disableCommentState;  //是否禁止评论
        global $cfg_disableCommentInfo;  //禁止评论提示语
        $cfg_disableCommentState = (int)$cfg_disableCommentState;
        $cfg_disableCommentInfo = $cfg_disableCommentInfo ? $cfg_disableCommentInfo : '功能维护中，暂停使用！';

        if ($cfg_disableCommentState) {
            return array("state" => 200, "info" => $cfg_disableCommentInfo);
        }

        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        $userinfo = $userLogin->getMemberInfo($userid);

        //实名认证
        global $cfg_memberVerified;
        global $cfg_memberVerifiedInfo;
        if ($cfg_memberVerified && (($userinfo['userType'] == 1 && $userinfo['certifyState'] != 1) || ($userinfo['userType'] == 2 && $userinfo['licenseState'] != 1))) {
            return array("state" => 201, "info" => $cfg_memberVerifiedInfo);
        }

        // 手机认证
        global $cfg_memberBindPhone;
        global $cfg_memberBindPhoneInfo;
        global $cfg_periodicCheckPhone;
        global $cfg_periodicCheckPhoneCycle;
        $periodicCheckPhone = (int)$cfg_periodicCheckPhone;
        $periodicCheckPhoneCycle = (int)$cfg_periodicCheckPhoneCycle * 86400;  //天
        if ($cfg_memberBindPhone && (!$userinfo['phone'] || !$userinfo['phoneCheck'] || ($periodicCheckPhone && $userinfo['phoneBindTime'] && time() - $userinfo['phoneBindTime'] > $periodicCheckPhoneCycle))) {
            return array("state" => 202, "info" => $periodicCheckPhone && $userinfo['phoneBindTime'] && time() - $userinfo['phoneBindTime'] > $periodicCheckPhoneCycle ? '请先验证手机号码' : $cfg_memberBindPhoneInfo);
        }

        $param   = $this->param;
        $id      = (int)$param['id']; // 原评论id
        $check   = $param['check']; //是否ajax输出内容
        $content = $param['content'];

        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        if (empty($content)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][45]); //请填写回复内容

        $sid = $id;

        $sql = $dsql->SetQuery("SELECT `id`, `pid`, `rid`, `aid`, `type`, `masterid` FROM `#@__public_comment_all` WHERE `id` = $id");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            // 回复一级评论
            if ($ret[0]['pid'] == 0) {
                $rid = 0;
                $parent = $ret[0];
            } else {
                $sql = $dsql->SetQuery("SELECT `id`, `pid`, `rid`, `aid`, `type` FROM `#@__public_comment_all` WHERE `id` = " . $ret[0]['pid']);
                $res = $dsql->dsqlOper($sql, "results");
                if ($res) {
                    $rid = $ret[0]['rid'] ? $ret[0]['rid'] : $ret[0]['id'];
                    $parent = $res[0];
                }
            }
            $pid  = $parent['id'];
            $type = $parent['type'];
            $aid  = $parent['aid'];
            $oid  = $parent['oid'];
            $masterid  = $ret[0]['masterid'];

            $ip     = GetIP();
            $ipaddr = getIpAddr($ip);
            $dtime  = GetMkTime(time());

            if ($type == 'paotui-order' || $type == 'waimai-order') {
                $module = 'waimai';
            } else {
                $typeArr = explode('-', $type);
                $module  = $typeArr[0];
            }
            include HUONIAOINC . "/config/" . $module . ".inc.php";
            $ischeck = (int)$customCommentCheck;

            $sco1 = 0;
            $rating = 0;
            $isanony = 0;
            $oid = $oid ? $oid : 0;
            $pics = $audio = $video = "";

            $cityName = $siteCityInfo['name'];
            $cityid   = $siteCityInfo['cityid'];

            $modulenamearr = explode('-', $type);
            $noticemodule  = $modulenamearr ? $modulenamearr[0] :  '';
            $noticemodulename = getModuleTitle(array('name' => $noticemodule));
            $part          = $modulenamearr[1] ? $modulenamearr[1] :  '';
            $statename     = $ischeck == 0  ?  ',等待审核' : '';

            if ($noticemodule == 'circle' && $part == 'dynamic') {
                $part = 'blog_detail';
            }

            if ($noticemodule == 'tuan' && $part == 'order') {
                $part = 'detail';
            }

            $tid = $userid;
            if ($rid == 0) {
                $rid = $sid;
            }
            $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = '$rid'");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $tid   = $ret[0]['userid'];
            }
            $sql = $dsql->SetQuery("INSERT INTO `#@__public_comment` (`masterid`, `pid`, `type`, `aid`, `oid`, `userid`, `rating`, `sco1`, `content`, `pics`, `audio`, `video`, `dtime`, `ip`, `ipaddr`, `ischeck`, `zan`, `zan_user`, `isanony`, `rid`, `sid`) VALUES ('$masterid', '$pid', '$type', '$aid', '$oid', '$userid', '$rating', '$sco1', '$content', '$pics', '$audio', '$video', '$dtime', '$ip', '$ipaddr', '$ischeck', '0', '', '$isanony', '$rid', '$sid')");
            $ret = $dsql->dsqlOper($sql, "lastid", null, "public_comment");
            if (is_numeric($ret)) {

                //记录用户行为日志
                memberLog($userid, 'member', 'comment', 0, 'insert', '回复评价(' . $type . '=>' . $aid . ')', '', $sql);

                if ($ischeck == 1) {
                    $param = array(
                        "service"  => $noticemodule,
                        "template" => $part,
                        "id"       => $aid
                    );

                    //自定义配置
                    $config = array(
                        "username" => $userinfo['nickname'],
                        "noticetitle" => "您有一条新回复!",
                        "title" =>  "用户：" . $userinfo['nickname'] . "评论了您!",
                        "date" => date("Y-m-d H:i:s", time()),
                        "fields" => array(
                            'keyword1' => '信息标题',
                            'keyword2' => '发布时间',
                            'keyword3' => '进展状态'
                        )
                    );

                    updateMemberNotice($tid, "会员-新评论通知", $param, $config);
                }

                /*后台管理员通知审核*/
                $param = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $cityName . "分站\r\n" . $noticemodulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n发布了一条评论" . $statename,
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );

                if ($check) {
                    $archives = $dsql->SetQuery("SELECT `id`, `userid`, `content`, `dtime`, `ip`, `ipaddr`, `zan`, `zan_user`, `ischeck` FROM `#@__public_comment_all` WHERE `id` = " . $ret);
                    $results  = $dsql->dsqlOper($archives, "results");
                    if ($results) {


                        updateAdminNotice($noticemodule, $part, $param);
                        $list['id']       = $results[0]['id'];
                        $list['userinfo'] = $userLogin->getMemberInfo($results[0]['userid']);
                        $list['content']  = $results[0]['content'];
                        $list['dtime']    = $results[0]['dtime'];
                        $list['ftime']    = FloorTime(GetMkTime(time()) - $results[0]['dtime']);
                        $list['ip']       = $results[0]['ip'];
                        $list['ipaddr']   = $results[0]['ipaddr'];
                        $list['iphome'] = getIpHome($results[0]['ipaddr']);
                        $list['zan']      = $results[0]['zan'];
                        $list['ischeck']  = $results[0]['ischeck'];
                        return $list;
                    }
                } else {

                    if (isAndroidApp() && $type == 'article-detail') {
                        return array(
                            'message' => $ischeck == 1 ? self::$langData['siteConfig'][20][196] : '评论成功，将在审核后显示。',
                            'isCheck' => (int)$ischeck,
                            'lastid' => (int)$ret
                        );
                    } else {
                        return self::$langData['siteConfig'][20][196]; //评价成功！
                    }
                }
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][44]); //评价失败
            }
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][46]); //原评价不存在
        }
    }

    /**
     * 评论点赞
     */
    public function dingComment()
    {
        global $dsql;
        global $userLogin;

        global $cfg_disableLikeState;  //是否禁止点赞
        global $cfg_disableLikeInfo;  //禁止点赞提示语
        $cfg_disableLikeState = (int)$cfg_disableLikeState;
        $cfg_disableLikeInfo = $cfg_disableLikeInfo ? $cfg_disableLikeInfo : '功能维护中，暂停使用！';

        if ($cfg_disableLikeState) {
            return array("state" => 200, "info" => $cfg_disableLikeInfo);
        }

        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        $param   = $this->param;
        $id      = (int)$param['id'];
        $type    = $param['type'];

        if (empty($id)) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        }

        // 评论信息
        $sql = $dsql->SetQuery("SELECT `userid`, `zan_user`, `type` FROM `#@__public_comment_all` WHERE `id` = $id AND `ischeck` = 1");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            //            if($userid == $ret[0]['userid']){
            //                return array("state" => 200, "info" => self::$langData['siteConfig'][33][47]);//自己不能给自己点赞哦~
            //            }    // 暂时先不需要这个

            $zan_ip = $ret[0]['zan_ip'];
            $zan_user = $ret[0]['zan_user'];
            $action     = $ret[0]['type'];

            $zan_user_arr = $zan_user ? explode(',', $zan_user) : array();

            $ip = GetIP();

            if ($action != 'paotui-order' || $action != 'waimai-order') {
                $actArr = explode('-', $action);
                $module = $actArr[0];
                $temp   = $action;
            } else {
                $module = 'waimai';
                $temp   = $action;
            }


            if ($type == "add") {
                if (in_array($userid, $zan_user_arr)) {
                    return array("state" => 200, "info" => self::$langData['siteConfig'][33][48]); //您已经赞过
                }
                $zan_user_arr[] = $userid;
            } else {
                $k = array_search($userid, $zan_user_arr);
                if ($k === false) return self::$langData['siteConfig'][20][244]; //操作成功;
                unset($zan_user_arr[$k]);
            }

            $param['id']     = $id;
            $param['uid']    = $ret[0]['userid'];
            $param['module'] = $module;
            $param['temp']   = $temp;
            $param['type']   = 1;
            $this->param     = $param;
            $this->getZan();



            $sql = $dsql->SetQuery("UPDATE `#@__public_comment_all` SET `zan` = " . count($zan_user_arr) . ", `zan_user` = '" . join(",", $zan_user_arr) . "' WHERE `id` = $id");
            $ret = $dsql->dsqlOper($sql, "update");
            if ($ret == "ok") {
                return self::$langData['siteConfig'][20][244]; //操作成功;
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][21][72]); //操作失败，请重试！
            }
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][46]); //原评价不存在

        }
    }


    /**
     * 获取评价列表
     */
    public function getComment()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        global $currentAction;
        $currentAction = 'getComment';

        $pageinfo = array();

        $userid = $userLogin->getMemberID();

        $param    = $this->param;
        $type     = $param['type'];
        $gettype  = $param['gettype'];
        $pid      = (int)$param['pid'];
        $aid      = (int)$param['aid'];
        $oid      = (int)$param['oid'];
        $rating   = (int)$param['rating'];
        $sco1     = $param['sco1'];
        $content  = (int)$param['content'];
        $audio    = (int)$param['audio'];
        $pics     = (int)$param['pics'];
        $video    = (int)$param['video'];
        $son      = (int)$param['son'];
        $u        = (int)$param['u'];  //1表示获取别人评论我的   2表示获取我评论别人的
        $onlyself = (int)$param['onlyself'];
        $isAjax   = (int)$param['isAjax'];
        $filter   = $param['filter'];
        $orderby  = $param['orderby'];
        $uid      = (int)$param['uid'];
        $peisongid = (int)$param['peisongid']; //配送员
        $page     = (int)$param['page'];
        $pageSize = (int)$param['pageSize'];

        $where1 = '';
        $where_tieba = '';

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        if (!$peisongid && !$u) {
            if (empty($type) || empty($aid)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
            }

            $where = " AND `type` = '$type' AND `aid` = '$aid' AND `pid` = '$pid'";

            //贴吧的列表评论数量统计了所有参与人，这里的接口只统计一级，所以这里优化了一下，贴吧的评论数量为所有参数人 by gz 20210727
            if ($type == 'tieba-detail') {
                $where_tieba = " AND `type` = '$type' AND `aid` = '$aid'";
            }
        }

        //表示获取别人评论我的
        if ($u == 1) {
            $where1 .= " AND `userid` = '$userid'";
            if ($onlyself == 1) {
                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1" . $where1);
                $ret = $dsql->dsqlOper($sql, "results");
                $sidList = array();
                foreach ($ret as $k => $v) {
                    array_push($sidList, $v['id']);
                }
                if (!empty($sidList)) {
                    $where .= " AND `userid` != '$userid' AND  (`sid` in(" . join(',', $sidList) . ") or (`masterid` = '$userid' AND `sid` = '0'))";
                    $where_tieba .= " AND `userid` != '$userid' AND  (`sid` in(" . join(',', $sidList) . ") or (`masterid` = '$userid' AND `sid` = '0'))";
                } else {
                    $where .= " AND `userid` != '$userid' AND  `masterid` = '$userid' AND `sid` = '0'";
                    $where_tieba .= " AND `userid` != '$userid' AND  `masterid` = '$userid' AND `sid` = '0'";
                }
            }
        }

        //获取我评论别人的
        if($u == 2){
            $where .= " AND  `userid` = '$userid'";
            $where_tieba .= " AND  `userid` = '$userid'";
        }

        if ($gettype) {
            $where .= " AND `type` like '%$gettype%'";
            $where_tieba .= " AND `type` like '%$gettype%'";
        }
        //父级ID
        if ($pid) {
            $where .= " AND `pid` = " . $pid;
            $where_tieba .= " AND `pid` = " . $pid;
        }

        //指定会员ID 帖子
        if (!empty($uid)) {
            $where .= " AND `userid` = " . $uid;
            $where_tieba .= " AND `userid` = " . $uid;
        }

        if ($oid) {
            $where .= " AND `oid` = '$oid'";
            $where_tieba .= " AND `oid` = '$oid'";
        }

        if ($peisongid) {
            require_once(HUONIAOROOT . "/api/handlers/waimai.controller.php");
            $peisongid = $peisongid == 1 ? checkCourierAccount() : $peisongid;
            $where     .= " AND `peisongid` = $peisongid";
            $where_tieba     .= " AND `peisongid` = $peisongid";
        }

        //筛选
        if (!empty($filter)) {
            if ($filter == "pic" || $filter == "img") {
                $where .= " AND `pics` <> ''";
                $where_tieba .= " AND `pics` <> ''";
            } elseif ($filter == "lower") {
                $where .= " AND `rating` < 3";
                $where_tieba .= " AND `rating` < 3";
            } elseif ($filter == "h") {
                $where .= " AND `rating` = 1";
                $where_tieba .= " AND `rating` = 1";
            } elseif ($filter == "z") {
                $where .= " AND `rating` = 2";
                $where_tieba .= " AND `rating` = 2";
            } elseif ($filter == "c") {
                $where .= " AND `rating` = 3";
                $where_tieba .= " AND `rating` = 3";
            }
        }

        if ($content) {
            $where .= " AND `content` != ''";
            $where_tieba .= " AND `content` != ''";
        }
        if ($audio) {
            $where .= " AND `audio` != ''";
            $where_tieba .= " AND `audio` != ''";
        }
        if ($pics) {
            $where .= " AND `pics` != ''";
            $where_tieba .= " AND `pics` != ''";
        }
        if ($video) {
            $where .= " AND `video` != ''";
            $where_tieba .= " AND `video` != ''";
        }

        if (!$isAjax) {
            if ($type == 'tieba-detail') {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `pid` = 0 AND `ischeck` = 1" . $where_tieba);
            } else {
                $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1" . $where);
            }
            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");
            //总分页数
            $totalPage = ceil($totalCount / $pageSize);

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $pageinfo = array(
                "page" => $page,
                "pageSize" => $pageSize,
                "totalPage" => $totalPage,
                "totalCount" => $totalCount
            );

            // 好中差评
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `sco1` = 1" . $where);
            $sco1_ = $dsql->dsqlOper($sql, "totalCount");
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `sco1` = 2" . $where);
            $sco2_ = $dsql->dsqlOper($sql, "totalCount");
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `sco1` = 3" . $where);
            $sco3_ = $dsql->dsqlOper($sql, "totalCount");
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `sco1` = 4" . $where);
            $sco4_ = $dsql->dsqlOper($sql, "totalCount");
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `sco1` = 5" . $where);
            $sco5_ = $dsql->dsqlOper($sql, "totalCount");

            $pageinfo['sco1'] = $sco1_;
            $pageinfo['sco2'] = $sco2_;
            $pageinfo['sco3'] = $sco3_;
            $pageinfo['sco4'] = $sco4_;
            $pageinfo['sco5'] = $sco5_;

            //好中差平
            $sql = $dsql->SetQuery("SELECT `sco1` s1, `sco2`s2, `sco3` s3 ,`rating` FROM `#@__public_comment_all` WHERE `ischeck` = 1 " . $where);
            $ress    = $dsql->dsqlOper($sql, "results");
            $hao  = 0;
            $cha  = 0;
            $zhong = 0;
            if ($ress) {
                foreach ($ress as $kk => $vv) {
                    if ($vv['rating'] == 1) {
                        $hao = $hao + 1;
                    }
                    if ($vv['rating'] == 2) {
                        $zhong = $zhong + 1;
                    }
                    if ($vv['rating'] == 3) {
                        $cha = $cha + 1;
                    }
                }
            }
            $pageinfo['sco6'] = $hao;
            $pageinfo['sco7'] = $zhong;
            $pageinfo['sco8'] = $cha;

            //好评率
            $sql    = $dsql->SetQuery("SELECT avg(c.`sco1`) s1, avg(c.`sco2`) s2, avg(c.`sco3`) s3 FROM `#@__public_comment_all` c WHERE c.`ischeck` = 1" . $where);
            $res    = $dsql->dsqlOper($sql, "results");
            $score1 = (int)$res[0]['s1'];  //分项1
            $score2 = (int)$res[0]['s2'];  //分项2
            $score3 = (int)$res[0]['s3'];  //分项3

            $pageinfo['score1'] = $score1;
            $pageinfo['score2'] = $score2;
            $pageinfo['score3'] = $score3;

            // 带图片的
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `pics` != ''" . $where);
            $res = $dsql->dsqlOper($sql, "totalCount");

            $pageinfo['pic'] = $res;
        }

        if ($sco1) {
            $sco1_a = explode(',', $sco1);
            $where1 = array();
            foreach ($sco1_a as $k => $v) {
                $where1[$k] = "`sco1` = $v";
            }
            $where .= " AND (" . join(" || ", $where1) . ")";
        }


        $atpage = $pageSize * ($page - 1);
        if ($type == 'tieba-detail') {
            $where_limit = " ORDER BY `top` DESC, `id` DESC LIMIT $atpage, $pageSize";
        } else {
            $where_limit = " ORDER BY `id` DESC LIMIT $atpage, $pageSize";
        }
        if ($orderby == "hot") {
            $where_limit = " ORDER BY `zan` DESC, `id` DESC LIMIT $atpage, $pageSize";
        } elseif ($orderby == "1") {
            if ($type == 'tieba-detail') {
                $where_limit = " ORDER BY `top` DESC, `id` ASC LIMIT $atpage, $pageSize";
            } else {
                $where_limit = " ORDER BY `id` ASC LIMIT $atpage, $pageSize";
            }
        }

        $archives = $dsql->SetQuery("SELECT `id`, `pid`, `sid`, `type`, `ipaddr`, `aid`, `oid`, `userid`, `rating`, `sco1`, `content`, `pics`, `audio`, `video`, `dtime`, `ip`, `zan`, `zan_user`, `isanony`, `specation`, `peisongid`, `star`, `starps`, `contentps`, `reply`, `replydate`, `time`,`top`, `masterid` FROM `#@__public_comment_all` WHERE `ischeck` = 1" . $where . $where_limit);
        $results = $dsql->dsqlOper($archives, "results");
        $aaa = is_array($results) ? count($results) : 0;
        $list = array();

        if (is_array($results) && !empty($results)) {
            $sco1Txt = self::$langData['siteConfig'][34][9]; //array(0 => "", 1 => "失望", 2 => "一般", 3 => "还行", 4 => "满意", 5 => "超赞")
            foreach ($results as $key => $value) {
                if ($u == 1) { //只调取别人的评论自己的评论,取上一级评论;
                    if ($onlyself == 1) {
                        if (!empty($value['sid'])) {
                            $sql = $dsql->SetQuery("SELECT `id`, `content` FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `id` = " . $value['sid']);
                            $ret = $dsql->dsqlOper($sql, "results");
                            if (!empty($ret[0]['id'])) {
                                $list[$key]['parent']['id']      = $ret[0]['id'];
                                $list[$key]['parent']['content'] = decodeAttachmentUrl($ret[0]['content']);
                            }
                        }
                    }
                }
                $list[$key]['count']   = $aaa;
                $list[$key]['id']      = $value['id'];
                $list[$key]['sid']     = $value['sid'];
                $list[$key]['pid']     = $value['pid'];
                $list[$key]['type']    = $value['type'];
                $list[$key]['oid']     = $value['oid'];
                $list[$key]['ipaddr']  = $value['ipaddr'];
                $list[$key]['iphome']  = getIpHome($value['ipaddr']);
                $list[$key]['specation'] = str_replace("$$$", "，", $value['specation']);
                $list[$key]['isanony'] = $value['isanony'];
                $list[$key]['ftime']    = FloorTime(GetMkTime(time()) - $value['dtime']);

                $list[$key]['peisongid']  = $value['peisongid'];
                $list[$key]['star']       = $value['star'];
                $list[$key]['starps']     = $value['starps'];
                $list[$key]['contentps']  = $value['contentps'];
                $list[$key]['reply']      = $value['reply'];
                $list[$key]['time']       = $value['time'];
                $list[$key]['replydate']  = $value['replydate'];
                $list[$key]['replydatef'] = $value['replydate'] ? date("Y-m-d H:i:s", $value['replydate']) : "";
                $list[$key]['top']        = $value['top'];

                $is_self = $userid == $value['userid'] ? 1 : 0;
                $list[$key]['is_self'] = $is_self;

                if (!$value['isanony']) {
                    
                    //获取评论人信息
                    //评论人信息
                    if(!$u || $u == 1){
                        $this->param = $value['userid'];
                        $user = $this->detail();
                    }
                    //如果是我评论别人的列表，获取我评论的谁
                    elseif($u == 2){
                        
                        //如果是评论的别人的评论，则查询上级
                        if($value['sid']){
                            $archives = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = " . $value['sid']);
                            $_userid = $dsql->getOne($archives);
                            
                            $this->param = $_userid;
                            $user = $this->detail();
                        }
                        //否则查询信息发布人
                        else{
                            $this->param = $value['masterid'];
                            $user = $this->detail();
                        }
                    }

                } else {
                    $user = array(
                        "nickname" => self::$langData['siteConfig'][34][10], //匿名用户
                        "photo" => ""
                    );
                }
                $list[$key]['user'] = $user;

                $list[$key]['rating'] = $value['rating'];
                $list[$key]['sco1'] = $value['sco1'];
                $list[$key]['sco1Txt'] = $sco1Txt[$value['sco1']];
                $list[$key]['content'] = decodeAttachmentUrl($value['content']);

                $list[$key]['dtime'] = $value['dtime'];

                if ($value['pid'] == 0) {
                    /* $param = array(
                        "service" => "business",
                        "type" => "comdetail",
                        "id" => $value['id']
                    );
                    $list[$key]['url'] = getUrlPath($param); */
                }

                $act    = $value['type'];
                if ($act != 'paotui-order') {
                    $actArr = explode('-', $act);
                    $module = $actArr[0];
                    $action = $actArr[1];
                    $action_ = $actArr[1];

                    //处理商家、二手商家、团购商品详情
                    if ($module == "business" || ($module == "info" && $action == "business") || ($module == "waimai" && $action == "order")) {
                        $action = "storeDetail";
                    } elseif (($module == "tuan" && $action == "order") || ($module == "shop" && $action == "order")) {
                        $action = "detail";
                    } elseif ($module == "circle") {
                        $action = "blogdetail";
                    }

                    $param = array(
                        "service"     => $module,
                        "template"    => $action == "blogdetail" ? "blog_detail" : $action,
                        "id"          => $value['aid']
                    );

                    $handels = new handlers($module, $action);
                    $detail  = $handels->getHandle($value['aid']);
                    if (is_array($detail) && $detail['state'] == 100) {
                        $detail  = $detail['info'];
                        if (is_array($detail)) {
                            $list[$key]['detail'] = $detail;

                            if ($module == "circle") {
                                $list[$key]['detail']['pics'] = $detail['picadr'];
                            }

                            if ($module == "waimai" && $action == "order") {
                                $list[$key]['detail']['title'] = $detail['shopname'];
                            }

                            if ($module == "info" && $action_ == "business") {
                                $param = array(
                                    "service"     => $module,
                                    "template"    => "business",
                                    "id"          => $detail['id'],
                                );
                            }

                            if (!$detail['url']) {
                                $list[$key]['detail']['url'] = getUrlPath($param);
                            }
                        }
                    } else {
                        $handels = new handlers($module, $action . "Detail");
                        $detail  = $handels->getHandle($value['aid']);

                        if (is_array($detail) && $detail['state'] == 100) {
                            $detail  = $detail['info'];
                            if (is_array($detail)) {
                                $list[$key]['detail'] = $detail;

                                if ($module == "travel" || ($module == "marry" && $action_ == "store") || ($module == "marry" && $action_ == "rental")) {
                                    $param = array(
                                        "service"     => $module,
                                        "template"    => $action_ . '-' . 'detail',
                                        "id"          => $detail['id'],
                                    );
                                }

                                if (!$detail['url']) {
                                    $list[$key]['detail']['url'] = getUrlPath($param);
                                }
                            }
                        }else{
                            $list[$key]['detail']['id']    = $value['aid'];
                            $list[$key]['detail']['title'] = '信息不存在或已删除';
                        }
                    }
                } else {
                    $sql = $dsql->SetQuery("SELECT o.`id`, o.`shop` shopname, o.`ordernum` ordernumstore FROM (`#@__public_comment_all` c LEFT JOIN `#@__paotui_order` o ON c.`oid` = o.`id`) WHERE c.`oid` = " . $value['oid']);
                    $shop = $dsql->dsqlOper($sql, "results");
                    if ($shop) {
                        $list[$key]['detail']['id']    = $shop[0]['id'];
                        $list[$key]['detail']['title'] = $shop[0]['shopname'];
                    }
                }

                $pics = $value['pics'];
                $picsArr = array();
                if ($pics) {
                    $pics_ = explode(',', $pics);
                    foreach ($pics_ as $k => $v) {
                        $picsArr[] = getFilePath($v);
                    }
                }
                $list[$key]['pics'] = $picsArr;

                $list[$key]['audio'] = $value['audio'] ? getFilePath($value['audio']) : "";
                $list[$key]['video'] = $value['video'] ? getFilePath($value['video']) : "";
                $list[$key]['ip'] = $value['ip'];
                $list[$key]['zan'] = $value['zan'];

                $zan_has = 0;
                if ($userid != -1 && $value['zan_user']) {
                    $zan_user = explode(',', $value['zan_user']);
                    if (in_array($userid, $zan_user)) {
                        $zan_has = 1;
                    }
                }
                $list[$key]['zan_has'] = $zan_has;

                //帖子
                if ($type == 'tieba-detail') {
                    $memberID = $value['userid'];
                    $$tizi_memberTotal = 0;
                    $sql = $dsql->SetQuery("SELECT count(`id`) t FROM `#@__tieba_list` WHERE `state` = 1 AND `uid` = $memberID");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $tizi_memberTotal = $ret[0]['t'];
                    }
                    $list[$key]['tizi_memberTotal'] = $tizi_memberTotal;
                    //精华总数
                    $tizi_memberJinghuaTotal = 0;
                    $sql = $dsql->SetQuery("SELECT count(`id`) t FROM `#@__tieba_list` WHERE `state` = 1 AND `jinghua` = 1 AND `uid` = $memberID");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $tizi_memberJinghuaTotal = $ret[0]['t'];
                    }
                    $list[$key]['tizi_memberJinghuaTotal'] = $tizi_memberJinghuaTotal;

                    //回复数量
                    $replynums = 0;
                    $sql = $dsql->SetQuery("SELECT count(`id`) t FROM `#@__public_comment_all` WHERE `ischeck` = 1 AND `type` = 'tieba-detail' AND `pid` = " . $value['id']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $replynums = $ret[0]['t'];
                    }
                    $list[$key]['replynums'] = $replynums;
                }

                if ($userid != -1) {
                    $isfollow = 0;
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = $userid AND `fid` = " . $value['userid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret && is_array($ret)) {
                        $isfollow = 1;
                    }
                    $list[$key]['isfollow'] = $isfollow;
                }

                // 获取子评论
                if ($son) {
                    $lower = array();
                    if ($value['pid'] == 0) {
                        $param['pid'] = $value['id'];
                        // // if($type == 'tieba-detail'){
                        //     $param['rid'] = $value['id'];
                        // // }
                        $param['page'] = 1;
                        $param['pageSize'] = 100;
                        $this->param = $param;

                        $totalCount_all = 0;
                        $child = $this->getChildComment();
                        if (!isset($lower['state']) || !$lower['state'] == 200) {
                            $lower = $child['list'] ? $child['list'] : '';
                            $totalCount_all = $child['pageInfo']['totalCount_all'] ? $child['pageInfo']['totalCount_all'] : 0;
                        }

                        $list[$key]['lower'] = array(
                            "count" => $totalCount_all,
                            "list" => $lower
                        );
                    }
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 获取级子评论
     */
    public function getChildComment()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $pageinfo = array();
        $userid = $userLogin->getMemberID();
        $param    = $this->param;
        $pid      = (int)$param['pid'];
        $rid      = (int)$param['rid'];
        $sid      = (int)$param['sid'];
        $page     = (int)$this->param['page'];
        $pageSize = (int)$this->param['pageSize'];
        if (empty($pid) && empty($rid) && empty($sid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        if ($rid) {
            $where = " AND `rid` = $rid";
        } else {
            // $where = " AND `pid` = $pid AND `rid` = 0";
            $where = " AND `pid` = $pid AND (`rid` = 0 OR `rid` = $pid)";
        }
        $where .= " AND `ischeck` = 1";
        if ($sid) {
            $where = " AND `sid` = $sid";

            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1" . $where);

            $archives_ = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1 AND `sid` = $sid AND `ischeck` = 1");

            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");
            //总条数包含三级评论
            $totalCount_all = $dsql->dsqlOper($archives_, "totalCount");

            //总分页数
            $totalPage = ceil($totalCount / $pageSize);

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $pageinfo = array(
                "page" => $page,
                "pageSize" => $pageSize,
                "totalPage" => $totalPage,
                "totalCount" => $totalCount,
                "totalCount_all" => $totalCount_all,
            );
        }
        if ($rid != 0) {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1" . $where);

            $archives_ = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1 AND `rid` = $rid AND `ischeck` = 1");

            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");
            //总条数包含三级评论
            $totalCount_all = $dsql->dsqlOper($archives_, "totalCount");

            //总分页数
            $totalPage = ceil($totalCount / $pageSize);

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $pageinfo = array(
                "page" => $page,
                "pageSize" => $pageSize,
                "totalPage" => $totalPage,
                "totalCount" => $totalCount,
                "totalCount_all" => $totalCount_all,
            );
        } elseif ($pid != 0) {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1" . $where);

            $archives_ = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1 AND `pid` = $pid AND `ischeck` = 1");

            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");
            //总条数包含三级评论
            $totalCount_all = $dsql->dsqlOper($archives_, "totalCount");

            //总分页数
            $totalPage = ceil($totalCount / $pageSize);

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $pageinfo = array(
                "page" => $page,
                "pageSize" => $pageSize,
                "totalPage" => $totalPage,
                "totalCount" => $totalCount,
                "totalCount_all" => $totalCount_all,
            );
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__public_comment_all` WHERE 1 = 1" . $where);
        $order = " ORDER BY `id` ASC";
        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $order . $where, "results");
        $list = array();

        if (is_array($results) && !empty($results)) {
            $temp = $this->temp;
            foreach ($results as $key => $value) {
                $list[$key]['id'] = $value['id'];
                $list[$key]['pid'] = $value['pid'];
                $list[$key]['type'] = $value['type'];
                $list[$key]['oid'] = $value['oid'];
                $list[$key]['rid'] = $value['rid'];
                $list[$key]['sid'] = $value['sid'];
                $list[$key]['ipaddr']   = $value['ipaddr'];
                $list[$key]['iphome']  = getIpHome($value['ipaddr']);
                $list[$key]['zan'] = $value['zan'];
                $list[$key]['ftime']    = FloorTime(GetMkTime(time()) - $value['dtime']);

                if (isset($temp[$value['userid']])) {
                    $user = $temp[$value['userid']];
                } else {
                    $this->param = $value['userid'];
                    $user = $this->detail();
                    $temp[$value['userid']] = $user;
                }
                $list[$key]['user'] = $user;

                //如果是回复的别人，这里查询出来回复的谁
                $reply_to_user = array();
                if($value['sid']){
                    $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = " . $value['sid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if($ret){
                        $this->param = $ret[0]['userid'];
                        $reply_to_user = $this->detail();
                    }
                }
                $list[$key]['reply_to_user'] = $reply_to_user;

                $zan_has = 0;
                if ($userid != -1 && $value['zan_user']) {
                    $zan_user = explode(',', $value['zan_user']);
                    if (in_array($userid, $zan_user)) {
                        $zan_has = 1;
                    }
                }
                $list[$key]['zan_has'] = $zan_has;

                if ($rid) {
                    $sid = $value['sid'];
                    $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = " . $sid);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $uid = $ret[0]['userid'];
                        if (isset($temp[$uid])) {
                            $user = $temp[$uid];
                        } else {
                            $this->param = $value['uid'];
                            $user = $this->detail();
                            $temp[$uid] = $user;
                        }
                    } else {
                        $user = array();
                    }
                    $list[$key]['member'] = $user;
                }

                $this->temp = $temp;

                $list[$key]['content'] = $value['content'];
                $list[$key]['dtime'] = $value['dtime'];
                $list[$key]['ip'] = $value['ip'];

                // 获取子评论
                if (!$rid) {
                    $lower = array();
                    $param['rid'] = $value['id'];
                    $param['page'] = 1;
                    $param['pageSize'] = 100;
                    $this->param = $param;

                    $child = $this->getChildComment();
                    $totalCount_all = 0;
                    if (!isset($child['state']) || $child['state'] != 200) {
                        $lower = $child['list'];
                        $totalCount_all = $child['pageInfo']['totalCount_all'];
                    }

                    $list[$key]['lower'] = array(
                        "count" => $totalCount_all,
                        "list" => $lower
                    );
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 评价详情
     */
    public function commentDetail()
    {
        global $dsql;
        global $userLogin;

        $uid = $userLogin->getMemberID();

        $param = $this->param;
        $id    = (int)$param['id'];

        // $sql = $dsql->SetQuery("SELECT * FROM `#@__public_comment_all` WHERE `id` = $id AND `isCheck` = 1 AND `pid` = 0");
        $sql = $dsql->SetQuery("SELECT * FROM `#@__public_comment_all` WHERE `id` = $id ");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $detail = array();
            $zan_has = 0;
            $ret = $ret[0];
            foreach ($ret as $key => $value) {
                if ($key == "pics") {
                    $pics = array();
                    $value_ = $value ? explode(",", $value) : array();
                    foreach ($value_ as $k => $v) {
                        $pics[] = getFilePath($v);
                    }
                    $value = $pics;
                }
                if ($key == "audio" || $key == "video") {
                    $value = getFilePath($value);
                }

                if ($key == "zan_user") {
                    $zan_userArr = array();
                    if ($value) {
                        $sql = $dsql->SetQuery("SELECT `id`, `mtype`, `nickname`, `company`, `photo` FROM `#@__member` WHERE `id` IN (" . $value . ")");
                        $res = $dsql->dsqlOper($sql, "results");
                        if ($res) {
                            $value_ = explode(",", $value);
                            if ($uid != -1 && in_array($uid, $value_)) {
                                $zan_has = 1;
                            }
                            foreach ($value_ as $k => $v) {
                                foreach ($res as $s => $sv) {
                                    if ($sv['id'] == $v) {
                                        if ($sv['mtype'] == "2") {
                                            $nickname = $sv['company'] ? $sv['company'] : $sv['nickname'];
                                        } else {
                                            $nickname = $sv['nickname'];
                                        }
                                        $photo = $sv['photo'] ? getFilePath($sv['photo']) : "";
                                        $zan_userArr[] = array(
                                            "id" => $v,
                                            "nickname" => $nickname,
                                            "photo" => $photo
                                        );
                                    }
                                }
                            }
                        }
                    }
                    $detail['zan_userArr'] = $zan_userArr;
                }

                $detail[$key] = $value;
            }

            $detail['zan_has'] = $zan_has;
            $detail['iphome'] = getIpHome($detail['ipaddr']);

            if ($ret['isanony']) {
                $detail['user'] = array(
                    "id" => 0,
                    "nickname" => "匿名用户",
                    "photo" => ""
                );
            } else {
                $this->param = $ret['userid'];
                $detail['user'] = $this->detail();
            }
            return $detail;
        }
    }

    /**
     * 删除商家评论
     */
    public function delComment()
    {
        global $dsql;
        global $userLogin;

        $uid = $userLogin->getMemberID();

        $param = $this->param;
        $id    = (int)$param['id'];

        if ($uid == -1) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `id` = '$id'");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            $sql = $dsql->SetQuery("DELETE FROM `#@__public_up_all` WHERE `type` = '1' and `tid` = '$id'");
            $dsql->dsqlOper($sql, "update");

            $archives = $dsql->SetQuery("DELETE FROM `#@__public_comment_all` WHERE `id` = '$id'");
            $results = $dsql->dsqlOper($archives, "update");
            if ($results != "ok") {

                //记录用户行为日志
                memberLog($uid, 'member', 'comment', 0, 'delete', '删除评论(' . $id . ')', '', $archives);

                return array("state" => 200, "info" => self::$langData['siteConfig'][20][300]); //删除失败！
            }
            return self::$langData['siteConfig'][21][136]; //"删除成功！";
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][300]); //删除失败！
        }
    }

    /**
     * 公共点赞
     */
    public function getZan()
    {
        global $dsql;
        global $userLogin;
        $param = $this->param;

        global $cfg_disableLikeState;  //是否禁止点赞
        global $cfg_disableLikeInfo;  //禁止点赞提示语
        $cfg_disableLikeState = (int)$cfg_disableLikeState;
        $cfg_disableLikeInfo = $cfg_disableLikeInfo ? $cfg_disableLikeInfo : '功能维护中，暂停使用！';

        if ($cfg_disableLikeState) {
            return array("state" => 200, "info" => $cfg_disableLikeInfo);
        }

        $id       = $param['id'];
        $uid      = $param['uid'];
        $module   = $param['module'];
        $temp     = $param['temp'];
        $type     = (int)$param['type'];
        $check    = $param['check'];
        $title    = $param['title'];

        $userid         = $userLogin->getMemberID();
        $userinfo       = $userLogin->getMemberInfo();

        $puctime = time();

        $modulename = getModuleTitle(array('name' => $module));
        if (!$check) {

            if ($userid == -1) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
            }

            if (empty($id) || empty($module) || empty($temp)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        }

        $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_up_all`  WHERE `type` = '$type' and `action` = '$temp' and `module` = '$module' and `tid` = '$id' and `ruid` = '$userid'");
        $res = $dsql->dsqlOper($sql, "results");

        $param = array(
            "service"  => "member",
            'type'     => 'user',
            "template" => "message.html?appFullScreen"

        );
        if (!empty($res)) {
            if ($check) {
                return 'has';
            }
            $content     = $modulename . $userinfo['username'] . "取消了点赞您的信息";
            if ($type == 1) {
                $content = $modulename . $userinfo['username'] . "取消了点赞您的评论";
            }
            if ($module == 'article' && $temp == 'detail') {
                $sub = new SubTable('articlelist', '#@__articlelist');
                $break_table = $sub->getSubTableById($id);
                $archives = $dsql->SetQuery("UPDATE `" . $break_table . "` SET  `zan` = zan - 1 WHERE `id` = '$id'");
                $results = $dsql->dsqlOper($archives, "update");
            } elseif ($module == 'travel' && $temp == 'video-detail') {
                $archives = $dsql->SetQuery("UPDATE `#@__travel_video` SET  `zan` = zan - 1 WHERE `id` = '$id'");
                $results = $dsql->dsqlOper($archives, "update");
            } elseif ($module == 'tieba' && $temp == 'detail') {
                $archives = $dsql->SetQuery("UPDATE `#@__tieba_list` SET  `up` = up - 1 WHERE `id` = '$id'");
                $results = $dsql->dsqlOper($archives, "update");
            } else {
                $results = 'ok';
            }

            if ($results == 'ok') {
                $archives = $dsql->SetQuery("DELETE FROM `#@__public_up_all` WHERE `type` = '$type' and `action` = '$temp' and `module` = '$module' and `tid` = '$id' and `ruid` = '$userid'");
                $dsql->dsqlOper($archives, "update");

                // 清除缓存
                if ($module == 'article' && $temp == 'detail') {
                    checkCache("article_list", $id);
                    clearCache("article_detail", $id);
                } elseif ($module == 'tieba' && $temp == 'detail') {
                    checkCache("tieba_list", $id);
                    clearCache("tieba_detail", $id);
                } elseif ($module == 'travel' && $temp == 'video-detail') {
                    checkCache("travel_video_list", $id);
                    clearCache("travel_video_detail", $id);
                }

                $config = array(
                    "noticetitle" => $content,
                    "title" => $title,
                    "date" => date("Y-m-d H:i:s", $puctime),
                    "fields" => array(
                        'keyword1' => '信息标题',
                        'keyword2' => '点赞时间',
                        'keyword3' => '进展状态'
                    )
                );
        
                //记录用户行为日志
                memberLog($userid, $module, '', $id, 'delete', '取消点赞('.$title.' => '.$content.')', '', $archives);

                //                updateMemberNotice($uid, "会员-点赞提醒", $param, $config, "");
                return 'ok';
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][21][72]); //操作失败，请重试！
            }
        } else {
            if ($check) {
                return 'no';
            }
            $content     = $modulename . $userinfo['username'] . "点赞了您的信息";
            if ($type == 1) {
                $content = $modulename . $userinfo['username'] . "点赞了您的评论";
            }
            if ($module == 'article' && $temp == 'detail') {
                $sub = new SubTable('articlelist', '#@__articlelist');
                $break_table = $sub->getSubTableById($id);
                $archives = $dsql->SetQuery("UPDATE `" . $break_table . "` SET  `zan` = zan + 1 WHERE `id` = '$id'");
                $results = $dsql->dsqlOper($archives, "update");
            } elseif ($module == 'travel' && $temp == 'video-detail') {
                $archives = $dsql->SetQuery("UPDATE `#@__travel_video` SET  `zan` = zan + 1 WHERE `id` = '$id'");
                $results = $dsql->dsqlOper($archives, "update");
            } elseif ($module == 'tieba' && $temp == 'detail') {
                $archives = $dsql->SetQuery("UPDATE `#@__tieba_list` SET  `up` = up + 1 WHERE `id` = '$id'");
                $results = $dsql->dsqlOper($archives, "update");
            } else {
                $results = 'ok';
            }

            if ($results != "ok") {
                return array("state" => 200, "info" => self::$langData['siteConfig'][21][72]); //操作失败，请重试！
            } else {
                //插入点赞人信息
                $archives = $dsql->SetQuery("INSERT INTO `#@__public_up_all` (`uid`, `tid`, `ruid`, `module`, `action`, `puctime`, `type`) VALUES ('$uid', '$id', '$userid', '$module', '$temp', '$puctime', '$type')");
                $aid = $dsql->dsqlOper($archives, "lastid", null, "public_up");
                // 清除缓存
                if ($module == 'article' && $temp == 'detail') {
                    checkCache("article_list", $id);
                    clearCache("article_detail", $id);
                } elseif ($module == 'tieba' && $temp == 'detail') {
                    checkCache("tieba_list", $id);
                    clearCache("tieba_detail", $id);
                } elseif ($module == 'travel' && $temp == 'video-detail') {
                    checkCache("travel_video_list", $id);
                    clearCache("travel_video_detail", $id);
                }

                $config = array(
                    "noticetitle" => $content,
                    "title" => $title,
                    "date" => date("Y-m-d H:i:s", $puctime),
                    "fields" => array(
                        'keyword1' => '信息标题',
                        'keyword2' => '点赞时间',
                        'keyword3' => '进展状态'
                    )
                );
        
                //记录用户行为日志
                memberLog($userid, $module, '', $id, 'insert', '点赞('.$title.' => '.$content.')', '', $archives);

                updateMemberNotice($uid, "会员-点赞提醒", $param, $config, "");
                return 'ok';
            }
        }
    }

    /**
     * 点赞人列表
     */
    public function upList()
    {
        global $dsql;
        global $userLogin;
        global $currentAction;
        $currentAction = 'upList';
        $pageinfo = $list = array();
        $orderby = $page = $pageSize = $where = $where1 = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $tid      = convertArrToStrWithComma($this->param['tid'], 1);
                $module   = $this->param['module'];
                $uid      = (int)$this->param['uid'];
                $u        = (int)$this->param['u'];  //1表示获取谁给我点赞  2表示获取我给谁点赞
                $type     = (int)$this->param['type'];
                $gettype  = (int)$this->param['gettype'];
                $temp     = $this->param['temp'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $userid = $userLogin->getMemberID();

        //谁给我点赞
        if ($u == 1) {
            $where .= " AND `uid` = '$userid' AND `ruid` != '$userid'";
        }

        //我给谁点赞
        if ($u == 2) {
            $where .= " AND `ruid` = '$userid'";
        }

        if (!empty($tid)) {
            $where .= " AND `tid` in ($tid)";
        }
        if ($gettype) {
            $where .= " AND `module` = '" . $gettype . "'";
        }

        if ($type != '') {
            $where .= " AND `type` = '$type'";
        }

        if (!empty($module)) {
            $where .= " and module='$module'";
        }

        if (!empty($temp)) {
            $where .= " and action='$temp'";
        }

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $order = " ORDER BY `puctime` DESC, `id` DESC";

        $archives_count = $dsql->SetQuery("SELECT count(`id`) FROM `#@__public_up_all` l WHERE 1 = 1" . $where);
        //总条数
        $totalResults = $dsql->dsqlOper($archives_count, "results", "NUM");
        $totalCount = (int)$totalResults[0][0];

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $archives = $dsql->SetQuery("SELECT `id`, `uid`, `tid`, `ruid`, `puctime`, `type`, `action`, `module` FROM `#@__public_up_all` l WHERE 1 = 1" . $where);
        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $where1 . $order . $where, "results");
        if ($results) {
            foreach ($results as $key => $val) {

                $_uid = $u == 2 ? $val['uid'] : $val['ruid'];

                //点赞人信息
                $uid = $username = $photo = "";
                $sql = $dsql->SetQuery("SELECT `id`, `nickname`, `photo` FROM `#@__member` WHERE `id` = " . $_uid);
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {
                    $username = $ret[0]['nickname'];
                    $uid      = $ret[0]['id'];
                    $photo    = getFilePath($ret[0]['photo']);
                }
                $list[$key]['uid'] = $uid;
                $list[$key]['username'] = $username;
                $list[$key]['photo'] = $photo;

                //点赞信息
                $list[$key]['puctime'] = $val['puctime'];
                $list[$key]['type'] = $val['type'];
                $list[$key]['id']   = $val['id'];
                $list[$key]['tid'] = (int)$val['tid'];
                $list[$key]['module']   = $val['module'];
                $list[$key]['moduleName']   = getModuleTitle(array('name' => $val['module']));
                $module = $val['module'];

                if ($val['action'] != 'paotui-order') {
                    if ($val['type'] == 1) { //评论点赞
                        $actArr = explode('-', $val['action']);
                        $action = $actArr[1];
                        $action_ = $actArr[1];
                        if ($module == "business" && $val['action'] == 'business') {
                            $action_ = 'detail';
                        }
                        if ($module == "circle") {
                            $action_ = 'blogdetail';
                        }
                        //处理商家、二手商家、团购商品详情
                        if ($module == "business" || ($module == "info" && $action == "business") || ($module == "waimai" && $action == "order")) {
                            $action = "storeDetail";
                        } elseif (($module == "tuan" && $action == "order") || ($module == "shop" && $action == "order")) {
                            $action = "detail";
                        }
                        $commentcontent = '';
                        $sql = $dsql->SetQuery("SELECT `aid`, `oid`, `content` FROM `#@__public_comment_all` WHERE `id` = '" . $val['tid'] . "' ");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $commentcontent = $ret[0]['content'];
                            $tid = $ret[0]['aid'];
                        }
                    } else { //信息点赞
                        $action = $val['action'];
                        $action_ = $val['action'];
                        if ($val['module'] == 'travel' && $val['action'] == 'video-detail') {
                            $action = 'videoDetail';
                        } elseif ($val['module'] == 'live' && $val['action'] == 'h_detail') {
                            $action = 'detail';
                        }

                        $tid = $val['tid'];
                        if ($module == "circle") {
                            $action = 'blogdetail';
                            $action_ = 'blogdetail';
                        }
                    }
                    $param = array(
                        "service"     => $module,
                        "template"    => $action_ == 'blogdetail' ? 'blog_detail' : $action_,
                        "id"          => $tid
                    );
                    $handels = new handlers($module, $action);
                    $detail  = $handels->getHandle($tid);
                    if (is_array($detail) && $detail['state'] == 100) {
                        $detail  = $detail['info'];
                        if (is_array($detail)) {
                            $list[$key]['detail'] = $detail;

                            if ($module == "waimai" && $action == "order") {
                                $list[$key]['detail']['title'] = $detail['shopname'];
                            }

                            if ($commentcontent) {
                                $list[$key]['detail']['commentcontent'] = $commentcontent;
                            }

                            if ($module == "info" && $action_ == "business") {
                                $param = array(
                                    "service"     => $module,
                                    "template"    => "business",
                                    "id"          => $detail['id'],
                                );
                            }

                            if ($module == "circle" && $action_ == "blogdetail") {
                                $list[$key]['detail']['imglist'] = $detail['picadr'];
                                $list[$key]['detail']['title']   = $detail['content'];
                            }

                            if (!$detail['url']) {
                                $list[$key]['detail']['url'] = getUrlPath($param);
                            }
                        }
                    } else {
                        $handels = new handlers($module, $action . "Detail");
                        $detail  = $handels->getHandle($tid);

                        if (is_array($detail) && $detail['state'] == 100) {
                            $detail  = $detail['info'];
                            if (is_array($detail)) {
                                $list[$key]['detail'] = $detail;

                                if ($module == "travel" || ($module == "marry" && $action_ == "store") || ($module == "marry" && $action_ == "rental")) {
                                    $param = array(
                                        "service"     => $module,
                                        "template"    => $action_ . '-' . 'detail',
                                        "id"          => $detail['id'],
                                    );
                                }

                                if ($commentcontent) {
                                    $list[$key]['detail']['commentcontent'] = $commentcontent;
                                }

                                if (!$detail['url']) {
                                    $list[$key]['detail']['url'] = getUrlPath($param);
                                }
                            }
                        }
                    }
                } else {
                    $commentcontent = '';
                    $sql = $dsql->SetQuery("SELECT `aid`, `oid`, `content` FROM `#@__public_comment_all` WHERE `id` = '" . $val['tid'] . "' ");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $commentcontent = $ret[0]['content'];
                        $tid = $ret[0]['oid'];
                    }

                    $sql = $dsql->SetQuery("SELECT o.`id`, o.`shop` shopname, o.`ordernum` ordernumstore FROM (`#@__public_comment_all` c LEFT JOIN `#@__paotui_order` o ON c.`oid` = o.`id`) WHERE c.`oid` = " . $tid);
                    $shop = $dsql->dsqlOper($sql, "results");
                    if ($shop) {
                        $list[$key]['detail']['id']    = $shop[0]['id'];
                        $list[$key]['detail']['title'] = $shop[0]['shopname'];
                        $list[$key]['detail']['commentcontent'] = $commentcontent;
                    }
                }

                $totalAudit = 0;
                if ($module == 'article' && $temp == 'detail') {
                    $sub = new SubTable('articlelist', '#@__articlelist');
                    $breakup_table_res = $sub->getSubTable();
                    foreach ($breakup_table_res as $item) {
                        $sql_count1 = $dsql->SetQuery("SELECT `id` FROM `" . $item['table_name'] . "` l WHERE `del` = 0 AND `arcrank` = 1 AND `admin` =" . $_uid);
                        $break_count_ = $dsql->dsqlOper($sql_count1 . $where, "totalCount");
                        $totalAudit += $break_count_;
                    }
                }
                $list[$key]['infoTotal'] = $totalAudit;

                //帖子总数
                if ($module == 'tieba') {
                    $sql = $dsql->SetQuery("SELECT count(`id`) t FROM `#@__tieba_list` WHERE `state` = 1 AND `uid` = " . $_uid);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $list[$key]['tiziTotal'] = $ret[0]['t'];
                }

                //关注人数
                $sql = $dsql->SetQuery("SELECT count(`id`) t FROM `#@__member_follow` WHERE `tid` = " . $_uid);
                $followret = $dsql->dsqlOper($sql, "results");
                $list[$key]['followTotal'] = $followret[0]['t'];
                //粉丝人数
                $sql = $dsql->SetQuery("SELECT count(`id`) t FROM `#@__member_follow` WHERE `fid` = " . $_uid);
                $fansret = $dsql->dsqlOper($sql, "results");
                $list[$key]['totalFans'] = $fansret[0]['t'];

                //点赞人和楼主是否相互关注
                $ret = '';
                if ($userid > 0 && $_uid > 0) {
                    $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_follow` WHERE `tid` = $userid AND `fid` = " . $_uid);
                    $ret = $dsql->dsqlOper($sql, "results");
                }
                if ($ret) {
                    $list[$key]['isfollow'] = 1;
                } elseif ($userid == $_uid) {
                    $list[$key]['isfollow'] = 2;
                } else {
                    $list[$key]['isfollow'] = 0;
                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 留言建议
     * @return array
     */
    public function suggestion()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $desc = $this->param['desc'];
                $phone = $this->param['phone'];
                $vdimgck = $this->param['vdimgck'];
            }
        }

        $return = "";
        $type = htmlspecialchars(RemoveXSS(filterSensitiveWords(cn_substrR(addslashes($type), 50))));
        $desc = htmlspecialchars(RemoveXSS(filterSensitiveWords(cn_substrR(addslashes($desc), 200))));
        $phone = htmlspecialchars(RemoveXSS(filterSensitiveWords(cn_substrR(addslashes($phone), 50))));


        if ($vdimgck && strtolower($vdimgck) != $_SESSION['huoniao_vdimg_value']) return array("state" => 200, "info" => $langData['siteConfig'][20][99]);  //验证码输入错误，请重试！

        //获取用户ID
        $uid = $userLogin->getMemberID();
        $did = GetCookie("courier");  //骑手端不需要登录

        if ($uid <= 0 && (!$did || $did <= 0)) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $ip     = GetIP();
        $ipAddr = getIpAddr($ip);

        $archives = $dsql->SetQuery("INSERT INTO `#@__member_suggestion` (`info`, `phone`, `userid`, `ip`, `ipaddr`, `pubdate`, `state`) VALUES ('$desc', '$phone', '$uid', '$ip', '$ipAddr', " . GetMkTime(time()) . ", 0)");
        $res  = $dsql->dsqlOper($archives, "update");
        if ($res != "ok") {
            $return = '留言失败';
        } else {
            $return = '留言成功';
        }
        return $return;
    }

    /**
     * 留言建议列表
     * @return array
     */
    public function suggestionlist()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $pageinfo = $list = array();
        $title = $orderby = $page = $pageSize = $where = "";

        if (!empty($this->param)) {
            if (!is_array($this->param)) {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][0]); //'格式错误！'
            } else {
                $orderby  = $this->param['orderby'];
                $page     = $this->param['page'];
                $pageSize = $this->param['pageSize'];
            }
        }

        $where = " AND `state` = 1";

        $order = " ORDER BY `id` DESC";

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $archives = $dsql->SetQuery("SELECT `id`, `info`, `userid`, `pubdate`, `state`, `note`, `opuid`, `optime` FROM `#@__member_suggestion` WHERE 1 = 1" . $where);
        //总条数
        $totalCount = $dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $results = $dsql->dsqlOper($archives . $order . $where, "results");
        if ($results) {
            foreach ($results as $key => $val) {
                $list[$key]['id']      = $val['id'];
                $list[$key]['desc']    = $val['info'];
                $list[$key]['note']    = $val['note'];
                $list[$key]['pubdate'] = $val['pubdate'];
                $list[$key]['optime']  = $val['optime'];
                $list[$key]['opuid']   = $val['opuid'];
                $list[$key]['pubdate1'] = !empty($val['pubdate']) ? date("Y/m/d", $val['pubdate']) : '';
                $list[$key]['pubdate2'] = !empty($val['pubdate']) ? date("Y-m-d H:i", $val['pubdate']) : '';
                $list[$key]['optime1'] = !empty($val['optime']) ? date("Y-m-d H:i", $val['optime']) : '';
                //会员信息
                $member               = getMemberDetail($val['userid']);
                $list[$key]['member'] = array(
                    "id" => $val['userid'],
                    "nickname" => $member['nickname'] == null ? "匿名" : $member['nickname'],
                    "photo" => $member['photo'],
                    "userType" => $member['userType']
                );
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 消费返积分 + 入账返积分
     * $bAmount 商家入账金额
     * $buid 商家userid
     */
    public function returnPoint($module, $userid, $amount, $ordernum, $bAmount = 0, $buid = 0)
    {
        global $dsql;
        global $cfg_returnPointState;
        global $cfg_returnPoint_tuan;
        global $cfg_returnPoint_shop;
        global $cfg_returnPoint_info;
        global $cfg_returnPoint_waimai;
        global $cfg_returnPoint_homemaking;
        global $cfg_returnPoint_travel;
        global $cfg_returnPoint_education;
        global $installModuleTitleArr;
        global $userLogin;
        global $cfg_pointName;

        if (!$userid) return;

        $ratio = 0;
        $tit = '订单返' . $cfg_pointName; //订单返积分;
        switch ($module) {
            case 'tuan':
                $ratio = $cfg_returnPoint_tuan;
                break;
            case 'shop':
                $ratio = $cfg_returnPoint_shop;
                break;
            case 'info':
                $ratio = $cfg_returnPoint_info;
                break;
            case 'waimai':
                $ratio = $cfg_returnPoint_waimai;
                break;
            case 'homemaking':
                $ratio = $cfg_returnPoint_homemaking;
                break;
            case 'travel':
                $ratio = $cfg_returnPoint_travel;
                break;
            case 'education':
                $ratio = $cfg_returnPoint_education;
                break;
        }
        $title = $installModuleTitleArr[$module] . $tit . '：' . $ordernum;
        if ($cfg_returnPointState && $ratio) {
            $point = (int)($amount * $ratio / 100);
            if ($point > 0) {
                $now = time();
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + $point WHERE `id` = $userid");
                $res = $dsql->dsqlOper($archives, "update");
                if ($res == "ok") {

                    $user  = $userLogin->getMemberInfo($userid);
                    $userpoint = (float)$user['point'];
                    if ($userpoint) {
                        //保存操作日志
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`, `balance`) VALUES ('$userid', '1', '$point', '$title', '$now','zengsong', '$userpoint')");
                        $dsql->dsqlOper($archives, "update");
                    }
                }
            }
        }

        //是否需要商家进账返积分
        if ($bAmount > 0 && $buid > 0) {
            //用户消费返积分后，开始对商家入账返积分
            global $cfg_ruzhangPointFee_tuan;
            global $cfg_ruzhangPointFee_shop;
            global $cfg_ruzhangPointFee_waimai;
            global $cfg_ruzhangPointFee_homemaking;
            global $cfg_ruzhangPointFee_travel;
            global $cfg_ruzhangPointFee_education;
            global $cfg_pointRatio;

            //计算返账积分
            $moduleFc = 0;  //模块的返账积分比例
            switch ($module) {
                case "tuan":
                    $moduleFc = $cfg_ruzhangPointFee_tuan;
                    break;
                case "shop":
                    $moduleFc = $cfg_ruzhangPointFee_shop;
                    break;
                case "waimai":
                    $moduleFc = $cfg_ruzhangPointFee_waimai;
                    break;
                case "homemaking":
                    $moduleFc = $cfg_ruzhangPointFee_homemaking;
                    break;
                case "travel":
                    $moduleFc = $cfg_ruzhangPointFee_travel;
                    break;
                case "education":
                    $moduleFc = $cfg_ruzhangPointFee_education;
                    break;
                default:
                    break;
            }
            $point = $bAmount * $moduleFc / 100  * $cfg_pointRatio; //计算实际得到的积分
            if ($point > 0) {
                $archivess = $dsql->SetQuery("UPDATE `#@__member` SET `point` = `point` + '$point' WHERE `id` = '$buid'");
                $dsql->dsqlOper($archivess, "update");

                $userpoint = (int)$dsql->getOne($dsql::SetQuery("select `point` from `#@__member` where `id`=" . $buid));
                $time = time();
                $_tit = $installModuleTitleArr[$module] . '商家入账返' . $cfg_pointName . '：' . $ordernum;
                $archives  = $dsql->SetQuery("INSERT INTO `#@__member_point` (`userid`, `type`, `amount`, `info`, `date`,`ctype`,`balance`) VALUES ('$buid', '1', '$point', '$_tit', '$time','zengsong','$userpoint')");
                $dsql->dsqlOper($archives, "update");
            }
        }

        //        $this->returnFxMoney($module, $userid, $ordernum);
    }

    /**
     * 分销返佣金
     */
    public function returnFxMoney($module = "", $userid = 0, $ordernum = "", $fabparam = array(), $type = 0, $_module = '')
    {
        global $dsql;
        global $userLogin;
        global $cfg_fenxiaoName;
        global $cfg_fenxiaoState;
        global $cfg_fenxiaoType;
        global $cfg_fenxiaoAmount;
        global $cfg_livefenxiaoAmount;
        global $cfg_memberfenxiaoAmount;
        global $cfg_businessfenxiaoAmount;
        global $cfg_fabufenxiaoAmount;
        global $cfg_fenxiaoLevel;
        global $cfg_fenxiaoZigou;
        global $paytypee;
        // if ($paytypee == 'huoniao_bonus') return '0';
        // $userid = $userLogin->getMemberID();
        // if($userid <= 0) return;

        $fenxiaoAmount      = $cfg_fenxiaoAmount;
        $livefenxiaoAmount  = $cfg_livefenxiaoAmount;
        $fabufenxiaoAmount  = $cfg_fabufenxiaoAmount;
        $fenxiaoLevel       = $cfg_fenxiaoLevel ? unserialize($cfg_fenxiaoLevel) : array();
        if ($cfg_fenxiaoState != 1 || !$fenxiaoLevel) return;
        $no = '';
        $cfg_fenxiaoZigou == 1 ? $no = '1' : $no = '0';

        if ($fabparam['amount'] <= 0) return;  //要进行分销的总金额如果小于等于0，则不进行分销

        $levelUID = $this->getFXS($userid, count($fenxiaoLevel), $no, []);
        // print_r($levelUID);
        // print_r($fenxiaoLevel);
        // die;

        include HUONIAOINC . "/config/fenxiaoConfig.inc.php";
        $fenxiaoSource = (int)$cfg_fenxiaoSource;

        if ($levelUID) {
            /*发布信息分佣*/
            if ($type == 1) {
                $totalAmount = $fabparam['amount'] * $fabufenxiaoAmount / 100;
                $usernamesql = $dsql->SetQuery("SELECT `username`,`nickname`,`realname` FROM `#@__member` WHERE `id` = " . $userid);
                $usernameres = $dsql->dsqlOper($usernamesql, 'results');
                $username    = $usernameres[0]['nickname'] ? $usernameres[0]['nickname'] : $usernameres[0]['username'];

                if ($fabparam['validType']) {
                    $ordernum    = '延长信息有效期，订单号：' . $ordernum;
                } elseif ($module == 'task') {
                    $ordernum    = $fabparam['type'];
                    $totalAmount = $fabparam['amount'];  //任务悬赏模块直接用上一步传过来的金额
                } else {
                    $ordernum    = '发布信息，订单号：' . $ordernum;
                }
                $this->putFxReward($module, '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel);
                return;
            }
            $product = array();
            /*新闻模块打赏*/
            if ($module == 'aritcle' || $module == 'circle' || $module == 'education' || $module == 'homemaking' || $module == 'huodong'  || $module == "house" || $module == "dating" || $module == "businessmaidan"  || $module == "travel" || $module == "tieba") {
                $totalAmount = $fabparam['amount'] * $fenxiaoAmount / 100;
                $usernamesql = $dsql->SetQuery("SELECT `username`,`nickname`,`realname` FROM `#@__member` WHERE `id` = " . $userid);
                $usernameres = $dsql->dsqlOper($usernamesql, 'results');
                $username    = $usernameres[0]['nickname'] ? $usernameres[0]['nickname'] : $usernameres[0]['username'];

                if ($module == 'aritcle' || $module == 'circle') {
                    $ordernum = '文章打赏' . ($fabparam['title'] ? "：" . strip_tags($fabparam['title']) : '');
                } elseif ($module == 'house') {
                    $ordernum = '经纪人套餐';
                } elseif ($module == 'businessmaidan') {
                    $ordernum = '商家买单：' . $ordernum;
                    $totalAmount = $fabparam['amount'];
                } elseif ($module == "travel" || $module == "homemaking" || $module == "education" || $module == "huodong" || $module == "tieba") { //不动
                } else {
                    $ordernum = '订单成功';
                }
                $this->putFxReward($module, '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel);

                //刷新置顶
            } elseif ($module == 'refreshTop') {

                $totalAmount = $fabparam['amount'];  //已经在上一步扣除过佣金
                $usernamesql = $dsql->SetQuery("SELECT `username`,`nickname`,`realname` FROM `#@__member` WHERE `id` = " . $userid);
                $usernameres = $dsql->dsqlOper($usernamesql, 'results');
                $username    = $usernameres[0]['nickname'] ? $usernameres[0]['nickname'] : $usernameres[0]['username'];

                $ordernum = '刷新置顶，订单号：' . $ordernum;
                $this->putFxReward($_module, '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel);

                //付费查看电话
            } elseif ($module == 'payPhone') {

                $totalAmount = $fabparam['amount'];  //已经在上一步扣除过佣金
                $usernamesql = $dsql->SetQuery("SELECT `username`,`nickname`,`realname` FROM `#@__member` WHERE `id` = " . $userid);
                $usernameres = $dsql->dsqlOper($usernamesql, 'results');
                $username    = $usernameres[0]['nickname'] ? $usernameres[0]['nickname'] : $usernameres[0]['username'];

                $ordernum = '付费查看电话，订单号：' . $ordernum;
                $this->putFxReward($fabparam['module'], '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel);
            } elseif ($module == 'memberleve' || $module == 'business') { /*商家入驻和会员升级分佣*/
                $totalAmount = $fabparam['amount'] * $cfg_businessfenxiaoAmount / 100;
                if ($module == 'memberleve') {
                    $totalAmount = $fabparam['amount'] * $cfg_memberfenxiaoAmount / 100;
                    $module = "member";
                    $ordernum = "会员升级，订单号：" . $ordernum;
                } else {
                    $ordernum = "商家入驻，订单号：" . $ordernum;
                }
                if ($totalAmount > 0) {
                    $product[] = array(
                        'fx_reward' => $totalAmount,
                    );
                }
                $usernamesql = $dsql->SetQuery("SELECT `username`,`nickname`,`realname` FROM `#@__member` WHERE `id` = " . $userid);
                $usernameres = $dsql->dsqlOper($usernamesql, 'results');
                $username    = $usernameres[0]['nickname'] ? $usernameres[0]['nickname'] : $usernameres[0]['username'];

                $this->putFxReward($module, '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel, $product);
            } elseif ($module == 'shop') {
                //                $sql = $dsql->SetQuery("SELECT p.`id`, p.`fx_reward`, p.`title`, op.`price`, op.`count`, o.`userid`, s.`userid` storeuid, m.`username` FROM `#@__shop_product` p LEFT JOIN `#@__shop_order_product` op ON op.`proid` = p.`id` LEFT JOIN `#@__shop_order` o ON o.`id` = op.`orderid` LEFT JOIN `#@__shop_store` s ON s.`id` = p.`store` LEFT JOIN `#@__member` m ON m.`id` = o.`userid` WHERE o.`ordernum` = '$ordernum'");
                //                $res = $dsql->dsqlOper($sql, "results");
                //                if(!$res) return;
                //
                //                $storeuid = $res[0]['storeuid'];
                //                $username = $res[0]['username'];
                //                $totalPrice = 0;//商品总金额
                //                $totalAmount = 0;//佣金总额
                //                foreach ($res as $k => $v) {
                //                    $totalPrice_ = $v['price'] * $v['count'];
                //                    $totalPrice += $totalPrice_;
                //                    $fx_reward_ratio = $v['fx_reward'];
                //                    if($v['fx_reward'] == '0'){
                //                        $fx_reward = 0;
                //                    }elseif($v['fx_reward']){
                //                        if(strstr($v['fx_reward'], '%')){
                //                            $fx_reward = $v['price'] * $v['count'] * (float)$v['fx_reward'] / 100;
                //                        }else{
                //                            $fx_reward = $v['fx_reward'] * $v['count'];
                //                        }
                //                    }else{
                //                        $fx_reward_ratio = $fenxiaoAmount."%";
                //                        $fx_reward = $totalPrice_ * $fenxiaoAmount / 100;
                //                    }
                //                    $totalAmount_ = $fx_reward;
                //                    $totalAmount += $totalAmount_;
                //
                //                    if($fx_reward > 0){
                //                        $product[] = array(
                //                            'id' => $v['id'],
                //                            'title' => $v['title'],
                //                            'price' => $v['price'],
                //                            'count' => $v['count'],
                //                            'fx_reward_ratio' => $fx_reward_ratio,
                //                            'fx_reward' => $fx_reward,
                //                        );
                //                    }
                //                }
                //                if($fenxiaoSource == 1){
                //                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$totalAmount' WHERE `id` = '$storeuid'");
                //                    $dsql->dsqlOper($archives, "update");memberModule
                //                }
                //                $fenxiaoparamarr = fenXiaoMoneyCalculation($module,$ordernum);
                if (strlen($ordernum) == 12) {
                    $ordernum = '商城电子券，订单号：' . $ordernum;
                } else {
                    $ordernum = '商城消费，订单号：' . $ordernum;
                }
                $this->putFxReward($module, $fabparam['storeuid'], $ordernum, $userid, $fabparam['username'], $fabparam['amount'], $levelUID, $fenxiaoLevel, $fabparam['product']);
            } elseif ($module == 'tuan') {

                // 团购券
                $is_quan = 0;
                //                if(strlen((string)$ordernum) == 12){
                //                    $is_quan = 1;
                //                    $sql = $dsql->SetQuery(
                //                        "SELECT p.`id`, p.`fx_reward`, p.`title`, o.`userid`, o.`orderprice`, o.`procount`, o.`ordernum`, s.`uid` storeuid, m.`username` FROM `#@__tuanlist` p
                //                        LEFT JOIN `#@__tuan_order` o ON o.`proid` = p.`id`
                //                        LEFT JOIN `#@__tuanquan` q ON q.`orderid` = o.`id`
                //                        LEFT JOIN `#@__tuan_store` s ON s.`id` = p.`sid`
                //                        LEFT JOIN `#@__member` m ON m.`id` = o.`userid`
                //                        WHERE q.`cardnum` = '$ordernum' AND q.`usedate` <> 0"
                //                    );
                //                    $res = $dsql->dsqlOper($sql, "results");
                //                    if(!$res) return;
                //
                //                    $storeuid = $res[0]['storeuid'];
                //                    $username = $res[0]['username'];
                //                    $ordernum = $res[0]['ordernum'];
                //                    $totalPrice = 0;//商品总金额
                //                    $totalAmount = 0;//佣金总额
                //
                //                    $totalPrice = $res[0]['orderprice'];
                //                    $fx_reward_ratio = $res[0]['fx_reward'];
                //                    if($res[0]['fx_reward'] == '0'){
                //                        $fx_reward = 0;
                //                    }elseif($res[0]['fx_reward']){
                //                        if(strstr($res[0]['fx_reward'], '%')){
                //                            $fx_reward = $res[0]['orderprice'] * (float)$res[0]['fx_reward'] / 100;
                //                        }else{
                //                            $fx_reward = $res[0]['fx_reward'];
                //                        }
                //                    }else{
                //                        $fx_reward_ratio = $fenxiaoAmount."%";
                //                        $fx_reward = ($totalPrice * $fenxiaoAmount / 100);
                //                    }
                //                    $totalAmount += $fx_reward;
                //
                //                // 快递
                //                }else{
                //                    $sql = $dsql->SetQuery(
                //                        "SELECT p.`id`, p.`fx_reward`, p.`title`, o.`userid`, o.`orderprice`, o.`procount`, s.`uid` storeuid, m.`username` FROM `#@__tuanlist` p
                //                        LEFT JOIN `#@__tuan_order` o ON o.`proid` = p.`id`
                //                        LEFT JOIN `#@__tuan_store` s ON s.`id` = p.`sid`
                //                        LEFT JOIN `#@__member` m ON m.`id` = o.`userid`
                //                        WHERE o.`ordernum` = '$ordernum'"
                //                    );
                //                    $res = $dsql->dsqlOper($sql, "results");
                //                    if(!$res) return;
                //
                //                    $storeuid = $res[0]['storeuid'];
                //                    $username = $res[0]['username'];
                //                    $totalPrice = 0;//商品总金额
                //                    $totalAmount = 0;//佣金总额
                //
                //                    $totalPrice = $res[0]['orderprice'] * $res[0]['procount'];
                //                    $fx_reward_ratio = $res[0]['fx_reward'];
                //                    if($res[0]['fx_reward'] == '0'){
                //                        $fx_reward = 0;
                //                    }elseif($res[0]['fx_reward']){
                //                        if(strstr($res[0]['fx_reward'], '%')){
                //                            $fx_reward = $res[0]['orderprice'] * $res[0]['procount'] * (float)$res[0]['fx_reward'] / 100;
                //                        }else{
                //                            $fx_reward = $res[0]['fx_reward'] * $res[0]['procount'];
                //                        }
                //                    }else{
                //                        $fx_reward_ratio = $fenxiaoAmount."%";
                //                        $fx_reward = ($totalPrice * $fenxiaoAmount / 100);
                //                    }
                //                    $totalAmount += $fx_reward;
                //                }
                //
                //                if($fx_reward > 0){
                //                    $product[] = array(
                //                        'id' => $res[0]['id'],
                //                        'title' => $res[0]['title'],
                //                        'price' => $res[0]['orderprice'],
                //                        'count' => $is_quan ? 1 : $res[0]['procount'],
                //                        'fx_reward_ratio' => $fx_reward_ratio,
                //                        'fx_reward' => $fx_reward,
                //                    );
                //                }
                //                if($fenxiaoSource == 1){
                //                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$totalAmount' WHERE `id` = '$storeuid'");
                //                    $dsql->dsqlOper($archives, "update");
                //                }
                //                $fenxiaoparamarr = fenXiaoMoneyCalculation($module,$ordernum);
                $ordernum = '团购消费券，订单号：' . $ordernum;
                $this->putFxReward($module, $fabparam['storeuid'], $ordernum, $userid, $fabparam['username'], $fabparam['amount'], $levelUID, $fenxiaoLevel, $fabparam['product']);
            } elseif ($module == 'info') {
                $sql = $dsql->SetQuery(
                    "SELECT o.`price`, p.`userid` storeuid, m.`username` FROM `#@__info_order` o
                    LEFT JOIN `#@__infolist` p ON p.`id` = o.`prod`
                    LEFT JOIN `#@__member` m ON m.`id` = o.`userid`
                    WHERE o.`ordernum` = '$ordernum'"
                );
                // $sql = $dsql->SetQuery(
                //     "SELECT o.`price`, p.`userid` storeuid, p.`fx_reward`, m.`username` FROM `#@__info_order` o
                //     LEFT JOIN `#@__infolist` p ON p.`id` = o.`prod`
                //     LEFT JOIN `#@__member` m ON m.`id` = o.`userid`
                //     WHERE o.`ordernum` = '$ordernum'"
                // );
                $res = $dsql->dsqlOper($sql, "results");
                if ($res) {

                    $storeuid = $res[0]['storeuid'];
                    $username = $res[0]['username'];
                    $totalPrice = 0; //商品总金额
                    $totalAmount = 0; //佣金总额

                    $totalPrice = $res[0]['price'];
                    //                    if($res[0]['fx_reward'] == '0'){
                    //                        $fx_reward = 0;
                    //                    }elseif($res[0]['fx_reward']){
                    //                        if(strstr($res[0]['fx_reward'], '%')){
                    //                            $fx_reward = $res[0]['price'] * (float)$res[0]['fx_reward'] / 100;
                    //                        }else{
                    //                            $fx_reward = $res[0]['fx_reward'];
                    //                        }
                    //                    }else{
                    $fx_reward = ($totalPrice * $fenxiaoAmount / 100);
                    //                    }
                    $totalAmount += $fx_reward;
                    //                    if($fenxiaoSource == 1){
                    //                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$totalAmount' WHERE `id` = '$storeuid'");
                    //                        $dsql->dsqlOper($archives, "update");
                    //                    }
                    $this->putFxReward($module, $storeuid, $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel, $product);
                }
            } elseif ($module == 'waimai') {
                $sql = $dsql->SetQuery(
                    "SELECT o.`food`, o.`priceinfo`, s.`userid` storeuid, m.`username` FROM `#@__waimai_order_all` o
                    LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid`
                    LEFT JOIN `#@__member` m ON m.`id` = o.`uid`
                    WHERE o.`ordernum` = '$ordernum'"
                ); // AND `state` = 1
                $res = $dsql->dsqlOper($sql, "results");

                if ($res) {
                    $order = $res[0];

                    $storeuid = $res[0]['storeuid'];
                    $username = $res[0]['username'];
                    $totalPrice = 0; //商品总金额
                    $totalAmount = 0; //佣金总额

                    $food = unserialize($order['food']);
                    // $priceinfo = unserialize($order['priceinfo']);
                    foreach ($food as $k => $v) {
                        $totalPrice_ = $v['price'] * $v['count'];
                        $totalPrice += $totalPrice_;
                        $fx_reward_ratio = $v['fx_reward'];
                        if ($v['fx_reward'] == '0') {
                            $fx_reward = 0;
                        } elseif ($v['fx_reward']) {
                            if (strstr($v['fx_reward'], '%')) {
                                $fx_reward = $v['price'] * $v['count'] * (float)$v['fx_reward'] / 100;
                            } else {
                                $fx_reward = $v['fx_reward'] * $v['count'];
                            }
                        } else {
                            $fx_reward_ratio = $fenxiaoAmount . "%";
                            $fx_reward = $totalPrice_ * $fenxiaoAmount / 100;
                        }
                        $totalAmount_ = $fx_reward;
                        $totalAmount += $totalAmount_;

                        if ($fx_reward > 0) {
                            $product[] = array(
                                'id' => $v['id'],
                                'title' => $v['title'],
                                'price' => $v['price'],
                                'count' => $v['count'],
                                'fx_reward_ratio' => $fx_reward_ratio,
                                'fx_reward' => $fx_reward,
                            );
                        }
                    }


                    //平台承担，从应得部分扣除
                    if ($fenxiaoSource == 0) {
                        global $fencheng_foodprice;
                        $totalAmount = $totalAmount * $fencheng_foodprice / 100;
                    }

                    //                    if($fenxiaoSource == 1){
                    //                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$totalAmount' WHERE `id` = '$storeuid'");
                    //                        $dsql->dsqlOper($archives, "update");
                    //                    }
                    $this->putFxReward($module, $storeuid, $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel, $product);
                }
            } elseif ($module == 'live') {
                $sql = $dsql->SetQuery("SELECT * FROM `#@__live_payorder` WHERE `order_id` = '$ordernum'");
                $ret = $dsql->dsqlOper($sql, "results");
                if ($ret) {

                    $totalPrice = 0; //商品总金额
                    $totalAmount = 0; //佣金总额

                    $totalPrice = $ret[0]['amount'];
                    $fx_reward = ($totalPrice * $livefenxiaoAmount / 100);
                    $totalAmount += $fx_reward;

                    $this->putFxReward($module, '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel, $product);
                }
            } elseif ($module == 'awardlegou') {

                $totalAmount = $fabparam['amount'] * $fenxiaoAmount / 100;

                $usernamesql = $dsql->SetQuery("SELECT `username`,`nickname`,`realname` FROM `#@__member` WHERE `id` = " . $userid);
                $usernameres = $dsql->dsqlOper($usernamesql, 'results');

                $username    = $usernameres[0]['username'];
                $this->putFxReward($module, '', $ordernum, $userid, $username, $totalAmount, $levelUID, $fenxiaoLevel);
            }
        }
    }

    /**
     * 发放佣金
     */
    private function putFxReward($module, $storeuid, $ordernum, $userid, $username, $totalAmount = 0, $levelUID = array(), $fenxiaoLevel = array(), $product = array())
    {
        global $dsql;
        global $cfg_fenxiaoName;
        global $installModuleTitleArr;
        global $cfg_fenxiaoZigou;
        global $cfg_fenxiaoType;
        global $transaction_id;
        global $paytype;
        global $userLogin;
        $product = serialize($product);
        if ($totalAmount <= 0) return;

        require_once HUONIAOROOT . "/api/payment/log.php";
        $_fenxiaoLog = new CLogFileHandler(HUONIAOROOT . '/log/fenxiao/' . date('Y-m-d') . '.log', true);

        $date = time();
        $total_put = 0;
        // var_dump($fenxiaoLevel);
        foreach ($levelUID as $k => $uv) {
            // 如果某一级用户不是分销商，结束发放(修改之后,跳出发放下一级顶替不是分销商的那级)

            // if($cfg_fenxiaoZigou==0) {
            if (empty($uv['fid']) || $uv['fstate'] != 1) {
                continue;
            }
            // }

            $v = $uv['id'];

            //佣金比例
            $fee = $cfg_fenxiaoType ? $fenxiaoLevel[$uv['level']]['fee'] : $fenxiaoLevel[$k]['fee'];

            $amount = sprintf("%.2f", $totalAmount * $fee / 100);
            $total_put += $amount;
            $level = $k + 1;

            $level = $cfg_fenxiaoType ? $uv['level'] + 1 : $level;
            if ($amount > 0) {
                //增加会员余额
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$amount' WHERE `id` = '$v'");
                $dsql->dsqlOper($archives, "update");

                //保存操作日志
                $fenxiaoname = $cfg_fenxiaoType ? $fenxiaoLevel[$uv['level']]['name'] : $fenxiaoLevel[$k]['name'];
                $title  = $fenxiaoname . '佣金收益，来自会员：' . ($k == 0 ? $username : $levelUID[$k - 1]['username']) . '，' . ($module == 'member' || $module == 'business' ? $ordernum : ("在[" . $installModuleTitleArr[$module] . ']消费[' . $ordernum . ']'));
                $title_ = is_numeric($ordernum) ? $installModuleTitleArr[$module] . '：' . $ordernum . "分佣" : $ordernum . "分佣";

                $param  = array(
                    "module"        => $module,
                    "userid"        => $userid,
                    "ordernum"      => $ordernum
                );
                $user  = $userLogin->getMemberInfo($v);
                $usermoney = $user['money'];
                $urlParam          = serialize($param);
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`title`,`urlParam`,`balance`) VALUES ('$v', '1', '$amount', '$title', '$date','member','yongjin','$title_','$urlParam','$usermoney')");
                $dsql->dsqlOper($archives, "update");

                // 分销记录
                $child = $k == 0 ? $userid : $levelUID[$k - 1]['id'];
                //                $fee = $fenxiaoLevel[$k]['fee'];
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_fenxiao` (`module`, `uid`, `byuid`, `child`, `ordernum`, `level`, `amount`, `pubdate`, `product`, `fee`) VALUES ('$module', $v, $userid, $child, '$ordernum', '$level', $amount, $date, '$product', '$fee')");
                $ret = $dsql->dsqlOper($archives, "update");
                if ($ret != 'ok') {
                    $_fenxiaoLog->DEBUG("分销佣金明细记录失败：" . json_encode($ret));
                    $_fenxiaoLog->DEBUG("执行SQL：" . $archives);
                }

                //工行E商通银行分账
                rfbpShareAllocation(array(
                    "uid" => $v,
                    "ordertitle" => $fenxiaoLevel[$k]['name'] . '佣金收益',
                    "ordernum" => $ordernum,
                    "orderdata" => array('来源用户' => ($k == 0 ? $username : $levelUID[$k - 1]['username']), '订单信息' => $installModuleTitleArr[$module] . ':' . $ordernum),
                    "totalAmount" => $totalAmount,
                    "amount" => $amount,
                    "channelPayOrderNo" => $transaction_id,
                    "paytype" => $paytype
                ));
                $date   = GetMkTime(time());
                $userinfo = $userLogin->getMemberInfo($v);
                $usermoney = $userinfo['money'];
                //自定义配置
                $param = array(
                    "service"  => "member",
                    "type"     => "user",
                    "template" => "fenxiao"
                );
                $config = array(
                    "username" => $userinfo['nickname'],
                    "amount" => '+' . $amount,
                    "money" => $usermoney,
                    "date" => date("Y-m-d H:i:s", $date),
                    "info" => '分销佣金',
                    "fields" => array(
                        'keyword1' => '变动类型',
                        'keyword2' => '变动金额',
                        'keyword3' => '变动时间',
                        'keyword4' => '帐户余额'
                    )
                );

                updateMemberNotice($v, "会员-帐户资金变动提醒", $param, $config);
            }
        }
        // 扣除商家余额 已取消，由平台承担费用
        // $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$total_put' WHERE `id` = '$storeuid'");
        // $dsql->dsqlOper($archives, "update");

        //保存操作日志
        // $title = '支付分销佣金：'.$ordernum;
        // $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`) VALUES ('$storeuid', '0', '$total_put', '$title', '$date')");
        // $dsql->dsqlOper($archives, "update");

    }
    /**
     * 获取分销商，从一级开始，购买人的直接上级为一级
     */
    private function getFXS($uid, $level, $no, $arr = [])
    {
        global $dsql;
        global $cfg_fenxiaoType;
        global $fenxiaoLevel;

        if (!$uid) return;

        //固定模式
        if ($cfg_fenxiaoType) {
            $sql = $dsql->SetQuery("SELECT `from_uid` FROM `#@__member` WHERE `id` = $uid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $sql = $dsql->SetQuery("SELECT m.`id`, m.`from_uid`, m.`username`, f.`id` fid, f.`state` fstate, f.`level` FROM `#@__member` m LEFT JOIN `#@__member_fenxiao_user` f ON f.`uid` = m.`id` WHERE m.`id` = " . $ret[0]['from_uid']);
                $res = $dsql->dsqlOper($sql, "results");
                if ($res) {
                    return array($res[0]);
                }
            }

            //等级模式
        } else {
            $sql = $dsql->SetQuery("SELECT m.`id`, m.`from_uid`, m.`username`, f.`id` fid, f.`state` fstate FROM `#@__member` m LEFT JOIN `#@__member_fenxiao_user` f ON f.`uid` = m.`id` WHERE m.`id` = " . $uid);
            $res = $dsql->dsqlOper($sql, "results");
            if ($res) {
                if ($no > 0) {
                    $arr[] = $res[0];
                }
                if ($no < $level && $res[0]['from_uid']) {
                    return $this->getFXS($res[0]['from_uid'], $level, $no + 1, $arr);
                }
                return $arr;
            }
        }
        return $arr;
    }

    /**
     * 我推荐的用户
     */
    public function myRecUser()
    {
        global $dsql;
        global $userLogin;
        global $cfg_fenxiaoLevel;
        global $cfg_fenxiaoOfflineItems;  //我的团队显示内容

        $fenxiaoOfflineItems = $cfg_fenxiaoOfflineItems ? explode(',', $cfg_fenxiaoOfflineItems) : array();

        $orderby  = $this->param['orderby'];
        $keywords = $this->param['keywords'];
        $page     = (int)$this->param['page'];
        $pageSize = (int)$this->param['pageSize'];

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        //搜索
        $search = "";
        if ($keywords) {
            $search = " AND (`username` = '$keywords' OR `nickname` = '$keywords')";
        }

        $sql = $dsql->SetQuery("SELECT COUNT(`id`) total FROM `#@__member` WHERE `from_uid` = $uid" . $search);
        $res = $dsql->dsqlOper($sql, "results");
        // 总条数
        $totalCount = $res[0]['total'];
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]);  //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";

        $order = ' ORDER BY `id` DESC';
        if ($orderby == 1) {
            $order = ' ORDER BY `id`';
        }

        //$sql = $dsql->SetQuery("SELECT `id`, `username`, (SELECT COUNT(m2.`id`) FROM `#@__member` m2 WHERE m2.`from_uid` = `id`) child FROM `#@__member` m1 WHERE `from_uid` = $uid".$where);

        $sql = $dsql->SetQuery("SELECT `id`, `username`, `nickname`, `photo`, `regtime`, `money`, `point`, `phone` FROM `#@__member` WHERE `from_uid` = $uid" . $search . $order . $where);
        $res = $dsql->dsqlOper($sql, "results");

        $list = array();
        if ($res) {
            $fenxiaoLevel = $cfg_fenxiaoLevel ? unserialize($cfg_fenxiaoLevel) : array();
            $level = count($fenxiaoLevel);
            foreach ($res as $key => $value) {
                $list[$key]['id'] = $value['id'];
                $user = array(
                    'username' => $value['nickname'] ? $value['nickname'] : $value['username'],
                    'regtime' => $value['regtime'],
                    'photo' => $value['photo'] ? getFilePath($value['photo']) : "",
                );
                $list[$key]['user'] = $user;

                // $usercount = $this->getAllFenxiaoSub($value['id'], $level, 1, 0);
                // if($usercount){
                //     $sql = $dsql->SetQuery("SELECT SUM(`amount`) total FROM `#@__member_fenxiao` WHERE `child` = ".$value['id']);
                //     $ret = $dsql->dsqlOper($sql, "results");
                //     $useramount = $ret[0]['total'] ? $ret[0]['total'] : 0;
                // }else{
                //     $useramount = 0;
                // }

                //手机号码
                if (in_array('phone', $fenxiaoOfflineItems)) {
                    $list[$key]['phone'] = $value['phone'];
                }

                //账户余额
                if (in_array('money', $fenxiaoOfflineItems)) {
                    $list[$key]['money'] = sprintf('%.2f', $value['money']);
                }

                //账户积分
                if (in_array('point', $fenxiaoOfflineItems)) {
                    $list[$key]['point'] = (int)$value['point'];
                }

                //推荐人数
                if (in_array('people', $fenxiaoOfflineItems)) {
                    $sql = $dsql->SetQuery("SELECT COUNT(`id`) total FROM `#@__member` WHERE `from_uid` = " . $value['id']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $usercount = $ret[0]['total'];
                    $list[$key]['usercount'] = $usercount;
                }

                //带来收益
                if (in_array('income', $fenxiaoOfflineItems)) {
                    $sql = $dsql->SetQuery("SELECT SUM(`amount`) total FROM `#@__member_fenxiao` WHERE `uid` = $uid AND `child` = " . $value['id']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $useramount = $ret[0]['total'] ? $ret[0]['total'] : 0;
                    $list[$key]['useramount'] = $useramount;
                }

                //找子级合伙人
                $list[$key]['child'] = $this->reMyRecUser($value['id'], 2);
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 递归遍历合伙人
     * @param $uid 当前用户ID
     * @param $level 当前合伙人级数
     */
    private function reMyRecUser($uid, $level)
    {
        // 全局变量
        global $dsql;
        global $userLogin;
        global $cfg_fenxiaoLevel;
        global $cfg_fenxiaoOfflineItems;  //我的团队显示内容

        $fenxiaoOfflineItems = $cfg_fenxiaoOfflineItems ? explode(',', $cfg_fenxiaoOfflineItems) : array();

        $list = array();

        if (isset($uid) && $level > 0) {
            // 查询并封装数据
            $sql = $dsql->SetQuery("SELECT `id`, `username`, `nickname`, `photo`, `regtime`, `money`, `point`, `phone` FROM `#@__member` WHERE `from_uid` = $uid order by id desc");
            $res = $dsql->dsqlOper($sql, "results");

            foreach ($res as $key => $value) {
                // 1. id项
                $list[$key]['id'] = $value['id'];
                // 2. user项
                $user = array(
                    'username' => $value['nickname'] ? $value['nickname'] : $value['username'],
                    'regtime' => $value['regtime'],
                    'photo' => $value['photo'] ? getFilePath($value['photo']) : "",
                );
                $list[$key]['user'] = $user;

                //3. 手机号码
                if (in_array('phone', $fenxiaoOfflineItems)) {
                    $list[$key]['phone'] = $value['phone'];
                }

                //4. 账户余额
                if (in_array('money', $fenxiaoOfflineItems)) {
                    $list[$key]['money'] = sprintf('%.2f', $value['money']);
                }

                //5. 账户积分
                if (in_array('point', $fenxiaoOfflineItems)) {
                    $list[$key]['point'] = (int)$value['point'];
                }
                //6. 推荐人数
                if (in_array('people', $fenxiaoOfflineItems)) {
                    $sql = $dsql->SetQuery("SELECT COUNT(`id`) total FROM `#@__member` WHERE `from_uid` = " . $value['id']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $usercount = $ret[0]['total'];
                    $list[$key]['usercount'] = $usercount;
                }
                // 8.子项
                $list[$key]['child'] = $this->reMyRecUser($value['id'], $level - 1);
            }
        }

        return $list;
    }

    /**
     * 获取所有下线及佣金总额，不一定是分销商
     */
    public function getAllFenxiaoSub($uid, $level, $no, $count)
    {
        global $dsql;
        $sql = $dsql->SetQuery("SELECT f.`id`, m.`id` uid FROM `#@__member` m LEFT JOIN `#@__member_fenxiao` f ON m.`id` = f.`uid` WHERE m.`from_uid` = $uid");
        $res = $dsql->dsqlOper($sql, "results");
        if ($res) {
            if ($no < $level) {
                foreach ($res as $key => $value) {
                    $count += $this->getAllFenxiaoSub($value['uid'], $level, ++$no, 0);
                }
            }
            $count += count($res);
        }
        return $count;
    }

    /**
     * 分销佣金记录
     */
    public function fenxiaoLog()
    {
        global $dsql;
        global $userLogin;
        global $cfg_fenxiaoLevel;
        $list = array();
        $where = "";

        $date     = $this->param['date'];
        $page     = (int)$this->param['page'];
        $pageSize = (int)$this->param['pageSize'];

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        if ($date) {
            $where .= " AND DATE_FORMAT(FROM_UNIXTIME(`pubdate`), '%Y-%m') = '$date'";
        }

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);   //登录超时，请重新登录！
        }
        $sql = $dsql->SetQuery("SELECT COUNT(`id`) total FROM `#@__member_fenxiao` WHERE `uid` = $uid" . $where);
        $res = $dsql->dsqlOper($sql, "results");
        $totalCount = $res[0]['total'];

        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！

        $fenxiaoLevel = $cfg_fenxiaoLevel ? unserialize($cfg_fenxiaoLevel) : array();

        // $level = $fenxiaoLevel ? count($fenxiaoLevel) : 3;

        $totalAmount = 0;
        // for ($i = 1; $i <= $level ; $i++) {
        //     $sql = $dsql->SetQuery("SELECT SUM(`amount`) total FROM `#@__member_fenxiao` WHERE `uid` = $uid AND `level` = $i");
        //     $res = $dsql->dsqlOper($sql, "results");
        //     $totalAmount += $res[0]['total'];
        // }
        $sql = $dsql->SetQuery("SELECT SUM(`amount`) total FROM `#@__member_fenxiao` WHERE `uid` = $uid" . $where);
        $res = $dsql->dsqlOper($sql, "results");
        $totalAmount = $res[0]['total'];

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount,
            "totalAmount" => $totalAmount
        );

        $atpage = $pageSize * ($page - 1);
        $limit = " LIMIT $atpage, $pageSize";

        $sql = $dsql->SetQuery("SELECT * FROM `#@__member_fenxiao` WHERE `uid` = $uid $where ORDER BY `id` DESC" . $limit);
        $res = $dsql->dsqlOper($sql, "results");
        if ($res) {
            $amount_month = array();
            foreach ($res as $key => $value) {
                $list[$key]['id'] = $value['id'];
                $list[$key]['module'] = $value['module'];
                $list[$key]['ordernum'] = $value['ordernum'];
                $list[$key]['amount'] = $value['amount'];

                //                $month = date('Ym', $value['pubdate']);
                //                if(!isset($amount_month[$month])){
                //                    $sql = $dsql->SetQuery("SELECT SUM(`amount`) total FROM `#@__member_fenxiao` WHERE `uid` = $uid AND DATE_FORMAT(FROM_UNIXTIME(`pubdate`),'%Y%m') = '$month'");
                //                    $res = $dsql->dsqlOper($sql, "results");
                //                    $amount_month[$month] = $res[0]['total'];
                //                }
                $list[$key]['pubdate'] = $value['pubdate'];
            }
            //$pageinfo['amount_month'] = $amount_month;
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * 分销订单详情
     */
    public function fenxiaoDetail()
    {
        global $dsql;
        global $userLogin;
        global $cfg_fenxiaoName;
        global $cfg_fenxiaoLevel;
        global $installModuleTitleArr;

        $fenxiaoLevel = $cfg_fenxiaoLevel ? unserialize($cfg_fenxiaoLevel) : array();

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) return array("state" => 0, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $param = $this->param;
        $id = (int)$param['id'];

        if (empty($id)) return false;

        $sql = $dsql->SetQuery("SELECT f.*, m.`username`, m.`nickname` FROM `#@__member_fenxiao` f LEFT JOIN `#@__member` m ON m.`id` = f.`byuid`  WHERE f.`uid` = $uid AND f.`id` = $id");
        $res = $dsql->dsqlOper($sql, "results");
        if ($res) {
            $log = $res[0];
            $detail = array();


            $detail['id'] = $log['id'];
            $detail['module'] = $log['module'];
            $detail['moduleName'] = isset($log['module']) ? $installModuleTitleArr[$log['module']] : $log['module'];
            $detail['ordernum'] = $log['ordernum'];
            $detail['amount'] = $log['amount'];
            $detail['pubdate'] = $log['pubdate'];
            $detail['by'] = $log['byuid'];
            $detail['byuser'] = $log['nickname'] ? $log['nickname'] : $log['username'];
            $detail['fee'] = $log['fee'];
            $detail['level'] = $log['level'];
            if (isset($fenxiaoLevel[$log['level'] - 1])) {
                $detail['levelName'] = $fenxiaoLevel[$log['level'] - 1]['name'];
            } else {
                if ($log['level'] < 7) {
                    $detail['levelName'] = self::$langData['siteConfig'][30]['6' . $log['level']];
                } else {
                    $detail['levelName'] = $log['level'] . '级' . $cfg_fenxiaoName;
                }
            }
            $reward = 0;
            $product = unserialize($log['product']);

            $product = $product ? $product : array();
            if ($product) {
                foreach ($product as $k => $v) {
                    $reward += $v['fx_reward'];
                    $title = $v['title'];
                    $litpic = "";
                    $url = "";
                    switch ($log['module']) {
                        case 'shop':
                            $sql = $dsql->SetQuery("SELECT `id`, `title`, `litpic` FROM `#@__shop_product` WHERE `id` = " . $v['id']);
                            $res = $dsql->dsqlOper($sql, "results");
                            if ($res) {
                                $title = $res[0]['title'];
                                $litpic = $res[0]['litpic'] ? getFilePath($res[0]['litpic']) : '';
                            }
                            break;
                        case 'tuan':
                            $sql = $dsql->SetQuery("SELECT `id`, `title`, `litpic` FROM `#@__tuanlist` WHERE `id` = " . $v['id']);
                            $res = $dsql->dsqlOper($sql, "results");
                            if ($res) {
                                $title = $res[0]['title'];
                                $litpic = $res[0]['litpic'] ? getFilePath($res[0]['litpic']) : '';
                            }
                            break;
                        case 'waimai':
                            $sql = $dsql->SetQuery("SELECT `id`, `title`, `pics` FROM `#@__waimai_list` WHERE `id` = " . $v['id']);
                            $res = $dsql->dsqlOper($sql, "results");
                            if ($res) {
                                if ($res[0]['pics']) {
                                    $pics = explode(",", $res[0]['pics']);
                                    $title = $res[0]['title'];
                                    $litpic = getFilePath($pics[0]);
                                }
                            }
                            break;
                    }
                    $url = getUrlPath(array("service" => $log['module'], "template" => "detail", "id" => $v['id']));
                    $product[$k]['title'] = $title;
                    $product[$k]['litpic'] = $litpic;
                    $product[$k]['url'] = $url;
                }
            } else {
                $reward = floatval(sprintf('%.2f', $log['amount'] / ($log['fee'] / 100)));
            }

            $detail['product'] = $product;
            $detail['reward'] = $reward;

            return $detail;
        }
    }

    /**
     * 分销商申请
     */
    public function fenxiaoJoin()
    {
        global $dsql;
        global $userLogin;
        global $cfg_fenxiaoState;
        global $cfg_fenxiaoType;
        global $cfg_fenxiaoLevel;
        global $cfg_fenxiaoName;
        global $siteCityInfo;
        global $langData;
        global $cfg_fenxiaoJoinCheckPhone;

        $fenxiaoJoinCheckPhone = (int)$cfg_fenxiaoJoinCheckPhone;

        $param = $this->param;

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！
        if ($cfg_fenxiaoState != 1) return array("state" => 200, "info" => $langData['siteConfig'][33][21]); //非法请求！

        $sql = $dsql->SetQuery("SELECT `id`, `state` FROM `#@__member_fenxiao_user` WHERE `uid` = $uid");
        $res = $dsql->dsqlOper($sql, "results");
        if ($res) {
            if ($res[0]['state'] == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][105]); //您已经申请，无需重复提交！
            if ($res[0]['state'] == 2) return array("state" => 200, "info" => '您提交的申请已被拒绝，请联系管理员'); //您提交的申请已被拒绝，请联系管理员
            return array("state" => 200, "info" => '您已经是' . $cfg_fenxiaoName); //您已经申请，无需重复提交！
        }

        $userinfo = $userLogin->getMemberInfo();

        $addr     = (int)$param['addr'];  //分站ID
        $level    = (int)$param['level'];  //入驻等级
        $areaCode = $param['areaCode'];
        $phone    = $param['phone'];
        $vercode  = $param['vercode'];

        if (empty($addr)) return array("state" => 200, "info" => $langData['siteConfig'][54][45]); //请选择分站

        if (empty($phone)) return array("state" => 200, "info" => $langData['siteConfig'][20][29]); //请输入您的手机号
        if (empty($vercode) && $fenxiaoJoinCheckPhone == 0) return array("state" => 200, "info" => $langData['siteConfig'][20][540]); //请填写验证码

        //国际版需要验证区域码
        $cphone_ = $phone;
        $archives = $dsql->SetQuery("SELECT `international` FROM `#@__sitesms` WHERE `state` = 1");
        $results = $dsql->dsqlOper($archives, "results");
        if ($results) {
            $international = $results[0]['international'];
            if ($international) {
                $cphone_ = $areaCode . $phone;
            }
        }

        if($fenxiaoJoinCheckPhone == 0){
            $ip = GetIP();
            $sql_code = $dsql->SetQuery("SELECT * FROM `#@__site_messagelog` WHERE `type` = 'phone' AND `lei` = 'verify' AND `ip` = '$ip' AND `user` = '$cphone_' ORDER BY `id` DESC LIMIT 1");
            $res_code = $dsql->dsqlOper($sql_code, "results");
            if ($res_code) {
                $code = $res_code[0]['code'];
                $codeID = $res_code[0]['id'];

                if (strtolower($vercode) != $code) {
                    return array('state' => 200, 'info' => '验证码输入错误，请重试！');
                }

                //5分钟有效期
                $now = GetMkTime(time());
                if ($now - $res_code[0]['pubdate'] > 300) return array("state" => 200, "info" => $langData['siteConfig'][21][33]);   //验证码已过期，请重新获取！
            } else {
                return array('state' => 200, 'info' => '验证码输入错误，请重试！');
            }
        }

        include HUONIAOINC . "/config/fenxiaoConfig.inc.php";
        $state = (int)$cfg_fenxiaoJoinCheck;
        $cfg_fenxiaoRecAmount = (int)$cfg_fenxiaoRecAmount;
        $pubdate = time();

        //固定模式（收费）
        if ($cfg_fenxiaoType) {

            $fenxiaoLevel = $cfg_fenxiaoLevel ? unserialize($cfg_fenxiaoLevel) : array();
            if (!$fenxiaoLevel) return array("state" => 200, "info" => "系统未配置分销等级，申请失败！");

            $amount = $fenxiaoLevel[$level]['amount'];

            //入驻收费
            if ($amount > 0) {

                $ordernum = create_ordernum();
                $param = array("type" => "fenxiaoJoin", "subject" => $cfg_fenxiaoName . "入驻", "level" => $level, "userid" => $uid, "price" => $amount, "ordernum" => $ordernum, "cityid" => $addr, "phone" => $cphone_);
                $params = serialize($param);

                $archives  = $dsql->SetQuery("INSERT INTO `#@__pay_log` (`ordertype`, `ordernum`, `uid`, `body`, `amount`, `paytype`, `state`, `pubdate`) VALUES ('member', '$ordernum', '$uid', '$params', '$amount', '', 0, $pubdate)");
                $dsql->dsqlOper($archives, "update");

                $param_ = array();
                $param_['ordernum'] = $ordernum;
                $param_['ordertype'] = 'fenxiaoJoinPay';
                $param_['amount'] = $amount;
                $param_['title'] = $fenxiaoLevel[$level]['name'];


                $order = createPayForm("member", $ordernum, $amount, '', $langData['siteConfig'][29][126], array(), 1);  //订单支付
                $timeout = GetMkTime(time()) + 1800;
                
                if(is_array($order)){
                    $order['timeout'] = $timeout;
                }

                return  $order;
                //                $param = array(
                //                    "service" => "member",
                //                    "type" => "user",
                //                    "template" => "pay",
                //                    "param" => http_build_query($param_) . "&currentPageOpen=1"
                //                );
                //
                //
                //                return getUrlPath($param);


                //入驻免费
            } else {
                $sql = $dsql->SetQuery("INSERT INTO `#@__member_fenxiao_user` (`uid`, `phone`, `state`, `pubdate`, `level`, `back`) VALUES ('$uid', '$cphone_', '$state', '$pubdate', '$level', '$amount')");
                $res = $dsql->dsqlOper($sql, "lastid");
                if ($res && is_numeric($res)) {

                    //记录用户行为日志
                    memberLog($uid, 'member', 'fenxiao', $res, 'insert', '入驻分销商', '', $sql);

                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `addr` = '$addr' WHERE `id` = '$uid'");
                    $dsql->dsqlOper($archives, "update");

                    if (isset($codeID)) {
                        $sql = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `id` = $codeID");
                        $dsql->dsqlOper($sql, "update");
                    }


                    //入驻分销商不需要申请的话，给推荐人发放佣金
                    if ($state && $cfg_fenxiaoRecAmount > 0) {
                        //查找推荐人
                        $to = '';
                        $from_uid = 0;
                        $sql = $dsql->SetQuery("SELECT m.`username`, m.`nickname`, m.`from_uid` FROM `#@__member` m WHERE m.`id` = $uid");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $to = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                            $from_uid = $ret[0]['from_uid'];
                        }

                        $sql = $dsql->SetQuery("SELECT m.`username`, m.`nickname` FROM `#@__member` m LEFT JOIN `#@__member_fenxiao_user` f ON f.`uid` = m.`id` WHERE m.`id` = $from_uid AND f.`id` != ''");
                        $ret = $dsql->dsqlOper($sql, "results");
                        if ($ret) {
                            $from = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];

                            //会员-分销商推荐注册成功通知
                            //奖励推荐人
                            $date = time();
                            $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$cfg_fenxiaoRecAmount' WHERE `id` = '$from_uid'");
                            $dsql->dsqlOper($archives, "update");
                            $user  = $userLogin->getMemberInfo($from_uid);
                            $usermoney = $user['money'];

                            //保存操作日志
                            $info = "成功邀请" . $cfg_fenxiaoName . "入驻获得佣金，被邀请人：" . $to;  //账户充值
                            $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`balance`) VALUES ('$from_uid', '1', '$cfg_fenxiaoRecAmount', '$info', '$date','member','yongjin','$usermoney')");
                            $dsql->dsqlOper($archives, "update");

                            //会员通知
                            $param = array(
                                "service"  => "member",
                                "type" => "user",
                                "template" => "fenxiao"
                            );

                            //自定义配置
                            $config = array(
                                "from" => $from,
                                "to" => $to,
                                "amount" => $cfg_fenxiaoRecAmount,
                                "fields" => array(
                                    'keyword1' => '推荐人',
                                    'keyword2' => '被推荐人'
                                )
                            );

                            updateMemberNotice($from_uid, "会员-" . $cfg_fenxiaoName . "推荐注册成功通知", $param, $config);
                        }
                    }


                    //微信通知
                    $cityName = $siteCityInfo['name'];
                    $cityid  = $siteCityInfo['cityid'];
                    $param = array(
                        'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                        'cityid' => $cityid,
                        'notify' => '管理员消息通知',
                        'fields' => array(
                            'contentrn'  => $cityName . "分站\r\n申请" . $cfg_fenxiaoName . "\r\n用户：" . $userinfo['nickname'],
                            'date' => date("Y-m-d H:i:s", time()),
                        )
                    );
                    updateAdminNotice("member", "fenxiaoUser", $param);

                    return $langData['siteConfig'][20][193]; //提交成功，请耐心等待申请结果！
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][20][180]); //提交失败，请重试！
                }
            }

            //等级模式（免费）
        } else {
            $sql = $dsql->SetQuery("INSERT INTO `#@__member_fenxiao_user` (`uid`, `phone`, `state`, `pubdate`) VALUES ($uid, '$cphone_', $state, $pubdate)");
            $res = $dsql->dsqlOper($sql, "lastid");
            if ($res && is_numeric($res)) {

                //记录用户行为日志
                memberLog($uid, 'member', 'fenxiao', $res, 'insert', '入驻分销商', '', $sql);

                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `addr` = '$addr' WHERE `id` = '$uid'");
                $dsql->dsqlOper($archives, "update");

                if (isset($codeID)) {
                    $sql = $dsql->SetQuery("DELETE FROM `#@__site_messagelog` WHERE `id` = $codeID");
                    $dsql->dsqlOper($sql, "update");
                }

                //入驻分销商不需要申请的话，给推荐人发放佣金
                if ($state && $cfg_fenxiaoRecAmount > 0) {
                    //查找推荐人
                    $to = '';
                    $from_uid = 0;
                    $sql = $dsql->SetQuery("SELECT m.`username`, m.`nickname`, m.`from_uid` FROM `#@__member` m WHERE m.`id` = $uid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $to = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                        $from_uid = $ret[0]['from_uid'];
                    }

                    $sql = $dsql->SetQuery("SELECT m.`username`, m.`nickname` FROM `#@__member` m LEFT JOIN `#@__member_fenxiao_user` f ON f.`uid` = m.`id` WHERE m.`id` = $from_uid AND f.`id` != ''");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $from = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];

                        //会员-分销商推荐注册成功通知
                        //奖励推荐人
                        $date = time();
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$cfg_fenxiaoRecAmount' WHERE `id` = '$from_uid'");
                        $dsql->dsqlOper($archives, "update");
                        $user  = $userLogin->getMemberInfo($from_uid);
                        $usermoney = $user['money'];

                        //保存操作日志
                        $info = "成功邀请" . $cfg_fenxiaoName . "入驻获得佣金，被邀请人：" . $to;  //账户充值
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`balance`) VALUES ('$from_uid', '1', '$cfg_fenxiaoRecAmount', '$info', '$date','member','yongjin','$usermoney')");
                        $dsql->dsqlOper($archives, "update");

                        //会员通知
                        $param = array(
                            "service"  => "member",
                            "type" => "user",
                            "template" => "fenxiao"
                        );

                        //自定义配置
                        $config = array(
                            "from" => $from,
                            "to" => $to,
                            "amount" => $cfg_fenxiaoRecAmount,
                            "fields" => array(
                                'keyword1' => '推荐人',
                                'keyword2' => '被推荐人'
                            )
                        );

                        updateMemberNotice($from_uid, "会员-" . $cfg_fenxiaoName . "推荐注册成功通知", $param, $config);
                    }
                }


                //微信通知
                $cityName = $siteCityInfo['name'];
                $cityid  = $siteCityInfo['cityid'];
                $param = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $cityName . "分站\r\n申请" . $cfg_fenxiaoName . "\r\n用户：" . $userinfo['nickname'],
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("member", "fenxiaoUser", $param);

                return $langData['siteConfig'][20][193]; //提交成功，请耐心等待申请结果！
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][20][180]); //提交失败，请重试！
            }
        }
    }


    /**
     * 分销商入驻支付
     * @return array
     */
    public function fenxiaoJoinPay()
    {

        $param =  $this->param;
        $this->param = $param;
        $param_ = $param;

        $amount     = $param['amount'];
        $paytype    = $param['paytype'];
        $ordernum   = $param['ordernum'];
        $balance    = $param['balance'];
        $useBalance = $param['useBalance'];
        $check      = (int)$param['check'];
        $qr         = $param['qr'];
        $paypwd     = $param['paypwd'];
        $date       = GetMkTime(time());

        $final      = (int)$param['final']; // 最终支付
        $isMobile = isMobile();

        global $userLogin;
        global $dsql;
        global $langData;
        global $cfg_fenxiaoName;

        //查询订单状态
        $sql = $dsql->SetQuery("SELECT `body` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 0");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $body = $ret[0]['body'];
            $data = unserialize($body);

            $level  = $data['level'];
            $userid = $data['userid'];
            $price  = $data['price'];
            $cityid = $data['cityid'];
            $phone  = $data['phone'];

            $userinfo = $userLogin->getMemberInfo($userid);

            if (empty($paytype) && $check != 1) {
                if ($check) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][75]);   //请选择支付方式！
                } else {
                    die($langData['siteConfig'][21][75]);
                }
            }

            if ($price <= 0) {
                if ($check) {
                    return array("state" => 200, "info" => $langData['siteConfig'][21][77]);   //支付金额必须为整数或小数，小数点后不超过2位。
                } else {
                    die($langData['siteConfig'][21][77]);
                }
            }

            if ($useBalance == 1) {
                if (empty($paypwd)) {
                    if ($check) {
                        return array('state' => 200, 'info' => '请填写支付密码！');
                    } else {
                        die('请填写支付密码！');
                    }
                }

                //验证支付密码
                $archives = $dsql->SetQuery("SELECT `id`, `paypwd` FROM `#@__member` WHERE `id` = '$userid'");
                $results  = $dsql->dsqlOper($archives, "results");
                $res = $results[0];
                $hash = $userLogin->_getSaltedHash($paypwd, $res['paypwd']);
                if ($res['paypwd'] != $hash) {
                    return array("state" => 200, "info" => "支付密码输入错误，请重试！");
                }
            }


            //余额支付
            $title = $cfg_fenxiaoName . '入驻';
            $payprice = $price;
            if ($useBalance) {
                //查询会员信息
                // $userinfo  = $userLogin->getMemberInfo($userid);
                // $usermoney = $userinfo['money'];

                //如果使用了余额，计算还需要支付多少费用
                // $payprice = $price;
                $useBalance = 0;
                if ($balance <= $payprice) {
                    $useBalance = $balance;
                    $payprice   = $payprice - $balance;
                } else {
                    $useBalance = $payprice;
                    $payprice = 0;
                }

                //验证余额
                if ($userinfo['money'] < $useBalance) {
                    if ($check) {
                        return array('state' => 200, 'info' => '余额不足！');
                    } else {
                        die('余额不足！');
                    }
                }

                $payprice = sprintf('%.2f', $payprice);
                $param['balance'] = $useBalance;

                //如果余额足够支付，不需要额外支付任何费用，直接升级
                if ($payprice <= 0 && $qr != 1) {

                    $paysql = $dsql->SetQuery("SELECT `body` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum'");
                    $results = $dsql->dsqlOper($paysql, "results");
                    if ($results) {
                        $body = unserialize($results[0]['body']);
                    }

                    $body['balance'] = $useBalance;
                    $body = serialize($body);
                    $paylogsql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `state` = 1,`paytype` = 'money',`amount` = '$useBalance',`body` = '$body' WHERE `ordernum` = '$ordernum'");
                    $dsql->dsqlOper($paylogsql, "update");
                    $this->paySuccess($param);

                    $urlParam = array(
                        "service"  => "member",
                        "type"     => "user",
                        "template" => "fenxiao",
                    );
                    // header("location:" . getUrlPath($urlParam));
                    echo json_encode(array('state' => 100, 'info' => getUrlPath($urlParam)));
                    die;

                    //支付剩余费用
                } else {
                    if (!$isMobile && $qr != 1) {
                        # code...
                        if ($final != 1) {

                            $param_['ordernum'] = $ordernum;
                            $param_['ordertype'] = 'fenxiaoJoinPay';
                            $param_['title'] = $title;
                            $param = array(
                                "service" => "member",
                                "type" => "user",
                                "template" => "pay",
                                "param" => http_build_query($param_)
                            );
                            return getUrlPath($param);
                        } else {
                            $body = serialize($param);
                            $paylogsql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `amount` = '$payprice',`body` = '$body' WHERE `ordernum` = '$ordernum'");
                            $dsql->dsqlOper($paylogsql, "update");
                            return createPayForm("member", $ordernum, $payprice, $paytype, $title, $param);
                        }
                    } else {
                        $body = serialize($param);
                        $paylogsql = $dsql->SetQuery("UPDATE `#@__pay_log` SET `amount` = '$payprice',`body` = '$body' WHERE `ordernum` = '$ordernum'");
                        $dsql->dsqlOper($paylogsql, "update");
                        return createPayForm("member", $ordernum, $payprice, $paytype, $title, $param);
                    }
                }


                //第三方支付
            } else {

                //查询订单支付成功没成功
                if ($isMobile && empty($final)) {
                    $param_['ordernum'] = $ordernum;
                    $param_['ordertype'] = 'fenxiaoJoinPay';
                    $param = array(
                        "service" => "member",
                        "type" => "user",
                        "template" => "pay",
                        "param" => http_build_query($param_)
                    );
                    return getUrlPath($param);
                    // header("location:".getUrlPath($param));
                }

                if (!$isMobile && $qr != 1) {
                    # code...
                    if ($final != 1) {

                        $param_['ordernum'] = $ordernum;
                        $param_['ordertype'] = 'fenxiaoJoinPay';
                        $param_['title'] = $title;
                        $param = array(
                            "service" => "member",
                            "type" => "user",
                            "template" => "pay",
                            "param" => http_build_query($param_)
                        );
                        return getUrlPath($param);
                    } else {

                        return createPayForm("member", $ordernum, $payprice, $paytype, $title, $param);
                    }
                } else {
                    $info = $cfg_fenxiaoName . '入驻';
                    return createPayForm("member", $ordernum, $payprice, $paytype, $info, $param);   //订单支付
                }
            }
        }
    }


    /**
     * 分销商入驻支付成功
     */
    public function fenxiaoJoinPaySuccess($param)
    {
        global $dsql;
        global $langData;
        global $userLogin;
        global $cfg_fenxiaoName;
        global $cfg_fenxiaoFee;

        $time = time();

        require_once HUONIAOROOT . "/api/payment/log.php";
        $_fenxiaoLog = new CLogFileHandler(HUONIAOROOT . '/log/fenxiao/' . date('Y-m-d') . '.log', true);

        //查询订单状态
        $sql = $dsql->SetQuery("SELECT `body`,`id`,`paytype` FROM `#@__pay_log` WHERE `ordernum` = '$param' AND `state` = 1");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $body = $ret[0]['body'];
            $pid  = $ret[0]['id'];
            $data = unserialize($body);

            $level  = $data['level'];
            $userid = $data['userid'];
            $price  = (float)$data['price'];
            $cityid = $data['cityid'];
            $phone  = $data['phone'];
            $balance  = $data['balance'];
            $paytype  = $ret[0]['paytype'];

            $userinfo = $userLogin->getMemberInfo($userid);

            //查询是否已经是分销商，出现过同时入驻两次的情况，这里做下去重
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__member_fenxiao_user` WHERE `uid` = $userid");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) return array("state" => 200, "info" => "已经成为" . $cfg_fenxiaoName . "，无须重复申请！");

            include HUONIAOINC . "/config/fenxiaoConfig.inc.php";
            $fenxiaoJoinCheck = (int)$cfg_fenxiaoJoinCheck;
            $cfg_fenxiaoHjType  = (int)$cfg_fenxiaoHjType;
            $cfg_fenxiaoRecAmount = (float)$cfg_fenxiaoRecAmount;
            $cfg_fenxiaoRecAmountPercent = (int)$cfg_fenxiaoRecAmountPercent;
            if ($cfg_fenxiaoHjType == 1) {
                $cfg_fenxiaoRecAmount = ($price * $cfg_fenxiaoRecAmountPercent) / 100;
            }

            $sql = $dsql->SetQuery("INSERT INTO `#@__member_fenxiao_user` (`uid`, `phone`, `state`, `pubdate`, `level`, `back`) VALUES ('$userid', '$phone', '$fenxiaoJoinCheck', '$time', '$level', '$price')");
            $res = $dsql->dsqlOper($sql, "lastid");
            if ($res && is_numeric($res)) {

                //记录用户行为日志
                memberLog($uid, 'member', 'fenxiao', $res, 'insert', '入驻分销商', '', $sql);

                //如果使用余额，扣除会员账户余额
                $info = $cfg_fenxiaoName . '入驻';
                if ($balance) {
                    $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` - '$balance' WHERE `id` = '$userid'");
                    $dsql->dsqlOper($archives, "update");

                    $info .= '，使用余额：' . $balance;

                    $user  = $userLogin->getMemberInfo($userid);
                    $usermoney = $user['money'];

                    //保存操作日志
                    $title = $cfg_fenxiaoName . '入驻';
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`, `montype`, `ordertype`,`ctype`,`pid`,`title`,`ordernum`,`balance`) VALUES ('$userid', '0', '$price', '$info', '$time', 0,'member','hehuorenruzhu','$pid','$title','$param','$usermoney')");
                    $dsql->dsqlOper($archives, "update");
                }

                //入驻成功后，锁定会员所在分站
                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `cityid` = '$cityid', `lock_cityid` = 1 WHERE `id` = '$userid'");
                $dsql->dsqlOper($archives, "update");

                if ($paytype != 'huoniao_bonus') {

                    //分站佣金
                    $fzFee = cityCommission($cityid, 'fenxiao');
                    //将费用打给分站
                    $fztotalAmount_ =  $price * (float)$fzFee / 100;
                    $fztotalAmount_ = $fztotalAmount_ < 0.01 ? 0 : $fztotalAmount_;
                    //平台获得多少钱
                    $fee = $price - $fztotalAmount_;

                    $fzarchives = $dsql->SetQuery("UPDATE `#@__site_city` SET `money` = `money` + '$fztotalAmount_' WHERE `cid` = '$cityid'");
                    $dsql->dsqlOper($fzarchives, "update");

                    $user  = $userLogin->getMemberInfo($userid);
                    $usermoney = $user['money'];

                    //保存操作日志
                    $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`cityid`,`commission`,`ordertype`,`platform`,`showtype`,`ctype`,`balance`) VALUES ('$userid', '1', '$price', '$info', '$time','$cityid','$fztotalAmount_','business',$fee,'1','hehuorenruzhu','$usermoney')");
                    //                $dsql->dsqlOper($archives, "update");
                    $lastid = $dsql->dsqlOper($archives, "lastid");
                    substationAmount($lastid, $cityid);
                }


                //入驻分销商不需要申请的话，给推荐人发放佣金
                if ($fenxiaoJoinCheck && $cfg_fenxiaoRecAmount > 0) {
                    //查找推荐人
                    $to = '';
                    $from_uid = 0;
                    $sql = $dsql->SetQuery("SELECT m.`username`, m.`nickname`, m.`from_uid` FROM `#@__member` m WHERE m.`id` = $userid");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $to = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];
                        $from_uid = $ret[0]['from_uid'];
                    }

                    $sql = $dsql->SetQuery("SELECT m.`username`, m.`nickname` FROM `#@__member` m LEFT JOIN `#@__member_fenxiao_user` f ON f.`uid` = m.`id` WHERE m.`id` = $from_uid AND f.`id` != ''");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $from = $ret[0]['nickname'] ? $ret[0]['nickname'] : $ret[0]['username'];

                        //会员-分销商推荐注册成功通知
                        //奖励推荐人
                        $date = time();
                        $archives = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + '$cfg_fenxiaoRecAmount' WHERE `id` = '$from_uid'");
                        $dsql->dsqlOper($archives, "update");
                        $user  = $userLogin->getMemberInfo($from_uid);
                        $usermoney = $user['money'];

                        //保存操作日志
                        $info = "成功邀请" . $cfg_fenxiaoName . "入驻获得佣金，被邀请人：" . $to;  //账户充值
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`balance`) VALUES ('$from_uid', '1', '$cfg_fenxiaoRecAmount', '$info', '$date','member','yongjin','$usermoney')");
                        $dsql->dsqlOper($archives, "update");

                        $product = serialize(array());
                        $ordernum = "邀请" . $cfg_fenxiaoName . "入驻";
                        $archives = $dsql->SetQuery("INSERT INTO `#@__member_fenxiao` (`module`, `uid`, `byuid`, `child`, `ordernum`, `level`, `amount`, `pubdate`, `product`, `fee`) VALUES ('member', $from_uid, $userid, $userid, '$ordernum', '1', '$cfg_fenxiaoRecAmount', '$date', '$product', '100')");
                        $dsql->dsqlOper($archives, "update");

                        //会员通知
                        $param = array(
                            "service"  => "member",
                            "type" => "user",
                            "template" => "fenxiao"
                        );

                        //自定义配置
                        $config = array(
                            "from" => $from,
                            "to" => $to,
                            "amount" => $cfg_fenxiaoRecAmount,
                            "fields" => array(
                                'keyword1' => '推荐人',
                                'keyword2' => '被推荐人'
                            )
                        );

                        updateMemberNotice($from_uid, "会员-" . $cfg_fenxiaoName . "推荐注册成功通知", $param, $config);
                    } else {
                        $_fenxiaoLog->DEBUG("未发放佣金，原因为：\r\n查询会员：" . $sql . "\r\n查询结果：" . json_encode($ret));
                    }
                } else {
                    $_fenxiaoLog->DEBUG("未发放佣金，原因为：\r\n入驻审核：" . $fenxiaoJoinCheck . "，佣金金额：" . $cfg_fenxiaoRecAmount);
                }


                //微信通知
                $cityName = getSiteCityName($cityid);
                $param = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $cityName . "分站\r\n申请" . $cfg_fenxiaoName . "\r\n用户：" . $userinfo['nickname'],
                        'date' => date("Y-m-d H:i:s", $time),
                    )
                );
                updateAdminNotice("member", "fenxiaoUser", $param);

                return $langData['siteConfig'][20][193]; //提交成功，请耐心等待申请结果！
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][20][180]); //提交失败，请重试！
            }
        } else {
            $_fenxiaoLog->DEBUG("订单未支付：" . $sql . "\r\n" . json_encode($ret));
        }
    }


    /**
     * APP签到链接
     */
    public function qiandaoUrl()
    {
        global $dsql;
        global $cfg_qiandao_state;

        $url = '';
        $state = 0;
        if ($cfg_qiandao_state) {
            $param = array(
                'service' => 'member',
                'type' => 'user',
                'template' => 'qiandao'
            );
            $state = 1;
            $url = getUrlPath($param);
        }
        return array('state' => $state, 'url' => $url);
    }

    /**
     * 将点赞和评论更新为已读
     */
    public function updateRead()
    {
        global $dsql;
        global $userLogin;

        $param = $this->param;

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $type = $param['type'];

        if ($type == 'zan') { //点赞

            $archives = $dsql->SetQuery("UPDATE `#@__public_up_all` SET `isread` = 1 WHERE `isread` = 0 and `uid` = '$uid'");
            $res = $dsql->dsqlOper($archives, "update");
        } else {
            //评论未读
            $where_ = " AND `userid` = '$uid'";
            $sql = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE `ischeck` = 1" . $where_);
            $ret = $dsql->dsqlOper($sql, "results");
            $sidList = array();
            foreach ($ret as $k => $v) {
                array_push($sidList, $v['id']);
            }
            if (!empty($sidList)) {
                $whereC = " AND  (`sid` in(" . join(',', $sidList) . ") or (`masterid` = '$uid' AND `sid` = '0'))";
            } else {
                $whereC = " AND  `masterid` = '$uid' AND `sid` = '0'";
            }

            $archives = $dsql->SetQuery("UPDATE `#@__public_comment_all` SET `isread` = 1 WHERE `isread` = 0 " . $whereC);
            $res = $dsql->dsqlOper($archives, "update");
        }

        if ($res == 'ok') {
            return 'ok';
        } else {
            return '参数错误！';
        }
    }


    //商家订单结算(外卖)

    public function businessSettle($id)
    {
        global $dsql;
        global $userLogin;
        $sql = $dsql->SetQuery("SELECT o.`id`, o.`sid`,o.`ordernum`, m.`userid`,o.`food`, o.`priceinfo`, o.`usequan`, o.`fencheng_foodprice`, o.`fencheng_delivery`, o.`fids`,o.`fencheng_dabao`, o.`fencheng_addservice`,o.`fencheng_zsb`,  o.`fencheng_addservice`,o.`fencheng_discount`, o.`fencheng_promotion`, o.`fencheng_firstdiscount`, o.`fencheng_quan`,o.`zsbprice` ,o.`cpmoney`, o.`cptype`, o.`ordertype` FROM `#@__waimai_order_all` o LEFT JOIN `#@__waimai_shop_manager` m ON o.`sid` = m.`shopid` WHERE o.`id` = " . $id);

        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {

            $business = 0;
            $orderres = $ret[0];


            $foodTotal = $peisongTotal = $dabaoTotal = $addserviceTotal = $discountTotal = $promotionTotal = $firstdiscountTotal = $youhuiquanTotal = $memberYouhuiTotal = $ktvipTotal = 0;
            $food                   = unserialize($orderres['food']);
            $priceinfo              = unserialize($orderres['priceinfo']);
            $fencheng_foodprice     = (int)$orderres['fencheng_foodprice'];     //商品原价分成
            $fencheng_delivery      = (int)$orderres['fencheng_delivery'];      //配送费分成
            $fencheng_dabao         = (int)$orderres['fencheng_dabao'];         //打包分成
            $fencheng_addservice    = (int)$orderres['fencheng_addservice'];    //增值服务费分成
            $fencheng_zsb           = (int)$orderres['fencheng_zsb'];                  //准时宝分成
            $fencheng_discount      = (int)$orderres['fencheng_discount'];      //折扣分摊
            $fencheng_promotion     = (int)$orderres['fencheng_promotion'];     //满减分摊
            $fencheng_firstdiscount = (int)$orderres['fencheng_firstdiscount'];  //首单减免分摊
            $fencheng_quan          = (int)$orderres['fencheng_quan'];  //优惠券分摊
            $ordertype              = (int)$orderres['ordertype'];  //0-外送,1-店内

            if ($ordertype) return;


            $fidsql = $dsql->SetQuery("SELECT `id` FROM `#@__waimai_list` WHERE `is_discount` = 1 AND `id` In (" . $orderres['fids'] . ")");

            $foodis_discount = $dsql->dsqlOper($fidsql, "results");



            // 优惠券
            $usequan = (int)$orderres['usequan'];
            //准时宝费用
            $zsbprice = $orderres['zsbprice'];

            $quanBili = 100;
            if ($usequan) {
                $quanSql = $dsql->SetQuery("SELECT `bear` FROM `#@__waimai_quanlist` WHERE `id` = $usequan");
                $quanRet = $dsql->dsqlOper($quanSql, "results");
                if ($quanRet) {
                    $bear = $quanRet[0]['bear'];
                    // 平台和店铺分担
                    if (!$bear) {
                        $quanBili = $fencheng_quan;
                    }
                }
            }

            //计算单个订单的商品原价
            if ($food) {
                foreach ($food as $k_ => $v_) {
                    if ($v_['is_discount'] == 1) {
                        $v_['price'] = $v_['price'] / ($v_['discount_value'] / 10);
                    }
                    $foodTotal += $v_['price'] * $v_['count'];
                }
            }

            //费用详情
            if ($priceinfo) {
                foreach ($priceinfo as $k_ => $v_) {
                    if ($v_['type'] == "peisong") {
                        $peisongTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "dabao") {
                        $dabaoTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "fuwu") {
                        $addserviceTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "youhui") {
                        $discountTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "manjian") {
                        $promotionTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "shoudan") {
                        $firstdiscountTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "quan") {
                        $youhuiquanTotal += -$v_['amount'];
                    }
                    if (strpos($v_['type'], "uth_") !== false) {
                        $memberYouhuiTotal += $v_['amount'];
                    }
                    if ($v_['type'] == "ktvip") {
                        $ktvipTotal += $v_['amount'];
                        $ktvipTotalPrice += $v_['amount'];
                    }
                }
            }

            //计算准时宝(平)
            if ($orderres['cptype'] == 3) {

                $ptzsb = $orderres['cpmoney'];
                $btzsb = 0;
            } else {
                $btzsb = $orderres['cpmoney'];
                $ptzsb = 0;
            }


            $zjye = $foodTotal - $discountTotal - $promotionTotal - $firstdiscountTotal + $dabaoTotal + $peisongTotal + $addserviceTotal - $youhuiquanTotal + $zsbprice - $memberYouhuiTotal + $ktvipTotal;


            if (empty($foodis_discount)) {

                $manjian = $promotionTotal * $fencheng_promotion / 100;
            } else {

                $manjian = 0;
            }

            $ptyd = $foodTotal * $fencheng_foodprice / 100 - $manjian - $firstdiscountTotal * $fencheng_firstdiscount / 100 + $dabaoTotal * $fencheng_dabao / 100 + $peisongTotal * $fencheng_delivery / 100 + $addserviceTotal * $fencheng_addservice / 100 - $youhuiquanTotal * $quanBili / 100 - $memberYouhuiTotal + $zsbprice * $fencheng_zsb / 100 + $ktvipTotal - $ptzsb;


            $business = $zjye - $ptyd - $btzsb;

            if ($business) {

                //记录会员余额变动日志
                require_once HUONIAOROOT . "/api/payment/log.php";
                $_mailLog = new CLogFileHandler(HUONIAOROOT . '/log/member/' . date('Y-m-d') . '.log', true);

                //给商户平台加钱
                $ordernum = $orderres['ordernum'];
                $uid = $orderres['userid'];
                $date = time();
                $sql = $dsql->SetQuery("UPDATE `#@__member` SET `money` = `money` + $business WHERE `id` =" . $uid);
                $_mailLog->DEBUG($sql, true);
                $dsql->dsqlOper($sql, "update");

                $sql = $dsql->SetQuery("SELECT `id` FROM `#@__pay_log` WHERE `ordernum` = '$ordernum' AND `state` = 1");
                $ret = $dsql->dsqlOper($sql, "results");
                $pid = '';
                if ($ret) {
                    $pid            = $ret[0]['id'];
                }
                $user  = $userLogin->getMemberInfo($uid);
                $usermoney = $user['money'];
                //保存操作日志
                $title = '外卖商家结算';
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_money` (`userid`, `type`, `amount`, `info`, `date`,`ordertype`,`ctype`,`pid`,`title`,`ordernum`,`balance`) VALUES ('$uid', '1', '$business', '外卖订单结算 :$ordernum', '$date','waimai','shangpinxiaoshou','$pid','$title','$ordernum ','$usermoney')");
                $_mailLog->DEBUG($archives, true);
                $result =  $dsql->dsqlOper($archives, "update");
            }

            return $ptyd;
        }
    }


    //保存个人会员中心模块排序和隐藏模块的数据
    public function updateUserModule()
    {

        global $dsql;
        global $userLogin;
        $param = $this->param;

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $sort = $param['sort'];  //排序
        $hide = $param['hide'];  //隐藏模块

        $where = '';
        if ($sort) {
            $where .= ", `sortPackage` = '$sort'";
        } else {
            $where .= ", `sortPackage` = ''";
        }

        $where .= ", `hidePackage` = '$hide'";

        $sql = $dsql->SetQuery("UPDATE `#@__member` SET `id` = '$uid' " . $where . " WHERE `id` = " . $uid);
        $ret = $dsql->dsqlOper($sql, "update");
        if ($ret == 'ok') {
            return 'ok';
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][180]); //提交失败，请重试！
        }
    }


    //保存商家会员中心模块排序和隐藏模块的数据
    public function updateBusinessModule()
    {

        global $dsql;
        global $userLogin;
        $param = $this->param;

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $sort = $param['sort'];  //排序
        $hide = $param['hide'];  //隐藏模块

        $where = '';
        if ($sort) {
            $where .= ", `sortPackage` = '$sort'";
        }

        $where .= ", `hidePackage` = '$hide'";

        $sql = $dsql->SetQuery("UPDATE `#@__business_list` SET `uid` = '$uid' " . $where . " WHERE `uid` = " . $uid);
        $ret = $dsql->dsqlOper($sql, "update");
        if ($ret == 'ok') {
            return 'ok';
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][180]); //提交失败，请重试！
        }
    }

    //发布统计

    public function fabuCount()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        $param  = $this->param;
        $userid = $param['uid'];
        $uid = $userLogin->getMemberID();

        if ($userid != '') {
            $uid = $userid;
        }
        $userinfo = $userLogin->getMemberModule($uid);


        // var_dump($uid);die;
        $userModuleList = $userinfo && is_array($userinfo) ? $userinfo['userModuleList'] : array();
        //echo "<pre>";
        //var_dump($userModuleList);die;// tieba huodong live pension education car  vote circle info house
        $showModule = array();
        if($userModuleList){
            foreach ($userModuleList as $key => $value) {
                if ($value['show'] == 1) {

                    switch ($value['name']) {
                            // case 'article':
                            //     $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__articlelist_all` WHERE `admin` = $uid ANd `arcrank` = 1");
                            //     $result = $dsql->dsqlOper($sql,"results");
                            //     $showModule['articlecountall'] = $result[0]['countall'];
                            // break;
                        case 'tieba':
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__tieba_list` WHERE `uid` = $uid ANd `state` = 1");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']       = $result[0]['countall'];
                            $showModule[$key]['modulename']     = $value['name'];
                            $showModule[$key]['title']          = $value['title'];
                            break;
                        case 'huodong':
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__huodong_list` WHERE `uid` = $uid ANd `state` = 1");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];
                            break;
                        case 'live':
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__livelist` WHERE `user` = $uid ANd `arcrank` = 1");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];
                            break;
                        case 'education':
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__education_courses` WHERE `userid` = $uid ANd `state` = 1 AND `usertype` = 0");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];
                            break;
                        case 'car':
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__car_list` WHERE `userid` = $uid ANd `state` = 1");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];

                            break;
                        case 'vote':
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__vote_list` WHERE `admin` = $uid ANd `arcrank` = 1");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];

                            break;
                            // case 'circle':
                            //     $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__circle_dynamic_all` WHERE `userid` = $uid ANd `state` = 1");
                            //     $result = $dsql->dsqlOper($sql,"results");
                            //     $showModule['allcount'] += $result[0]['countall'];
                            //     $showModule[$key]['countall']           = $result[0]['countall'];
                            //     $showModule[$key]['modulename']         = $value['name'];
                            //     $showModule[$key]['title']              = $value['title'];

                            //     break;
                        case 'info':
                            $now = GetMkTime(time());
                            $sql    = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__infolist` WHERE `userid` = $uid AND `is_valid` = 0 AND `waitpay` = 0 AND `arcrank` = 1  AND `valid` >= " . $now . " ");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];

                            break;
                        case 'house':
                            $where = " WHERE `userid` = $uid AND `state` = 1 AND `usertype` = 0";
                            $sql    = $dsql->SetQuery("SELECT sum(cnt) countall FROM (SELECT count(`id`) as cnt FROM `#@__house_sale` " . $where . "  union all SELECT count(`id`) as cnt FROM `#@__house_zu` " . $where . " union all SELECT count(`id`) as cnt FROM `#@__house_xzl`" . $where . " union all SELECT count(`id`) as cnt FROM `#@__house_sp` " . $where . " union all SELECT count(`id`) as cnt FROM `#@__house_cf` " . $where . " union all SELECT count(`id`) as cnt FROM `#@__house_cw` " . $where . " ) t");
                            $result = $dsql->dsqlOper($sql, "results");
                            $showModule[$key]['countall']           = $result[0]['countall'];
                            $showModule[$key]['modulename']         = $value['name'];
                            $showModule[$key]['title']              = $value['title'];
                            break;
                    }

                    // if($value['name'] == "article"){
                    //     $sql    = $dsql->SetQuery("SELECT count(`id`) FROM `#@__articlelist_all` WHERE `admin` = $uid ANd `arcrank` = 1");
                    //     $result = $dsql->dsqlOper($sql,"totalCount");
                    //     var_dump($result);die;
                    // }
                }
            }
        }
        $isMobile = isMobile();

        if (in_array('travel', $installModuleArr)) {
            $stlysql = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__travel_strategy` WHERE `userid` =$uid AND `state` = 1  AND `usertype` = 0");
            $stlyres = $dsql->dsqlOper($stlysql, "results");

            $vilysql = $dsql->SetQuery("SELECT count(`id`) countall FROM `#@__travel_video` WHERE `userid` =$uid AND `state` = 1  AND `usertype` = 0");
            $vilyres = $dsql->dsqlOper($vilysql, "results");

            if (!$isMobile) {
                //旅游攻略
                $lystrategy = array();

                $lystrategy['countall']            = $stlyres[0]['countall'];
                $lystrategy['modulename']          = 'lystrategy';
                $lystrategy['title']               = '旅游攻略';

                //旅游视频
                $yvideo = array();
                $yvideo['countall']         =  $vilyres[0]['countall'];
                $yvideo['modulename']       = 'yvideo';
                $yvideo['title']            = '旅游视频';

                array_push($showModule, $lystrategy, $yvideo);
            } else {
                $mtavelarr = array();
                $mtavelarr['modulename']         = "travel";
                $mtavelarr['title']              = "旅游";
                $mtavelarr['countall']           = $stlyres[0]['countall'] + $vilyres[0]['countall'];
                array_push($showModule, $mtavelarr);
            }
        }

        // echo "<pre>";
        // var_dump($showModule);die;
        return $showModule;
    }


    //账户注销
    public function canceLlation()
    {
        global $userLogin;
        global $dsql;
        global $langData;
        $uid = $userLogin->getMemberID();

        if ($uid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        $usersql = $dsql->SetQuery("SELECT `freeze`,`money`,`username` FROM `#@__member` WHERE `id`= " . $uid);

        $userres = $dsql->dsqlOper($usersql, "results");

        if ($userres) {
            $freeze     = $userres[0]['freeze'];
            $money      = $userres[0]['money'];
            $username   = $userres[0]['username'];
            $allmoney   = $freeze + $money;

            if ($allmoney > 0) {
                return array("state" => 200, "info" => $langData['siteConfig'][54][24]);  //登录超时，请重新登录！
            } else {

                $usersql = $dsql->SetQuery("UPDATE `#@__member` SET `is_cancellation` =  1  WHERE `id`= " . $uid);
                $dsql->dsqlOper($usersql, "update");

                //记录用户行为日志
                memberLog($uid, 'member', '', 0, 'update', '申请注销账号', '', $usersql);

                $param = array(
                    'type'   => 2, //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => '',
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $username . ' 账户申请注销账户',
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("member", "cancellation", $param);
                return  "ok";
            }
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][54][23]);
        }
    }

    //分销排行榜
    public function fenxiaoRankList()
    {
        global $dsql;
        global $langData;

        $list = array();
        $sql = $dsql->SetQuery("SELECT m.`id`, m.`nickname`, m.`photo`, (SELECT SUM(`amount`) FROM `#@__member_fenxiao` WHERE `uid` = m.`id`) amount FROM `#@__member_fenxiao` f LEFT JOIN `#@__member` m ON m.`id` = f.`uid` LEFT JOIN `#@__member_fenxiao_user` u ON u.`id` = f.`uid` WHERE m.`id` != '' GROUP BY f.`uid` ORDER BY `amount` DESC, m.`id` ASC LIMIT 0, 10");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            foreach ($ret as $key => $value) {
                $value['photo'] = $value['photo'] ? getFilePath($value['photo']) : '';
                array_push($list, $value);
            }
        }
        return $list;
    }


    /**
     * APP手机号码一键登录
     */
    public function umengPhoneVerifyLogin()
    {
        global $dsql;
        global $userLogin;

        $state = 0;
        $sql = $dsql->SetQuery("SELECT `umeng_phoneLoginState` FROM `#@__app_config` LIMIT 1");
        $appRet = $dsql->dsqlOper($sql, "results");
        if ($appRet) {
            $state = (int)$appRet[0]['umeng_phoneLoginState'];
        }
        if (!$state) return array('state' => 200, 'info' => '系统未启用本机号码一键登录功能！');


        //客户端token
        $token = $this->param['token'];

        $umengAi = new umengAi();
        $umengRet = $umengAi->getPhone($token);

        //获取失败
        if ($umengRet['state'] == 200) {
            return array('state' => 200, 'info' => $umengRet['info']);
        }

        $ip = GetIP();
        $ipaddr = getIpAddr($ip);
        $areaCode = '86';  //默认86
        $phone = $umengRet['info'];  //友盟接口获取到的手机号码
        $deviceTitle = $this->param['deviceTitle'];
        $deviceType = $this->param['deviceType'];
        $deviceSerial = $this->param['deviceSerial'];
        $deviceSerial = str_replace('-', '_', $deviceSerial);

        $areaCode = $areaCode == '86' ? '' : $areaCode;

        if ($phone == '') {
            return array('state' => 200, 'info' => self::$langData['siteConfig'][20][463]); //请输入手机号码
        }

        $userid = 0;
        $sourceclient = array();

        //判断是否是新用户
        $sql_mem = $dsql->SetQuery("SELECT `id`, `sourceclient`, `state`, `stateinfo` FROM `#@__member` WHERE (`mtype` = 1 OR `mtype` = 2) AND (`phone` = '$phone' OR `username` = '$phone')");
        $res_mem = $dsql->dsqlOper($sql_mem, "results");

        //苹果新版本不再传设备信息，为了使用推送功能，这里需要记录苹果设备
        $isIOSApp = isIOSApp() && !isAndroidApp();
        $deviceTitle = $isIOSApp ? 'iphone' : $deviceTitle;
        $deviceType = $isIOSApp ? 'iphone' : $deviceType;
        $deviceSerial = $isIOSApp ? 'iphone' : $deviceSerial;

        $sourceArr = array(
            "title" => $deviceTitle,
            "type"  => $deviceType,
            "serial" => $deviceSerial,
            "pudate" => time()
        );

        //当手机号和用户名都不存在时才是新会员
        if (!$res_mem && !$res_mem_) {

            //限制注册
            global $cfg_regstatus;
            global $cfg_regclosemessage;
            if ($cfg_regstatus == 0) {
                return array("state" => 200, "info" => $cfg_regclosemessage);
            }
            
            //新用户手机注册
            //提供初始密码
            $passwdInit = '';
            $passwd = $userLogin->_getSaltedHash($passwdInit);
            $areaCode = 86;
            $mtype = 1;
            $times = time();
            //记录当前设备s
            if (!empty($deviceTitle) && !empty($deviceSerial) && !empty($deviceType)) {
                $sourceclient[] = $sourceArr;
                $sourceclient   = serialize($sourceclient);
            }
            //记录当前设备e
            //保存到主表
            $regfrom = getCurrentTerminal();
            $nickname = preg_replace('/(1[345789]{1}[0-9])[0-9]{4}([0-9]{4})/is', "$1****$2", $phone);
            $archives = $dsql->SetQuery("INSERT INTO `#@__member` (`mtype`, `username`, `password`, `nickname`, `areaCode`, `phone`, `phoneCheck`, `regtime`, `regip`, `regipaddr`, `state`, `purviews`, `sourceclient`, `regfrom`)
VALUES ('$mtype', '$phone', '', '$nickname', '$areaCode', '$phone', '1', '$times', '$ip', '$ipaddr', '1', '', '$sourceclient', '$regfrom')");
            $aid = $dsql->dsqlOper($archives, "lastid");

            if (is_numeric($aid)) {

                $userid = $aid;
                $userLogin->registGiving($aid);

                // //论坛同步，APP端不需要些功能
                // global $cfg_bbsState;
                // global $cfg_bbsType;
                // if($cfg_bbsState == 1 && $cfg_bbsType != ""){
                //     $chcode = strtolower(create_check_code(8));
                //     $data['username'] = $account;
                //     $data['password'] = $passwd;
                //     $data['email']    = $chcode."@qq.com";
                //     $userLogin->bbsSync($data, "register");
                // }

            } else {
                return array('state' => 200, 'info' => self::$langData['siteConfig'][21][235]); //注册失败，请稍候重试！
            }
        } else {
            $userid = $res_mem[0]['id'];
            $sourceclient = $res_mem[0]['sourceclient'];
            $state = (int)$res_mem[0]['state'];

            if(!$state){
                return array("state" => 200, "info" => "您的账号审核中，暂无法登录！");
            }

            if($state == 2){
                return array("state" => 200, "info" => "您的账号审核被拒绝，原因：" . $ret[0]['stateinfo']);
            }
        }

        //记录当前设备s
        $sourceclientAll = array();
        if ($sourceclient) {
            $sourceclientAll = unserialize($sourceclient);
        }
        $sourceclients = array();
        if (!empty($deviceTitle) && !empty($deviceSerial) && !empty($deviceType)) {
            if (!empty($sourceclientAll)) {
                $sourceclients = $sourceclientAll;
                $foundSerial = array_search($deviceSerial, array_column($sourceclientAll, 'serial'));
                if ($foundSerial) {
                    //如果已有，更新时间，以Serial为准
                    $sourceclients[$foundSerial]['pudate'] = time();
                } else {
                    array_push($sourceclients, $sourceArr);
                }
            } else {
                $sourceclients[] = $sourceArr;
            }
            $sourceclients = serialize($sourceclients);

            $where_ = "`sourceclient` = '$sourceclients',";
        }
        //记录当前设备e

        //创建令牌
        $tokenField = $access_token = $refresh_token = "";

        $createApiTokenByPlatform = createApiTokenByPlatform($userid);
        $access_token = $createApiTokenByPlatform['access_token'];
        $refresh_token = $createApiTokenByPlatform['refresh_token'];
        if($access_token && $refresh_token){
            $_platform = getCurrentTerminal();
            $tokenField = ", `access_token_".$_platform."` = '" . urldecode($access_token) . "', `refresh_token_".$_platform."` = '" . urldecode($refresh_token) . "'";
        }

        $archives = $dsql->SetQuery("UPDATE `#@__member` SET $where_ `logincount` = `logincount` + 1, `lastlogintime` = " . GetMkTime(time()) . ", `lastloginip` = '" . $ip . "', `lastloginipaddr` = '" . $ipaddr . "', `online` = '" . GetMkTime(time()) . "' " . $tokenField . " WHERE `id` = " . $userid);
        $dsql->dsqlOper($archives, "update");

        $loginPlatform = (isAndroidApp() ? '安卓' : (isIOSApp() ? '苹果' : (isHarmonyApp() ? '鸿蒙' : '未知'))) . 'APP(手机号码一键登录)';

        //保存到主表
        $useragent = $_SERVER['HTTP_USER_AGENT'];
        $_ip = $ip . ':' . $_SERVER['REMOTE_PORT'];
        $archives = $dsql->SetQuery("INSERT INTO `#@__member_login` (`userid`, `logintime`, `loginip`, `ipaddr`, `platform`, `useragent`) VALUES ('$userid', '" . GetMkTime(time()) . "', '$_ip', '$ipaddr', '$loginPlatform', '$useragent')");
        $dsql->dsqlOper($archives, "update");

        //记录用户行为日志
        memberLog($userid, 'member', '', 0, 'insert', '用户登录(' . $loginPlatform . ')', '', $archives);

        $userinfo = $this->detail($userid, true);
        return array(
            'userid' => (int)$userinfo['userid'],
            'username' => $userinfo['username'],
            'nickname' => $userinfo['nickname'],
            'userid_encode' => $userinfo['userid_encode'],
            'cookiePre' => $userinfo['cookiePre'],
            'photo' => $userinfo['photo'] ? $userinfo['photo'] : getFilePath('/static/images/noPhoto_100.jpg'),
            'dating_uid' => (int)$userinfo['dating_uid'],
            'access_token' => $access_token,
            'refresh_token' => $refresh_token
        );
    }


    /**
     * Notes:个人中心获取通知信息汇总
     * Ueser: Administrator
     * DateTime: 2020/12/22 17:21
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function memberMessageGet()
    {
        global $dsql;
        global $userLogin;
        global $langData;
        $param  = $this->param;

        if ($param) {
            if (is_array($param)) {
                $module     = $param['module'];
                $gettype    = (int)$param['gettype'];
                $uid        = $userLogin->getMemberID();
                $listarr    = $memberList = array();
                if ($module == 'article') {
                    $where_ = " AND `userid` = '$uid'";
                    $sql = $dsql->SetQuery("SELECT `id`,`userid` FROM `#@__public_comment_all` WHERE `ischeck` = 1" . $where_);
                    $ret = $dsql->dsqlOper($sql, "results");
                    $sidList = array();
                    foreach ($ret as $k => $v) {
                        array_push($sidList, $v['id']);
                    }
                    if (!empty($sidList)) {
                        $whereC = " AND  (`sid` in(" . join(',', $sidList) . ") or (`masterid` = '$uid' AND `sid` = '0'))";
                    } else {
                        $whereC = " AND  `masterid` = '$uid' AND `sid` = '0'";
                    }

                    $archives  = $dsql->SetQuery(" SELECT * FROM  (SELECT `id`,`userid`,`replydate`,'pl' type ,`replydate` datetime FROM `#@__public_comment_all` WHERE `isread` = 0 " . $whereC . " UNION ALL SELECT `id`,`ruid` userid,`puctime` datetime ,'dz' type FROM `#@__public_up_all` WHERE `isread` = 0 and `uid` = " . $uid . ")  AS tableall ORDER BY tableall.`datetime` DESC");
                    $messcount = $dsql->dsqlOper($archives, "totalCount");

                    if ($messcount != 0) {
                        $memberList = array();
                        $messres = $dsql->dsqlOper($archives . " LIMIT 0,3", "results");
                        foreach ($messres as $k => $v) {
                            $membersql       = $dsql->SetQuery("SELECT `photo` FROM `#@__member` WHERE  `id` = '" . $v['userid'] . "'");
                            $memberres       = $dsql->dsqlOper($membersql, "results");
                            array_push($memberList, array(
                                'id'    => $v['userid'],
                                'type'  => $v['type'],
                                'photo' => $memberres[0]['photo'] != '' ? getFilePath($memberres[0]['photo']) : ''
                            ));
                        }
                    }
                } else if ($module == 'pension') {
                    if ($gettype == 1) {
                        $sql      = $dsql->SetQuery("SELECT `id` FROM `#@__pension_elderly` WHERE `userid` = $uid");
                        $storeRes = $dsql->dsqlOper($sql, "results");
                        if (empty($storeRes[0]['id'])) {
                            return array("state" => 200, "info" => $langData['siteConfig'][21][64]); //暂无数据！
                        } else {
                            $where = ' AND `elderly` = ' . $storeRes[0]['id'];
                        }
                    }

                    $archives = $dsql->SetQuery("SELECT `id`, `store`, `elderly`,  `people`,  `tel`, `pubdate`, `state`, `userid` FROM `#@__pension_invitation` l WHERE 1 = 1 AND `state` = 0" . $where);
                    $messcount = $dsql->dsqlOper($archives, "totalCount");
                    if ($messcount != 0) {
                        $memberList = array();
                        $messres = $dsql->dsqlOper($archives . " ORDER BY `id` DESC ", "results");
                        foreach ($messres as $k => $v) {
                            if ($gettype == 1) {
                                $sql    = $dsql->SetQuery("SELECT `id`, `title` FROM `#@__pension_store` WHERE `id` = " . $v['store']);
                                $res    = $dsql->dsqlOper($sql, "results");
                                $name   = $res[0]['title'];
                            }
                            array_push($memberList, array(
                                'name'    => $name,
                            ));
                        }
                    }
                }
                $listarr['messcount']   = $messcount;
                $listarr['memberList']  = $memberList;
                return  $listarr;
            }
            return array("state" => 200, "info" => $langData['siteConfig'][54][23]);
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][54][23]);
        }
    }

    /***
     * Notes:个人中心足迹记录获取
     * Ueser: Administrator
     * DateTime: 2020/12/23 9:54
     * Param1:record
     * Param2:
     * Param3:
     * Return:
     */
    public function footprintsGet()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        $param = $this->param;

        if (is_array($param)) {
            if (!empty($param)) {
                $module      = $param['module'];
                $module2     = $param['module2'];
                $page        = (int)$param['page'];
                $pageSize    = (int)$param['pageSize'];
                $page       = $page == 0 ? 1 : $page;
                $pageSize   = $pageSize == 0 ? 10 : $pageSize;
                $list        = array();
                $uid         = $userLogin->getMemberID();
                if ($module != '') {
                    if ($uid < 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);
                    $where = '';
                    if ($module2 != '') {
                        $where = " AND FIND_IN_SET (`module2`,'$module2')";
                    }
                    $ishavesql  = $dsql->SetQuery("SHOW TABLES LIKE '#@__" . $module . "_historyclick' ");
                    $ishaveres  = $dsql->dsqlOper($ishavesql, "results");
                    if (empty($ishaveres)) return array("state" => 200, "info" => $langData['siteConfig'][21][64]); //暂无数据！
                    $datetime   = strtotime("-0 year -3 month -0 day");

                    $footsql    = $dsql->SetQuery("SELECT * FROM `#@__" . $module . "_historyclick` WHERE `uid` =  $uid AND `date` >= '" . $datetime . "'" . $where);
                    $totalCount = $dsql->dsqlOper($footsql, "totalCount");

                    if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]); //暂无数据！
                    //总分页数
                    $totalPage  = ceil($totalCount / $pageSize);
                    $pageinfo = array(
                        "page" => $page,
                        "pageSize" => $pageSize,
                        "totalPage" => $totalPage,
                        "totalCount" => $totalCount
                    );

                    $atpage  = $pageSize * ($page - 1);
                    $where1  = " LIMIT $atpage, $pageSize";
                    $results = $dsql->dsqlOper($footsql . ' ORDER BY `date` DESC' . $where1, "results");

                    if ($results) {
                        foreach ($results as $k => $v) {
                            $detailHandels = new handlers($v['module'], $v['module2'] == '' ? 'detail' : $v['module2']);
                            $detailConfig  = $detailHandels->getHandle($v['aid']); //echo"<pre>";print_R($detailConfig);die;
                            if (is_array($detailConfig) && $detailConfig['state'] == 100) {
                                $detailConfig = $detailConfig['info'];
                                $detailConfig['lid']        = $v['id'];
                                $detailConfig['module']     = $v['module'];
                                $module2    = $v['module2'];
                                $detailConfig['module2']     = $module2;
                                $module2str = substr($v['module2'], 0, strrpos($v['module2'], 'Detail'));

                                if ($module2str != '') {
                                    $module2    = $module2str . '-detail';
                                }
                                if ($v['module'] == 'circle' && $v['module2'] == 'blogdetail') {
                                    $module2 = 'blog_detail';
                                } elseif ($v['module'] == 'renovation') {
                                    if ($v['module2'] == 'diaryDetail') {
                                        $module2 = 'elderly-detail';
                                    } elseif ($v['module2'] == 'teamDetail') {
                                        $module2 = 'designer-detail';
                                    } elseif ($v['module2'] == 'foremanDetail') {
                                        $module2 = 'foreman-detail';
                                    } elseif ($v['module2'] == 'storeDetail') {
                                        $module2 = 'company-detail';
                                    }
                                } elseif ($v['module'] == 'travel' && $v['module2'] == 'countryDetail') {
                                    $module2 = 'visacountry-detail';
                                } elseif ($v['module'] == 'business' && $v['module2'] == 'storeDetail') {
                                    $module2 = 'detail';
                                }
                                if($v['module'] == 'job' && $module2 == 'post-detail'){
                                    $module2 = 'job';
                                }
                                $url = getUrlPath(array("service" => $v['module'], "template" => $module2, "id" => $detailConfig['id']));
                                $detailConfig['url'] = $url;
                                $detailConfig['browsetime'] = $v['date'];
                                $detailConfig['browsetimeymd'] = date('Y-m-d', $v['date']);
                                $detailConfig['browsetimefloor'] = FloorTime(GetMkTime(time()) - $v['date']);
                                array_push($list, $detailConfig);
                            }
                        }
                    }
                    return array("pageInfo" => $pageinfo, "list" => $list);
                } else {
                    return array("state" => 200, "info" => $langData['siteConfig'][54][23]);
                }
            } else {
                return array("state" => 200, "info" => $langData['siteConfig'][54][23]);
            }
        } else {
            return array("state" => 200, "info" => $langData['siteConfig'][54][23]);
        }
    }

    /**
     * Notes:足迹记录删除
     * Ueser: Administrator
     * DateTime: 2020/12/24 17:05
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function delFootprints()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        $param = $this->param;
        $uid        = $userLogin->getMemberID();
        if (is_array($param)) {
            if (!empty($param)) {
                $id         = $param['id'];
                $delall     = (int)$param['delall'];
                $module     = $param['module'];
                if ($uid < 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);
                if ($id == '' && $delall == 0) return array("state" => 200, "info" => '删除失败！');

                if ($module != '') {
                    $ishavesql  = $dsql->SetQuery("SHOW TABLES LIKE '#@__" . $module . "_historyclick' ");
                    $ishaveres  = $dsql->dsqlOper($ishavesql, "results");
                    if (empty($ishaveres)) return array("state" => 200, "info" => $langData['siteConfig'][21][64]); //暂无数据！

                    $delsql = $dsql->SetQuery("DELETE FROM `#@__" . $module . "_historyclick` WHERE FIND_IN_SET(`id`,'$id') AND `uid` = $uid");
                    if ($delall == 1) {
                        $delsql = $dsql->SetQuery("DELETE FROM `#@__" . $module . "_historyclick` WHERE `uid` = $uid");
                    }
                    $delres     = $dsql->dsqlOper($delsql, "update");
                    if ($delres == 'ok') {
                        return $delres;
                    } else {
                        return array("state" => 200, "info" => '删除失败!');
                    }
                } else {
                    return array("state" => 200, "info" => '删除失败!');
                }
            } else {
                return array("state" => 200, "info" => '删除失败!');
            }
        }
    }

    /**
     * Notes: 获取分销海报
     * Ueser: Administrator
     * DateTime: 2021/1/8 18:07
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function getFenxiaoPosterpic()
    {
        global $dsql;
        global $langData;
        global $userLogin;
        $uid = $userLogin->getMemberID();
        if ($uid < 0) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);

        $sql = $dsql->SetQuery("SELECT * FROM `#@__fenxiao_posterpic` WHERE 1=1");
        $res = $dsql->dsqlOper($sql, "results");
        $list = array();
        if ($res) {

            $defaultUrl = getUrlPath(array('service' => 'siteConfig', 'template' => 'register', 'param' => 'fromShare=' . $uid));

            foreach ($res as $k => $v) {
                $list[$k]['id']         = $v['id'];
                $list[$k]['litpic']     = $v['litpic'];
                $list[$k]['litpicpath'] = getFilePath($v['litpic']);
                $list[$k]['xAxis']      = $v['xAxis'];
                $list[$k]['yAxis']      = $v['yAxis'];
                $list[$k]['codewidth']  = $v['codewidth'];
                $list[$k]['codeheight'] = $v['codeheight'];
                $list[$k]['imgwidth']   = $v['imgwidth'];
                $list[$k]['imgheight']  = $v['imgheight'];
                $list[$k]['cropwidth']  = $v['cropwidth'];
                $list[$k]['cropheight'] = $v['cropheight'];

                $url = $v['url'] ? ($v['url'] . (strstr($v['url'], '?') ? '&' : '?') . 'fromShare=' . $uid) : $defaultUrl;
                $list[$k]['url'] = $url;
            }
            return  $list;
        } else {
            return  $list;
        }
    }

    /**
     * Notes: 交易明细详细
     * Ueser: Administrator
     * DateTime: 2021/2/3 16:08
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function recordDetail()
    {
        global $dsql;
        global $userLogin;
        global $cfg_pointRatio;
        $id           = $this->param;
        $uid          = $userLogin->getMemberID();
        if ($uid < 1) return array("state" => 200, "info" => '请先去登录!');
        $recordDetail = array();
        if (empty($id) && !is_numeric($id)) return array("state" => 200, "info" => '格式错误');

        $sql = $dsql->SetQuery("SELECT * FROM `#@__member_money` WHERE `id` = '$id' AND `userid` = '$uid'");

        $res = $dsql->dsqlOper($sql, "results");

        if ($res) {
            $results                        = $res[0];
            $recordDetail['id']             = $results['id'];
            $recordDetail['type']           = $results['type'];
            $recordDetail['amount']         = $results['amount'];
            $recordDetail['info']           = $results['info'];
            $recordDetail['date']           = date("Y-m-d H:i:s", $results['date']);
            $recordDetail['ordertype']      = $results['ordertype'];
            $recordDetail['montype']        = $results['montype']; //1-充值。2-体现
            $recordDetail['showtype']       = $results['showtype'];
            $recordDetail['pid']            = $results['pid'];
            $recordDetail['balance']        = $results['balance'];
            $recordDetail['ctype']          = $results['ctype'];
            $recordDetail['urlParam']       = $results['urlParam'];
            $recordDetail['ordernum']       = $results['ordernum'];
            $recordDetail['tuikuantype']    = $results['tuikuantype'];
            $recordDetail['modulename']     = getModuleTitle(array('name' => $results['ordertype']));
            $recordDetail["pay_name"]       = '余额支付';
            $recordDetail['transaction_id'] = 0;

            if ($results['pid'] != '') {
                $paylogsql = $dsql->SetQuery("SELECT `paytype`,`transaction_id`,`amount` FROM `#@__pay_log` WHERE `id` = " . $results['pid']);
                $paylogres = $dsql->dsqlOper($paylogsql, "results");

                if ($paylogres) {
                    $recordDetail['transaction_id'] = $paylogres[0]['transaction_id'];
                    $recordDetail['payamount']      = $paylogres[0]['amount'];
                    $sql                            = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $paylogres[0]["paytype"] . "'");
                    $ret                            = $dsql->dsqlOper($sql, "results");
                    if (!empty($ret)) {
                        $recordDetail['pay_name'] = $ret[0]['pay_name'];
                    } else {
                        $recordDetail["pay_name"] = $ret[0]["paytype"];
                    }
                }
            }

            /*退款相关*/
            if ($results['tuikuanparam'] != '') {
                $tuikuanparam = unserialize($results['tuikuanparam']);
                $recordDetail['tuikuanparam'] = $tuikuanparam;
            }

            $_urlParam = '';
            if ($results['urlParam']) {
                $_urlParam = unserialize($results['urlParam']);
                if ($_urlParam) {
                    if ($_urlParam['param']) {
                        $_urlParam['param'] .= '&from=record';
                    } else {
                        $_urlParam['param'] = 'from=record';
                    }
                }
                if ($_urlParam) {
                    $_urlParam = getUrlPath($_urlParam);
                }
            }

            $recordDetail["orderurl"] = $_urlParam;
            /*商城订单相关 外卖 旅游*/
            if ($results['ordertype'] == 'shop' || $results['ordertype'] == 'waimai' || $results['ordertype'] == 'travel' || $results['ordertype'] == 'travel' || $results['ordertype'] == 'info' || $results['ordertype'] == 'tuan' || $results['ordertype'] == 'huodong' || $results['ordertype'] == 'homemaking' || $results['ordertype'] == 'education' || $results['ordertype'] == 'live') {
                /*订单相关*/
                if ($results['ctype'] == 'xiaofei' || $results['ctype'] == 'shangpinxiaoshou') {

                    if ($results['ordertype'] == 'shop') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`userid`, o.`refrundamount`,o.`refrunddate`,o.`point`,s.`title` stitle, b.`title` btitle,p.`title` foodtitle FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = o.`branchid` LEFT  JOIN `#@__shop_order_product` op ON op.`orderid` = o.`id` LEFT JOIN `#@__shop_product` p ON p.`id`  = op.`proid` WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'waimai') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`uid` userid, o.`refrundamount`,o.`refrunddate`,o.`point`,s.`shopname` stitle, o.`fids` FROM `#@__waimai_order_all` o LEFT JOIN `#@__waimai_shop` s ON o.`sid` = s.`id` WHERE  o.`ordernum` = '" . $results['ordernum'] . "'");

                        /*外卖跑腿*/
                        $param = unserialize($results['urlParam']);
                        if ($param['module'] == 'paotui') {
                            $shopordersql = $dsql->SetQuery("SELECT o.`uid` userid, ''refrundamount,o.`refrunddate`,o.`point`, o.`shop` foodtitle, o.`type` FROM `#@__paotui_order` o WHERE  o.`ordernum` = '" . $results['ordernum'] . "'");
                        }
                    } elseif ($results['ordertype'] == 'travel') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,o.`type`,s.`title` stitle,o.`proid` FROM `#@__travel_order` o LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'info') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`prod` proid FROM `#@__info_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'tuan') {
                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`proid`  FROM `#@__tuan_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'huodong') {
                        if ($results['ctype'] == 'shangpinxiaoshou') {
                            $shopordersql = $dsql->SetQuery("SELECT `title` foodtitle ,'' refrundamount,'' refrunddate,'' point,'' stitle,'' proid  FROM `#@__huodong_list` o WHERE o.`id` = '" . $results['ordernum'] . "'");
                        } else {
                            $shopordersql = $dsql->SetQuery("SELECT o.`uid` userid ,'' refrundamount,'' refrunddate,o.`point`,'' stitle,o.`hid`proid  FROM `#@__huodong_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                        }
                    } elseif ($results['ordertype'] == 'homemaking') {
                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,`ret-money` refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`proid`   FROM `#@__homemaking_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'education') {
                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`proid`   FROM `#@__education_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'live') {
                        $shopordersql = $dsql->SetQuery("SELECT l.`title` foodtitle,'' refrundamount,'' refrunddate,'' point,'' stitle FROM `#@__live_payorder` o LEFT JOIN `#@__livelist` l ON o.`live_id` = l.`id` WHERE o.`order_id` =  '" . $results['ordernum'] . "'");
                    }

                    $shoporderres = $dsql->dsqlOper($shopordersql, "results");
                    // $recordDetail["orderurl"] = $results['urlParam'] != '' ? getUrlPath(unserialize($results['urlParam'])) : '';
                    if ($shoporderres) {

                        $pointmoney = (float)$shoporderres[0]['point'] / $cfg_pointRatio;

                        $recordDetail['refrundamount'] = $shoporderres[0]['refrundamount'];
                        $recordDetail['refrunddate']   = $shoporderres[0]['refrunddate'];
                        $recordDetail['pointmoney']    = $pointmoney;
                        $recordDetail['point']         = $shoporderres[0]['point'];
                        $recordDetail['stitle']        = $shoporderres[0]['stitle'];

                        if ($results['ordertype'] == 'shop') {

                            $recordDetail['btitle'] = $shoporderres[0]['btitle'];
                        }
                        if ($results['ordertype'] == 'waimai' && $param) {
                            if ($param['action'] == 'waimai') {

                                $foods = $shoporderres[0]['fids'] != '' ? explode(',', $shoporderres[0]['fids']) : array();
                                if ($foods) {
                                    global $cfg_secureAccess;
                                    global $cfg_basehost;
                                    $foodtitlesql              = $dsql->SetQuery("SELECT `title` FROM `#@__waimai_list` WHERE `id` = '" . $foods[0] . "'");
                                    $foodtitleres              = $dsql->dsqlOper($foodtitlesql, "results");
                                    $foodtitle                 = $foodtitleres[0]['title'] . '...等' . (count($foods) > 1 ? count($foods) - 1 : 1) . "件商品";
                                    $recordDetail['foodtitle'] = $foodtitle;
                                    if ($results['type'] == 1) {

                                        $recordDetail["orderurl"]  = $cfg_secureAccess . $cfg_basehost . "/wmsj/order/waimaiOrderDetail.php?id=" . $param['id'];
                                    }
                                }
                            } else {
                                $typename                  = $shoporderres[0]['type'] == '1' ? '帮我买' : '帮我送';
                                $recordDetail['foodtitle'] = $typename . $shoporderres[0]['foodtitle'];
                            }
                        } elseif ($results['ordertype'] == 'travel') {

                            $proid = $shoporderres[0]['proid'];
                            if ($shoporderres[0]['type'] == '1' || $shoporderres[0]['type'] == '2') {
                                $proidsql = $dsql->SetQuery("SELECT `ticketid` FROM `#@__travel_ticketinfo` WHERE `id` = '" . $shoporderres[0]['proid'] . "'");
                                $proidres = $dsql->dsqlOper($proidsql, "results");
                                if ($proidres) {
                                    $proid = $proidres[0]['ticketid'];
                                }
                            }

                            if ($shoporderres[0]['type'] == '1') {

                                $table     = 'travel_ticket';
                                $foodtitle = '景点门票-';
                            } elseif ($shoporderres[0]['type'] == '2') {

                                $table     = 'travel_agency';
                                $foodtitle = '周边游-';
                            } elseif ($shoporderres[0]['type'] == '3') {

                                $table     = 'travel_hotelroom';
                                $foodtitle = '酒店入驻-';
                            } elseif ($shoporderres[0]['type'] == '4') {

                                $table     = 'travel_visa';
                                $foodtitle = '签证-';
                            }

                            $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $table . "` WHERE `id` ='$proid'");
                            $foodres = $dsql->dsqlOper($foodsql, "results");
                            if ($foodres) {
                                $foodtitle .= $foodres[0]['title'];
                            }

                            $recordDetail['foodtitle'] = $foodtitle;
                        } elseif ($results['ordertype'] == 'info' || $results['ordertype'] == 'tuan' || $results['ordertype'] == 'homemaking') {
                            $foodtitletable = "";
                            if ($results['ordertype'] == 'tuan') {
                                $foodtitletable = 'tuanlist';
                            } elseif ($results['ordertype'] == 'info') {
                                $foodtitletable = 'infolist';
                            } elseif ($results['ordertype'] == 'homemaking') {
                                $foodtitletable = 'homemaking_list';
                            }
                            $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $shoporderres[0]['proid'] . "'");
                            $foodres = $dsql->dsqlOper($foodsql, "results");
                            if ($foodres) {
                                $recordDetail['foodtitle'] = $foodres[0]['title'];
                            }
                        } elseif ($results['ordertype'] == 'huodong') {

                            /*这里做区分的目的是  活动商家结算的时候获取不到ordernum(order表,reg表,huodonglist表 没有关联关系) ordernum 存的是活动的id*/
                            if ($results['ctype'] == 'xiaofei') {
                                $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__huodong_list` WHERE `id` ='" . $shoporderres[0]['proid'] . "'");
                                $foodres = $dsql->dsqlOper($foodsql, "results");
                                if ($foodres) {
                                    $recordDetail['foodtitle'] = $foodres[0]['title'] == '' ? '未知' : $foodres[0]['title'];
                                }
                            } else {
                                $recordDetail['foodtitle'] = $shoporderres[0]['foodtitle'];
                            }
                        } elseif ($results['ordertype'] == 'education') {

                            $foodsql = $dsql->SetQuery("SELECT cr.`title`  FROM `#@__education_class` c LEFT JOIN `#@__education_courses` cr ON c.`coursesid` = cr.`id` WHERE c.`id` ='" . $shoporderres[0]['proid'] . "'");
                            $foodres = $dsql->dsqlOper($foodsql, "results");
                            if ($foodres) {
                                $recordDetail['foodtitle'] = $foodres[0]['title'] == '' ? '未知' : $foodres[0]['title'];
                            }
                        } else {

                            $recordDetail['foodtitle']     = $shoporderres[0]['foodtitle'];
                        }
                    }
                }

                if ($results['ctype'] == 'shangpinxiaoshou') {
                    $buyusername = '';
                    /*商家收入相关*/
                    if ($results['ordernum'] != '') {
                        $usernamsql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = '" . $shoporderres[0]['userid'] . "'");
                        $usernamres = $dsql->dsqlOper($usernamsql, 'results');
                        if ($usernamres) {
                            $buyusername = $usernamres[0]['nickname'];
                        }
                        $recordDetail['buyusername'] = $buyusername;
                    }
                }


                /*查询有无相关记录 这里判断主要是为了区分商家查询交易记录时候只需要查商家想关联的退款记录就可以了*/

                if ($results['ordernum'] != '') {

                    $tuikuantype = (int)$results['tuikuantype'];
                    $whererctype = '';
                    if ($results['ctype'] == 'shangpinxiaoshou') {
                        /*这里是说明 登录用户查询的是商家退款记录*/
                        $whererctype  =  " AND (`tuikuantype` = 1 or `ctype` ='shangpinxiaoshou')";
                    } elseif ($results['ctype'] == 'tuikuan' && $tuikuantype == 0) {
                        /*这里是说明 登录用户查询的是用户退款记录*/
                        $whererctype  =  " AND `ctype` !='shangpinxiaoshou'";
                    }
                    $countglsql     = $dsql->SetQuery("SELECT `tuikuanparam`,`type` FROM `#@__member_money` WHERE `ordertype` = '" . $results['ordertype'] . "' AND `userid` = '" . $uid . "' AND`ordernum` = '" . $results['ordernum'] . "'" . $whererctype);
                    $countgl     = $dsql->dsqlOper($countglsql, 'totalCount');
                }
                $recordDetail['countgl'] = (int)$countgl;
            }

            /*交友相关*/
            //            if ($results['ordertype'] == 'dating') {
            //
            //            }

            /*外卖订单相关*/

            /*经纪人套餐相关*/
            if ($results['ctype'] == 'jingjirentaocan') {
                $sql = $dsql->SetQuery("SELECT `paytype` FROM `#@__house_zjuser_order` WHERE `ordernum` = '" . $results['ordernum'] . "' AND `state` = 0");
                $res = $dsql->dsqlOper($sql, "results");

                if ($res) {
                    $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $res[0]['paytype'] . "'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if (!empty($ret)) {
                        $pay_name = $ret[0]['pay_name'];
                    } else {
                        $pay_name = $ret[0]["paytype"];
                    }
                    $recordDetail['jjrpayname'] = $pay_name;
                }
            }

            /*刷新置顶相关*/
            if ($results['ctype'] == 'shuaxin' || $results['ctype'] == 'zhiding' || $results['ctype'] == 'jiacu' || $results['ctype'] == 'jiahong') {
                $recordDetail['pay_name'] = '余额支付';
                if ($results['pid'] != 0) {
                    $sql = $dsql->SetQuery("SELECT sp.`pay_name` FROM `#@__pay_log` p LEFT JOIN `#@__site_payment` sp ON p.`paytype` = sp.`pay_code` WHERE  p.`id` = '" . $results['pid'] . "'");
                    $res = $dsql->dsqlOper($sql, "results");

                    if ($res && is_array($res)) {
                        $recordDetail['pay_name'] = $res[0]['pay_name'];
                    }
                }

                $param = unserialize($results['urlParam']);
                if ($param) {
                    if ($results['ordertype'] == 'info') {
                        $foodtitletable = 'infolist';
                    } elseif ($results['ordertype'] == 'house') {
                        $foodtitletable = 'house_' . ($param['template'] != '' ? str_replace('-detail', '', $param['template']) : $param['template']);
                    } elseif ($results['ordertype'] == 'sfcar') {
                        $foodtitletable = 'sfcar_list';
                    }

                    $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");

                    if ($results['ordertype'] == 'car') {
                        $foodtitletable = 'car_list';
                        $foodsql = $dsql->SetQuery("SELECT `titlename` title FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");
                    } elseif ($results['ordertype'] == "job") {
                        $foodtitletable = 'job_resume';
                        $foodsql = $dsql->SetQuery("SELECT `alias` title FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");
                    }
                    $foodres = $dsql->dsqlOper($foodsql, "results");

                    if ($foodres) {
                        $recordDetail['foodtitle'] = $foodres[0]['title'];
                    }
                }
            }

            /*发布信息相关*/
            if ($results['ctype'] == 'fabuxinxi') {
                $param = unserialize($results['urlParam']);
                if ($param) {
                    if ($param['service'] == 'sfcar') {
                        $foodtitletable = 'sfcar_list';
                    } elseif ($param['service'] == 'house') {
                        $table = str_replace('-detail', '', $param['template']);
                        $foodtitletable = 'house_' . $table;
                    } elseif ($param['service'] == 'car') {
                        $foodtitletable = 'car_list';
                    } elseif ($param['service'] == 'info') {
                        $foodtitletable = 'infolist';
                    }

                    $foodsql = $dsql->SetQuery("SELECT `title`,`body` FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");
                    $foodres = $dsql->dsqlOper($foodsql, "results");
                    if ($foodres) {
                        $recordDetail['foodtitle'] = strip_tags($foodres[0]['title']) ? strip_tags($foodres[0]['title']) : strip_tags($foodres[0]['body']);
                    }
                }
            }
            $recordDetail['title'] = $results['title'];


            /*佣金 相关*/
            if ($results['ctype'] == 'yongjin') {
                $param = unserialize($results['urlParam']);
                if ($param) {
                    $usernamsql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = '" . $param['userid'] . "'");
                    $usernamres = $dsql->dsqlOper($usernamsql, 'results');
                    if ($usernamres) {
                        $buyusername = $usernamres[0]['nickname'];
                    }
                    $recordDetail['buyusername'] = $buyusername;
                    $recordDetail['modulename']     = getModuleTitle(array('name' => $param['module']));
                }
            }

            //提现
            if ($results['ctype'] == 'tixian' && $results['pid']) {
                $withdrawsql = $dsql->SetQuery("SELECT `bank`, `cardnum`, `cardname`, `note`, `rdate`,`state` FROM `#@__member_withdraw` WHERE `id` = " . $results['pid']);
                $withdrawres = $dsql->dsqlOper($withdrawsql, 'results');
                if ($withdrawres) {

                    $recordDetail['bank'] = $withdrawres[0]['bank'] == 'alipay' ? '支付宝' : ($withdrawres[0]['bank'] == 'weixin' ? '微信' : $withdrawres[0]['bank']);
                    if ($withdrawres[0]['bank'] != 'weixin') {
                        $recordDetail['bank'] .= '(' . $withdrawres[0]['cardname'] . ')';
                    }
                    $recordDetail['rdate'] = $withdrawres[0]['rdate'];
                    $recordDetail['note']  = $withdrawres[0]['note'];
                    $recordDetail['status'] = $withdrawres[0]['state'];
                }
            }

            return $recordDetail;
        }
    }


    //消费金明细

    public function consumeDetail()
    {

        global $dsql;
        global $userLogin;
        global $cfg_pointRatio;
        $id           = $this->param;
        $uid          = $userLogin->getMemberID();
        if ($uid < 1) return array("state" => 200, "info" => '请先去登录!');
        $recordDetail = array();
        if (empty($id) && !is_numeric($id)) return array("state" => 200, "info" => '格式错误');

        $sql = $dsql->SetQuery("SELECT * FROM `#@__member_bonus` WHERE `id` = '$id' AND `userid` = '$uid'");
        $res = $dsql->dsqlOper($sql, "results");

        if ($res) {
            $results                        = $res[0];
            $recordDetail['id']             = $results['id'];
            $recordDetail['type']           = $results['type'];
            $recordDetail['amount']         = $results['amount'];
            $recordDetail['info']           = $results['info'];
            $recordDetail['date']           = date("Y-m-d H:i:s", $results['date']);
            $recordDetail['ordertype']      = $results['ordertype'];
            $recordDetail['montype']        = $results['montype']; //1-充值。2-体现
            $recordDetail['showtype']       = $results['showtype'];
            $recordDetail['pid']            = $results['pid'];
            $recordDetail['balance']        = $results['balance'];
            $recordDetail['ctype']          = $results['ctype'];
            $recordDetail['urlParam']       = $results['urlParam'];
            $recordDetail['ordernum']       = $results['ordernum'];
            $recordDetail['tuikuantype']    = $results['tuikuantype'];
            $recordDetail['modulename']     = getModuleTitle(array('name' => $results['ordertype']));
            $configPay = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = 'huoniao_bonus'");
            $Payconfig = $dsql->dsqlOper($configPay, "results");
            $name = $Payconfig[0]['pay_name'];
            $name = $name . '支付';
            $recordDetail["pay_name"]       = $name;
            $recordDetail['transaction_id'] = 0;

            if ($results['pid'] != '') {
                $paylogsql = $dsql->SetQuery("SELECT `paytype`,`transaction_id`,`amount` FROM `#@__pay_log` WHERE `id` = " . $results['pid']);
                $paylogres = $dsql->dsqlOper($paylogsql, "results");

                if ($paylogres) {
                    $recordDetail['transaction_id'] = $paylogres[0]['transaction_id'];
                    $recordDetail['payamount']      = $paylogres[0]['amount'];
                    $sql                            = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $paylogres[0]["paytype"] . "'");
                    $ret                            = $dsql->dsqlOper($sql, "results");
                    if (!empty($ret)) {
                        $recordDetail['pay_name'] = $ret[0]['pay_name'];
                    } else {
                        $recordDetail["pay_name"] = $ret[0]["paytype"];
                    }
                }
            }

            /*退款相关*/
            if ($results['tuikuanparam'] != '') {
                $tuikuanparam = unserialize($results['tuikuanparam']);
                $recordDetail['tuikuanparam'] = $tuikuanparam;
            }

            $_urlParam = '';
            if ($results['urlParam']) {
                $_urlParam = unserialize($results['urlParam']);
                if ($_urlParam) {
                    if ($_urlParam['param']) {
                        $_urlParam['param'] .= '&from=record';
                    } else {
                        $_urlParam['param'] = 'from=record';
                    }
                }
                if ($_urlParam) {
                    $_urlParam = getUrlPath($_urlParam);
                }
            }

            $recordDetail["orderurl"] = $_urlParam;
            /*商城订单相关 外卖 旅游*/
            if ($results['ordertype'] == 'shop' || $results['ordertype'] == 'waimai' || $results['ordertype'] == 'travel' || $results['ordertype'] == 'travel' || $results['ordertype'] == 'info' || $results['ordertype'] == 'tuan' || $results['ordertype'] == 'huodong' || $results['ordertype'] == 'homemaking' || $results['ordertype'] == 'education' || $results['ordertype'] == 'live') {
                /*订单相关*/
                if ($results['ctype'] == 'xiaofei' || $results['ctype'] == 'shangpinxiaoshou') {

                    if ($results['ordertype'] == 'shop') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`userid`, o.`refrundamount`,o.`refrunddate`,o.`point`,s.`title` stitle, b.`title` btitle,p.`title` foodtitle FROM `#@__shop_order` o LEFT JOIN `#@__shop_store` s ON o.`store` = s.`id` LEFT JOIN `#@__shop_branch_store` b ON b.`id` = o.`branchid` LEFT  JOIN `#@__shop_order_product` op ON op.`orderid` = o.`id` LEFT JOIN `#@__shop_product` p ON p.`id`  = op.`proid` WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'waimai') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`uid` userid, o.`refrundamount`,o.`refrunddate`,o.`point`,s.`shopname` stitle, o.`fids` FROM `#@__waimai_order_all` o LEFT JOIN `#@__waimai_shop` s ON o.`sid` = s.`id` WHERE  o.`ordernum` = '" . $results['ordernum'] . "'");

                        /*外卖跑腿*/
                        $param = unserialize($results['urlParam']);
                        if ($param['module'] == 'paotui') {
                            $shopordersql = $dsql->SetQuery("SELECT o.`uid` userid, ''refrundamount,o.`refrunddate`,o.`point`, o.`shop` foodtitle, o.`type` FROM `#@__paotui_order` o WHERE  o.`ordernum` = '" . $results['ordernum'] . "'");
                        }
                    } elseif ($results['ordertype'] == 'travel') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,o.`type`,s.`title` stitle,o.`proid` FROM `#@__travel_order` o LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'info') {

                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`prod` proid FROM `#@__info_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'tuan') {
                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`proid`  FROM `#@__tuan_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'huodong') {
                        if ($results['ctype'] == 'shangpinxiaoshou') {
                            $shopordersql = $dsql->SetQuery("SELECT `title` foodtitle ,'' refrundamount,'' refrunddate,'' point,'' stitle,'' proid  FROM `#@__huodong_list` o WHERE o.`id` = '" . $results['ordernum'] . "'");
                        } else {
                            $shopordersql = $dsql->SetQuery("SELECT o.`uid` userid ,'' refrundamount,'' refrunddate,o.`point`,'' stitle,o.`hid`proid  FROM `#@__huodong_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                        }
                    } elseif ($results['ordertype'] == 'homemaking') {
                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,`ret-money` refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`proid`   FROM `#@__homemaking_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'education') {
                        $shopordersql = $dsql->SetQuery("SELECT o.`userid` ,'' refrundamount,o.`ret-ok-date` refrunddate,o.`point`,'' stitle,o.`proid`   FROM `#@__education_order` o WHERE o.`ordernum` = '" . $results['ordernum'] . "'");
                    } elseif ($results['ordertype'] == 'live') {
                        $shopordersql = $dsql->SetQuery("SELECT l.`title` foodtitle,'' refrundamount,'' refrunddate,'' point,'' stitle FROM `#@__live_payorder` o LEFT JOIN `#@__livelist` l ON o.`live_id` = l.`id` WHERE o.`order_id` =  '" . $results['ordernum'] . "'");
                    }

                    $shoporderres = $dsql->dsqlOper($shopordersql, "results");
                    // $recordDetail["orderurl"] = $results['urlParam'] != '' ? getUrlPath(unserialize($results['urlParam'])) : '';
                    if ($shoporderres) {

                        $pointmoney = (float)$shoporderres[0]['point'] / $cfg_pointRatio;

                        $recordDetail['refrundamount'] = $shoporderres[0]['refrundamount'];
                        $recordDetail['refrunddate']   = $shoporderres[0]['refrunddate'];
                        $recordDetail['pointmoney']    = $pointmoney;
                        $recordDetail['point']         = $shoporderres[0]['point'];
                        $recordDetail['stitle']        = $shoporderres[0]['stitle'];

                        if ($results['ordertype'] == 'shop') {

                            $recordDetail['btitle'] = $shoporderres[0]['btitle'];
                        }
                        if ($results['ordertype'] == 'waimai' && $param) {
                            if ($param['action'] == 'waimai') {

                                $foods = $shoporderres[0]['fids'] != '' ? explode(',', $shoporderres[0]['fids']) : array();
                                if ($foods) {
                                    global $cfg_secureAccess;
                                    global $cfg_basehost;
                                    $foodtitlesql              = $dsql->SetQuery("SELECT `title` FROM `#@__waimai_list` WHERE `id` = '" . $foods[0] . "'");
                                    $foodtitleres              = $dsql->dsqlOper($foodtitlesql, "results");
                                    $foodtitle                 = $foodtitleres[0]['title'] . '...等' . (count($foods) > 1 ? count($foods) - 1 : 1) . "件商品";
                                    $recordDetail['foodtitle'] = $foodtitle;
                                    if ($results['type'] == 1) {

                                        $recordDetail["orderurl"]  = $cfg_secureAccess . $cfg_basehost . "/wmsj/order/waimaiOrderDetail.php?id=" . $param['id'];
                                    }
                                }
                            } else {
                                $typename                  = $shoporderres[0]['type'] == '1' ? '帮我买' : '帮我送';
                                $recordDetail['foodtitle'] = $typename . $shoporderres[0]['foodtitle'];
                            }
                        } elseif ($results['ordertype'] == 'travel') {

                            $proid = $shoporderres[0]['proid'];
                            if ($shoporderres[0]['type'] == '1' || $shoporderres[0]['type'] == '2') {
                                $proidsql = $dsql->SetQuery("SELECT `ticketid` FROM `#@__travel_ticketinfo` WHERE `id` = '" . $shoporderres[0]['proid'] . "'");
                                $proidres = $dsql->dsqlOper($proidsql, "results");
                                if ($proidres) {
                                    $proid = $proidres[0]['ticketid'];
                                }
                            }

                            if ($shoporderres[0]['type'] == '1') {

                                $table     = 'travel_ticket';
                                $foodtitle = '景点门票-';
                            } elseif ($shoporderres[0]['type'] == '2') {

                                $table     = 'travel_agency';
                                $foodtitle = '周边游-';
                            } elseif ($shoporderres[0]['type'] == '3') {

                                $table     = 'travel_hotelroom';
                                $foodtitle = '酒店入驻-';
                            } elseif ($shoporderres[0]['type'] == '4') {

                                $table     = 'travel_visa';
                                $foodtitle = '签证-';
                            }

                            $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $table . "` WHERE `id` ='$proid'");
                            $foodres = $dsql->dsqlOper($foodsql, "results");
                            if ($foodres) {
                                $foodtitle .= $foodres[0]['title'];
                            }

                            $recordDetail['foodtitle'] = $foodtitle;
                        } elseif ($results['ordertype'] == 'info' || $results['ordertype'] == 'tuan' || $results['ordertype'] == 'homemaking') {
                            $foodtitletable = "";
                            if ($results['ordertype'] == 'tuan') {
                                $foodtitletable = 'tuanlist';
                            } elseif ($results['ordertype'] == 'info') {
                                $foodtitletable = 'infolist';
                            } elseif ($results['ordertype'] == 'homemaking') {
                                $foodtitletable = 'homemaking_list';
                            }
                            $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $shoporderres[0]['proid'] . "'");
                            $foodres = $dsql->dsqlOper($foodsql, "results");
                            if ($foodres) {
                                $recordDetail['foodtitle'] = $foodres[0]['title'];
                            }
                        } elseif ($results['ordertype'] == 'huodong') {

                            /*这里做区分的目的是  活动商家结算的时候获取不到ordernum(order表,reg表,huodonglist表 没有关联关系) ordernum 存的是活动的id*/
                            if ($results['ctype'] == 'xiaofei') {
                                $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__huodong_list` WHERE `id` ='" . $shoporderres[0]['proid'] . "'");
                                $foodres = $dsql->dsqlOper($foodsql, "results");
                                if ($foodres) {
                                    $recordDetail['foodtitle'] = $foodres[0]['title'] == '' ? '未知' : $foodres[0]['title'];
                                }
                            } else {
                                $recordDetail['foodtitle'] = $shoporderres[0]['foodtitle'];
                            }
                        } elseif ($results['ordertype'] == 'education') {

                            $foodsql = $dsql->SetQuery("SELECT cr.`title`  FROM `#@__education_class` c LEFT JOIN `#@__education_courses` cr ON c.`coursesid` = cr.`id` WHERE c.`id` ='" . $shoporderres[0]['proid'] . "'");
                            $foodres = $dsql->dsqlOper($foodsql, "results");
                            if ($foodres) {
                                $recordDetail['foodtitle'] = $foodres[0]['title'] == '' ? '未知' : $foodres[0]['title'];
                            }
                        } else {

                            $recordDetail['foodtitle']     = $shoporderres[0]['foodtitle'];
                        }
                    }
                }

                if ($results['ctype'] == 'shangpinxiaoshou') {
                    $buyusername = '';
                    /*商家收入相关*/
                    if ($results['ordernum'] != '') {
                        $usernamsql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = '" . $shoporderres[0]['userid'] . "'");
                        $usernamres = $dsql->dsqlOper($usernamsql, 'results');
                        if ($usernamres) {
                            $buyusername = $usernamres[0]['nickname'];
                        }
                        $recordDetail['buyusername'] = $buyusername;
                    }
                }


                /*查询有无相关记录 这里判断主要是为了区分商家查询交易记录时候只需要查商家想关联的退款记录就可以了*/

                if ($results['ordernum'] != '') {

                    $tuikuantype = (int)$results['tuikuantype'];
                    $whererctype = '';
                    if ($results['ctype'] == 'shangpinxiaoshou') {
                        /*这里是说明 登录用户查询的是商家退款记录*/
                        $whererctype  =  " AND (`tuikuantype` = 1 or `ctype` ='shangpinxiaoshou')";
                    } elseif ($results['ctype'] == 'tuikuan' && $tuikuantype == 0) {
                        /*这里是说明 登录用户查询的是用户退款记录*/
                        $whererctype  =  " AND `ctype` !='shangpinxiaoshou'";
                    }
                    $countglsql     = $dsql->SetQuery("SELECT `tuikuanparam`,`type` FROM `#@__member_money` WHERE `ordertype` = '" . $results['ordertype'] . "' AND `userid` = '" . $uid . "' AND`ordernum` = '" . $results['ordernum'] . "'" . $whererctype);
                    $countgl     = $dsql->dsqlOper($countglsql, 'totalCount');
                }
                $recordDetail['countgl'] = (int)$countgl;
            }

            /*交友相关*/
            //            if ($results['ordertype'] == 'dating') {
            //
            //            }

            /*外卖订单相关*/

            /*经纪人套餐相关*/
            if ($results['ctype'] == 'jingjirentaocan') {
                $sql = $dsql->SetQuery("SELECT `paytype` FROM `#@__house_zjuser_order` WHERE `ordernum` = '" . $results['ordernum'] . "' AND `state` = 0");
                $res = $dsql->dsqlOper($sql, "results");

                if ($res) {
                    $sql = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = '" . $res[0]['paytype'] . "'");
                    $ret = $dsql->dsqlOper($sql, "results");
                    if (!empty($ret)) {
                        $pay_name = $ret[0]['pay_name'];
                    } else {
                        $pay_name = $ret[0]["paytype"];
                    }
                    $recordDetail['jjrpayname'] = $pay_name;
                }
            }

            /*刷新置顶相关*/
            if ($results['ctype'] == 'shuaxin' || $results['ctype'] == 'zhiding' || $results['ctype'] == 'jiacu' || $results['ctype'] == 'jiahong') {
                $recordDetail['pay_name'] = '余额支付';
                if ($results['pid'] != 0) {
                    $sql = $dsql->SetQuery("SELECT sp.`pay_name` FROM `#@__pay_log` p LEFT JOIN `#@__site_payment` sp ON p.`paytype` = sp.`pay_code` WHERE  p.`id` = '" . $results['pid'] . "'");
                    $res = $dsql->dsqlOper($sql, "results");

                    if ($res && is_array($res)) {
                        $recordDetail['pay_name'] = $res[0]['pay_name'];
                    }
                }

                $param = unserialize($results['urlParam']);
                if ($param) {
                    if ($results['ordertype'] == 'info') {
                        $foodtitletable = 'infolist';
                    } elseif ($results['ordertype'] == 'house') {
                        $foodtitletable = 'house_' . ($param['template'] != '' ? str_replace('-detail', '', $param['template']) : $param['template']);
                    } elseif ($results['ordertype'] == 'sfcar') {
                        $foodtitletable = 'sfcar_list';
                    }

                    $foodsql = $dsql->SetQuery("SELECT `title` FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");

                    if ($results['ordertype'] == 'car') {
                        $foodtitletable = 'car_list';
                        $foodsql = $dsql->SetQuery("SELECT `titlename` title FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");
                    }
                    $foodres = $dsql->dsqlOper($foodsql, "results");

                    if ($foodres) {
                        $recordDetail['foodtitle'] = $foodres[0]['title'];
                    }
                }
            }

            /*发布信息相关*/
            if ($results['ctype'] == 'fabuxinxi') {
                $param = unserialize($results['urlParam']);
                if ($param) {
                    if ($param['service'] == 'sfcar') {
                        $foodtitletable = 'sfcar_list';
                    } elseif ($param['service'] == 'house') {
                        $table = str_replace('-detail', '', $param['template']);
                        $foodtitletable = 'house_' . $table;
                    } elseif ($param['service'] == 'car') {
                        $foodtitletable = 'car_list';
                    } elseif ($param['service'] == 'info') {
                        $foodtitletable = 'infolist';
                    }

                    $foodsql = $dsql->SetQuery("SELECT `title`,`body` FROM `#@__" . $foodtitletable . "` WHERE `id` ='" . $param['id'] . "'");
                    $foodres = $dsql->dsqlOper($foodsql, "results");
                    if ($foodres) {
                        $recordDetail['foodtitle'] = strip_tags($foodres[0]['title']) ? strip_tags($foodres[0]['title']) : strip_tags($foodres[0]['body']);
                    }
                }
            }
            $recordDetail['title'] = $results['title'];


            /*佣金 相关*/
            if ($results['ctype'] == 'yongjin') {
                $param = unserialize($results['urlParam']);
                if ($param) {
                    $usernamsql = $dsql->SetQuery("SELECT `nickname` FROM `#@__member` WHERE `id` = '" . $param['userid'] . "'");
                    $usernamres = $dsql->dsqlOper($usernamsql, 'results');
                    if ($usernamres) {
                        $buyusername = $usernamres[0]['nickname'];
                    }
                    $recordDetail['buyusername'] = $buyusername;
                    $recordDetail['modulename']     = getModuleTitle(array('name' => $param['module']));
                }
            }

            //提现
            if ($results['ctype'] == 'tixian' && $results['pid']) {
                $withdrawsql = $dsql->SetQuery("SELECT `bank`, `cardnum`, `cardname`, `note`, `rdate`,`state` FROM `#@__member_withdraw` WHERE `id` = " . $results['pid']);
                $withdrawres = $dsql->dsqlOper($withdrawsql, 'results');
                if ($withdrawres) {

                    $recordDetail['bank'] = $withdrawres[0]['bank'] == 'alipay' ? '支付宝' : ($withdrawres[0]['bank'] == 'weixin' ? '微信' : $withdrawres[0]['bank']);
                    if ($withdrawres[0]['bank'] != 'weixin') {
                        $recordDetail['bank'] .= '(' . $withdrawres[0]['cardname'] . ')';
                    }
                    $recordDetail['rdate'] = $withdrawres[0]['rdate'];
                    $recordDetail['note']  = $withdrawres[0]['note'];
                    $recordDetail['state'] = $withdrawres[0]['state'];
                }
            }

            return $recordDetail;
        }
    }

    /**
     * Notes: 订单获取关联记录
     * Ueser: Administrator
     * DateTime: 2021/2/20 11:51
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function getRelation()
    {
        global $dsql;
        global $userLogin;

        $param = $this->param;

        if ($param) {
            $ordernum          =  $param['ordernum'];
            $ordertype         =  $param['ordertype'];
            $ctype             =  $param['ctype'];
            $tuikuantype       =  $param['tuikuantype'];
            if ($ordernum == '' || $ordertype == '')  return array("state" => 200, "info" => '格式错误');
        }

        $uid = $userLogin->getMemberID();
        if ($uid < 1) return array("state" => 200, "info" => '请先登录！');
        $where = " AND `ctype` !='shangpinxiaoshou'";
        if ($ctype != '') {
            if ($ctype == 'shangpinxiaoshou') {
                $where = " AND (`ctype` ='shangpinxiaoshou' OR `tuikuantype` =1)";
            } elseif ($ctype == 'tuikuan' && $tuikuantype == 1) {
                $where = '';
            }
        }

        $sql = $dsql->SetQuery("SELECT `info`,`id`,`amount`,`ctype`,`balance` FROM `#@__member_money` WHERE `ordernum` = '" . $ordernum . "' AND `ordertype` = '" . $ordertype . "' AND `showtype` = 0 AND `userid` = '" . $uid . "'" . $where);
        $res = $dsql->dsqlOper($sql, "results");
        $relation = array();
        if ($res) {
            foreach ($res as $k => $v) {
                $relation[$k]['id']         = $v['id'];
                $relation[$k]['ctype']      = $v['ctype'];
                $relation[$k]['ctypename']  = $v['ctype'] == 'tuikuan' ? '退款-' : '';
                $relation[$k]['info']       = $v['info'];
                $relation[$k]['balance']    = $v['balance'];
                $relation[$k]['amount']     = $v['amount'];
            }
        }
        return $relation;
    }


    public function gettion()
    {
        global $dsql;
        global $userLogin;

        $param = $this->param;

        if ($param) {
            $ordernum          =  $param['ordernum'];
            $ordertype         =  $param['ordertype'];
            $ctype             =  $param['ctype'];
            $tuikuantype       =  $param['tuikuantype'];
            if ($ordernum == '' || $ordertype == '')  return array("state" => 200, "info" => '格式错误');
        }

        $uid = $userLogin->getMemberID();
        if ($uid < 1) return array("state" => 200, "info" => '请先登录！');
        $where = " AND `ctype` !='shangpinxiaoshou'";
        if ($ctype != '') {
            if ($ctype == 'shangpinxiaoshou') {
                $where = " AND (`ctype` ='shangpinxiaoshou' OR `tuikuantype` =1)";
            } elseif ($ctype == 'tuikuan' && $tuikuantype == 1) {
                $where = '';
            }
        }

        $sql = $dsql->SetQuery("SELECT `info`,`id`,`amount`,`balance` FROM `#@__member_bonus` WHERE `ordernum` = '" . $ordernum . "' AND `ordertype` = '" . $ordertype . "' AND `userid` = '" . $uid . "'" . $where);
        $res = $dsql->dsqlOper($sql, "results");
        $relation = array();
        if ($res) {
            foreach ($res as $k => $v) {
                $relation[$k]['id']         = $v['id'];
                $relation[$k]['info']       = $v['info'];
                $relation[$k]['balance']    = $v['balance'];
                $relation[$k]['amount']     = $v['amount'];
            }
        }
        return $relation;
    }



    /**
     * 邀请会员注册纪录
     */
    public function inviteLog()
    {
        global $dsql;
        global $userLogin;
        $list = array();

        $page     = (int)$this->param['page'];
        $pageSize = (int)$this->param['pageSize'];

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $uid = $userLogin->getMemberID();
        if ($uid <= 0) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]);   //登录超时，请重新登录！
        }
        $sql = $dsql->SetQuery("SELECT COUNT(`id`) total FROM `#@__member_invite` WHERE `fid` = $uid");
        $res = $dsql->dsqlOper($sql, "results");
        $totalCount = $res[0]['total'];
        $totalPage = ceil($totalCount / $pageSize);
        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $limit = " LIMIT $atpage, $pageSize";

        $sql = $dsql->SetQuery("SELECT `uid`, `time`, `money` FROM `#@__member_invite` WHERE `fid` = $uid ORDER BY `id` DESC" . $limit);
        $res = $dsql->dsqlOper($sql, "results");
        if ($res) {
            foreach ($res as $key => $value) {
                $_uinfo = $userLogin->getMemberInfo($value['uid']);
                $list[$key]['nickname'] = is_array($_uinfo) ? $_uinfo['nickname'] : '未知';
                $list[$key]['photo'] = is_array($_uinfo) ? $_uinfo['photo'] : '';

                $list[$key]['time'] = $value['time'];
                $list[$key]['money'] = floatval($value['money']);
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * Notes: 使用充值卡
     * Ueser: Administrator
     * DateTime: 2021/4/2 14:34
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function useCoupon()
    {
        global $userLogin;
        global $dsql;

        $code = trim($this->param['code']);
        if (!$code) return array("state" => '200', "info" => '参数错误！');

        $uid = $userLogin->getMemberID();
        $userinfo = $userLogin->getMemberInfo();

        if ($uid < 1) return array("state" => 200, "info" => '请先登录！');

        $codesql = $dsql->SetQuery("SELECT * FROM `#@__moneycoupon` WHERE `code` = '$code' AND `state` = 0");
        $coderes = $dsql->dsqlOper($codesql, "results");
        if ($coderes) {
            $datetime = GetMkTime(time());
            $amount   =  $coderes[0]['amount'];
            if ($coderes[0]['expire'] < $datetime) return array("state" => '200', "info" => '该卡密已过期！');
            $updatesql = $dsql->SetQuery("UPDATE `#@__moneycoupon` SET `state` = 1,`date` = '$datetime',`uid` = '$uid' WHERE `code` = '$code' AND `state` = 0");
            $updateres = $dsql->dsqlOper($updatesql, "update");
            if ($updateres == "ok") {

                //记录用户行为日志
                memberLog($uid, 'member', 'bonus', 0, 'update', '消费金充值(' . $amount . '元)', '', $updatesql);

                $archives = $dsql->SetQuery("UPDATE `#@__member` SET `bonus` = `bonus` + '$amount' WHERE `id` = '$uid'");
                $dsql->dsqlOper($archives, "update");

                //消费金名称
                $configPay = $dsql->SetQuery("SELECT `pay_name` FROM `#@__site_payment` WHERE `pay_code` = 'huoniao_bonus'");
                $Payconfig= $dsql->dsqlOper($configPay, "results");
                $bonusName = $Payconfig[0]['pay_name'] ? $Payconfig[0]['pay_name'] : '消费金';

                //微信通知
                $param = array(
                    'type'   => 2, //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => '',
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $userinfo['nickname'] . ' '.$bonusName.'充值：' . $amount,
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );
                updateAdminNotice("member", "deposit", $param);
                $user  = $userLogin->getMemberInfo($uid);
                $usermoney = $user['bonus'];
                //保存操作日志
                $info  = $bonusName."充值[$code]";  //账户充值
                $title = $bonusName.'充值';
                $archives = $dsql->SetQuery("INSERT INTO `#@__member_bonus` (`userid`, `type`, `amount`, `info`, `date`, `ordertype`,`ordernum`,`balance`,`montype`) VALUES ('$uid', '1', '$amount', '$info', '$datetime','member','0','$usermoney','1')");
                $dsql->dsqlOper($archives, "update");

                return "ok";
            }
        } else {
            return array("state" => '200', "info" => '充值卡密未找到或者已使用请仔细填写！');
        }
    }

    public function editusername()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();

        if ($userid < 0)  return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $username = $this->param['username'];

        $namesql = $dsql->SetQuery("SELECT `id`,`is_editname`,`username` FROM `#@__member` WHERE `id` = '$userid'");
        $nameres = $dsql->dsqlOper($namesql, "results");
        if ($nameres[0]['username'] == $username) return array("state" => 200, "info" => '请重新填写要变更的用户名，不可以和正在使用的用户名相同！');
        if ($nameres[0]['is_editname'] == 1)  return array("state" => 200, "info" => '用户名只可以修改一次，您已经修改过！');

        if (!checkMember($username)) {
            return array("state" => 200, "info" => '您输入的用户名已经被其他人使用，请重新输入！');
        }

        preg_match("/^[a-zA-Z]{1}[0-9a-zA-Z_]{4,15}$/iu", $username, $matchUsername);
        if (!$matchUsername) {
            return array("state" => 200, "info" => $langData['siteConfig'][21][226]);
            //用户名格式有误！<br />英文字母、数字、下划线以内的5-20个字！<br />并且只能以字母开头！
        }

        $upusernamesql = $dsql->SetQuery("UPDATE `#@__member` SET `username` = '$username',`is_editname` = 1 WHERE `id` = '$userid'");
        $upusernameres = $dsql->dsqlOper($upusernamesql, "update");

        if ($upusernameres == 'ok') {

            //记录用户行为日志
            memberLog($userid, 'member', '', 0, 'update', '修改用户名(' . $username . ')', '', $upusernamesql);

            return  "ok";
        } else {

            return array("state" => 200, "info" => '修改失败！');
        }
    }

    /**
     * Notes: 消费券(团购,旅游)
     * Ueser: Administrator
     * DateTime: 2021/5/10 9:57
     * Param1:
     * Param2:
     * Param3:
     * Return:
     */
    public function couponsQuan()
    {
        global $dsql;
        global $userLogin;

        if (!empty($this->param)) {
            $quantype   = $this->param['quantype'];
            $orderby    = $this->param['orderby'];
        }

        $list = array();

        $page     = (int)$this->param['page'];
        $pageSize = (int)$this->param['pageSize'];

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $uid = $userLogin->getMemberID();

        if ($uid < 0) return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！

        $notime1 = strtotime(date('Y-m-d', time()));
        $noteime = time();
        $where = " AND o.`userid` = $uid AND o.`orderstate` = 1 AND q.`cardnum` !=''";

        $groupby = " GROUP BY o.`id`";

        /*tuan*/
        $tuansql = " SELECT o.`id`,group_concat(q.`cardnum`) cardnum ,q.`carddate`, group_concat(q.`usedate`) usedate,q.`expireddate`,o.`proid`,'tuan' moduletype,'' type FROM `#@__tuan_order` o LEFT JOIN `#@__tuanquan` q  ON q.`orderid` = o.`id` WHERE 1=1  AND q.`expireddate` >= $noteime" . $where . $groupby;

        /*travel*/
        $travelsql = "SELECT o.`id`,group_concat(q.`cardnum`) cardnum,q.`carddate`,  group_concat(q.`usedate`) usedate, q.`expireddate`,o.`proid`,'travel' moduletype,o.`type` FROM `#@__travel_order` o LEFT JOIN `#@__travelquan` q  ON q.`orderid` = o.`id`  WHERE 1=1 AND (o.`type` = 1 or o.`type` = 2 or o.`type` = 3) AND q.`expireddate` >= $notime1" . $where . $groupby;

        if ($quantype == '1') {

            $sql = $dsql->SetQuery($tuansql);
        } elseif ($quantype == '2') {

            $sql = $dsql->SetQuery($travelsql);
        } else {
            $sql = $dsql->SetQuery("SELECT * FROM ( $tuansql UNION ALL  $travelsql ) as quanall");
        }
        $totalCount = $dsql->dsqlOper($sql, "totalCount", 'ASSOC', null, 0);
        if ($totalCount == 0) return array("state" => 200, "info" => self::$langData['siteConfig'][21][64]); //暂无数据！
        $totalPage = ceil($totalCount / $pageSize);

        $pageinfo = array(
            "page" => $page,
            "pageSize" => $pageSize,
            "totalPage" => $totalPage,
            "totalCount" => $totalCount
        );

        $atpage = $pageSize * ($page - 1);
        $limit = " LIMIT $atpage, $pageSize";

        $order = '';

        if ($orderby) {
            if ($orderby == 1) {

                $order .= " ORDER BY `expireddate` ASC";
            } else {
                $order .= " ORDER BY `carddate`  ASC";
            }
        }

        $res = $dsql->dsqlOper($sql . $order . $limit, "results", 'ASSOC', null, 0);

        if (!empty($res)) {

            foreach ($res as $k => $v) {

                $list[$k]['oid']         = $v['id'];
                $list[$k]['carddate']    = $v['carddate'];
                $list[$k]['expireddate'] = $v['expireddate'];
                $list[$k]['moduletype']  = $v['moduletype'];
                $list[$k]['type']        = $v['type'];

                $is_exp = 0;
                if (($v['expireddate'] - time() / 3600) < 24) {
                    $is_exp = 1;
                }
                $list[$k]['is_exp']      = $is_exp;
                $list[$k]['usedate']     = $v['usedate'];

                if ($list[$k]['moduletype'] == 'tuan') {

                    $list[$k]['expireddatetime'] = $v['expireddate'] != '' ? date('Y-m-d H:i:s', $v['expireddate']) : '';
                } else {
                    $list[$k]['expireddatetime'] = $v['expireddate'] != '' ? date('Y-m-d ', $v['expireddate']) : '';
                }

                $cardnumarr               = $v['cardnum'] != '' ? explode(',', $v['cardnum']) : array();
                $usedatearr               = $v['usedate'] != '' ? explode(',', $v['usedate']) : array();
                $list[$k]['cardnumcount'] = count($cardnumarr);

                $list[$k]['cardnum']         = $cardnumarr;
                $list[$k]['usedatearr']      = $usedatearr;

                $typename = '';
                if ($v['moduletype'] == 'tuan') {

                    $quantitlesql = $dsql->SetQuery("SELECT l.`title`,s.`stype` FROM `#@__tuanlist` l LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` WHERE l.`id`=" . $v['proid']);
                    $quantitleres = $dsql->dsqlOper($quantitlesql, "results");

                    $list[$k]['quantitle'] =  $quantitleres[0]['title'];

                    if ($quantitleres[0]['stype']) {
                        $typeSql     = $dsql->SetQuery("SELECT `typename` FROM `#@__tuantype` WHERE `id` = " . $quantitleres[0]['stype']);
                        $typenameres = $dsql->getTypeName($typeSql);
                        $typename    = $typenameres[0]['typename'];
                    }

                    $template = 'orderdetail-tuan';
                } elseif ($v['moduletype'] == 'travel') {

                    $template = 'orderdetail-travel';

                    if ($v['type'] == 1) {

                        $quantitlesql = $dsql->SetQuery("SELECT t.`title`,i.`ticketid` proid FROM `#@__travel_ticketinfo` i LEFT JOIN `#@__travel_ticket` t on i.`ticketid` = t.`id` WHERE i.`id` = " . $v['proid']);
                        $typename = '景点门票';
                    } elseif ($v['type'] == 2) {

                        $quantitlesql = $dsql->SetQuery("SELECT t.`title`,i.`ticketid` proid FROM `#@__travel_ticketinfo` i LEFT JOIN `#@__travel_agency` t on i.`ticketid` = t.`id` WHERE i.`id` = " . $v['proid']);
                        $typename = '景点门票';
                    } else {

                        $quantitlesql = $dsql->SetQuery("SELECT r.`title`,r.`hotelid` proid FROM `#@__travel_hotelroom` r LEFT JOIN`#@__travel_hotel` h  on r.`hotelid` = h.`id` WHERE r.`id` = " . $v['proid']);
                        $typename = '酒店民宿';
                    }
                    $quantitleres = $dsql->dsqlOper($quantitlesql, "results");

                    $list[$k]['quantitle'] =  $quantitleres[0]['title'];

                    $v['proid'] = $quantitleres[0]['proid'];
                }

                $list[$k]["quantype"] = $typename;

                $param                          = array(
                    "service"  => 'member',
                    "type"     => 'user',
                    "template" => $template,
                    "id"       => $v['id']
                );

                $list[$k]['url'] = getUrlPath($param);
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 个人中心券
     * Ueser: Administrator
     * DateTime: 2021/5/24 9:12
     * Param1:
     * Param2:
     * Param3:
     * Return:
     * @return array|array[]
     */
    public function userQuanList()
    {
        global $userLogin;
        global $dsql;
        global $langData;
        global $installModuleArr;

        if ($this->param) {
            $gettype    = (int)$this->param['gettype']; /*获取类型 1商城2外卖3历史记录*/
            $storetype  = (int)$this->param['storetype'];/*店铺类型*/
            $quantype   = $this->param['quantype'];/*券类型*/
            $orderby    = (int)$this->param['orderby'];/*排序*/
            $page       = $this->param['page'];
            $pageSize   = $this->param['pageSize'];
        }

        $userid = $userLogin->getMemberID();

        if ($userid < 0) return array("state" => 200, "info" => '登录超时，请重新登录！');

        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        $table = $where = '';

        $time = time();
        if ($gettype == 1) {
            if(!in_array('shop', $installModuleArr)) {
                return array("state" => 200, "info" => '商城未启用！');
            }
            $where = " AND l.`userid` = '$userid' AND l.`etime` > $time AND l.`state` = 0";
            $table = '#@__shop_quanlist';
        } elseif ($gettype == 2) {
            if(!in_array('waimai', $installModuleArr)) {
                return array("state" => 200, "info" => '外卖未启用！');
            }
            $where = " AND l.`userid` = '$userid' AND l.`deadline` > $time AND l.`state` = 0";
            $table = '#@__waimai_quanlist';
        }

        $order = '';
        if (!empty($orderby)) {

            if ($orderby == 1) {

                $order  = " ORDER BY l.`pubdate` DESC";
            } elseif ($orderby == 2) {

                $order  = " ORDER BY l.`etime` ASC";
            }
        }

        if ($gettype == 1) {
            $archives = $dsql->SetQuery("SELECT l.* FROM `" . $table . "` l LEFT JOIN `#@__shop_quan` q ON q.`id` = l.`qid` WHERE q.`id` IS NOT NULL" . $where);
        } elseif ($gettype == 2) {
            $archives = $dsql->SetQuery("SELECT l.* FROM `" . $table . "` l LEFT JOIN `#@__waimai_quan` q ON q.`id` = l.`qid` WHERE q.`id` IS NOT NULL" . $where);
        }

        if ($gettype == 3) {
            $archives = $dsql->SetQuery("SELECT * FROM (SELECT l.`qid`,l.`name`,l.`money`,l.`basic_price`,l.`ktime`,l.`etime`,l.`shopids`,l.`state`,l.`promotiotype`,l.`promotio`,'shop' quantype FROM `#@__shop_quanlist` l LEFT JOIN `#@__shop_quan` q ON q.`id` = l.`qid` WHERE q.`id` IS NOT NULL AND l.`userid` = '$userid' AND ((l.`etime` < '$time' AND l.`state` = 0) OR l.`state` = 1) UNION ALL SELECT l.`qid`,l.`name`,l.`money`,l.`basic_price`,l.`pubdate` ktime,l.`deadline` etime,l.`shopids`,l.`state`,'' promotiotype,''promotio ,'waimai' quantype FROM `#@__waimai_quanlist` l LEFT JOIN `#@__waimai_quan` q ON q.`id` = l.`qid` WHERE q.`id` IS NOT NULL AND l.`userid` = '$userid' AND ((l.`deadline` < '$time' AND l.`state` = 0) OR l.`state` = 1)) as selectall");
        }

        //总条数
        $totalCount = (int)$dsql->dsqlOper($archives, "totalCount");
        //总分页数
        $totalPage = ceil($totalCount / $pageSize);

        //        if($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！
        $totalCount1 = 0;
        if (in_array('shop', $installModuleArr)) {
            $totalCount1 =  $dsql->dsqlOper($dsql->SetQuery("SELECT l.`id` FROM `#@__shop_quanlist` l LEFT JOIN `#@__shop_quan` q ON q.`id` = l.`qid` WHERE q.`id` IS NOT NULL AND l.`etime` > $time AND l.`state` = 0 AND l.`userid` = '$userid'"), "totalCount");
        }
        $totalCount2 = 0;
        if (in_array('waimai', $installModuleArr)) {
            $totalCount2 =  $dsql->dsqlOper($dsql->SetQuery("SELECT l.`id` FROM `#@__waimai_quanlist` l LEFT JOIN `#@__waimai_quan` q ON q.`id` = l.`qid` WHERE q.`id` IS NOT NULL AND l.`deadline` > $time AND l.`state` = 0 AND l.`userid` = '$userid'"), "totalCount");
        }

        $pageinfo = array(
            "page"        => $page,
            "pageSize"    => $pageSize,
            "totalPage"   => $totalPage,
            "totalCount"  => $totalCount,
            "totalCount1" => $totalCount1,
            "totalCount2" => $totalCount2,
        );

        $atpage = $pageSize * ($page - 1);
        $where  = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $order . $where, "results");
        $list = $param = array();

        if ($results) {
            foreach ($results as $k => $v) {

                $list[$k]['qid']         = $v['qid'];
                $list[$k]['name']        = $v['name'];
                $list[$k]['money']       = $v['money'];
                $list[$k]['basic_price'] = $v['basic_price'];
                $list[$k]['ktime']       = $v['ktime'];
                $list[$k]['ymdktime']    = date('Y.m.d', $v['ktime']);
                $list[$k]['etime']       = $v['etime'];
                $list[$k]['ymdetime']    = date('Y.m.d', $v['etime']);
                $list[$k]['quantype']    = $v['quantype'];
                $list[$k]['shopids']     = $v['shopids'];
                $list[$k]['bear']        = $v['bear'];

                if ($gettype == 2) {
                    $list[$k]['ymdetime']     = date('Y.m.d', $v['deadline']);

                    $quandetailsql = $dsql->SetQuery("SELECT `shoptype`,`shopids` FROM `#@__waimai_quan` WHERE `id` = '" . $v['qid'] . "'");
                    $quandetailres = $dsql->dsqlOper($quandetailsql, "results");

                    if ($quandetailres && is_array($quandetailres)) {
                        $list[$k]['quantype']    = $quandetailres[0]['shoptype'];
                        $list[$k]['shopids']     = $quandetailres[0]['shopids'];


                        if ($quandetailres[0]['shoptype'] == 1) {
                            $param = array(
                                "service"     => "waimai",
                                "template"    => "shop",
                                "id"          => (int)$quandetailres[0]['shopids']
                            );
                        } else {
                            $param = array(
                                "service"     => "waimai",
                                "template"    => "index"
                            );
                        }
                    }
                }

                if ($gettype == 3) {
                    if ($v['quantype'] == 'waimai') {
                        $list[$k]['ymdetime']     = date('Y.m.d', $v['deadline']);
                    }
                }

                $list[$k]['state']        = $v['state'];
                $list[$k]['promotiotype'] = $v['promotiotype'];
                $list[$k]['promotio']     = $v['promotio'];

                $storeid = $v['shopids'];

                if ($v['quantype'] == 1) {
                    $fidarr = explode(',', $v['fid']);
                    $sql = $dsql->SetQuery("SELECT `store` FROM `#@__shop_product` WHERE `id` = '" . $fidarr[0] . "'");
                    $res = $dsql->dsqlOper($sql, "results");
                    if ($res && is_array($res)) {
                        $storeid  = (int)$res[0]['store'];
                    } else {
                        $list[$k]['state'] = '1'; //商家不存在，状态改为未生效
                    }
                }

                //商城
                if ($gettype == 1 && $storeid) {
                    $title = $logo = '';
                    $storesql = $dsql->SetQuery("SELECT `title`,`logo` FROM `#@__shop_store` WHERE `id` = '$storeid'");
                    $storeres = $dsql->dsqlOper($storesql, "results");
                    if ($storeres && is_array($storeres)) {
                        $title = $storeres[0]['title'];
                        $logo  = getFilePath($storeres[0]['logo']);
                    } else {
                        $list[$k]['state'] = '1'; //商品不存在，状态改为未生效
                    }
                    //外卖
                } elseif($storeid) {
                    $title = $logo = array();
                    $storesql = $dsql->SetQuery("SELECT `shopname`, `shop_banner` FROM `#@__waimai_shop` WHERE `id` in ($storeid)");
                    $storeres = $dsql->dsqlOper($storesql, "results");
                    if ($storeres && is_array($storeres)) {
                        foreach ($storeres as $_k => $_v) {
                            array_push($title, $_v['shopname']);
                            $_banner = $_v['shop_banner'];
                            $_bannerArr = explode(',', $_banner);
                            array_push($logo, $_bannerArr[0]);
                        }
                    }
                    $title = join('，', $title);
                    $logo = $logo ? $logo[0] : '';
                }

                $list[$k]['title'] = $title;
                $list[$k]['logo']  = $logo;

                if ($gettype == 1 && $v['bear'] == '0') {

                    $param = array(
                        "service"     => "shop",
                        "template"    => "store-detail",
                        "id"          => (int)$storeid
                    );
                }
                if ($v['bear'] == '1') {
                    $param = array(
                        "service"     => $gettype == 1 ? "shop" : "waimai",
                    );
                }
                $url = getUrlPath($param);

                $list[$k]['url']   = $url;
            }
        }
        return array("pageInfo" => $pageinfo, "list" => $list);
    }

    /**
     * Notes: 支付宝APP端登录参数
     * @return array|array[]
     */
    public function getAlipayAppLoginParams()
    {
        global $userLogin;
        global $dsql;
        global $langData;

        $alipay_app_login = array();
        $sql = $dsql->SetQuery("SELECT `code`, `config` FROM `#@__site_loginconnect` WHERE `state` = 1");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            foreach ($ret as $key => $value) {
                if ($value['code'] == 'alipay') {
                    $config = unserialize($value['config']);

                    $configArr = array();
                    foreach ($config as $k => $v) {
                        $configArr[$v['name']] = $v['value'];
                    }

                    if ($configArr['appPrivate']) {
                        $rsaPrivateKey = $configArr['appPrivate'];

                        //公共参数
                        $alipay_app_login['apiname'] = 'com.alipay.account.auth';
                        $alipay_app_login['method'] = 'alipay.open.auth.sdk.code.get';
                        $alipay_app_login['app_id'] = $configArr['appid'];
                        $alipay_app_login['app_name'] = 'mc';
                        $alipay_app_login['biz_type'] = 'openservice';
                        $alipay_app_login['pid'] = $configArr['partner'];
                        $alipay_app_login['product_id'] = 'APP_FAST_LOGIN';
                        $alipay_app_login['scope'] = 'kuaijie';
                        $alipay_app_login['target_id'] = create_ordernum();
                        $alipay_app_login['auth_type'] = 'AUTHACCOUNT';   //AUTHACCOUNT代表授权；LOGIN代表登录
                        $alipay_app_login['sign_type'] = 'RSA2';
                        ksort($alipay_app_login);

                        $paramStr = "";
                        $paramStr_ = "";
                        foreach ($alipay_app_login as $key => $val) {
                            $paramStr .= $key . "=" . $val . "&";   //生成sign不需要encode
                            $paramStr_ .= $key . "=" . urlencode($val) . "&";   //最终输出需要encode
                        }

                        $paramStr = substr($paramStr, 0, -1);
                        $paramStr_ = substr($paramStr_, 0, -1);

                        //获取sign
                        $res = "-----BEGIN RSA PRIVATE KEY-----\n" .
                            wordwrap($rsaPrivateKey, 64, "\n", true) .
                            "\n-----END RSA PRIVATE KEY-----";
                        openssl_sign($paramStr, $sign, $res, OPENSSL_ALGO_SHA256);
                        $sign = urlencode(base64_encode($sign));

                        $alipay_app_login['sign'] = $sign;
                    }
                }
            }
        }

        return $alipay_app_login;
    }

    /**
     * 回复评价
     */
    public function replyCommenton()
    {
        global $dsql;
        global $userLogin;
        global $userinfo;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        $param   = $this->param;
        $id      = (int)$param['id']; // 原评论id
        $check   = $param['check']; //是否ajax输出内容
        $content = $param['content'];

        if (empty($id)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        if (empty($content)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][45]); //请填写回复内容

        $sid = $id;

        $sql = $dsql->SetQuery("SELECT `id`, `pid`, `rid`, `aid`, `type`, `masterid` FROM `#@__public_comment_all` WHERE `id` = $id");
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret) {
            // 回复一级评论
            if ($ret[0]['pid'] == 0) {
                $rid = 0;
                $parent = $ret[0];
            } else {
                $sql = $dsql->SetQuery("SELECT `id`, `pid`, `rid`, `aid`, `type` FROM `#@__public_comment_all` WHERE `id` = " . $ret[0]['pid']);
                $res = $dsql->dsqlOper($sql, "results");
                if ($res) {
                    //                    $rid = $ret[0]['rid'] ? $ret[0]['rid'] : $ret[0]['id'];

                    $rid = $ret[0]['id'];

                    $parent = $res[0];
                }
            }
            $pid  = $parent['id'];
            $type = $parent['type'];
            $aid  = $parent['aid'];
            $oid  = $parent['oid'];
            $masterid  = $ret[0]['masterid'];

            $ip     = GetIP();
            $ipaddr = getIpAddr($ip);
            $dtime  = GetMkTime(time());

            if ($type == 'paotui-order' || $type == 'waimai-order') {
                $module = 'waimai';
            } else {
                $typeArr = explode('-', $type);
                $module  = $typeArr[0];
            }
            include HUONIAOINC . "/config/" . $module . ".inc.php";
            $ischeck = (int)$customCommentCheck;

            $sco1 = 0;
            $rating = 0;
            $isanony = 0;
            $oid = $oid ? $oid : 0;
            $pics = $audio = $video = "";

            $cityName = $siteCityInfo['name'];
            $cityid   = $siteCityInfo['cityid'];
            $userinfo = $userLogin->getMemberInfo($userid);

            $modulenamearr = explode('-', $type);
            $noticemodule  = $modulenamearr ? $modulenamearr[0] :  '';
            $noticemodulename = getModuleTitle(array('name' => $noticemodule));
            $part          = $modulenamearr[1] ? $modulenamearr[1] :  '';
            $statename     = $ischeck == 0  ?  ',等待审核' : '';

            if ($noticemodule == 'circle' && $part == 'dynamic') {
                $part = 'blog_detail';
            }

            if ($noticemodule == 'tuan' && $part == 'order') {
                $part = 'detail';
            }

            $tid = $userid;
            if ($rid == 0) {
                $rid = $sid;
            }
            $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = '$rid'");
            $ret = $dsql->dsqlOper($sql, "results");
            if ($ret) {
                $tid   = $ret[0]['userid'];
            }
            $sql = $dsql->SetQuery("INSERT INTO `#@__public_comment_all` (`masterid`, `pid`, `type`, `aid`, `oid`, `userid`, `rating`, `sco1`, `content`, `pics`, `audio`, `video`, `dtime`, `ip`, `ipaddr`, `ischeck`, `zan`, `zan_user`, `isanony`, `rid`, `sid`) VALUES ('$masterid', '$pid', '$type', '$aid', '$oid', '$userid', '$rating', '$sco1', '$content', '$pics', '$audio', '$video', '$dtime', '$ip', '$ipaddr', '$ischeck', '0', '', '$isanony', '$rid', '$sid')");
            $ret = $dsql->dsqlOper($sql, "lastid", null, "articlelist");
            if (is_numeric($ret)) {
                if ($ischeck == 1) {
                    $param = array(
                        "service"  => $noticemodule,
                        "template" => $part,
                        "id"       => $aid
                    );

                    //自定义配置
                    $config = array(
                        "username" => $userinfo['nickname'],
                        "noticetitle" => "您有一条新回复!",
                        "title" =>  "用户：" . $userinfo['nickname'] . "评论了您!",
                        "date" => date("Y-m-d H:i:s", time()),
                        "fields" => array(
                            'keyword1' => '信息标题',
                            'keyword2' => '发布时间',
                            'keyword3' => '进展状态'
                        )
                    );

                    updateMemberNotice($tid, "会员-新评论通知", $param, $config);
                }

                /*后台管理员通知审核*/
                $param = array(
                    'type'   => '', //区分佣金 给分站还是平台发送 1分站 2平台
                    'cityid' => $cityid,
                    'notify' => '管理员消息通知',
                    'fields' => array(
                        'contentrn'  => $cityName . "分站\r\n" . $noticemodulename . "模块\r\n用户：" . $userinfo['nickname'] . "\r\n发布了一条评论" . $statename,
                        'date' => date("Y-m-d H:i:s", time()),
                    )
                );

                if ($check) {
                    $archives = $dsql->SetQuery("SELECT `id`, `userid`, `content`, `dtime`, `ip`, `ipaddr`, `zan`, `zan_user`, `ischeck` FROM `#@__public_comment_all` WHERE `id` = " . $ret);
                    $results  = $dsql->dsqlOper($archives, "results");
                    if ($results) {


                        updateAdminNotice($noticemodule, $part, $param);
                        $list['id']       = $results[0]['id'];
                        $list['userinfo'] = $userLogin->getMemberInfo($results[0]['userid']);
                        $list['content']  = $results[0]['content'];
                        $list['dtime']    = $results[0]['dtime'];
                        $list['ftime']    = FloorTime(GetMkTime(time()) - $results[0]['dtime']);
                        $list['ip']       = $results[0]['ip'];
                        $list['ipaddr']   = $results[0]['ipaddr'];
                        $list['iphome']   = getIpHome($results[0]['ipaddr']);
                        $list['zan']      = $results[0]['zan'];
                        $list['ischeck']  = $results[0]['ischeck'];
                        return $list;
                    }
                } else {

                    return self::$langData['siteConfig'][20][196]; //评价成功！
                }
            } else {
                return array("state" => 200, "info" => self::$langData['siteConfig'][33][44]); //评价失败
            }
        } else {
            return array("state" => 200, "info" => self::$langData['siteConfig'][33][46]); //原评价不存在
        }
    }


    /**
     * 获取级子评论
     */
    public function getChildCommenton()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $pageinfo = array();
        $userid = $userLogin->getMemberID();
        $param    = $this->param;
        $pid      = (int)$param['pid'];
        $rid      = (int)$param['rid'];
        $sid      = (int)$param['sid'];
        $page     = (int)$this->param['page'];
        $pageSize = (int)$this->param['pageSize'];
        if (empty($pid) && empty($rid) && empty($sid)) return array("state" => 200, "info" => self::$langData['siteConfig'][33][13]); //参数错误
        $pageSize = empty($pageSize) ? 10 : $pageSize;
        $page     = empty($page) ? 1 : $page;

        if ($rid) {
            $where = " AND `rid` = $rid";
        } else {
            // $where = " AND `pid` = $pid AND `rid` = 0";
            $where = " AND `pid` = $pid AND (`rid` = 0 OR `rid` = $pid)";
        }
        if ($sid) {
            $where = " AND `sid` = $sid";
        }
        $where .= " AND `ischeck` = 1";
        if ($rid != 0) {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1" . $where);

            $archives_ = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1 AND `rid` = $rid AND `ischeck` = 1");
            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");
            //总条数包含三级评论
            $totalCount_all = $dsql->dsqlOper($archives_, "totalCount");

            //总分页数
            $totalPage = ceil($totalCount / $pageSize);

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $pageinfo = array(
                "page" => $page,
                "pageSize" => $pageSize,
                "totalPage" => $totalPage,
                "totalCount" => $totalCount,
                "totalCount_all" => $totalCount_all,
            );
        } elseif ($pid != 0) {
            $archives = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1" . $where);

            $archives_ = $dsql->SetQuery("SELECT `id` FROM `#@__public_comment_all` WHERE 1 = 1 AND `pid` = $pid AND `ischeck` = 1");

            //总条数
            $totalCount = $dsql->dsqlOper($archives, "totalCount");
            //总条数包含三级评论
            $totalCount_all = $dsql->dsqlOper($archives_, "totalCount");

            //总分页数
            $totalPage = ceil($totalCount / $pageSize);

            if ($totalCount == 0) return array("state" => 200, "info" => $langData['siteConfig'][21][64]);  //暂无数据！

            $pageinfo = array(
                "page" => $page,
                "pageSize" => $pageSize,
                "totalPage" => $totalPage,
                "totalCount" => $totalCount,
                "totalCount_all" => $totalCount_all,
            );
        }

        $archives = $dsql->SetQuery("SELECT * FROM `#@__public_comment_all` WHERE 1 = 1" . $where);
        $order = " ORDER BY `id` ASC";
        $atpage = $pageSize * ($page - 1);
        $where = " LIMIT $atpage, $pageSize";
        $results = $dsql->dsqlOper($archives . $order . $where, "results");
        $list = array();

        if (is_array($results) && !empty($results)) {
            $temp = $this->temp;
            foreach ($results as $key => $value) {
                $list[$key]['id'] = $value['id'];
                $list[$key]['pid'] = $value['pid'];
                $list[$key]['type'] = $value['type'];
                $list[$key]['oid'] = $value['oid'];
                $list[$key]['rid'] = $value['rid'];
                $list[$key]['sid'] = $value['sid'];
                $list[$key]['ipaddr']   = $value['ipaddr'];
                $list[$key]['iphome']  = getIpHome($value['ipaddr']);
                $list[$key]['zan'] = $value['zan'];
                $list[$key]['ftime']    = FloorTime(GetMkTime(time()) - $value['dtime']);

                if (isset($temp[$value['userid']])) {
                    $user = $temp[$value['userid']];
                } else {
                    $this->param = $value['userid'];
                    $user = $this->detail();
                    $temp[$value['userid']] = $user;
                }
                $list[$key]['user'] = $user;

                //如果是回复的别人，这里查询出来回复的谁
                $reply_to_user = array();
                if($value['sid']){
                    $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = " . $value['sid']);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if($ret){
                        $this->param = $ret[0]['userid'];
                        $reply_to_user = $this->detail();
                    }
                }
                $list[$key]['reply_to_user'] = $reply_to_user;

                $zan_has = 0;
                if ($userid != -1 && $value['zan_user']) {
                    $zan_user = explode(',', $value['zan_user']);
                    if (in_array($userid, $zan_user)) {
                        $zan_has = 1;
                    }
                }
                $list[$key]['zan_has'] = $zan_has;

                if ($rid) {
                    $sid = $value['sid'];
                    $sql = $dsql->SetQuery("SELECT `userid` FROM `#@__public_comment_all` WHERE `id` = " . $sid);
                    $ret = $dsql->dsqlOper($sql, "results");
                    if ($ret) {
                        $uid = $ret[0]['userid'];
                        if (isset($temp[$uid])) {
                            $user = $temp[$uid];
                        } else {
                            $this->param = $value['uid'];
                            $user = $this->detail();
                            $temp[$uid] = $user;
                        }
                    } else {
                        $user = array();
                    }
                    $list[$key]['member'] = $user;
                }

                $this->temp = $temp;

                $list[$key]['content'] = $value['content'];
                $list[$key]['dtime'] = $value['dtime'];
                $list[$key]['ip'] = $value['ip'];
                // 获取子评论
                //                if(!$rid){
                $lower = array();
                $param['rid'] = $value['id'];
                $param['page'] = 1;
                $param['pageSize'] = 100;
                $this->param = $param;

                $child = $this->getChildCommenton();
                $totalCount_all = 0;
                if (!isset($child['state']) || $child['state'] != 200) {
                    $lower = $child['list'];
                    $totalCount_all = $child['pageInfo']['totalCount_all'];
                }

                $list[$key]['lower'] = array(
                    "count" => $totalCount_all,
                    "list" => $lower
                );
                //                }
            }
        }

        return array("pageInfo" => $pageinfo, "list" => $list);
    }


    /**
     * 更新用户令牌
     */
    public function updateAccessToken()
    {
        $token = $this->param['refresh_token'];
        if ($token) {
            return refreshApiToken($token);
        }
    }

    /*
     * 统计 待付款,待消费,待发货,待收货,待评价
     */
    public function getModuleOrderCount()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        $userid = $userLogin->getMemberID();

        // 指定需要哪些数据
        // 待付款：daifukuan
        // 待使用：daixiaofei
        // 待发货：daifahuo
        // 待收货：daishouhuo
        // 待评价：daipingjia
        // 待分享：daifenxiang
        // 退款售后：tuikuanshouhou
        $need_data = isset($this->param['need_data']) ? $this->param['need_data'] : '';
        $need_data_arr = $need_data ? explode(',', $need_data) : array();

        $list = array();

        //待付款
        if(!$need_data || in_array('daifukuan', $need_data_arr)){
            //团购
            if (in_array('tuan', $installModuleArr)) {
                $tuandai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0 ");
                $tuandairesult = $dsql->getOne($tuandai);
            }
            //商城
            if (in_array('shop', $installModuleArr)) {
                $shopdai = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o 
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shopdairesult = $dsql->dsqlOper($shopdai, 'totalCount');
            }
            //积分商城待付款
            if (in_array('integral', $installModuleArr)) {
                $jfscfa = $dsql->SetQuery("SELECT count(`id`) FROM `#@__integral_order` WHERE `userid` = '$userid' AND `orderstate` = 0 ");
                $jfscfaresult = $dsql->getOne($jfscfa);
            }
            //外卖待付款
            if (in_array('waimai', $installModuleArr)) {
                $waimaidai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__waimai_order_all` o 
                LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` 
                WHERE o.`uid` = $userid AND o.`state` = 0 ");
                $waimaidairesult = $dsql->getOne($waimaidai);

                //paotui待付款
                $paotuidai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__paotui_order` o 
                WHERE o.`uid` = '$userid' AND o.`state` = 0");
                $paotuidairesult = $dsql->getOne($paotuidai);
            }
            //家政待付款
            if (in_array('homemaking', $installModuleArr)) {
                $jiazhengdai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__homemaking_order` o 
                LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__homemaking_store` s ON l.`company` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0");
                $jiazhengdairesult = $dsql->getOne($jiazhengdai);
            }
            //travel待付款
            if (in_array('travel', $installModuleArr)) {
                $traveldai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__travel_order` o  
                LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0 ");
                $traveldairesult = $dsql->getOne($traveldai);
            }
            //education待付款
            if (in_array('education', $installModuleArr)) {
                $edudai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__education_order` o  
                LEFT JOIN `#@__education_class` s ON o.`proid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = o.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0");
                $edudairesult = $dsql->getOne($edudai);
            }
            //有奖乐购待付款
            if (in_array('awardlegou', $installModuleArr)) {
                $legoudai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__awardlegou_order` o  
                LEFT JOIN `#@__awardlegou_list` l  ON  o.`proid` = l.`id` 
                LEFT JOIN  `#@__business_list` s ON s.`id` = l.`sid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0");
                $legoudairesult = $dsql->getOne($legoudai);
            }
            //拍卖待付款
            if (in_array('paimai', $installModuleArr)) {
                $paimaidai = $dsql->SetQuery("select count(o.`id`) from `#@__paimai_order` o LEFT JOIN `#@__paimailist` l ON o.`proid`=l.`id` LEFT JOIN `#@__paimai_store` s ON l.`sid` = s.`id`  LEFT JOIN `#@__member` m ON m.`id` = s.`uid` LEFT JOIN `#@__business_list` b ON b.`uid` = m.`id` where o.`userid`=$userid AND `orderstate` = 1 AND o.`type`='regist' and o.`success_num`>0 and (l.`pay_limit`*3600+l.`enddate`)>unix_timestamp(current_timestamp)");
                $paimaidairesult = $dsql->getOne($paimaidai);
            }

            $daifukuan = (int)$tuandairesult + (int)$shopdairesult + (int)$jfscfaresult + (int)$waimaidairesult + (int)$paotuidairesult + (int)$jiazhengdairesult + (int)$traveldairesult + (int)$edudairesult + (int)$legoudairesult + (int)$paimaidairesult;

            $list['daifukuan'] = (int)$daifukuan;
        }


        //待消费
        if(!$need_data || in_array('daixiaofei', $need_data_arr)){
            //tuan待消费
            if (in_array('tuan', $installModuleArr)) {
                $tuanxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 1 ");
                $tuanxiaoresult = $dsql->getOne($tuanxiao);
            }

            $datetime = GetMkTime(time());
            //shop待消费
            if (in_array('shop', $installModuleArr)) {
                $shopxiao = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid`  
                LEFT JOIN `#@__shopquan` sq ON sq.`orderid` = o.`id` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`protype` = 1 AND o.`orderstate` != 4 
                AND o.`orderstate` != 7 AND sq.`expireddate` > '$datetime' AND o.`orderstate` != 10 AND sq.`usedate` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shopxiaoresult = $dsql->dsqlOper($shopxiao, 'totalCount');
            }
            //travel待消费
            if (in_array('travel', $installModuleArr)) {
                $travelxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__travel_order` o  
                LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 2 ");
                $travelxiaoresult = $dsql->getOne($travelxiao);
            }
            //education待消费
            if (in_array('education', $installModuleArr)) {
                $eduxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__education_order` o  
                LEFT JOIN `#@__education_class` s ON o.`proid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = o.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 2");
                $eduxiaoresult = $dsql->getOne($eduxiao);
            }

            $daixiaofei = (int)$tuanxiaoresult + (int)$shopxiaoresult + (int)$travelxiaoresult + (int)$eduxiaoresult;

            $list['daixiaofei'] = (int)$daixiaofei;
        }

        //待发货
        if(!$need_data || in_array('daifahuo', $need_data_arr)){
            //shop待发货
            if (in_array('shop', $installModuleArr)) {
                $shopfa = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 1  AND o.`protype` = 0 AND p.`id` IS NOT NULL  
                AND 1 = (CASE	WHEN  o.`pinid` != 0 THEN CASE WHEN o.`pinstate` THEN 1 ELSE 0 END ELSE 1=1 END	) GROUP BY o.`id`");
                $shopfaresult = $dsql->dsqlOper($shopfa, 'totalCount');
            }
            //积分商城待发货
            if (in_array('integral', $installModuleArr)) {
                $jfscfa = $dsql->SetQuery("SELECT `id` FROM `#@__integral_order` WHERE `userid` = '$userid' AND `orderstate` = 1 ");
                $jfscfaresult = $dsql->getOne($jfscfa);
            }
            //有奖乐购待发货
            if (in_array('awardlegou', $installModuleArr)) {
                $legoufa = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__awardlegou_order` o  
                LEFT JOIN `#@__awardlegou_list` l  ON  o.`proid` = l.`id` 
                LEFT JOIN  `#@__business_list` s ON s.`id` = l.`sid` 
                WHERE o.`userid` = '$userid' AND o.`pinstate` = 1  
                AND o.`orderstate` = 5 AND o.`exp-date` = 0 AND o.`is_wining` = 1 AND o.`ret-state` =0");
                $legoufaresult = $dsql->getOne($legoufa);
            }
            //拍卖待发货
            if (in_array('paimai', $installModuleArr)) {
                $paimaifa = $dsql->SetQuery("select count(o.`id`) from `#@__paimai_order` o LEFT JOIN `#@__paimailist` l ON o.`proid`=l.`id` LEFT JOIN `#@__paimai_store` s ON l.`sid` = s.`id`  LEFT JOIN `#@__member` m ON m.`id` = s.`uid` LEFT JOIN `#@__business_list` b ON b.`uid` = m.`id` where o.`userid`=$userid AND `orderstate` = 1 AND o.`type`='pai'");
                $paimaifaresult = $dsql->getOne($paimaifa);
            }

            $daifahuo = (int)$shopfaresult + (int)$jfscfaresult + (int)$legoufaresult + (int)$paimaifaresult;
            
            $list['daifahuo'] = (int)$daifahuo;
        }

        //待收货
        if(!$need_data || in_array('daishouhuo', $need_data_arr)){
            //tuan待收货
            if (in_array('tuan', $installModuleArr)) {
                $tuanshou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 6 AND o.`exp-date` != 0 ");
                $tuanshouresult = $dsql->getOne($tuanshou);
            }
            //shop待收货
            if (in_array('shop', $installModuleArr)) {
                $shopshou = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 6 AND op.`ret_state` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shopshouresult = $dsql->dsqlOper($shopshou, 'totalCount');
            }
            //waimai待收货
            if (in_array('waimai', $installModuleArr)) {
                $waimaishou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__waimai_order_all` o 
                LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` WHERE o.`uid` = $userid AND s.`id` IS NOT NULL AND o.`state` = 5 ");
                $waimaishouresult = $dsql->getOne($waimaishou);

                //paotui待收货
                $paotuishou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__paotui_order` o WHERE o.`uid` = '$userid' AND o.`state` = 2");
                $paotuishouresult = $dsql->getOne($paotuishou);
            }
            //积分商城待收货
            if (in_array('integral', $installModuleArr)) {
                $jfscshou = $dsql->SetQuery("SELECT `id` FROM `#@__integral_order` 
                WHERE `userid` = '$userid' AND `orderstate` = 6 AND `exp-date` != 0 ");
                $jfscshouresult = $dsql->getOne($jfscshou);
            }
            //家政待验收
            if (in_array('homemaking', $installModuleArr)) {
                $jiazhengshou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__homemaking_order` o 
                LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__homemaking_store` s ON l.`company` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 5");
                $jiazhengshouresult = $dsql->getOne($jiazhengshou);
            }
            //拍卖待收货
            if (in_array('paimai', $installModuleArr)) {
                $paimaishou = $dsql->SetQuery("select count(o.`id`) from `#@__paimai_order` o LEFT JOIN `#@__paimailist` l ON o.`proid`=l.`id` LEFT JOIN `#@__paimai_store` s ON l.`sid` = s.`id`  LEFT JOIN `#@__member` m ON m.`id` = s.`uid` LEFT JOIN `#@__business_list` b ON b.`uid` = m.`id` where o.`userid`=$userid AND `orderstate` = 3");
                $paimaishouresult = $dsql->getOne($paimaishou);
            }

            $daishouhuo = (int)$shopshouresult + (int)$waimaishouresult + (int)$paotuishouresult + (int)$jfscshouresult + (int)$jiazhengshouresult + (int)$paimaishouresult;
            
            $list['daishouhuo'] = (int)$daishouhuo;
        }


        //待评价
        if(!$need_data || in_array('daipingjia', $need_data_arr)){
            //tuan待评价
            if (in_array('tuan', $installModuleArr)) {
                $tuansping = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 3 AND o.`common` = 0");
                $tuanpingresult = $dsql->getOne($tuansping);
            }
            //shop待评价
            if (in_array('shop', $installModuleArr)) {
                $shopping = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 3 AND o.`common` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shoppingresult = $dsql->dsqlOper($shopping, 'totalCount');
            }
            //waimai待评价
            if (in_array('waimai', $installModuleArr)) {
                $waimaiping = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__waimai_order_all` o 
                LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` 
                WHERE o.`uid` = $userid AND o.`state` = 1 AND o.`iscomment` = 0");
                $waimaipingresult = $dsql->getOne($waimaiping);
                //paotui待评价
                $paotuiping = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__paotui_order` o 
                WHERE o.`uid` = '$userid' AND o.`state` = 1 AND o.`iscomment` = 0");
                $paotuipingresult = $dsql->getOne($paotuiping);
            }
            //积分商城待评价
            // $jfscping= $dsql->SetQuery("SELECT count(`id`) FROM `#@__integral_order` 
            // WHERE `userid` = '$userid' AND  `orderstate` = 3 AND `common` = 0");
            // $jfscpingresult = $dsql->getOne($jfscping);
            $jfscpingresult = 0;

            $daipingjia = (int)$tuanpingresult + (int)$shoppingresult + (int)$waimaipingresult + (int)$paotuipingresult + (int)$jfscpingresult;
                
            $list['daipingjia'] = (int)$daipingjia;
        }


        //待分享
        if(!$need_data || in_array('daifenxiang', $need_data_arr)){

            //tuan待消费
            if (in_array('tuan', $installModuleArr)) {
                $tuanxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 1 AND o.`pinid` != 0 AND o.`pinstate` = 0");
                $tuanpingresult = $dsql->getOne($tuanxiao);
            }

            $datetime = GetMkTime(time());
            
            //shop待分享
            if (in_array('shop', $installModuleArr)) {
                $shopping = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                LEFT JOIN `#@__shop_tuanpin` tp ON o.`id` = tp.`oid`
                WHERE o.`userid` = '$userid' AND tp.`state` = 1 AND  tp.`enddate` > " . $datetime . " GROUP BY o.`id`");
                $shoppingresult = $dsql->dsqlOper($shopping, 'totalCount');
            }

            $daifenxiang = (int)$tuanpingresult + (int)$shoppingresult;
                
            $list['daifenxiang'] = (int)$daifenxiang;
        }


        //退款售后
        if(!$need_data || in_array('tuikuanshouhou', $need_data_arr)){
            //团购
            if (in_array('tuan', $installModuleArr)) {
                $tuandai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`ret-state` = 1 ");
                $tuandairesult = $dsql->getOne($tuandai);
            }
            //商城
            if (in_array('shop', $installModuleArr)) {
                $shopdai = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o 
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND (op.`ret_state` = 1 or op.`ret_ok_date` != '') AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shopdairesult = $dsql->dsqlOper($shopdai, 'totalCount');
            }
            //家政
            if (in_array('homemaking', $installModuleArr)) {
                $jiazhengdai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__homemaking_order` o 
                LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__homemaking_store` s ON l.`company` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 8 and o.`ret-state` = 1");
                $jiazhengdairesult = $dsql->getOne($jiazhengdai);
            }
            //旅游
            if (in_array('travel', $installModuleArr)) {
                $traveldai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__travel_order` o  
                LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 8 and o.`ret-state` = 1");
                $traveldairesult = $dsql->getOne($traveldai);
            }
            //有奖乐购
            if (in_array('awardlegou', $installModuleArr)) {
                $legoudai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__awardlegou_order` o  
                LEFT JOIN `#@__awardlegou_list` l  ON  o.`proid` = l.`id` 
                LEFT JOIN  `#@__business_list` s ON s.`id` = l.`sid` 
                WHERE o.`userid` = '$userid' AND (o.`ret-state` !=0 AND (o.`orderstate` = 5 OR o.`orderstate` = 6 OR o.`orderstate` = 9) or (o.`ret-state` !=0 AND o.`refrunddate` !=0))");
                $legoudairesult = $dsql->getOne($legoudai);
            }

            $tuikuanshouhou = (int)$tuandairesult + (int)$shopdairesult + (int)$jiazhengdairesult + (int)$traveldairesult + (int)$legoudairesult;

            $list['tuikuanshouhou'] = (int)$tuikuanshouhou;
        }

        return $list;
    }

    /**
     * 根据不同的订单状态查询不同模块的数据
     */
    public function getModuleOrderList()
    {
        global $dsql;
        global $userLogin;
        global $installModuleArr;
        $userid = $userLogin->getMemberID();
        $param    = $this->param;    //1 待付款 2 代消费 3 待发货 4 待收货 5待评价  6待分享  7退款售后

        if ($param['state'] == 1) {
            if (in_array('tuan', $installModuleArr)) {
                $tuandai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0 ");
                $tuan = $dsql->getOne($tuandai);
            }
            //商城
            if (in_array('shop', $installModuleArr)) {
                $shopdai = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopdai, 'totalCount');
            }
            //外卖待付款
            if (in_array('waimai', $installModuleArr)) {
                $waimaidai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__waimai_order_all` o 
                LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` WHERE o.`uid` = $userid AND s.`id` IS NOT NULL AND o.`state` = 0 ");
                $waimai = $dsql->getOne($waimaidai);
                //paotui待付款
                $paotuidai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__paotui_order` o 
                WHERE o.`uid` = '$userid' AND o.`state` = 0");
                $paotui = $dsql->getOne($paotuidai);
            }
            //积分商城待付款
            if (in_array('integral', $installModuleArr)) {
                $jfscdai = $dsql->SetQuery("SELECT count(`id`) FROM `#@__integral_order` 
                WHERE `userid` = '$userid' AND `orderstate` = 0 ");
                $jfsc = $dsql->getOne($jfscdai);
            }
            //家政待付款
            if (in_array('homemaking', $installModuleArr)) {
                $jiazhengdai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__homemaking_order` o 
                LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__homemaking_store` s ON l.`company` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` WHERE o.`userid` = '$userid' AND o.`orderstate` = 0");
                $jiazheng = $dsql->getOne($jiazhengdai);
            }
            //travel待付款
            if (in_array('travel', $installModuleArr)) {
                $traveldai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__travel_order` o  
                LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0 ");
                $travel = $dsql->getOne($traveldai);
            }
            //education待付款
            if (in_array('education', $installModuleArr)) {
                $edudai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__education_order` o  
                LEFT JOIN `#@__education_class` s ON o.`proid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = o.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0");
                $education = $dsql->getOne($edudai);
            }
            //有奖乐购待付款
            if (in_array('awardlegou', $installModuleArr)) {
                $legoudai = $dsql->SetQuery("SELECT count(o.`id`)FROM `#@__awardlegou_order` o  
                LEFT JOIN `#@__awardlegou_list` l  ON  o.`proid` = l.`id` 
                LEFT JOIN  `#@__business_list` s ON s.`id` = l.`sid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 0");
                $legou = $dsql->getOne($legoudai);
            }
            //拍卖待付款
            if (in_array('paimai', $installModuleArr)) {
                $paimaidai = $dsql->SetQuery("select count(o.`id`) from `#@__paimai_order` o LEFT JOIN `#@__paimailist` l ON o.`proid`=l.`id` LEFT JOIN `#@__paimai_store` s ON l.`sid` = s.`id`  LEFT JOIN `#@__member` m ON m.`id` = s.`uid` LEFT JOIN `#@__business_list` b ON b.`uid` = m.`id` where o.`userid`=$userid AND `orderstate` = 1 AND o.`type`='regist' and o.`success_num`>0 and (l.`pay_limit`*3600+l.`enddate`)>unix_timestamp(current_timestamp)");
                $paimai = $dsql->getOne($paimaidai);
            }
        }
        if ($param['state'] == 2) {
            //tuan待消费
            if (in_array('tuan', $installModuleArr)) {
                $tuanxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 1 AND (o.`pinid` = 0 OR (o.`pinid` != 0 AND o.`pinstate` = 1))");
                $tuan = $dsql->getOne($tuanxiao);
            }

            $datetime = GetMkTime(time());
            //shop待消费
            if (in_array('shop', $installModuleArr)) {
                $shopxiao = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid`  
                LEFT JOIN `#@__shopquan` sq ON sq.`orderid` = o.`id` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`protype` = 1 AND o.`orderstate` != 4 AND p.`id` IS NOT NULL 
                AND o.`orderstate` != 7 AND sq.`expireddate` > '$datetime' AND o.`orderstate` != 10 AND sq.`usedate` = 0  GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopxiao, 'totalCount');
            }
            //travel待消费
            if (in_array('travel', $installModuleArr)) {
                $travelxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__travel_order` o  
                LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 2 ");
                $travel = $dsql->getOne($travelxiao);
            }
            //education待消费
            if (in_array('education', $installModuleArr)) {
                $eduxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__education_order` o  
                LEFT JOIN `#@__education_class` s ON o.`proid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = o.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 2");
                $education = $dsql->getOne($eduxiao);
            }
            $waimai = 0;
            $paotui = 0;
            $jfsc   = 0;
            $jiazheng = 0;
            $legou = 0;
        }
        if ($param['state'] == 3) {
            if (in_array('shop', $installModuleArr)) {
                $shopfa = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 1 AND p.`id` IS NOT NULL  
                AND o.`protype` = 0  AND 1 = (CASE	WHEN  o.`pinid` != 0 THEN CASE WHEN o.`pinstate` THEN 1 ELSE 0 END ELSE 1=1 END	) GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopfa, 'totalCount');
            }
            //积分商城待发货
            if (in_array('integral', $installModuleArr)) {
                $jfscfa = $dsql->SetQuery("SELECT count(`id`) FROM `#@__integral_order` WHERE `userid` = '$userid' AND `orderstate` = 1 ");
                $jfsc = $dsql->getOne($jfscfa);
            }
            //有奖乐购待发货
            if (in_array('awardlegou', $installModuleArr)) {
                $legoufa = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__awardlegou_order` o  
                LEFT JOIN `#@__awardlegou_list` l  ON  o.`proid` = l.`id` 
                LEFT JOIN  `#@__business_list` s ON s.`id` = l.`sid` 
                WHERE o.`userid` = '$userid' AND o.`pinstate` = 1  AND o.`orderstate` = 5 AND o.`exp-date` = 0 AND o.`is_wining` = 1 AND o.`ret-state` =0");
                $legou = $dsql->getOne($legoufa);
            }
            if (in_array("paimai", $installModuleArr)) {
                $paimaifa = $dsql->SetQuery("select count(o.`id`) from `#@__paimai_order` o LEFT JOIN `#@__paimailist` l ON o.`proid`=l.`id` LEFT JOIN `#@__paimai_store` s ON l.`sid` = s.`id`  LEFT JOIN `#@__member` m ON m.`id` = s.`uid` LEFT JOIN `#@__business_list` b ON b.`uid` = m.`id` where o.`userid`=$userid AND `orderstate` = 1 AND o.`type`='pai'");
                $paimai = $dsql->getOne($paimaifa);
            }
            $waimai = 0;
            $paotui = 0;
            $tuan   = 0;
            $jiazheng = 0;
            $travel = 0;
            $education = 0;
        }
        if ($param['state'] == 4) {
            if (in_array('tuan', $installModuleArr)) {
                $tuanshou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 6 AND o.`exp-date` != 0 ");
                $tuan = $dsql->getOne($tuanshou);
            }
            //shop待收货
            if (in_array('shop', $installModuleArr)) {
                $shopshou = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 6 AND op.`ret_state` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopshou, 'totalCount');
            }
            //waimai待收货
            if (in_array('waimai', $installModuleArr)) {
                $waimaishou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__waimai_order_all` o 
                LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` 
                WHERE o.`uid` = $userid AND s.`id` IS NOT NULL AND o.`state` = 5 ");
                $waimai = $dsql->getOne($waimaishou);
                //paotui待收货
                $paotuishou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__paotui_order` o WHERE o.`uid` = '$userid' AND o.`state` = 2");
                $paotui = $dsql->getOne($paotuishou);
            }
            //积分商城待收货
            if (in_array('integral', $installModuleArr)) {
                $jfscshou = $dsql->SetQuery("SELECT count(`id`) FROM `#@__integral_order` WHERE `userid` = '$userid' AND `orderstate` = 6 AND `exp-date` != 0 ");
                $jfsc = $dsql->getOne($jfscshou);
            }
            //家政待验收
            if (in_array('homemaking', $installModuleArr)) {
                $jiazhengshou = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__homemaking_order` o 
                LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__homemaking_store` s ON l.`company` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 5");
                $jiazheng = $dsql->getOne($jiazhengshou);
            }
            //拍卖待收货
            if (in_array('paimai', $installModuleArr)) {
                $paimaishou = $dsql->SetQuery("select count(o.`id`) from `#@__paimai_order` o LEFT JOIN `#@__paimailist` l ON o.`proid`=l.`id` LEFT JOIN `#@__paimai_store` s ON l.`sid` = s.`id`  LEFT JOIN `#@__member` m ON m.`id` = s.`uid` LEFT JOIN `#@__business_list` b ON b.`uid` = m.`id` where o.`userid`=$userid AND `orderstate` = 3");
                $paimai = $dsql->getOne($paimaishou);
            }
            $travel = 0;
            $legou = 0;
            $education = 0;
        }
        if ($param['state'] == 5) {
            if (in_array('tuan', $installModuleArr)) {
                $tuansping = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 3 AND o.`common` = 0");
                $tuan = $dsql->getOne($tuansping);
            }
            //shop待评价
            if (in_array('shop', $installModuleArr)) {
                $shopping = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 3 AND o.`common` = 0 AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopping, 'totalCount');
            }
            //waimai待评价
            if (in_array('waimai', $installModuleArr)) {
                $waimaiping = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__waimai_order_all` o 
                LEFT JOIN `#@__waimai_shop` s ON s.`id` = o.`sid` 
                WHERE o.`uid` = $userid AND o.`state` = 1 AND o.`iscomment` = 0");
                $waimai = $dsql->getOne($waimaiping);
                //paotui待评价
                $paotuiping = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__paotui_order` o 
                WHERE o.`uid` = '$userid' AND o.`state` = 1 AND o.`iscomment` = 0");
                $paotui = $dsql->getOne($paotuiping);
            }
            //积分商城待评价
            // $jfscping= $dsql->SetQuery("SELECT `id` FROM `#@__integral_order` 
            // WHERE `userid` = '$userid' AND  `orderstate` = 3 AND `common` = 0");
            // $jfsc = $dsql->getOne($jfscping);
            $jfsc = 0;
            $jiazheng = 0;
            $travel = 0;
            $education = 0;
            $legou = 0;
        }

        //待分享
        if ($param['state'] == 6) {

            //tuan待消费
            if (in_array('tuan', $installModuleArr)) {
                $tuanxiao = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 1 AND o.`pinid` != 0 AND o.`pinstate` = 0");
                $tuan = $dsql->getOne($tuanxiao);
            }

            $datetime = GetMkTime(time());
            
            //shop待分享
            if (in_array('shop', $installModuleArr)) {
                $shopping = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o  
                LEFT JOIN `#@__shop_tuanpin` tp ON o.`id` = tp.`oid`
                WHERE o.`userid` = '$userid' AND tp.`state` = 1 AND  tp.`enddate` > " . $datetime . " GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopping, 'totalCount');
            }
        }

        //退款售后
        if ($param['state'] == 7) {
            //团购
            if (in_array('tuan', $installModuleArr)) {
                $tuandai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__tuan_order` o 
                LEFT JOIN `#@__tuanlist` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__tuan_store` s ON l.`sid` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`uid` 
                WHERE o.`userid` = '$userid' AND o.`ret-state` = 1 ");
                $tuan = $dsql->getOne($tuandai);
            }
            //商城
            if (in_array('shop', $installModuleArr)) {
                $shopdai = $dsql->SetQuery("SELECT o.`id` FROM `#@__shop_order` o 
                RIGHT JOIN `#@__shop_order_product` op ON o.`id` = op.`orderid` 
                LEFT JOIN `#@__shop_product`p ON op.`proid` = p.`id`
                WHERE o.`userid` = '$userid' AND (op.`ret_state` = 1 or op.`ret_ok_date` != '') AND p.`id` IS NOT NULL GROUP BY o.`id`");
                $shop = $dsql->dsqlOper($shopdai, 'totalCount');
            }
            //家政
            if (in_array('homemaking', $installModuleArr)) {
                $jiazhengdai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__homemaking_order` o 
                LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` 
                LEFT JOIN `#@__homemaking_store` s ON l.`company` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 8 and o.`ret-state` = 1");
                $jiazheng = $dsql->getOne($jiazhengdai);
            }
            //旅游
            if (in_array('travel', $installModuleArr)) {
                $traveldai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__travel_order` o  
                LEFT JOIN `#@__travel_store` s ON o.`store` = s.`id` 
                LEFT JOIN `#@__member` m ON m.`id` = s.`userid` 
                WHERE o.`userid` = '$userid' AND o.`orderstate` = 8 and o.`ret-state` = 1");
                $travel = $dsql->getOne($traveldai);
            }
            //有奖乐购
            if (in_array('awardlegou', $installModuleArr)) {
                $legoudai = $dsql->SetQuery("SELECT count(o.`id`) FROM `#@__awardlegou_order` o  
                LEFT JOIN `#@__awardlegou_list` l  ON  o.`proid` = l.`id` 
                LEFT JOIN  `#@__business_list` s ON s.`id` = l.`sid` 
                WHERE o.`userid` = '$userid' AND (o.`ret-state` !=0 AND (o.`orderstate` = 5 OR o.`orderstate` = 6 OR o.`orderstate` = 9) or (o.`ret-state` !=0 AND o.`refrunddate` !=0))");
                $legou = $dsql->getOne($legoudai);
            }
        }

        $list = array(
            'shop'       => (int)$shop,
            'tuan'       => (int)$tuan,
            'waimai'     => (int)$waimai,
            'paotui'     => (int)$paotui,
            'jfsc'       => (int)$jfsc,
            'homemaking' => (int)$jiazheng,
            'travel'     => (int)$travel,
            'education'  => (int)$education,
            'legou'      => (int)$legou,
            'paimai'     => (int)$paimai
        );
        return  $list;
    }


    //记录用户打开APP日志
    function openAppLog()
    {
        global $userLogin;
        global $langData;

        if (!isApp()) {
            return array("state" => 200, "info" => "请在APP中打开");
        }

        //获取用户ID
        $uid = $userLogin->getMemberID();
        if ($uid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        $loginPlatform = isAndroidApp() ? '安卓' : (isIOSApp() ? '苹果' : (isHarmonyApp() ? '鸿蒙' : '未知'));

        //记录用户行为日志
        memberLog($uid, 'member', 'app', 0, 'insert', '打开APP(' . $loginPlatform . '端)', '', '');

        return 'ok';
    }

    /**
     * 记录分销沉淀金额
     * uid 应该是商家uid
     * title用于描述和搜索
     */
    function recodePrecipitationMoney($uid, $ordernum, $title, $amount, $cityid, $module)
    {
        global $dsql;
        $pubdate = time();
        $sql = $dsql::SetQuery("insert into `#@__money_precipitate`(`uid`,`ordernum`,`title`,`amount`,`cityid`,`module`,`pubdate`) values($uid,'$ordernum','$title',$amount,$cityid,'$module',$pubdate)");
        $dsql->update($sql);
    }


    /**
     * 绑定分销关系接口，主要用于小程序原生页面
     */
    function bindFxRelation()
    {
        global $userLogin;
        global $cfg_onlinetime;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => $langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        $param = $this->param;
        $fromShare = (int)$param['fromShare'];  //来源用户ID
        if ($fromShare) {
            PutCookie('fromShare', $fromShare, $cfg_onlinetime * 60 * 60);
            $userLogin->registGiving($userid, false,false);
        }



    }


    /**
     * 商家-我的页面，提供登录账号所属商家的基本信息和统计信息(每项都包含今日和昨日)
     * 基本信息包括：店铺名称、店铺状态、店铺ID、LOGO、模块的客服电话、模块权限有效期、店铺主页链接
     * 商城：订单、成交额、客流
     * 家政：订单、成交额、客流
     * 装修：客户、招标、客流
     * 二手车：预约、客流
     * 教育：订单、成交额、客流
     * 旅游：订单、成交额、客流
     * 养老：申请、预约、客流
     */
    function storeCenterData(){
        global $dsql;
        global $userLogin;
        global $cfg_hotline;
        
        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }
        
        $param = $this->param;
        $module = trim($param['module']);  //要查询的模块
        if ($module == '') {
            return array("state" => 200, "info" => "格式错误");
        }

        //获取已经开通的套餐详情
        $memberPackage = $userLogin->getMemberPackage();
        $packageData = $memberPackage['package'];

        if(!in_array($module, $packageData['moduleList'])){
            return array("state" => 200, "info" => "您还未开通当前模块的店铺，请开通后使用！");
        }

        //套餐名称
        $package = $packageData['title'];

        //过期时间
        $expired = (int)$packageData['expired'];
        
        //自选套餐
        $itemStore = $packageData['item']['store'];

        //判断模块是否属于自选套餐，如果是自选套餐，过期时间使用自选模块的过期时间
        if($itemStore){
            foreach($itemStore as $key => $val){
                if($val['name'] == $module){
                    $expired = $val['expired'];
                }
            }
        }

        //获取店铺主页链接
        $homepage = '';
        $modulesStore = $packageData['modules']['store'];
        if($modulesStore){
            foreach($modulesStore as $key => $val){
                if($val['name'] == $module){
                    $homepage = $val['homepage'];
                }
            }
        }

        //获取模块客服电话
        $hotline = $cfg_hotline;
        $configHandels = new handlers($module, "config");
        $ret = $configHandels->getHandle();
        if ($ret['state'] == 100) {
            $configInfo = $ret['info'];
            $hotline = $configInfo['hotline'];
        }

        //查询：店铺名称、店铺状态、店铺ID、LOGO
        $name = $logo = '';
        $state = $id = 0;
        $logoField = $module == 'homemaking' || $module == 'education' || $module == 'travel' || $module == 'pension' ? 'pics' : 'logo';
        $titleField = $module == 'renovation' ? 'company' : 'title';
        $sql = $dsql->SetQuery("SELECT `id`, `$titleField` title, `state`, `$logoField` logo, `refuse` FROM `#@__".$module."_store` WHERE `userid` = $userid");
        $ret = $dsql->getArr($sql);
        if($ret){
            $id = (int)$ret['id'];  //店铺ID
            $name = $ret['title'];  //店铺名称
            $state = (int)$ret['state'];  //0待审核  1审核通过  2审核失败
            $logo = $ret['logo'];  //店铺LOGO
            $refuse = $ret['refuse'];  //审核拒绝原因

            if($logoField == 'pics'){
                $logoArr = explode(',', $logo);
                $logo = $logoArr[0];
            }

            $logo = getFilePath($logo);
        }

        //统计数据
        $statistics = array();

        $yesterdayk = strtotime(date('Y-m-d', strtotime('-1 day')));
        $yesterdaye = strtotime(date('Y-m-d 23:59:59', strtotime('-1 day')));

        $todayk = strtotime(date('Y-m-d'));
        $todaye = strtotime(date('Y-m-d 23:59:59'));

        //商城：订单、成交额、客流
        if($module == 'shop'){

            //订单、成交额
            $order = $money = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `orderdate` >= '$yesterdayk' AND `orderdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayorder,
                count(CASE WHEN `orderdate` >= '$todayk' AND `orderdate` <= '$todaye' THEN `id` ELSE null END) as todayorder ,
                SUM(CASE WHEN `orderdate` >= '$yesterdayk' AND `orderdate` <= '$yesterdaye' AND `paydate` > 0 THEN `amount` ELSE null END) as yesterdamoney ,
                SUM(CASE WHEN `orderdate` >= '$todayk' AND `orderdate` <= '$todaye' AND `paydate` > 0 THEN `amount` ELSE null END) as todaymoney
                FROM `#@__shop_order` WHERE `store`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $order = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
                $money = array(
                    'yesterday' => (float)sprintf("%.2f", $ret['yesterdamoney']),
                    'today' => (float)sprintf("%.2f", $ret['todaymoney'])
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN k.`date` >= '$yesterdayk' AND k.`date` <= '$yesterdaye' THEN k.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN k.`date` >= '$todayk' AND k.`date` <= '$todaye' THEN k.`id` ELSE null END) as todayclick
                FROM `#@__shop_historyclick` k LEFT JOIN `#@__shop_product` t ON k.`aid` = t.`id` WHERE t.`store`  = '$id' AND `module2` = 'detail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click = array(
                    'yesterday' => (int)$ret['yesterdayclick'],
                    'today' => (int)$ret['todayclick']
                );
            }

            $statistics['order'] = $order;
            $statistics['money'] = $money;
            $statistics['click'] = $click;

        }

        //家政：订单、成交额、客流
        elseif($module == 'homemaking'){

            //订单、成交额
            $order = $money = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN o.`orderdate` >= '$yesterdayk' AND o.`orderdate` <= '$yesterdaye' THEN o.`id` ELSE null END) as yesterdayorder,
                count(CASE WHEN o.`orderdate` >= '$todayk' AND o.`orderdate` <= '$todaye' THEN o.`id` ELSE null END) as todayorder ,
                SUM(CASE WHEN o.`orderdate` >= '$yesterdayk' AND o.`orderdate` <= '$yesterdaye' AND o.`paydate` > 0 THEN o.`orderprice` ELSE null END) as yesterdamoney ,
                SUM(CASE WHEN o.`orderdate` >= '$todayk' AND o.`orderdate` <= '$todaye' AND o.`paydate` > 0 THEN o.`orderprice` ELSE null END) as todaymoney
                FROM `#@__homemaking_order` o LEFT JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` WHERE l.`company`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $order = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
                $money = array(
                    'yesterday' => (float)sprintf("%.2f", $ret['yesterdamoney']),
                    'today' => (float)sprintf("%.2f", $ret['todaymoney'])
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);

            $click_yesterdayCount = $click_todayCount = 0;

            //商家
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `date` >= '$yesterdayk' AND `date` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayclick,
                count(CASE WHEN `date` >= '$todayk' AND `date` <= '$todaye' THEN `id` ELSE null END) as todayclick
                FROM `#@__homemaking_historyclick` WHERE `aid`  = '$id' AND `module2` = 'storeDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //服务
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__homemaking_historyclick` h LEFT JOIN `#@__homemaking_list` d ON d.`id` = h.`aid` WHERE d.`company` = '$id' AND `module2` = 'detail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //保姆/月嫂
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__homemaking_historyclick` h LEFT JOIN `#@__homemaking_nanny` d ON d.`id` = h.`aid` WHERE d.`company` = '$id' AND `module2` = 'nannyDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            $click = array(
                'yesterday' => (int)$click_yesterdayCount,
                'today' => (int)$click_todayCount
            );

            $statistics['order'] = $order;
            $statistics['money'] = $money;
            $statistics['click'] = $click;

        }

        //装修：客户、招标、客流
        elseif($module == 'renovation'){

            //客户（免费设计+报价+预约+工地+智选）
            $customer = $tender = array('yesterday' => 0, 'today' => 0);

            $customer_yesterdayCount = $customer_todayCount = 0;

            //免费设计
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `pubdate` >= '$yesterdayk' AND `pubdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdaycount,
                count(CASE WHEN `pubdate` >= '$todayk' AND `pubdate` <= '$todaye' THEN `id` ELSE null END) as todaycount
                FROM `#@__renovation_entrust` WHERE `company`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $customer_yesterdayCount += (int)$ret['yesterdaycount'];
                $customer_todayCount += (int)$ret['todaycount'];
            }

            //报价+预约+智选
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `pubdate` >= '$yesterdayk' AND `pubdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdaycount,
                count(CASE WHEN `pubdate` >= '$todayk' AND `pubdate` <= '$todaye' THEN `id` ELSE null END) as todaycount
                FROM `#@__renovation_rese` WHERE FIND_IN_SET(".$id.",`company`)
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $customer_yesterdayCount += (int)$ret['yesterdaycount'];
                $customer_todayCount += (int)$ret['todaycount'];
            }

            //工地
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN v.`pubdate` >= '$yesterdayk' AND v.`pubdate` <= '$yesterdaye' THEN v.`id` ELSE null END) as yesterdaycount,
                count(CASE WHEN v.`pubdate` >= '$todayk' AND v.`pubdate` <= '$todaye' THEN v.`id` ELSE null END) as todaycount
                FROM `#@__renovation_visit` v LEFT JOIN `#@__renovation_construction` c ON c.`id` = v.`conid` WHERE c.`sid` = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $customer_yesterdayCount += (int)$ret['yesterdaycount'];
                $customer_todayCount += (int)$ret['todaycount'];
            }

            $customer = array(
                'yesterday' => (int)$customer_yesterdayCount,
                'today' => (int)$customer_todayCount
            );

            //招标
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `pubdate` >= '$yesterdayk' AND `pubdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdaycount,
                count(CASE WHEN `pubdate` >= '$todayk' AND `pubdate` <= '$todaye' THEN `id` ELSE null END) as todaycount
                FROM `#@__renovation_zhaobiao` WHERE FIND_IN_SET(".$id.",`company`)
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $tender = array(
                    'yesterday' => (int)$ret['yesterdaycount'],
                    'today' => (int)$ret['todaycount']
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);

            $click_yesterdayCount = $click_todayCount = 0;

            //商家
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `date` >= '$yesterdayk' AND `date` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayclick,
                count(CASE WHEN `date` >= '$todayk' AND `date` <= '$todaye' THEN `id` ELSE null END) as todayclick
                FROM `#@__renovation_historyclick` WHERE `aid`  = '$id' AND `module2` = 'storeDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //案例
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__renovation_historyclick` h LEFT JOIN `#@__renovation_diary` d ON d.`id` = h.`aid` WHERE d.`ftype` = 0 AND d.`company`  = '$id' AND `module2` = 'diaryDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //设计师
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__renovation_historyclick` h LEFT JOIN `#@__renovation_team` d ON d.`id` = h.`aid` WHERE d.`type` = 1 AND d.`company`  = '$id' AND `module2` = 'teamDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //工长
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__renovation_historyclick` h LEFT JOIN `#@__renovation_foreman` d ON d.`id` = h.`aid` WHERE d.`type` = 1 AND d.`company`  = '$id' AND `module2` = 'foremanDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            $click = array(
                'yesterday' => (int)$click_yesterdayCount,
                'today' => (int)$click_todayCount
            );

            $statistics['customer'] = $customer;
            $statistics['tender'] = $tender;
            $statistics['click'] = $click;

        }

        //二手车：预约、客流
        elseif($module == 'car'){

            //预约
            $appoint = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `pubdate` >= '$yesterdayk' AND `pubdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayorder,
                count(CASE WHEN `pubdate` >= '$todayk' AND `pubdate` <= '$todaye' THEN `id` ELSE null END) as todayorder
                FROM `#@__car_appoint` WHERE `storeid`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $appoint = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN k.`date` >= '$yesterdayk' AND k.`date` <= '$yesterdaye' THEN k.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN k.`date` >= '$todayk' AND k.`date` <= '$todaye' THEN k.`id` ELSE null END) as todayclick
                FROM `#@__car_historyclick` k LEFT JOIN `#@__car_list` l ON k.`aid` = l.`id` WHERE l.`usertype` = 1 AND l.`userid`  = '$id' AND `module2` = 'detail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click = array(
                    'yesterday' => (int)$ret['yesterdayclick'],
                    'today' => (int)$ret['todayclick']
                );
            }

            $statistics['appoint'] = $appoint;
            $statistics['click'] = $click;

        }

        // 教育：订单、成交额、客流
        elseif($module == 'education'){

            //订单、成交额
            $order = $money = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN o.`orderdate` >= '$yesterdayk' AND o.`orderdate` <= '$yesterdaye' THEN o.`id` ELSE null END) as yesterdayorder,
                count(CASE WHEN o.`orderdate` >= '$todayk' AND o.`orderdate` <= '$todaye' THEN o.`id` ELSE null END) as todayorder ,
                SUM(CASE WHEN o.`orderdate` >= '$yesterdayk' AND o.`orderdate` <= '$yesterdaye' AND o.`paydate` > 0 THEN o.`orderprice` ELSE null END) as yesterdamoney ,
                SUM(CASE WHEN o.`orderdate` >= '$todayk' AND o.`orderdate` <= '$todaye' AND o.`paydate` > 0 THEN o.`orderprice` ELSE null END) as todaymoney
                FROM `#@__education_order` o LEFT JOIN `#@__education_courses` l ON o.`proid` = l.`id` WHERE l.`usertype` = 1 AND l.`userid`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $order = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
                $money = array(
                    'yesterday' => (float)sprintf("%.2f", $ret['yesterdamoney']),
                    'today' => (float)sprintf("%.2f", $ret['todaymoney'])
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);

            $click_yesterdayCount = $click_todayCount = 0;

            //商家
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `date` >= '$yesterdayk' AND `date` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayclick,
                count(CASE WHEN `date` >= '$todayk' AND `date` <= '$todaye' THEN `id` ELSE null END) as todayclick
                FROM `#@__education_historyclick` WHERE `aid`  = '$id' AND `module2` = 'storeDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //课程
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__education_historyclick` h LEFT JOIN `#@__education_courses` d ON d.`id` = h.`aid` WHERE d.`usertype` = 1 AND d.`userid`  = '$id' AND `module2` = 'detail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //教师
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__education_historyclick` h LEFT JOIN `#@__education_teacher` d ON d.`id` = h.`aid` WHERE d.`company`  = '$id' AND `module2` = 'teacherDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            $click = array(
                'yesterday' => (int)$click_yesterdayCount,
                'today' => (int)$click_todayCount
            );

            $statistics['order'] = $order;
            $statistics['money'] = $money;
            $statistics['click'] = $click;

        }

        // 旅游：订单、成交额、客流
        elseif($module == 'travel'){

            //订单、成交额
            $order = $money = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `orderdate` >= '$yesterdayk' AND `orderdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayorder,
                count(CASE WHEN `orderdate` >= '$todayk' AND `orderdate` <= '$todaye' THEN `id` ELSE null END) as todayorder ,
                SUM(CASE WHEN `orderdate` >= '$yesterdayk' AND `orderdate` <= '$yesterdaye' AND `paydate` > 0 THEN `orderprice` ELSE null END) as yesterdamoney ,
                SUM(CASE WHEN `orderdate` >= '$todayk' AND `orderdate` <= '$todaye' AND `paydate` > 0 THEN `orderprice` ELSE null END) as todaymoney
                FROM `#@__travel_order` WHERE `store`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $order = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
                $money = array(
                    'yesterday' => (float)sprintf("%.2f", $ret['yesterdamoney']),
                    'today' => (float)sprintf("%.2f", $ret['todaymoney'])
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);

            $click_yesterdayCount = $click_todayCount = 0;

            //视频
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_video` d ON d.`id` = h.`aid` WHERE d.`usertype` = 1 AND d.`userid`  = '$id' AND `module2` = 'videoDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //租车
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_rentcar` d ON d.`id` = h.`aid` WHERE d.`company`  = '$id' AND `module2` = 'rentcarDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //攻略
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_strategy` d ON d.`id` = h.`aid` WHERE d.`usertype` = 1 AND d.`userid`  = '$id' AND `module2` = 'strategyDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //门票
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_ticket` d ON d.`id` = h.`aid` WHERE d.`company`  = '$id' AND `module2` = 'ticketDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //酒店
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_hotel` d ON d.`id` = h.`aid` WHERE d.`company`  = '$id' AND `module2` = 'hotelDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //周边游
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_agency` d ON d.`id` = h.`aid` WHERE d.`company`  = '$id' AND `module2` = 'agencyDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            //签证
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN h.`date` >= '$yesterdayk' AND h.`date` <= '$yesterdaye' THEN h.`id` ELSE null END) as yesterdayclick,
                count(CASE WHEN h.`date` >= '$todayk' AND h.`date` <= '$todaye' THEN h.`id` ELSE null END) as todayclick
                FROM `#@__travel_historyclick` h LEFT JOIN `#@__travel_visa` d ON d.`id` = h.`aid` WHERE d.`company`  = '$id' AND `module2` = 'visaDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click_yesterdayCount += (int)$ret['yesterdayclick'];
                $click_todayCount += (int)$ret['todayclick'];
            }

            $click = array(
                'yesterday' => (int)$click_yesterdayCount,
                'today' => (int)$click_todayCount
            );

            $statistics['order'] = $order;
            $statistics['money'] = $money;
            $statistics['click'] = $click;

        }

        // 养老：申请、预约、客流
        elseif($module == 'pension'){

            //申请
            $apply = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `pubdate` >= '$yesterdayk' AND `pubdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayorder,
                count(CASE WHEN `pubdate` >= '$todayk' AND `pubdate` <= '$todaye' THEN `id` ELSE null END) as todayorder
                FROM `#@__pension_settledin` WHERE `store`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $apply = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
            }

            //预约
            $appoint = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `pubdate` >= '$yesterdayk' AND `pubdate` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayorder,
                count(CASE WHEN `pubdate` >= '$todayk' AND `pubdate` <= '$todaye' THEN `id` ELSE null END) as todayorder
                FROM `#@__pension_yuyue` WHERE `store`  = $id
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $appoint = array(
                    'yesterday' => (int)$ret['yesterdayorder'],
                    'today' => (int)$ret['todayorder']
                );
            }

            //客流
            $click = array('yesterday' => 0, 'today' => 0);
            $sql = $dsql->SetQuery("SELECT
                count(CASE WHEN `date` >= '$yesterdayk' AND `date` <= '$yesterdaye' THEN `id` ELSE null END) as yesterdayclick,
                count(CASE WHEN `date` >= '$todayk' AND `date` <= '$todaye' THEN `id` ELSE null END) as todayclick
                FROM `#@__pension_historyclick` WHERE `aid`  = '$id' AND `module2` = 'storeDetail'
            ");
            $ret = $dsql->getArr($sql);
            if($ret){
                $click = array(
                    'yesterday' => (int)$ret['yesterdayclick'],
                    'today' => (int)$ret['todayclick']
                );
            }

            $statistics['apply'] = $apply;
            $statistics['appoint'] = $appoint;
            $statistics['click'] = $click;

        }

        //返回的数据
        return array(
            'id' => $id,  //店铺ID
            'name' => $name,  //店铺名称
            'logo' => $logo,  //店铺LOGO
            'homepage' => $homepage,  //店铺主页链接
            'state' => $state,  //店铺状态  0待审核  1审核通过  2审核失败
            'refuse' => $refuse,  //审核拒绝原因
            'package' => $package,  //开通的套餐
            'expired' => $expired,  //当前模块权限有效期
            'hotline' => $hotline,  //当前模块客服电话
            'statistics' => $statistics,  //模块统计数据
        );
    }


    /**
     * 商家会员中心DIY首页统计数据
     * 客流数据需要统计：商城、团购、旅游、教育、家政  这些模块的数据
     * 订单数据需要统计：点餐、订座、排队、买单、外卖、商城、团购、旅游、教育、家政、拍卖  这些模块的数据
     * 成交额数据需要统计：买单、外卖、商城、团购、旅游、教育、家政、拍卖  这些模块的数据
     * 
     * 1.余额
     * 2.积分
     * 3.今日收益
     * 12.昨日收益
     * 4.本月收益
     * 11.上月收益
     * 5.累计收益
     * 6.今日客流
     * 13.昨日客流
     * 14.本月客流
     * 15.累计客流
     * 7.今日订单
     * 20.昨日订单
     * 21.本月订单
     * 16.累计订单
     * 8.今日成交额
     * 18.昨日成交额
     * 19.本月成交额
     * 17.累计成交额
     * 9.今日退款
    */
    public function getBusinessStatistics(){

        global $dsql;
        global $userLogin;

        $param = $this->param;
        $ids = convertArrToStrWithComma($param['ids']);
        
        if(!$ids) return array("state"=>200, "info"=>"没有要获取的数据");

        $ids = explode(',', $ids);

        //判断登录
        $userid = $userLogin->getMemberID();
        if ($userid == -1) {
            return array("state" => 200, "info" => self::$langData['siteConfig'][20][262]); //登录超时，请重新登录！
        }

        //获取登录信息
        $userinfo = $userLogin->getMemberInfo();
        $userpackage = $this->memberPackage();
        $moduleList = $userpackage['package']['moduleList'];

        $userType = (int)$userinfo['userType'];  //会员类型
        $busiId   = (int)$userinfo['busiId'];  //商家ID
        if($userType != 2) return array("state"=>200, "info"=>"请先入驻成为商家");

        //今日开始和结束时间
        $todayk = GetMkTime(date('Y-m-d 00:00:00'));
        $todaye = GetMkTime(date('Y-m-d 23:59:59'));

        //昨日开始和结束时间
        $yesterdayk = GetMkTime(date('Y-m-d 00:00:00', strtotime('-1 day')));
        $yesterdaye = GetMkTime(date('Y-m-d 23:59:59', strtotime('-1 day')));

        //本月开始和结束时间
        $monthk = GetMkTime(date('Y-m-01 00:00:00'));
        $monthe = GetMkTime(date('Y-m-t 23:59:59'));

        //上月开始和结束时间
        $lastmonthk = GetMkTime(date('Y-m-01 00:00:00', strtotime('-1 month')));
        $lastmonthe = GetMkTime(date('Y-m-t 23:59:59', strtotime('-1 month')));


        $data = array();

        //余额
        if(in_array(1, $ids)){
            $data[1] = (float)$userinfo['money'];
        }

        //积分
        if(in_array(2, $ids)){
            $data[2] = (int)$userinfo['point'];
        }

        //今日收益
        if(in_array(3, $ids)){
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__member_money` WHERE `userid` = $userid AND `type` = 1 AND `showtype` = 0 AND `ctype` = 'shangpinxiaoshou' AND `date` >= $todayk AND `date` < $todaye");
            $ret = $dsql->getOne($sql);
            $data[3] = (float)sprintf("%.2f", $ret);
        }

        //昨日收益
        if(in_array(12, $ids)){
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__member_money` WHERE `userid` = $userid AND `type` = 1 AND `showtype` = 0 AND `ctype` = 'shangpinxiaoshou' AND `date` >= $yesterdayk AND `date` < $yesterdaye");
            $ret = $dsql->getOne($sql);
            $data[12] = (float)sprintf("%.2f", $ret);
        }

        //本月收益
        if(in_array(4, $ids)){
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__member_money` WHERE `userid` = $userid AND `type` = 1 AND `showtype` = 0 AND `ctype` = 'shangpinxiaoshou' AND `date` >= $monthk AND `date` < $monthe");
            $ret = $dsql->getOne($sql);
            $data[4] = (float)sprintf("%.2f", $ret);
        }

        //上月收益
        if(in_array(11, $ids)){
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__member_money` WHERE `userid` = $userid AND `type` = 1 AND `showtype` = 0 AND `ctype` = 'shangpinxiaoshou' AND `date` >= $lastmonthk AND `date` < $lastmonthe");
            $ret = $dsql->getOne($sql);
            $data[11] = (float)sprintf("%.2f", $ret);
        }

        //累计收益
        if(in_array(5, $ids)){
            $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__member_money` WHERE `userid` = $userid AND `type` = 1 AND `showtype` = 0 AND `ctype` = 'shangpinxiaoshou'");
            $ret = $dsql->getOne($sql);
            $data[5] = (float)sprintf("%.2f", $ret);
        }

        // 客流数据需要统计：商城、团购、旅游、教育、家政
        // 分别查询各模块的historyclick表

        //今日客流
        if(in_array(6, $ids)){
            
            $flow = 0;

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_historyclick` WHERE `fuid` = $userid AND `date` >= $todayk AND `date` < $todaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_historyclick` WHERE `fuid` = $userid AND `date` >= $todayk AND `date` < $todaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_historyclick` WHERE `fuid` = $userid AND `date` >= $todayk AND `date` < $todaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_historyclick` WHERE `fuid` = $userid AND `date` >= $todayk AND `date` < $todaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_historyclick` WHERE `fuid` = $userid AND `date` >= $todayk AND `date` < $todaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            $data[6] = (int)$flow;

        }

        //昨日客流
        if(in_array(13, $ids)){

            $flow = 0;

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_historyclick` WHERE `fuid` = $userid AND `date` >= $yesterdayk AND `date` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_historyclick` WHERE `fuid` = $userid AND `date` >= $yesterdayk AND `date` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_historyclick` WHERE `fuid` = $userid AND `date` >= $yesterdayk AND `date` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_historyclick` WHERE `fuid` = $userid AND `date` >= $yesterdayk AND `date` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_historyclick` WHERE `fuid` = $userid AND `date` >= $yesterdayk AND `date` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            $data[13] = (int)$flow;

        }

        //本月客流
        if(in_array(14, $ids)){

            $flow = 0;

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_historyclick` WHERE `fuid` = $userid AND `date` >= $monthk AND `date` < $monthe");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_historyclick` WHERE `fuid` = $userid AND `date` >= $monthk AND `date` < $monthe");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_historyclick` WHERE `fuid` = $userid AND `date` >= $monthk AND `date` < $monthe");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_historyclick` WHERE `fuid` = $userid AND `date` >= $monthk AND `date` < $monthe");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_historyclick` WHERE `fuid` = $userid AND `date` >= $monthk AND `date` < $monthe");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            $data[14] = (int)$flow;

        }

        //累计客流
        if(in_array(15, $ids)){

            $flow = 0;

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_historyclick` WHERE `fuid` = $userid");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_historyclick` WHERE `fuid` = $userid");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_historyclick` WHERE `fuid` = $userid");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_historyclick` WHERE `fuid` = $userid");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }
            
            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_historyclick` WHERE `fuid` = $userid");
                $ret = $dsql->getOne($sql);
                $flow += (int)$ret;
            }

            $data[15] = (int)$flow;
            
        }


        // 订单数据需要统计：点餐、订座、排队、买单、外卖、商城、团购、旅游、教育、家政、拍卖
        // 分别查询各模块的order表

        //今日订单
        if(in_array(7, $ids)){

            $order = 0;

            if(in_array('diancan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_diancan_order` WHERE `sid` = $busiId AND `pubdate` >= $todayk AND `pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('dingzuo', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_dingzuo_order` WHERE `sid` = $busiId AND `pubdate` >= $todayk AND `pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_maidan_order` WHERE `sid` = $busiId AND `pubdate` >= $todayk AND `pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('paidui', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_paidui_order` WHERE `sid` = $busiId AND `pubdate` >= $todayk AND `pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid AND wo.`pubdate` >= $todayk AND wo.`pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            $data[7] = (int)$order;

        }

        //昨日订单
        if(in_array(20, $ids)){

            $order = 0;

            if(in_array('diancan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_diancan_order` WHERE `sid` = $busiId AND `pubdate` >= $yesterdayk AND `pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('dingzuo', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_dingzuo_order` WHERE `sid` = $busiId AND `pubdate` >= $yesterdayk AND `pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_maidan_order` WHERE `sid` = $busiId AND `pubdate` >= $yesterdayk AND `pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('paidui', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_paidui_order` WHERE `sid` = $busiId AND `pubdate` >= $yesterdayk AND `pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid AND wo.`pubdate` >= $yesterdayk AND wo.`pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            $data[20] = (int)$order;

        }

        //本月订单
        if(in_array(21, $ids)){

            $order = 0;

            if(in_array('diancan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_diancan_order` WHERE `sid` = $busiId AND `pubdate` >= $monthk AND `pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('dingzuo', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_dingzuo_order` WHERE `sid` = $busiId AND `pubdate` >= $monthk AND `pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_maidan_order` WHERE `sid` = $busiId AND `pubdate` >= $monthk AND `pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('paidui', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_paidui_order` WHERE `sid` = $busiId AND `pubdate` >= $monthk AND `pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid AND wo.`pubdate` >= $monthk AND wo.`pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            $data[21] = (int)$order;

        }

        //累计订单
        if(in_array(16, $ids)){

            $order = 0;

            if(in_array('diancan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_diancan_order` WHERE `sid` = $busiId");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('dingzuo', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_dingzuo_order` WHERE `sid` = $busiId");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_maidan_order` WHERE `sid` = $busiId");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if(in_array('paidui', $moduleList)){
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__business_paidui_order` WHERE `sid` = $busiId");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT COUNT(*) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid");
                $ret = $dsql->getOne($sql);
                $order += (int)$ret;
            }

            $data[16] = (int)$order;

        }


        // 成交额数据需要统计：买单、外卖、商城、团购、旅游、教育、家政、拍卖
        // 分别查询各模块的order表
        
        //今日成交额
        if(in_array(8, $ids)){

            $amount = 0;

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__business_maidan_order` WHERE `sid` = $busiId AND `pubdate` >= $todayk AND `pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(wo.`amount`) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid AND wo.`pubdate` >= $todayk AND wo.`pubdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $todayk AND o.`orderdate` < $todaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            $data[8] = (float)sprintf("%.2f", $amount);

        }

        //昨日成交额
        if(in_array(18, $ids)){

            $amount = 0;

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__business_maidan_order` WHERE `sid` = $busiId AND `pubdate` >= $yesterdayk AND `pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(wo.`amount`) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid AND wo.`pubdate` >= $yesterdayk AND wo.`pubdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $yesterdayk AND o.`orderdate` < $yesterdaye");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            $data[18] = (float)sprintf("%.2f", $amount);

        }

        // 19.本月成交额
        if(in_array(19, $ids)){

            $amount = 0;

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__business_maidan_order` WHERE `sid` = $busiId AND `pubdate` >= $monthk AND `pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(wo.`amount`) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid AND wo.`pubdate` >= $monthk AND wo.`pubdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid AND o.`orderdate` >= $monthk AND o.`orderdate` < $monthe");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            $data[19] = (float)sprintf("%.2f", $amount);

        }

        //累计成交额
        if(in_array(17, $ids)){

            $amount = 0;

            if(in_array('maidan', $moduleList)){
                $sql = $dsql->SetQuery("SELECT SUM(`amount`) FROM `#@__business_maidan_order` WHERE `sid` = $busiId");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("waimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(wo.`amount`) FROM `#@__waimai_order_all` wo JOIN `#@__waimai_shop` ws ON wo.`sid` = ws.`id` JOIN `#@__waimai_shop_manager` wsm ON ws.`id` = wsm.`shopid` WHERE wsm.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("shop", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__shop_order` o JOIN `#@__shop_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("tuan", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__tuan_order` o JOIN `#@__tuanlist` l ON o.`proid` = l.`id` JOIN `#@__tuan_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("travel", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__travel_order` o JOIN `#@__travel_store` s ON o.`store` = s.`id` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("education", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__education_order` o JOIN `#@__education_class` c ON o.`proid` = c.`id` JOIN `#@__education_courses` cc ON cc.`id` = c.`coursesid` JOIN `#@__education_store` s ON s.`id` = cc.`userid` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("homemaking", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`orderprice`) FROM `#@__homemaking_order` o JOIN `#@__homemaking_list` l ON o.`proid` = l.`id` JOIN `#@__homemaking_store` s ON s.`id` = l.`company` WHERE s.`userid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            if (in_array("paimai", $moduleList)) {
                $sql = $dsql->SetQuery("SELECT SUM(o.`amount`) FROM `#@__paimai_order` o JOIN `#@__paimailist` l ON o.`proid` = l.`id` JOIN `#@__paimai_store` s ON s.`id` = l.`sid` WHERE s.`uid` = $userid");
                $ret = $dsql->getOne($sql);
                $amount += (float)sprintf("%.2f", $ret);
            }

            $data[17] = (float)sprintf("%.2f", $amount);

        }

        //9.今日退款
        // if(in_array(17, $ids)){

        //     $amount = 0;

        // }


        return $data;
    }


    //获取提现参数
    public function getWithdrawInfo()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //提现id
        $id = (int)$this->param['id'];
        if ($id == null) {
            return array("state" => 200, "info" => "提现ID不能为空");
        }

        //查询提现信息
        $sql = $dsql->SetQuery("SELECT `bank`,`uid`,`state`,`auditstate`,`ordernum`,`transferJson`,`source` FROM `#@__member_withdraw` WHERE `id` = ".$id);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret == null || !is_array($ret)) {
            return array("state"=>200,"info"=>"没有对应的提现信息！");
        }
        $withdrawInfo = $ret[0];

        //判断支付方式是微信支付，且状态是否正确
        if ($withdrawInfo['bank'] != 'weixin') {
            return array("state"=>200,"info"=>"支付方式错误！");
        }
        if ($withdrawInfo['ordernum'] == null || $withdrawInfo['transferJson'] == null) {
            return array("state"=>200,"info"=>"没有可查询的参数信息！");
        }
        if ($withdrawInfo['auditstate'] != 1) {
            return array("state"=>200,"info"=>"提现信息没有通过审核！");
        }
        if ($withdrawInfo['state'] != 6) {
            return array("state"=>200,"info"=>"状态错误！");
        }
        if ($userid != $withdrawInfo['uid']) {
            return array("state"=>200,"info"=>"不可以查询其他会员的参数信息！");
        }

        $transferJson = json_decode($withdrawInfo['transferJson'],true);
        if ($transferJson == null || !is_array($transferJson)) {
            return array("state"=>200,"info"=>"没有可查询的参数信息！");
        }

        $transferJson['source'] = (int)$withdrawInfo['source'];

        return $transferJson;
    }

    //获取提现详情
    public function getWithdrawDetail()
    {
        global $dsql;
        global $userLogin;
        global $langData;

        $userid = $userLogin->getMemberID();
        if ($userid == -1) return array("state" => 200, "info" => $langData['siteConfig'][20][262]);  //登录超时，请重新登录！

        //提现id
        $id = (int)$this->param['id'];
        if ($id == null) {
            return array("state" => 200, "info" => "提现ID不能为空");
        }

        //查询提现信息
        $sql = $dsql->SetQuery("SELECT * FROM `#@__member_withdraw` WHERE `id` = ".$id." AND `uid` = ".$userid);
        $ret = $dsql->dsqlOper($sql, "results");
        if ($ret == null || !is_array($ret)) {
            return array("state"=>200,"info"=>"没有对应的提现信息！");
        }
        $withdrawInfo = $ret[0];

        $list = array();

        $list['id'] = (int)$withdrawInfo['id'];
        $list['bank'] = $withdrawInfo['bank']; //银行名称或支付渠道，weixin：微信支付，alipay：支付宝
        $list['bankCode'] = $withdrawInfo['bankCode']; //银行编码
        $list['bankName'] = $withdrawInfo['bankName']; //开户行信息
        $list['cardnum'] = $withdrawInfo['cardnum']; //卡号
        if ($list['bank'] != "alipay") {
            $list['cardnum'] = str_split($list['cardnum'], 4);
            $list['cardnum'] = join(" ", $list['cardnum']);
        }
        $list['cardname'] = $withdrawInfo['cardname']; //收款人
        $list['amount'] = (float)$withdrawInfo['amount']; //提现金额
        $list['price'] = (float)$withdrawInfo['price']; //实际到账的钱
        $list['shouxuprice'] = (float)$withdrawInfo['shouxuprice']; //手续费
        $list['tdate'] = date("Y-m-d H:i:s", $withdrawInfo['tdate']); //申请时间
        $list['state'] = (int)$withdrawInfo['state']; //状态 0审核中 1成功 2失败 3微信打款中 4撤销中 5撤销成功 6已发起转账，用户确认中
        $list['note'] = $withdrawInfo['note']; //提现结果
        if (strstr($list['note'], "Openid校验失败") || strstr($list['note'], "产品权限异常")) {
            $list['note'] = "提现失败，请联系平台管理员";
        }
        //电子回单
        $list['receipt'] = $withdrawInfo['receipt']; //回执单附件地址
        $list['receipt'] = $list['receipt'] ? getFilePath($list['receipt']) : '';
        //由于微信安卓端小程序不支持预览PDF，所以这里直接不输出
        if (isWxMiniprogram() && strpos(strtolower($_SERVER['HTTP_USER_AGENT']), 'android') !== false) {
            $list['receipt'] = '';
        }
        $list['rdate'] = date("Y-m-d H:i:s", $withdrawInfo['rdate']); //回复时间

        return $list;
    }


}
